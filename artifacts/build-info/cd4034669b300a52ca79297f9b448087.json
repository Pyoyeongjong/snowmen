{
	"id": "cd4034669b300a52ca79297f9b448087",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"SnowmenSales.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.20;\r\n\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\r\n\r\ncontract SnowmenSales is Ownable, ERC1155Holder {\r\n    using SafeERC20 for IERC20; // SafeERC20 라이브러리를 IERC20 타입에 연결해 안전한 토큰 전송 함수 사용 가능\r\n\r\n    IERC20 public snowmenToken; // Snowmen ERC20 토큰의 인터페이스\r\n    IERC1155 public snowmenGame; // Snowmen ERC1155 토큰(게임 아이템 등의 자산) 인터페이스\r\n\r\n    mapping(uint256 => uint256) public tokenPrice;\r\n\r\n\r\n    //이벤트: 블록체인 상에서 발생하는 특정 상황을 로그로 기록해 감지하도록 하는 \"신호\" 역\r\n    event SetPrice(uint256 tokenId, uint256 price, uint256 timestamp);\r\n    \r\n    event onERC1155ReceivedExecuted(\r\n        address operator,\r\n        address from,\r\n        uint256 id,\r\n        uint256 value\r\n    );\r\n\r\n    constructor(address snowmenErc1155, address snowmenErc20) Ownable(_msgSender()){\r\n        // 생성자: 컨트랙트를 배포할 때 특정한 ERC1155 토큰과 ERC20 토큰의 주소를 받아 초기화\r\n        // Ownable(_msgSender())를 호출함으로써, 컨트랙트 소유자를 배포한 계정으로 설정\r\n        snowmenGame = IERC1155(snowmenErc1155);\r\n        snowmenToken = IERC20(snowmenErc20);\r\n    }\r\n\r\n    function onERC1155Received(\r\n        address operator, // 해당 함수(토큰 전송)를 실행한 계정(주로 ERC1155 토큰 계약)\r\n        address from, // 토큰을 전송한 사용자 주소\r\n        uint256 id,  // 전송된 ERC1155 토큰의 ID\r\n        uint256 value, // 전송된 토큰의 개수\r\n        bytes memory // 추가적인 데이터(사용되지 않음)\r\n    ) public override returns (bytes4) {\r\n        // onERC1155Received는 ERC1155 표준에서 요구하는 훅(Hook)으로,\r\n        // 본 컨트랙트가 ERC1155 토큰을 안전하게 받았음을 알리는 콜백 함수입니다.\r\n        \r\n        // 이 함수는 ERC1155 토큰이 현재 컨트랙트로 전송될 때 자동으로 호출됩니다.\r\n        // msg.sender는 이 함수가 호출될 때, 토큰을 전송한 ERC1155 컨트랙트 주소를 나타냅니다.\r\n\r\n        require(msg.sender == address(snowmenGame), \"incorrect sender\");\r\n        // 전송한 토큰의 출처가 우리가 지정한 snowmenGame 컨트랙트인지 검사합니다.\r\n        // 잘못된 컨트랙트(등록되지 않은 ERC1155)에서 온 요청은 거부합니다.\r\n\r\n        require(value != 0, \"quantity is zero\");\r\n        // 전송된 토큰 수량이 0개인 경우는 의미가 없으므로 거부합니다.\r\n\r\n        emit onERC1155ReceivedExecuted(operator, from, id, value);\r\n        // 토큰 수령이 성공적으로 처리되었음을 이벤트로 알립니다.\r\n        // 이벤트는 블록체인 상에 로그로 남으며, 외부에서 트랜잭션 모니터링이 가능합니다.\r\n\r\n        return this.onERC1155Received.selector;\r\n        // ERC1155 표준에 따라, 이 함수는 ERC1155 컨트랙트에게 정상 수신을 의미하는 함수 셀렉터를 반환해야 합니다.\r\n        // 이 반환값으로 인해 ERC1155 컨트랙트는 토큰 전달이 성공적으로 처리되었음을 알 수 있습니다.\r\n    }\r\n\r\n    function setPrice(uint256 tokenId, uint256 price) external onlyOwner{\r\n        require(tokenId != 0, \"tokenId is zero\");\r\n        require(price != 0, \"price is zero\");\r\n        tokenPrice[tokenId] = price;\r\n        emit SetPrice(tokenId, price, block.timestamp); // 성공적으로 처리되었음을 알림.\r\n    }\r\n }"
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\nimport {IERC1363} from \"../../../interfaces/IERC1363.sol\";\nimport {Address} from \"../../../utils/Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC-20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    /**\n     * @dev An operation with an ERC-20 token failed.\n     */\n    error SafeERC20FailedOperation(address token);\n\n    /**\n     * @dev Indicates a failed `decreaseAllowance` request.\n     */\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        forceApprove(token, spender, oldAllowance + value);\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n     * value, non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\n        unchecked {\n            uint256 currentAllowance = token.allowance(address(this), spender);\n            if (currentAllowance < requestedDecrease) {\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\n            }\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     *\n     * NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n     * only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n     * set here.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            safeTransfer(token, to, value);\n        } else if (!token.transferAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n     * has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferFromAndCallRelaxed(\n        IERC1363 token,\n        address from,\n        address to,\n        uint256 value,\n        bytes memory data\n    ) internal {\n        if (to.code.length == 0) {\n            safeTransferFrom(token, from, to, value);\n        } else if (!token.transferFromAndCall(from, to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n     * Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n     * once without retrying, and relies on the returned value to be true.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function approveAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            forceApprove(token, to, value);\n        } else if (!token.approveAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements.\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            let success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            // bubble errors\n            if iszero(success) {\n                let ptr := mload(0x40)\n                returndatacopy(ptr, 0, returndatasize())\n                revert(ptr, returndatasize())\n            }\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n\n        if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        bool success;\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n        return success && (returnSize == 0 ? address(token).code.length > 0 : returnValue == 1);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC1155/utils/ERC1155Holder.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165, ERC165} from \"../../../utils/introspection/ERC165.sol\";\nimport {IERC1155Receiver} from \"../IERC1155Receiver.sol\";\n\n/**\n * @dev Simple implementation of `IERC1155Receiver` that will allow a contract to hold ERC-1155 tokens.\n *\n * IMPORTANT: When inheriting this contract, you must include a way to use the received tokens, otherwise they will be\n * stuck.\n */\nabstract contract ERC1155Holder is ERC165, IERC1155Receiver {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return interfaceId == type(IERC1155Receiver).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    function onERC1155Received(\n        address,\n        address,\n        uint256,\n        uint256,\n        bytes memory\n    ) public virtual override returns (bytes4) {\n        return this.onERC1155Received.selector;\n    }\n\n    function onERC1155BatchReceived(\n        address,\n        address,\n        uint256[] memory,\n        uint256[] memory,\n        bytes memory\n    ) public virtual override returns (bytes4) {\n        return this.onERC1155BatchReceived.selector;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC1155/IERC1155.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC1155/IERC1155.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC-1155 compliant contract, as defined in the\n * https://eips.ethereum.org/EIPS/eip-1155[ERC].\n */\ninterface IERC1155 is IERC165 {\n    /**\n     * @dev Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\n     */\n    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);\n\n    /**\n     * @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n     * transfers.\n     */\n    event TransferBatch(\n        address indexed operator,\n        address indexed from,\n        address indexed to,\n        uint256[] ids,\n        uint256[] values\n    );\n\n    /**\n     * @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n     * `approved`.\n     */\n    event ApprovalForAll(address indexed account, address indexed operator, bool approved);\n\n    /**\n     * @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n     *\n     * If an {URI} event was emitted for `id`, the standard\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n     * returned by {IERC1155MetadataURI-uri}.\n     */\n    event URI(string value, uint256 indexed id);\n\n    /**\n     * @dev Returns the value of tokens of token type `id` owned by `account`.\n     */\n    function balanceOf(address account, uint256 id) external view returns (uint256);\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n     *\n     * Requirements:\n     *\n     * - `accounts` and `ids` must have the same length.\n     */\n    function balanceOfBatch(\n        address[] calldata accounts,\n        uint256[] calldata ids\n    ) external view returns (uint256[] memory);\n\n    /**\n     * @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n     *\n     * Emits an {ApprovalForAll} event.\n     *\n     * Requirements:\n     *\n     * - `operator` cannot be the zero address.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n     *\n     * See {setApprovalForAll}.\n     */\n    function isApprovedForAll(address account, address operator) external view returns (bool);\n\n    /**\n     * @dev Transfers a `value` amount of tokens of type `id` from `from` to `to`.\n     *\n     * WARNING: This function can potentially allow a reentrancy attack when transferring tokens\n     * to an untrusted contract, when invoking {onERC1155Received} on the receiver.\n     * Ensure to follow the checks-effects-interactions pattern and consider employing\n     * reentrancy guards when interacting with untrusted contracts.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n     * - `from` must have a balance of tokens of type `id` of at least `value` amount.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes calldata data) external;\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n     *\n     * WARNING: This function can potentially allow a reentrancy attack when transferring tokens\n     * to an untrusted contract, when invoking {onERC1155BatchReceived} on the receiver.\n     * Ensure to follow the checks-effects-interactions pattern and consider employing\n     * reentrancy guards when interacting with untrusted contracts.\n     *\n     * Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments.\n     *\n     * Requirements:\n     *\n     * - `ids` and `values` must have the same length.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] calldata ids,\n        uint256[] calldata values,\n        bytes calldata data\n    ) external;\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Address.sol)\n\npragma solidity ^0.8.20;\n\nimport {Errors} from \"./Errors.sol\";\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev There's no code at `target` (it is not a contract).\n     */\n    error AddressEmptyCode(address target);\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        if (address(this).balance < amount) {\n            revert Errors.InsufficientBalance(address(this).balance, amount);\n        }\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        if (!success) {\n            revert Errors.FailedCall();\n        }\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason or custom error, it is bubbled\n     * up by this function (like regular Solidity function calls). However, if\n     * the call reverted with no returned reason, this function reverts with a\n     * {Errors.FailedCall} error.\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        if (address(this).balance < value) {\n            revert Errors.InsufficientBalance(address(this).balance, value);\n        }\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n     * was not a contract or bubbling up the revert reason (falling back to {Errors.FailedCall}) in case\n     * of an unsuccessful call.\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata\n    ) internal view returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            // only check if target is a contract if the call was successful and the return data is empty\n            // otherwise we already know that it was a contract\n            if (returndata.length == 0 && target.code.length == 0) {\n                revert AddressEmptyCode(target);\n            }\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n     * revert reason or with a default {Errors.FailedCall} error.\n     */\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Reverts with returndata if present. Otherwise reverts with {Errors.FailedCall}.\n     */\n    function _revert(bytes memory returndata) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            assembly (\"memory-safe\") {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert Errors.FailedCall();\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/IERC1363.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @title IERC1363\n * @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n *\n * Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n * after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\n */\ninterface IERC1363 is IERC20, IERC165 {\n    /*\n     * Note: the ERC-165 identifier for this interface is 0xb0202a11.\n     * 0xb0202a11 ===\n     *   bytes4(keccak256('transferAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('transferAndCall(address,uint256,bytes)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256,bytes)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256,bytes)'))\n     */\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @param data Additional data with no specified format, sent in call to `spender`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value, bytes calldata data) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC1155/IERC1155Receiver.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Interface that must be implemented by smart contracts in order to receive\n * ERC-1155 token transfers.\n */\ninterface IERC1155Receiver is IERC165 {\n    /**\n     * @dev Handles the receipt of a single ERC-1155 token type. This function is\n     * called at the end of a `safeTransferFrom` after the balance has been updated.\n     *\n     * NOTE: To accept the transfer, this must return\n     * `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n     * (i.e. 0xf23a6e61, or its own function selector).\n     *\n     * @param operator The address which initiated the transfer (i.e. msg.sender)\n     * @param from The address which previously owned the token\n     * @param id The ID of the token being transferred\n     * @param value The amount of tokens being transferred\n     * @param data Additional data with no specified format\n     * @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed\n     */\n    function onERC1155Received(\n        address operator,\n        address from,\n        uint256 id,\n        uint256 value,\n        bytes calldata data\n    ) external returns (bytes4);\n\n    /**\n     * @dev Handles the receipt of a multiple ERC-1155 token types. This function\n     * is called at the end of a `safeBatchTransferFrom` after the balances have\n     * been updated.\n     *\n     * NOTE: To accept the transfer(s), this must return\n     * `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n     * (i.e. 0xbc197c81, or its own function selector).\n     *\n     * @param operator The address which initiated the batch transfer (i.e. msg.sender)\n     * @param from The address which previously owned the token\n     * @param ids An array containing ids of each token being transferred (order and length must match values array)\n     * @param values An array containing amounts of each token being transferred (order and length must match ids array)\n     * @param data Additional data with no specified format\n     * @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed\n     */\n    function onERC1155BatchReceived(\n        address operator,\n        address from,\n        uint256[] calldata ids,\n        uint256[] calldata values,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Errors.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Errors.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Collection of common custom errors used in multiple contracts\n *\n * IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library.\n * It is recommended to avoid relying on the error API for critical functionality.\n *\n * _Available since v5.1._\n */\nlibrary Errors {\n    /**\n     * @dev The ETH balance of the account is not enough to perform the operation.\n     */\n    error InsufficientBalance(uint256 balance, uint256 needed);\n\n    /**\n     * @dev A call to an address target failed. The target may have reverted.\n     */\n    error FailedCall();\n\n    /**\n     * @dev The deployment failed.\n     */\n    error FailedDeployment();\n\n    /**\n     * @dev A necessary precompile is missing.\n     */\n    error MissingPrecompile(address);\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../utils/introspection/IERC165.sol\";\n"
			},
			"@openzeppelin/contracts/interfaces/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../token/ERC20/IERC20.sol\";\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"IERC1363": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approveAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "approveAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transferAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transferFromAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFromAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"approveAndCall(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.",
								"params": {
									"spender": "The address which will spend the funds.",
									"value": "The amount of tokens to be spent."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"approveAndCall(address,uint256,bytes)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `spender`.",
									"spender": "The address which will spend the funds.",
									"value": "The amount of tokens to be spent."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferAndCall(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferAndCall(address,uint256,bytes)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `to`.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFromAndCall(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"from": "The address which you want to send tokens from.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferFromAndCall(address,address,uint256,bytes)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `to`.",
									"from": "The address which you want to send tokens from.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							}
						},
						"title": "IERC1363",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"approveAndCall(address,uint256)": "3177029f",
							"approveAndCall(address,uint256,bytes)": "cae9ca51",
							"balanceOf(address)": "70a08231",
							"supportsInterface(bytes4)": "01ffc9a7",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferAndCall(address,uint256)": "1296ee62",
							"transferAndCall(address,uint256,bytes)": "4000aea0",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferFromAndCall(address,address,uint256)": "d8fbe994",
							"transferFromAndCall(address,address,uint256,bytes)": "c1d34b89"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"approveAndCall(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"approveAndCall(address,uint256,bytes)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `spender`.\",\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferAndCall(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferAndCall(address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFromAndCall(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFromAndCall(address,address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}}},\"title\":\"IERC1363\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":\"IERC1363\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC1155/IERC1155.sol": {
				"IERC1155": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC-1155 compliant contract, as defined in the https://eips.ethereum.org/EIPS/eip-1155[ERC].",
						"events": {
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`."
							},
							"TransferBatch(address,address,address,uint256[],uint256[])": {
								"details": "Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers."
							},
							"TransferSingle(address,address,address,uint256,uint256)": {
								"details": "Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`."
							},
							"URI(string,uint256)": {
								"details": "Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}."
							}
						},
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "Returns the value of tokens of token type `id` owned by `account`."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155BatchReceived} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments. Requirements: - `ids` and `values` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "Transfers a `value` amount of tokens of type `id` from `from` to `to`. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155Received} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `value` amount. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the zero address."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC-1155 compliant contract, as defined in the https://eips.ethereum.org/EIPS/eip-1155[ERC].\",\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the value of tokens of token type `id` owned by `account`.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155BatchReceived} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments. Requirements: - `ids` and `values` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers a `value` amount of tokens of type `id` from `from` to `to`. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155Received} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `value` amount. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the zero address.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":\"IERC1155\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x68d6fdbeb467192c3627a46aa7bf5cbb73267363b740abc511f521a5a41a446e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7ce608c19d5e917c60f9c8aa3e5f0eb05b326280ac0a235e8bb9a848a3a64a91\",\"dweb:/ipfs/QmdLPsWQJj7JvRae8MM13GEo4PBXaEFmD4b4heqcyMJNPG\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol": {
				"IERC1155Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC1155BatchReceived",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC1155Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface that must be implemented by smart contracts in order to receive ERC-1155 token transfers.",
						"kind": "dev",
						"methods": {
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": {
								"details": "Handles the receipt of a multiple ERC-1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. NOTE: To accept the transfer(s), this must return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` (i.e. 0xbc197c81, or its own function selector).",
								"params": {
									"data": "Additional data with no specified format",
									"from": "The address which previously owned the token",
									"ids": "An array containing ids of each token being transferred (order and length must match values array)",
									"operator": "The address which initiated the batch transfer (i.e. msg.sender)",
									"values": "An array containing amounts of each token being transferred (order and length must match ids array)"
								},
								"returns": {
									"_0": "`bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"
								}
							},
							"onERC1155Received(address,address,uint256,uint256,bytes)": {
								"details": "Handles the receipt of a single ERC-1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. NOTE: To accept the transfer, this must return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` (i.e. 0xf23a6e61, or its own function selector).",
								"params": {
									"data": "Additional data with no specified format",
									"from": "The address which previously owned the token",
									"id": "The ID of the token being transferred",
									"operator": "The address which initiated the transfer (i.e. msg.sender)",
									"value": "The amount of tokens being transferred"
								},
								"returns": {
									"_0": "`bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"
								}
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": "bc197c81",
							"onERC1155Received(address,address,uint256,uint256,bytes)": "f23a6e61",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface that must be implemented by smart contracts in order to receive ERC-1155 token transfers.\",\"kind\":\"dev\",\"methods\":{\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\":{\"details\":\"Handles the receipt of a multiple ERC-1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. NOTE: To accept the transfer(s), this must return `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` (i.e. 0xbc197c81, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"ids\":\"An array containing ids of each token being transferred (order and length must match values array)\",\"operator\":\"The address which initiated the batch transfer (i.e. msg.sender)\",\"values\":\"An array containing amounts of each token being transferred (order and length must match ids array)\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` if transfer is allowed\"}},\"onERC1155Received(address,address,uint256,uint256,bytes)\":{\"details\":\"Handles the receipt of a single ERC-1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. NOTE: To accept the transfer, this must return `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` (i.e. 0xf23a6e61, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"id\":\"The ID of the token being transferred\",\"operator\":\"The address which initiated the transfer (i.e. msg.sender)\",\"value\":\"The amount of tokens being transferred\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` if transfer is allowed\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":\"IERC1155Receiver\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0x61a23d601c2ab69dd726ac55058604cbda98e1d728ba31a51c379a3f9eeea715\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d8cbb06152d82ebdd5ba1d33454e5759492040f309a82637c7e99c948a04fa20\",\"dweb:/ipfs/QmQQuLr6WSfLu97pMEh6XLefk99TSj9k5Qu1zXGPepwGiK\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol": {
				"ERC1155Holder": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"name": "onERC1155BatchReceived",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"name": "onERC1155Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Simple implementation of `IERC1155Receiver` that will allow a contract to hold ERC-1155 tokens. IMPORTANT: When inheriting this contract, you must include a way to use the received tokens, otherwise they will be stuck.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": "bc197c81",
							"onERC1155Received(address,address,uint256,uint256,bytes)": "f23a6e61",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Simple implementation of `IERC1155Receiver` that will allow a contract to hold ERC-1155 tokens. IMPORTANT: When inheriting this contract, you must include a way to use the received tokens, otherwise they will be stuck.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":\"ERC1155Holder\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0x61a23d601c2ab69dd726ac55058604cbda98e1d728ba31a51c379a3f9eeea715\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d8cbb06152d82ebdd5ba1d33454e5759492040f309a82637c7e99c948a04fa20\",\"dweb:/ipfs/QmQQuLr6WSfLu97pMEh6XLefk99TSj9k5Qu1zXGPepwGiK\"]},\"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":{\"keccak256\":\"0xe103e95f854ef0cd1bba5f469175f67cd332f5c2561941f165e3dd65cee94d6d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6cf8cc5d07cf8003255f9d766fe8188b9f6e33b6240e126a605f0d061566b23e\",\"dweb:/ipfs/Qmd7okDCSoUt1L4G9hmb5c4W8kWUnfpAa2jyBKUp4xKErd\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "currentAllowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "requestedDecrease",
									"type": "uint256"
								}
							],
							"name": "SafeERC20FailedDecreaseAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"errors": {
							"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failed `decreaseAllowance` request."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC-20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":750:9442  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":750:9442  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220698b1a5c5c4c52fb56daba38cd9385e2d99c56dbcf42fe723feeab237d81c6f864736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220698b1a5c5c4c52fb56daba38cd9385e2d99c56dbcf42fe723feeab237d81c6f864736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH10 0x8B1A5C5C4C52FB56DABA CODESIZE 0xCD SWAP4 DUP6 0xE2 0xD9 SWAP13 JUMP 0xDB 0xCF TIMESTAMP INVALID PUSH19 0x3FEEAB237D81C6F864736F6C634300081A0033 ",
							"sourceMap": "750:8692:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220698b1a5c5c4c52fb56daba38cd9385e2d99c56dbcf42fe723feeab237d81c6f864736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH10 0x8B1A5C5C4C52FB56DABA CODESIZE 0xCD SWAP4 DUP6 0xE2 0xD9 SWAP13 JUMP 0xDB 0xCF TIMESTAMP INVALID PUSH19 0x3FEEAB237D81C6F864736F6C634300081A0033 ",
							"sourceMap": "750:8692:8:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"_callOptionalReturnBool(contract IERC20,bytes memory)": "infinite",
								"approveAndCallRelaxed(contract IERC1363,address,uint256,bytes memory)": "infinite",
								"forceApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite",
								"transferAndCallRelaxed(contract IERC1363,address,uint256,bytes memory)": "infinite",
								"transferFromAndCallRelaxed(contract IERC1363,address,address,uint256,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 8,
									"value": "B"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "BYTE",
									"source": 8
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "ADDRESS",
									"source": 8
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "MSTORE8",
									"source": 8
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220698b1a5c5c4c52fb56daba38cd9385e2d99c56dbcf42fe723feeab237d81c6f864736f6c634300081a0033",
									".code": [
										{
											"begin": 750,
											"end": 9442,
											"name": "PUSHDEPLOYADDRESS",
											"source": 8
										},
										{
											"begin": 750,
											"end": 9442,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 750,
											"end": 9442,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 750,
											"end": 9442,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 750,
											"end": 9442,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 750,
											"end": 9442,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 750,
											"end": 9442,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 750,
											"end": 9442,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 750,
											"end": 9442,
											"name": "REVERT",
											"source": 8
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
								"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
								"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"SnowmenSales.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentAllowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"SafeERC20FailedDecreaseAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"errors\":{\"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failed `decreaseAllowance` request.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xca2ae13e0610f6a99238dd00b97bd786bc92732dae6d6b9d61f573ec51018310\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75f8c71ce0c91c40dd5f249ace0b7d8270f8f1767231bcf71490f7157d6ba862\",\"dweb:/ipfs/QmYXgxeDyFHvz3JsXxLEYN6GNUR44ThHeFj5XkpkgMoG4w\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x9d8da059267bac779a2dbbb9a26c2acf00ca83085e105d62d5d4ef96054a47f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c78e2aa4313323cecd1ef12a8d6265b96beee1a199923abf55d9a2a9e291ad23\",\"dweb:/ipfs/QmUTs2KStXucZezzFo3EYeqYu47utu56qrF7jj1Gue65vb\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":233:6032  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":233:6032  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220c34a83696988bc629d9eefb813a7172acc401752bdae64952801479bece8cbde64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220c34a83696988bc629d9eefb813a7172acc401752bdae64952801479bece8cbde64736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC3 BLOBBASEFEE DUP4 PUSH10 0x6988BC629D9EEFB813A7 OR 0x2A 0xCC BLOCKHASH OR MSTORE 0xBD 0xAE PUSH5 0x952801479B 0xEC 0xE8 0xCB 0xDE PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "233:5799:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220c34a83696988bc629d9eefb813a7172acc401752bdae64952801479bece8cbde64736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC3 BLOBBASEFEE DUP4 PUSH10 0x6988BC629D9EEFB813A7 OR 0x2A 0xCC BLOCKHASH OR MSTORE 0xBD 0xAE PUSH5 0x952801479B 0xEC 0xE8 0xCB 0xDE PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "233:5799:9:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_revert(bytes memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 9,
									"value": "B"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "BYTE",
									"source": 9
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 9,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "ADDRESS",
									"source": 9
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "MSTORE8",
									"source": 9
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c34a83696988bc629d9eefb813a7172acc401752bdae64952801479bece8cbde64736f6c634300081a0033",
									".code": [
										{
											"begin": 233,
											"end": 6032,
											"name": "PUSHDEPLOYADDRESS",
											"source": 9
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "REVERT",
											"source": 9
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
								"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
								"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"SnowmenSales.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x9d8da059267bac779a2dbbb9a26c2acf00ca83085e105d62d5d4ef96054a47f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c78e2aa4313323cecd1ef12a8d6265b96beee1a199923abf55d9a2a9e291ad23\",\"dweb:/ipfs/QmUTs2KStXucZezzFo3EYeqYu47utu56qrF7jj1Gue65vb\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Errors.sol": {
				"Errors": {
					"abi": [
						{
							"inputs": [],
							"name": "FailedCall",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedDeployment",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "MissingPrecompile",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Collection of common custom errors used in multiple contracts IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library. It is recommended to avoid relying on the error API for critical functionality. _Available since v5.1._",
						"errors": {
							"FailedCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							],
							"FailedDeployment()": [
								{
									"details": "The deployment failed."
								}
							],
							"InsufficientBalance(uint256,uint256)": [
								{
									"details": "The ETH balance of the account is not enough to perform the operation."
								}
							],
							"MissingPrecompile(address)": [
								{
									"details": "A necessary precompile is missing."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Errors.sol\":411:895  library Errors {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Errors.sol\":411:895  library Errors {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122013a5258e24d367801dd045c6c6b0e36249fc2ab27ec3e3f8e07ce95d2dbdb61d64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122013a5258e24d367801dd045c6c6b0e36249fc2ab27ec3e3f8e07ce95d2dbdb61d64736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SGT 0xA5 0x25 DUP15 0x24 0xD3 PUSH8 0x801DD045C6C6B0E3 PUSH3 0x49FC2A 0xB2 PUSH31 0xC3E3F8E07CE95D2DBDB61D64736F6C634300081A0033000000000000000000 ",
							"sourceMap": "411:484:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122013a5258e24d367801dd045c6c6b0e36249fc2ab27ec3e3f8e07ce95d2dbdb61d64736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SGT 0xA5 0x25 DUP15 0x24 0xD3 PUSH8 0x801DD045C6C6B0E3 PUSH3 0x49FC2A 0xB2 PUSH31 0xC3E3F8E07CE95D2DBDB61D64736F6C634300081A0033000000000000000000 ",
							"sourceMap": "411:484:11:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH #[$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH [$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 11,
									"value": "B"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 411,
									"end": 895,
									"name": "CODECOPY",
									"source": 11
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "BYTE",
									"source": 11
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "EQ",
									"source": 11
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 11,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 411,
									"end": 895,
									"name": "tag",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 411,
									"end": 895,
									"name": "ADDRESS",
									"source": 11
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE8",
									"source": 11
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 411,
									"end": 895,
									"name": "RETURN",
									"source": 11
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122013a5258e24d367801dd045c6c6b0e36249fc2ab27ec3e3f8e07ce95d2dbdb61d64736f6c634300081a0033",
									".code": [
										{
											"begin": 411,
											"end": 895,
											"name": "PUSHDEPLOYADDRESS",
											"source": 11
										},
										{
											"begin": 411,
											"end": 895,
											"name": "ADDRESS",
											"source": 11
										},
										{
											"begin": 411,
											"end": 895,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 411,
											"end": 895,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 411,
											"end": 895,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 411,
											"end": 895,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 411,
											"end": 895,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 895,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 411,
											"end": 895,
											"name": "REVERT",
											"source": 11
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
								"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
								"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"SnowmenSales.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"FailedCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedDeployment\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"MissingPrecompile\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of common custom errors used in multiple contracts IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library. It is recommended to avoid relying on the error API for critical functionality. _Available since v5.1._\",\"errors\":{\"FailedCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"FailedDeployment()\":[{\"details\":\"The deployment failed.\"}],\"InsufficientBalance(uint256,uint256)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"MissingPrecompile(address)\":[{\"details\":\"A necessary precompile is missing.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Errors.sol\":\"Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"SnowmenSales.sol": {
				"SnowmenSales": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "snowmenErc1155",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "snowmenErc20",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "price",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								}
							],
							"name": "SetPrice",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "onERC1155ReceivedExecuted",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"name": "onERC1155BatchReceived",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"name": "onERC1155Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "price",
									"type": "uint256"
								}
							],
							"name": "setPrice",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "snowmenGame",
							"outputs": [
								{
									"internalType": "contract IERC1155",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "snowmenToken",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "tokenPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"SnowmenSales.sol\":319:3784  contract SnowmenSales is Ownable, ERC1155Holder {... */\n  mstore(0x40, 0x80)\n    /* \"SnowmenSales.sol\":1102:1521  constructor(address snowmenErc1155, address snowmenErc20) Ownable(_msgSender()){... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"SnowmenSales.sol\":1168:1180  _msgSender() */\n  tag_5\n    /* \"SnowmenSales.sol\":1168:1178  _msgSender */\n  shl(0x20, tag_6)\n    /* \"SnowmenSales.sol\":1168:1180  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_5:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_9\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_10\n  swap2\n  swap1\n  tag_11\n  jump\t// in\ntag_10:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_9:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_12\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_13)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_12:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"SnowmenSales.sol\":1452:1466  snowmenErc1155 */\n  dup2\n    /* \"SnowmenSales.sol\":1429:1440  snowmenGame */\n  0x02\n  0x00\n    /* \"SnowmenSales.sol\":1429:1467  snowmenGame = IERC1155(snowmenErc1155) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"SnowmenSales.sol\":1500:1512  snowmenErc20 */\n  dup1\n    /* \"SnowmenSales.sol\":1478:1490  snowmenToken */\n  0x01\n  0x00\n    /* \"SnowmenSales.sol\":1478:1513  snowmenToken = IERC20(snowmenErc20) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"SnowmenSales.sol\":1102:1521  constructor(address snowmenErc1155, address snowmenErc20) Ownable(_msgSender()){... */\n  pop\n  pop\n    /* \"SnowmenSales.sol\":319:3784  contract SnowmenSales is Ownable, ERC1155Holder {... */\n  jump(tag_15)\n    /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\ntag_6:\n    /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n  0x00\n    /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_13:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  dup1\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x00\n  dup1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_19:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_21:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_22:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_32\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_21\n  jump\t// in\ntag_32:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_23:\n    /* \"#utility.yul\":641:665   */\n  tag_34\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_22\n  jump\t// in\ntag_34:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_35\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_35:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_24:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_37\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_23\n  jump\t// in\ntag_37:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1352   */\ntag_3:\n    /* \"#utility.yul\":924:930   */\n  0x00\n    /* \"#utility.yul\":932:938   */\n  dup1\n    /* \"#utility.yul\":981:983   */\n  0x40\n    /* \"#utility.yul\":969:978   */\n  dup4\n    /* \"#utility.yul\":960:967   */\n  dup6\n    /* \"#utility.yul\":956:979   */\n  sub\n    /* \"#utility.yul\":952:984   */\n  slt\n    /* \"#utility.yul\":949:1068   */\n  iszero\n  tag_39\n  jumpi\n    /* \"#utility.yul\":987:1066   */\n  tag_40\n  tag_19\n  jump\t// in\ntag_40:\n    /* \"#utility.yul\":949:1068   */\ntag_39:\n    /* \"#utility.yul\":1107:1108   */\n  0x00\n    /* \"#utility.yul\":1132:1196   */\n  tag_41\n    /* \"#utility.yul\":1188:1195   */\n  dup6\n    /* \"#utility.yul\":1179:1185   */\n  dup3\n    /* \"#utility.yul\":1168:1177   */\n  dup7\n    /* \"#utility.yul\":1164:1186   */\n  add\n    /* \"#utility.yul\":1132:1196   */\n  tag_24\n  jump\t// in\ntag_41:\n    /* \"#utility.yul\":1122:1196   */\n  swap3\n  pop\n    /* \"#utility.yul\":1078:1206   */\n  pop\n    /* \"#utility.yul\":1245:1247   */\n  0x20\n    /* \"#utility.yul\":1271:1335   */\n  tag_42\n    /* \"#utility.yul\":1327:1334   */\n  dup6\n    /* \"#utility.yul\":1318:1324   */\n  dup3\n    /* \"#utility.yul\":1307:1316   */\n  dup7\n    /* \"#utility.yul\":1303:1325   */\n  add\n    /* \"#utility.yul\":1271:1335   */\n  tag_24\n  jump\t// in\ntag_42:\n    /* \"#utility.yul\":1261:1335   */\n  swap2\n  pop\n    /* \"#utility.yul\":1216:1345   */\n  pop\n    /* \"#utility.yul\":845:1352   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1358:1476   */\ntag_25:\n    /* \"#utility.yul\":1445:1469   */\n  tag_44\n    /* \"#utility.yul\":1463:1468   */\n  dup2\n    /* \"#utility.yul\":1445:1469   */\n  tag_22\n  jump\t// in\ntag_44:\n    /* \"#utility.yul\":1440:1443   */\n  dup3\n    /* \"#utility.yul\":1433:1470   */\n  mstore\n    /* \"#utility.yul\":1358:1476   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1482:1704   */\ntag_11:\n    /* \"#utility.yul\":1575:1579   */\n  0x00\n    /* \"#utility.yul\":1613:1615   */\n  0x20\n    /* \"#utility.yul\":1602:1611   */\n  dup3\n    /* \"#utility.yul\":1598:1616   */\n  add\n    /* \"#utility.yul\":1590:1616   */\n  swap1\n  pop\n    /* \"#utility.yul\":1626:1697   */\n  tag_46\n    /* \"#utility.yul\":1694:1695   */\n  0x00\n    /* \"#utility.yul\":1683:1692   */\n  dup4\n    /* \"#utility.yul\":1679:1696   */\n  add\n    /* \"#utility.yul\":1670:1676   */\n  dup5\n    /* \"#utility.yul\":1626:1697   */\n  tag_25\n  jump\t// in\ntag_46:\n    /* \"#utility.yul\":1482:1704   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"SnowmenSales.sol\":319:3784  contract SnowmenSales is Ownable, ERC1155Holder {... */\ntag_15:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"SnowmenSales.sol\":319:3784  contract SnowmenSales is Ownable, ERC1155Holder {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xd4ddce8a\n      gt\n      tag_13\n      jumpi\n      dup1\n      0xd4ddce8a\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xea75aa8f\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xf23a6e61\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xf7d97577\n      eq\n      tag_12\n      jumpi\n      jump(tag_2)\n    tag_13:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x2c1449e1\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xbc197c81\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":650:871  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_3:\n      tag_14\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_15\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_15:\n      tag_17\n      jump\t// in\n    tag_14:\n      mload(0x40)\n      tag_18\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"SnowmenSales.sol\":513:539  IERC20 public snowmenToken */\n    tag_4:\n      tag_20\n      tag_21\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      tag_22\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_5:\n      tag_24\n      tag_25\n      jump\t// in\n    tag_24:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_6:\n      tag_26\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      tag_28\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":1102:1349  function onERC1155BatchReceived(... */\n    tag_7:\n      tag_30\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_31\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n      tag_33\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      tag_34\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"SnowmenSales.sol\":699:744  mapping(uint256 => uint256) public tokenPrice */\n    tag_8:\n      tag_36\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_37\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_37:\n      tag_39\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      tag_40\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"SnowmenSales.sol\":589:616  IERC1155 public snowmenGame */\n    tag_9:\n      tag_42\n      tag_43\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      tag_44\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"SnowmenSales.sol\":1529:3457  function onERC1155Received(... */\n    tag_10:\n      tag_46\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_47\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_47:\n      tag_49\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      tag_50\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_11:\n      tag_51\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_52\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_52:\n      tag_54\n      jump\t// in\n    tag_51:\n      stop\n        /* \"SnowmenSales.sol\":3465:3780  function setPrice(uint256 tokenId, uint256 price) external onlyOwner{... */\n    tag_12:\n      tag_55\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_56\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_56:\n      tag_58\n      jump\t// in\n    tag_55:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":650:871  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_17:\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":752:756  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":790:824  type(IERC1155Receiver).interfaceId */\n      0x4e2312e000000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":775:824  interfaceId == type(IERC1155Receiver).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":775:786  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":775:824  interfaceId == type(IERC1155Receiver).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":775:864  interfaceId == type(IERC1155Receiver).interfaceId || super.supportsInterface(interfaceId) */\n      dup1\n      tag_60\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":828:864  super.supportsInterface(interfaceId) */\n      tag_61\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":852:863  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":828:851  super.supportsInterface */\n      tag_62\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":828:864  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_61:\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":775:864  interfaceId == type(IERC1155Receiver).interfaceId || super.supportsInterface(interfaceId) */\n    tag_60:\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":768:864  return interfaceId == type(IERC1155Receiver).interfaceId || super.supportsInterface(interfaceId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":650:871  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"SnowmenSales.sol\":513:539  IERC20 public snowmenToken */\n    tag_21:\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_25:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_64\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_65\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_64:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_67\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_68\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_67:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_27:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":1102:1349  function onERC1155BatchReceived(... */\n    tag_33:\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":1281:1287  bytes4 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":1306:1342  this.onERC1155BatchReceived.selector */\n      shl(0xe0, 0xbc197c81)\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":1299:1342  return this.onERC1155BatchReceived.selector */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":1102:1349  function onERC1155BatchReceived(... */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"SnowmenSales.sol\":699:744  mapping(uint256 => uint256) public tokenPrice */\n    tag_39:\n      mstore(0x20, 0x03)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"SnowmenSales.sol\":589:616  IERC1155 public snowmenGame */\n    tag_43:\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"SnowmenSales.sol\":1529:3457  function onERC1155Received(... */\n    tag_49:\n        /* \"SnowmenSales.sol\":1940:1946  bytes4 */\n      0x00\n        /* \"SnowmenSales.sol\":2429:2440  snowmenGame */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"SnowmenSales.sol\":2407:2441  msg.sender == address(snowmenGame) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"SnowmenSales.sol\":2407:2417  msg.sender */\n      caller\n        /* \"SnowmenSales.sol\":2407:2441  msg.sender == address(snowmenGame) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"SnowmenSales.sol\":2399:2462  require(msg.sender == address(snowmenGame), \"incorrect sender\") */\n      tag_72\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_73\n      swap1\n      tag_74\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_72:\n        /* \"SnowmenSales.sol\":2703:2704  0 */\n      0x00\n        /* \"SnowmenSales.sol\":2694:2699  value */\n      dup4\n        /* \"SnowmenSales.sol\":2694:2704  value != 0 */\n      sub\n        /* \"SnowmenSales.sol\":2686:2725  require(value != 0, \"quantity is zero\") */\n      tag_75\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_76\n      swap1\n      tag_77\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_75:\n        /* \"SnowmenSales.sol\":2840:2892  onERC1155ReceivedExecuted(operator, from, id, value) */\n      0x1650d49bac940346e34bac1dde642598b57ba618d7a0c005a91257851cae2c24\n        /* \"SnowmenSales.sol\":2866:2874  operator */\n      dup7\n        /* \"SnowmenSales.sol\":2876:2880  from */\n      dup7\n        /* \"SnowmenSales.sol\":2882:2884  id */\n      dup7\n        /* \"SnowmenSales.sol\":2886:2891  value */\n      dup7\n        /* \"SnowmenSales.sol\":2840:2892  onERC1155ReceivedExecuted(operator, from, id, value) */\n      mload(0x40)\n      tag_78\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_79\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"SnowmenSales.sol\":3128:3159  this.onERC1155Received.selector */\n      shl(0xe0, 0xf23a6e61)\n        /* \"SnowmenSales.sol\":3121:3159  return this.onERC1155Received.selector */\n      swap1\n      pop\n        /* \"SnowmenSales.sol\":1529:3457  function onERC1155Received(... */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_54:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_81\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_65\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_81:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_83\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_84\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_84:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_83:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_85\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_68\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_85:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"SnowmenSales.sol\":3465:3780  function setPrice(uint256 tokenId, uint256 price) external onlyOwner{... */\n    tag_58:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_87\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_65\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_87:\n        /* \"SnowmenSales.sol\":3563:3564  0 */\n      0x00\n        /* \"SnowmenSales.sol\":3552:3559  tokenId */\n      dup3\n        /* \"SnowmenSales.sol\":3552:3564  tokenId != 0 */\n      sub\n        /* \"SnowmenSales.sol\":3544:3584  require(tokenId != 0, \"tokenId is zero\") */\n      tag_89\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_90\n      swap1\n      tag_91\n      jump\t// in\n    tag_90:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_89:\n        /* \"SnowmenSales.sol\":3612:3613  0 */\n      0x00\n        /* \"SnowmenSales.sol\":3603:3608  price */\n      dup2\n        /* \"SnowmenSales.sol\":3603:3613  price != 0 */\n      sub\n        /* \"SnowmenSales.sol\":3595:3631  require(price != 0, \"price is zero\") */\n      tag_92\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_93\n      swap1\n      tag_94\n      jump\t// in\n    tag_93:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_92:\n        /* \"SnowmenSales.sol\":3664:3669  price */\n      dup1\n        /* \"SnowmenSales.sol\":3642:3652  tokenPrice */\n      0x03\n        /* \"SnowmenSales.sol\":3642:3661  tokenPrice[tokenId] */\n      0x00\n        /* \"SnowmenSales.sol\":3653:3660  tokenId */\n      dup5\n        /* \"SnowmenSales.sol\":3642:3661  tokenPrice[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"SnowmenSales.sol\":3642:3669  tokenPrice[tokenId] = price */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"SnowmenSales.sol\":3685:3726  SetPrice(tokenId, price, block.timestamp) */\n      0x18e75bb8c091a6448c12a2023f055b2714c151b941a91df8b9938788769ffe13\n        /* \"SnowmenSales.sol\":3694:3701  tokenId */\n      dup3\n        /* \"SnowmenSales.sol\":3703:3708  price */\n      dup3\n        /* \"SnowmenSales.sol\":3710:3725  block.timestamp */\n      timestamp\n        /* \"SnowmenSales.sol\":3685:3726  SetPrice(tokenId, price, block.timestamp) */\n      mload(0x40)\n      tag_95\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_96\n      jump\t// in\n    tag_95:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"SnowmenSales.sol\":3465:3780  function setPrice(uint256 tokenId, uint256 price) external onlyOwner{... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":763:909  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n    tag_62:\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":839:843  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":877:902  type(IERC165).interfaceId */\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":862:902  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":862:873  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":862:902  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":855:902  return interfaceId == type(IERC165).interfaceId */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":763:909  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_65:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_99\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_100\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_99:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_101\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_27\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_101:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_102\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_103\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_100\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_103:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_104\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_104:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_102:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_68:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x00\n      dup1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_100:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:82   */\n    tag_107:\n        /* \"#utility.yul\":40:46   */\n      0x00\n        /* \"#utility.yul\":73:75   */\n      0x40\n        /* \"#utility.yul\":67:76   */\n      mload\n        /* \"#utility.yul\":57:76   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:82   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_108:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_109:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:483   */\n    tag_110:\n        /* \"#utility.yul\":370:377   */\n      0x00\n        /* \"#utility.yul\":410:476   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":403:408   */\n      dup3\n        /* \"#utility.yul\":399:477   */\n      and\n        /* \"#utility.yul\":388:477   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:483   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":489:609   */\n    tag_111:\n        /* \"#utility.yul\":561:584   */\n      tag_161\n        /* \"#utility.yul\":578:583   */\n      dup2\n        /* \"#utility.yul\":561:584   */\n      tag_110\n      jump\t// in\n    tag_161:\n        /* \"#utility.yul\":554:559   */\n      dup2\n        /* \"#utility.yul\":551:585   */\n      eq\n        /* \"#utility.yul\":541:603   */\n      tag_162\n      jumpi\n        /* \"#utility.yul\":599:600   */\n      0x00\n        /* \"#utility.yul\":596:597   */\n      dup1\n        /* \"#utility.yul\":589:601   */\n      revert\n        /* \"#utility.yul\":541:603   */\n    tag_162:\n        /* \"#utility.yul\":489:609   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":615:752   */\n    tag_112:\n        /* \"#utility.yul\":660:665   */\n      0x00\n        /* \"#utility.yul\":698:704   */\n      dup2\n        /* \"#utility.yul\":685:705   */\n      calldataload\n        /* \"#utility.yul\":676:705   */\n      swap1\n      pop\n        /* \"#utility.yul\":714:746   */\n      tag_164\n        /* \"#utility.yul\":740:745   */\n      dup2\n        /* \"#utility.yul\":714:746   */\n      tag_111\n      jump\t// in\n    tag_164:\n        /* \"#utility.yul\":615:752   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":758:1085   */\n    tag_16:\n        /* \"#utility.yul\":816:822   */\n      0x00\n        /* \"#utility.yul\":865:867   */\n      0x20\n        /* \"#utility.yul\":853:862   */\n      dup3\n        /* \"#utility.yul\":844:851   */\n      dup5\n        /* \"#utility.yul\":840:863   */\n      sub\n        /* \"#utility.yul\":836:868   */\n      slt\n        /* \"#utility.yul\":833:952   */\n      iszero\n      tag_166\n      jumpi\n        /* \"#utility.yul\":871:950   */\n      tag_167\n      tag_108\n      jump\t// in\n    tag_167:\n        /* \"#utility.yul\":833:952   */\n    tag_166:\n        /* \"#utility.yul\":991:992   */\n      0x00\n        /* \"#utility.yul\":1016:1068   */\n      tag_168\n        /* \"#utility.yul\":1060:1067   */\n      dup5\n        /* \"#utility.yul\":1051:1057   */\n      dup3\n        /* \"#utility.yul\":1040:1049   */\n      dup6\n        /* \"#utility.yul\":1036:1058   */\n      add\n        /* \"#utility.yul\":1016:1068   */\n      tag_112\n      jump\t// in\n    tag_168:\n        /* \"#utility.yul\":1006:1068   */\n      swap2\n      pop\n        /* \"#utility.yul\":962:1078   */\n      pop\n        /* \"#utility.yul\":758:1085   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1091:1181   */\n    tag_113:\n        /* \"#utility.yul\":1125:1132   */\n      0x00\n        /* \"#utility.yul\":1168:1173   */\n      dup2\n        /* \"#utility.yul\":1161:1174   */\n      iszero\n        /* \"#utility.yul\":1154:1175   */\n      iszero\n        /* \"#utility.yul\":1143:1175   */\n      swap1\n      pop\n        /* \"#utility.yul\":1091:1181   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1187:1296   */\n    tag_114:\n        /* \"#utility.yul\":1268:1289   */\n      tag_171\n        /* \"#utility.yul\":1283:1288   */\n      dup2\n        /* \"#utility.yul\":1268:1289   */\n      tag_113\n      jump\t// in\n    tag_171:\n        /* \"#utility.yul\":1263:1266   */\n      dup3\n        /* \"#utility.yul\":1256:1290   */\n      mstore\n        /* \"#utility.yul\":1187:1296   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1302:1512   */\n    tag_19:\n        /* \"#utility.yul\":1389:1393   */\n      0x00\n        /* \"#utility.yul\":1427:1429   */\n      0x20\n        /* \"#utility.yul\":1416:1425   */\n      dup3\n        /* \"#utility.yul\":1412:1430   */\n      add\n        /* \"#utility.yul\":1404:1430   */\n      swap1\n      pop\n        /* \"#utility.yul\":1440:1505   */\n      tag_173\n        /* \"#utility.yul\":1502:1503   */\n      0x00\n        /* \"#utility.yul\":1491:1500   */\n      dup4\n        /* \"#utility.yul\":1487:1504   */\n      add\n        /* \"#utility.yul\":1478:1484   */\n      dup5\n        /* \"#utility.yul\":1440:1505   */\n      tag_114\n      jump\t// in\n    tag_173:\n        /* \"#utility.yul\":1302:1512   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1518:1644   */\n    tag_115:\n        /* \"#utility.yul\":1555:1562   */\n      0x00\n        /* \"#utility.yul\":1595:1637   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1588:1593   */\n      dup3\n        /* \"#utility.yul\":1584:1638   */\n      and\n        /* \"#utility.yul\":1573:1638   */\n      swap1\n      pop\n        /* \"#utility.yul\":1518:1644   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1650:1710   */\n    tag_116:\n        /* \"#utility.yul\":1678:1681   */\n      0x00\n        /* \"#utility.yul\":1699:1704   */\n      dup2\n        /* \"#utility.yul\":1692:1704   */\n      swap1\n      pop\n        /* \"#utility.yul\":1650:1710   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1716:1858   */\n    tag_117:\n        /* \"#utility.yul\":1766:1775   */\n      0x00\n        /* \"#utility.yul\":1799:1852   */\n      tag_177\n        /* \"#utility.yul\":1817:1851   */\n      tag_178\n        /* \"#utility.yul\":1826:1850   */\n      tag_179\n        /* \"#utility.yul\":1844:1849   */\n      dup5\n        /* \"#utility.yul\":1826:1850   */\n      tag_115\n      jump\t// in\n    tag_179:\n        /* \"#utility.yul\":1817:1851   */\n      tag_116\n      jump\t// in\n    tag_178:\n        /* \"#utility.yul\":1799:1852   */\n      tag_115\n      jump\t// in\n    tag_177:\n        /* \"#utility.yul\":1786:1852   */\n      swap1\n      pop\n        /* \"#utility.yul\":1716:1858   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1864:1990   */\n    tag_118:\n        /* \"#utility.yul\":1914:1923   */\n      0x00\n        /* \"#utility.yul\":1947:1984   */\n      tag_181\n        /* \"#utility.yul\":1978:1983   */\n      dup3\n        /* \"#utility.yul\":1947:1984   */\n      tag_117\n      jump\t// in\n    tag_181:\n        /* \"#utility.yul\":1934:1984   */\n      swap1\n      pop\n        /* \"#utility.yul\":1864:1990   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1996:2136   */\n    tag_119:\n        /* \"#utility.yul\":2060:2069   */\n      0x00\n        /* \"#utility.yul\":2093:2130   */\n      tag_183\n        /* \"#utility.yul\":2124:2129   */\n      dup3\n        /* \"#utility.yul\":2093:2130   */\n      tag_118\n      jump\t// in\n    tag_183:\n        /* \"#utility.yul\":2080:2130   */\n      swap1\n      pop\n        /* \"#utility.yul\":1996:2136   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2142:2301   */\n    tag_120:\n        /* \"#utility.yul\":2243:2294   */\n      tag_185\n        /* \"#utility.yul\":2288:2293   */\n      dup2\n        /* \"#utility.yul\":2243:2294   */\n      tag_119\n      jump\t// in\n    tag_185:\n        /* \"#utility.yul\":2238:2241   */\n      dup3\n        /* \"#utility.yul\":2231:2295   */\n      mstore\n        /* \"#utility.yul\":2142:2301   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2307:2557   */\n    tag_23:\n        /* \"#utility.yul\":2414:2418   */\n      0x00\n        /* \"#utility.yul\":2452:2454   */\n      0x20\n        /* \"#utility.yul\":2441:2450   */\n      dup3\n        /* \"#utility.yul\":2437:2455   */\n      add\n        /* \"#utility.yul\":2429:2455   */\n      swap1\n      pop\n        /* \"#utility.yul\":2465:2550   */\n      tag_187\n        /* \"#utility.yul\":2547:2548   */\n      0x00\n        /* \"#utility.yul\":2536:2545   */\n      dup4\n        /* \"#utility.yul\":2532:2549   */\n      add\n        /* \"#utility.yul\":2523:2529   */\n      dup5\n        /* \"#utility.yul\":2465:2550   */\n      tag_120\n      jump\t// in\n    tag_187:\n        /* \"#utility.yul\":2307:2557   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2563:2659   */\n    tag_121:\n        /* \"#utility.yul\":2600:2607   */\n      0x00\n        /* \"#utility.yul\":2629:2653   */\n      tag_189\n        /* \"#utility.yul\":2647:2652   */\n      dup3\n        /* \"#utility.yul\":2629:2653   */\n      tag_115\n      jump\t// in\n    tag_189:\n        /* \"#utility.yul\":2618:2653   */\n      swap1\n      pop\n        /* \"#utility.yul\":2563:2659   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2665:2783   */\n    tag_122:\n        /* \"#utility.yul\":2752:2776   */\n      tag_191\n        /* \"#utility.yul\":2770:2775   */\n      dup2\n        /* \"#utility.yul\":2752:2776   */\n      tag_121\n      jump\t// in\n    tag_191:\n        /* \"#utility.yul\":2747:2750   */\n      dup3\n        /* \"#utility.yul\":2740:2777   */\n      mstore\n        /* \"#utility.yul\":2665:2783   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2789:3011   */\n    tag_29:\n        /* \"#utility.yul\":2882:2886   */\n      0x00\n        /* \"#utility.yul\":2920:2922   */\n      0x20\n        /* \"#utility.yul\":2909:2918   */\n      dup3\n        /* \"#utility.yul\":2905:2923   */\n      add\n        /* \"#utility.yul\":2897:2923   */\n      swap1\n      pop\n        /* \"#utility.yul\":2933:3004   */\n      tag_193\n        /* \"#utility.yul\":3001:3002   */\n      0x00\n        /* \"#utility.yul\":2990:2999   */\n      dup4\n        /* \"#utility.yul\":2986:3003   */\n      add\n        /* \"#utility.yul\":2977:2983   */\n      dup5\n        /* \"#utility.yul\":2933:3004   */\n      tag_122\n      jump\t// in\n    tag_193:\n        /* \"#utility.yul\":2789:3011   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3017:3139   */\n    tag_123:\n        /* \"#utility.yul\":3090:3114   */\n      tag_195\n        /* \"#utility.yul\":3108:3113   */\n      dup2\n        /* \"#utility.yul\":3090:3114   */\n      tag_121\n      jump\t// in\n    tag_195:\n        /* \"#utility.yul\":3083:3088   */\n      dup2\n        /* \"#utility.yul\":3080:3115   */\n      eq\n        /* \"#utility.yul\":3070:3133   */\n      tag_196\n      jumpi\n        /* \"#utility.yul\":3129:3130   */\n      0x00\n        /* \"#utility.yul\":3126:3127   */\n      dup1\n        /* \"#utility.yul\":3119:3131   */\n      revert\n        /* \"#utility.yul\":3070:3133   */\n    tag_196:\n        /* \"#utility.yul\":3017:3139   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3145:3284   */\n    tag_124:\n        /* \"#utility.yul\":3191:3196   */\n      0x00\n        /* \"#utility.yul\":3229:3235   */\n      dup2\n        /* \"#utility.yul\":3216:3236   */\n      calldataload\n        /* \"#utility.yul\":3207:3236   */\n      swap1\n      pop\n        /* \"#utility.yul\":3245:3278   */\n      tag_198\n        /* \"#utility.yul\":3272:3277   */\n      dup2\n        /* \"#utility.yul\":3245:3278   */\n      tag_123\n      jump\t// in\n    tag_198:\n        /* \"#utility.yul\":3145:3284   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3290:3407   */\n    tag_125:\n        /* \"#utility.yul\":3399:3400   */\n      0x00\n        /* \"#utility.yul\":3396:3397   */\n      dup1\n        /* \"#utility.yul\":3389:3401   */\n      revert\n        /* \"#utility.yul\":3413:3515   */\n    tag_126:\n        /* \"#utility.yul\":3454:3460   */\n      0x00\n        /* \"#utility.yul\":3505:3507   */\n      0x1f\n        /* \"#utility.yul\":3501:3508   */\n      not\n        /* \"#utility.yul\":3496:3498   */\n      0x1f\n        /* \"#utility.yul\":3489:3494   */\n      dup4\n        /* \"#utility.yul\":3485:3499   */\n      add\n        /* \"#utility.yul\":3481:3509   */\n      and\n        /* \"#utility.yul\":3471:3509   */\n      swap1\n      pop\n        /* \"#utility.yul\":3413:3515   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3521:3701   */\n    tag_127:\n        /* \"#utility.yul\":3569:3646   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":3566:3567   */\n      0x00\n        /* \"#utility.yul\":3559:3647   */\n      mstore\n        /* \"#utility.yul\":3666:3670   */\n      0x41\n        /* \"#utility.yul\":3663:3664   */\n      0x04\n        /* \"#utility.yul\":3656:3671   */\n      mstore\n        /* \"#utility.yul\":3690:3694   */\n      0x24\n        /* \"#utility.yul\":3687:3688   */\n      0x00\n        /* \"#utility.yul\":3680:3695   */\n      revert\n        /* \"#utility.yul\":3707:3988   */\n    tag_128:\n        /* \"#utility.yul\":3790:3817   */\n      tag_203\n        /* \"#utility.yul\":3812:3816   */\n      dup3\n        /* \"#utility.yul\":3790:3817   */\n      tag_126\n      jump\t// in\n    tag_203:\n        /* \"#utility.yul\":3782:3788   */\n      dup2\n        /* \"#utility.yul\":3778:3818   */\n      add\n        /* \"#utility.yul\":3920:3926   */\n      dup2\n        /* \"#utility.yul\":3908:3918   */\n      dup2\n        /* \"#utility.yul\":3905:3927   */\n      lt\n        /* \"#utility.yul\":3884:3902   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3872:3882   */\n      dup3\n        /* \"#utility.yul\":3869:3903   */\n      gt\n        /* \"#utility.yul\":3866:3928   */\n      or\n        /* \"#utility.yul\":3863:3951   */\n      iszero\n      tag_204\n      jumpi\n        /* \"#utility.yul\":3931:3949   */\n      tag_205\n      tag_127\n      jump\t// in\n    tag_205:\n        /* \"#utility.yul\":3863:3951   */\n    tag_204:\n        /* \"#utility.yul\":3971:3981   */\n      dup1\n        /* \"#utility.yul\":3967:3969   */\n      0x40\n        /* \"#utility.yul\":3960:3982   */\n      mstore\n        /* \"#utility.yul\":3750:3988   */\n      pop\n        /* \"#utility.yul\":3707:3988   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3994:4123   */\n    tag_129:\n        /* \"#utility.yul\":4028:4034   */\n      0x00\n        /* \"#utility.yul\":4055:4075   */\n      tag_207\n      tag_107\n      jump\t// in\n    tag_207:\n        /* \"#utility.yul\":4045:4075   */\n      swap1\n      pop\n        /* \"#utility.yul\":4084:4117   */\n      tag_208\n        /* \"#utility.yul\":4112:4116   */\n      dup3\n        /* \"#utility.yul\":4104:4110   */\n      dup3\n        /* \"#utility.yul\":4084:4117   */\n      tag_128\n      jump\t// in\n    tag_208:\n        /* \"#utility.yul\":3994:4123   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4129:4440   */\n    tag_130:\n        /* \"#utility.yul\":4206:4210   */\n      0x00\n        /* \"#utility.yul\":4296:4314   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4288:4294   */\n      dup3\n        /* \"#utility.yul\":4285:4315   */\n      gt\n        /* \"#utility.yul\":4282:4338   */\n      iszero\n      tag_210\n      jumpi\n        /* \"#utility.yul\":4318:4336   */\n      tag_211\n      tag_127\n      jump\t// in\n    tag_211:\n        /* \"#utility.yul\":4282:4338   */\n    tag_210:\n        /* \"#utility.yul\":4368:4372   */\n      0x20\n        /* \"#utility.yul\":4360:4366   */\n      dup3\n        /* \"#utility.yul\":4356:4373   */\n      mul\n        /* \"#utility.yul\":4348:4373   */\n      swap1\n      pop\n        /* \"#utility.yul\":4428:4432   */\n      0x20\n        /* \"#utility.yul\":4422:4426   */\n      dup2\n        /* \"#utility.yul\":4418:4433   */\n      add\n        /* \"#utility.yul\":4410:4433   */\n      swap1\n      pop\n        /* \"#utility.yul\":4129:4440   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4446:4563   */\n    tag_131:\n        /* \"#utility.yul\":4555:4556   */\n      0x00\n        /* \"#utility.yul\":4552:4553   */\n      dup1\n        /* \"#utility.yul\":4545:4557   */\n      revert\n        /* \"#utility.yul\":4569:4646   */\n    tag_132:\n        /* \"#utility.yul\":4606:4613   */\n      0x00\n        /* \"#utility.yul\":4635:4640   */\n      dup2\n        /* \"#utility.yul\":4624:4640   */\n      swap1\n      pop\n        /* \"#utility.yul\":4569:4646   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4652:4774   */\n    tag_133:\n        /* \"#utility.yul\":4725:4749   */\n      tag_215\n        /* \"#utility.yul\":4743:4748   */\n      dup2\n        /* \"#utility.yul\":4725:4749   */\n      tag_132\n      jump\t// in\n    tag_215:\n        /* \"#utility.yul\":4718:4723   */\n      dup2\n        /* \"#utility.yul\":4715:4750   */\n      eq\n        /* \"#utility.yul\":4705:4768   */\n      tag_216\n      jumpi\n        /* \"#utility.yul\":4764:4765   */\n      0x00\n        /* \"#utility.yul\":4761:4762   */\n      dup1\n        /* \"#utility.yul\":4754:4766   */\n      revert\n        /* \"#utility.yul\":4705:4768   */\n    tag_216:\n        /* \"#utility.yul\":4652:4774   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4780:4919   */\n    tag_134:\n        /* \"#utility.yul\":4826:4831   */\n      0x00\n        /* \"#utility.yul\":4864:4870   */\n      dup2\n        /* \"#utility.yul\":4851:4871   */\n      calldataload\n        /* \"#utility.yul\":4842:4871   */\n      swap1\n      pop\n        /* \"#utility.yul\":4880:4913   */\n      tag_218\n        /* \"#utility.yul\":4907:4912   */\n      dup2\n        /* \"#utility.yul\":4880:4913   */\n      tag_133\n      jump\t// in\n    tag_218:\n        /* \"#utility.yul\":4780:4919   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4942:5652   */\n    tag_135:\n        /* \"#utility.yul\":5038:5043   */\n      0x00\n        /* \"#utility.yul\":5063:5144   */\n      tag_220\n        /* \"#utility.yul\":5079:5143   */\n      tag_221\n        /* \"#utility.yul\":5136:5142   */\n      dup5\n        /* \"#utility.yul\":5079:5143   */\n      tag_130\n      jump\t// in\n    tag_221:\n        /* \"#utility.yul\":5063:5144   */\n      tag_129\n      jump\t// in\n    tag_220:\n        /* \"#utility.yul\":5054:5144   */\n      swap1\n      pop\n        /* \"#utility.yul\":5164:5169   */\n      dup1\n        /* \"#utility.yul\":5193:5199   */\n      dup4\n        /* \"#utility.yul\":5186:5191   */\n      dup3\n        /* \"#utility.yul\":5179:5200   */\n      mstore\n        /* \"#utility.yul\":5227:5231   */\n      0x20\n        /* \"#utility.yul\":5220:5225   */\n      dup3\n        /* \"#utility.yul\":5216:5232   */\n      add\n        /* \"#utility.yul\":5209:5232   */\n      swap1\n      pop\n        /* \"#utility.yul\":5280:5284   */\n      0x20\n        /* \"#utility.yul\":5272:5278   */\n      dup5\n        /* \"#utility.yul\":5268:5285   */\n      mul\n        /* \"#utility.yul\":5260:5266   */\n      dup4\n        /* \"#utility.yul\":5256:5286   */\n      add\n        /* \"#utility.yul\":5309:5312   */\n      dup6\n        /* \"#utility.yul\":5301:5307   */\n      dup2\n        /* \"#utility.yul\":5298:5313   */\n      gt\n        /* \"#utility.yul\":5295:5417   */\n      iszero\n      tag_222\n      jumpi\n        /* \"#utility.yul\":5328:5407   */\n      tag_223\n      tag_131\n      jump\t// in\n    tag_223:\n        /* \"#utility.yul\":5295:5417   */\n    tag_222:\n        /* \"#utility.yul\":5443:5449   */\n      dup4\n        /* \"#utility.yul\":5426:5646   */\n    tag_224:\n        /* \"#utility.yul\":5460:5466   */\n      dup2\n        /* \"#utility.yul\":5455:5458   */\n      dup2\n        /* \"#utility.yul\":5452:5467   */\n      lt\n        /* \"#utility.yul\":5426:5646   */\n      iszero\n      tag_226\n      jumpi\n        /* \"#utility.yul\":5535:5538   */\n      dup1\n        /* \"#utility.yul\":5564:5601   */\n      tag_227\n        /* \"#utility.yul\":5597:5600   */\n      dup9\n        /* \"#utility.yul\":5585:5595   */\n      dup3\n        /* \"#utility.yul\":5564:5601   */\n      tag_134\n      jump\t// in\n    tag_227:\n        /* \"#utility.yul\":5559:5562   */\n      dup5\n        /* \"#utility.yul\":5552:5602   */\n      mstore\n        /* \"#utility.yul\":5631:5635   */\n      0x20\n        /* \"#utility.yul\":5626:5629   */\n      dup5\n        /* \"#utility.yul\":5622:5636   */\n      add\n        /* \"#utility.yul\":5615:5636   */\n      swap4\n      pop\n        /* \"#utility.yul\":5502:5646   */\n      pop\n        /* \"#utility.yul\":5486:5490   */\n      0x20\n        /* \"#utility.yul\":5481:5484   */\n      dup2\n        /* \"#utility.yul\":5477:5491   */\n      add\n        /* \"#utility.yul\":5470:5491   */\n      swap1\n      pop\n        /* \"#utility.yul\":5426:5646   */\n      jump(tag_224)\n    tag_226:\n        /* \"#utility.yul\":5430:5451   */\n      pop\n        /* \"#utility.yul\":5044:5652   */\n      pop\n      pop\n        /* \"#utility.yul\":4942:5652   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5675:6045   */\n    tag_136:\n        /* \"#utility.yul\":5746:5751   */\n      0x00\n        /* \"#utility.yul\":5795:5798   */\n      dup3\n        /* \"#utility.yul\":5788:5792   */\n      0x1f\n        /* \"#utility.yul\":5780:5786   */\n      dup4\n        /* \"#utility.yul\":5776:5793   */\n      add\n        /* \"#utility.yul\":5772:5799   */\n      slt\n        /* \"#utility.yul\":5762:5884   */\n      tag_229\n      jumpi\n        /* \"#utility.yul\":5803:5882   */\n      tag_230\n      tag_125\n      jump\t// in\n    tag_230:\n        /* \"#utility.yul\":5762:5884   */\n    tag_229:\n        /* \"#utility.yul\":5920:5926   */\n      dup2\n        /* \"#utility.yul\":5907:5927   */\n      calldataload\n        /* \"#utility.yul\":5945:6039   */\n      tag_231\n        /* \"#utility.yul\":6035:6038   */\n      dup5\n        /* \"#utility.yul\":6027:6033   */\n      dup3\n        /* \"#utility.yul\":6020:6024   */\n      0x20\n        /* \"#utility.yul\":6012:6018   */\n      dup7\n        /* \"#utility.yul\":6008:6025   */\n      add\n        /* \"#utility.yul\":5945:6039   */\n      tag_135\n      jump\t// in\n    tag_231:\n        /* \"#utility.yul\":5936:6039   */\n      swap2\n      pop\n        /* \"#utility.yul\":5752:6045   */\n      pop\n        /* \"#utility.yul\":5675:6045   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6051:6168   */\n    tag_137:\n        /* \"#utility.yul\":6160:6161   */\n      0x00\n        /* \"#utility.yul\":6157:6158   */\n      dup1\n        /* \"#utility.yul\":6150:6162   */\n      revert\n        /* \"#utility.yul\":6174:6481   */\n    tag_138:\n        /* \"#utility.yul\":6235:6239   */\n      0x00\n        /* \"#utility.yul\":6325:6343   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":6317:6323   */\n      dup3\n        /* \"#utility.yul\":6314:6344   */\n      gt\n        /* \"#utility.yul\":6311:6367   */\n      iszero\n      tag_234\n      jumpi\n        /* \"#utility.yul\":6347:6365   */\n      tag_235\n      tag_127\n      jump\t// in\n    tag_235:\n        /* \"#utility.yul\":6311:6367   */\n    tag_234:\n        /* \"#utility.yul\":6385:6414   */\n      tag_236\n        /* \"#utility.yul\":6407:6413   */\n      dup3\n        /* \"#utility.yul\":6385:6414   */\n      tag_126\n      jump\t// in\n    tag_236:\n        /* \"#utility.yul\":6377:6414   */\n      swap1\n      pop\n        /* \"#utility.yul\":6469:6473   */\n      0x20\n        /* \"#utility.yul\":6463:6467   */\n      dup2\n        /* \"#utility.yul\":6459:6474   */\n      add\n        /* \"#utility.yul\":6451:6474   */\n      swap1\n      pop\n        /* \"#utility.yul\":6174:6481   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6487:6635   */\n    tag_139:\n        /* \"#utility.yul\":6585:6591   */\n      dup3\n        /* \"#utility.yul\":6580:6583   */\n      dup2\n        /* \"#utility.yul\":6575:6578   */\n      dup4\n        /* \"#utility.yul\":6562:6592   */\n      calldatacopy\n        /* \"#utility.yul\":6626:6627   */\n      0x00\n        /* \"#utility.yul\":6617:6623   */\n      dup4\n        /* \"#utility.yul\":6612:6615   */\n      dup4\n        /* \"#utility.yul\":6608:6624   */\n      add\n        /* \"#utility.yul\":6601:6628   */\n      mstore\n        /* \"#utility.yul\":6487:6635   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6641:7064   */\n    tag_140:\n        /* \"#utility.yul\":6718:6723   */\n      0x00\n        /* \"#utility.yul\":6743:6808   */\n      tag_239\n        /* \"#utility.yul\":6759:6807   */\n      tag_240\n        /* \"#utility.yul\":6800:6806   */\n      dup5\n        /* \"#utility.yul\":6759:6807   */\n      tag_138\n      jump\t// in\n    tag_240:\n        /* \"#utility.yul\":6743:6808   */\n      tag_129\n      jump\t// in\n    tag_239:\n        /* \"#utility.yul\":6734:6808   */\n      swap1\n      pop\n        /* \"#utility.yul\":6831:6837   */\n      dup3\n        /* \"#utility.yul\":6824:6829   */\n      dup2\n        /* \"#utility.yul\":6817:6838   */\n      mstore\n        /* \"#utility.yul\":6869:6873   */\n      0x20\n        /* \"#utility.yul\":6862:6867   */\n      dup2\n        /* \"#utility.yul\":6858:6874   */\n      add\n        /* \"#utility.yul\":6907:6910   */\n      dup5\n        /* \"#utility.yul\":6898:6904   */\n      dup5\n        /* \"#utility.yul\":6893:6896   */\n      dup5\n        /* \"#utility.yul\":6889:6905   */\n      add\n        /* \"#utility.yul\":6886:6911   */\n      gt\n        /* \"#utility.yul\":6883:6995   */\n      iszero\n      tag_241\n      jumpi\n        /* \"#utility.yul\":6914:6993   */\n      tag_242\n      tag_137\n      jump\t// in\n    tag_242:\n        /* \"#utility.yul\":6883:6995   */\n    tag_241:\n        /* \"#utility.yul\":7004:7058   */\n      tag_243\n        /* \"#utility.yul\":7051:7057   */\n      dup5\n        /* \"#utility.yul\":7046:7049   */\n      dup3\n        /* \"#utility.yul\":7041:7044   */\n      dup6\n        /* \"#utility.yul\":7004:7058   */\n      tag_139\n      jump\t// in\n    tag_243:\n        /* \"#utility.yul\":6724:7064   */\n      pop\n        /* \"#utility.yul\":6641:7064   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7083:7421   */\n    tag_141:\n        /* \"#utility.yul\":7138:7143   */\n      0x00\n        /* \"#utility.yul\":7187:7190   */\n      dup3\n        /* \"#utility.yul\":7180:7184   */\n      0x1f\n        /* \"#utility.yul\":7172:7178   */\n      dup4\n        /* \"#utility.yul\":7168:7185   */\n      add\n        /* \"#utility.yul\":7164:7191   */\n      slt\n        /* \"#utility.yul\":7154:7276   */\n      tag_245\n      jumpi\n        /* \"#utility.yul\":7195:7274   */\n      tag_246\n      tag_125\n      jump\t// in\n    tag_246:\n        /* \"#utility.yul\":7154:7276   */\n    tag_245:\n        /* \"#utility.yul\":7312:7318   */\n      dup2\n        /* \"#utility.yul\":7299:7319   */\n      calldataload\n        /* \"#utility.yul\":7337:7415   */\n      tag_247\n        /* \"#utility.yul\":7411:7414   */\n      dup5\n        /* \"#utility.yul\":7403:7409   */\n      dup3\n        /* \"#utility.yul\":7396:7400   */\n      0x20\n        /* \"#utility.yul\":7388:7394   */\n      dup7\n        /* \"#utility.yul\":7384:7401   */\n      add\n        /* \"#utility.yul\":7337:7415   */\n      tag_140\n      jump\t// in\n    tag_247:\n        /* \"#utility.yul\":7328:7415   */\n      swap2\n      pop\n        /* \"#utility.yul\":7144:7421   */\n      pop\n        /* \"#utility.yul\":7083:7421   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7427:8936   */\n    tag_32:\n        /* \"#utility.yul\":7581:7587   */\n      0x00\n        /* \"#utility.yul\":7589:7595   */\n      dup1\n        /* \"#utility.yul\":7597:7603   */\n      0x00\n        /* \"#utility.yul\":7605:7611   */\n      dup1\n        /* \"#utility.yul\":7613:7619   */\n      0x00\n        /* \"#utility.yul\":7662:7665   */\n      0xa0\n        /* \"#utility.yul\":7650:7659   */\n      dup7\n        /* \"#utility.yul\":7641:7648   */\n      dup9\n        /* \"#utility.yul\":7637:7660   */\n      sub\n        /* \"#utility.yul\":7633:7666   */\n      slt\n        /* \"#utility.yul\":7630:7750   */\n      iszero\n      tag_249\n      jumpi\n        /* \"#utility.yul\":7669:7748   */\n      tag_250\n      tag_108\n      jump\t// in\n    tag_250:\n        /* \"#utility.yul\":7630:7750   */\n    tag_249:\n        /* \"#utility.yul\":7789:7790   */\n      0x00\n        /* \"#utility.yul\":7814:7867   */\n      tag_251\n        /* \"#utility.yul\":7859:7866   */\n      dup9\n        /* \"#utility.yul\":7850:7856   */\n      dup3\n        /* \"#utility.yul\":7839:7848   */\n      dup10\n        /* \"#utility.yul\":7835:7857   */\n      add\n        /* \"#utility.yul\":7814:7867   */\n      tag_124\n      jump\t// in\n    tag_251:\n        /* \"#utility.yul\":7804:7867   */\n      swap6\n      pop\n        /* \"#utility.yul\":7760:7877   */\n      pop\n        /* \"#utility.yul\":7916:7918   */\n      0x20\n        /* \"#utility.yul\":7942:7995   */\n      tag_252\n        /* \"#utility.yul\":7987:7994   */\n      dup9\n        /* \"#utility.yul\":7978:7984   */\n      dup3\n        /* \"#utility.yul\":7967:7976   */\n      dup10\n        /* \"#utility.yul\":7963:7985   */\n      add\n        /* \"#utility.yul\":7942:7995   */\n      tag_124\n      jump\t// in\n    tag_252:\n        /* \"#utility.yul\":7932:7995   */\n      swap5\n      pop\n        /* \"#utility.yul\":7887:8005   */\n      pop\n        /* \"#utility.yul\":8072:8074   */\n      0x40\n        /* \"#utility.yul\":8061:8070   */\n      dup7\n        /* \"#utility.yul\":8057:8075   */\n      add\n        /* \"#utility.yul\":8044:8076   */\n      calldataload\n        /* \"#utility.yul\":8103:8121   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":8095:8101   */\n      dup2\n        /* \"#utility.yul\":8092:8122   */\n      gt\n        /* \"#utility.yul\":8089:8206   */\n      iszero\n      tag_253\n      jumpi\n        /* \"#utility.yul\":8125:8204   */\n      tag_254\n      tag_109\n      jump\t// in\n    tag_254:\n        /* \"#utility.yul\":8089:8206   */\n    tag_253:\n        /* \"#utility.yul\":8230:8308   */\n      tag_255\n        /* \"#utility.yul\":8300:8307   */\n      dup9\n        /* \"#utility.yul\":8291:8297   */\n      dup3\n        /* \"#utility.yul\":8280:8289   */\n      dup10\n        /* \"#utility.yul\":8276:8298   */\n      add\n        /* \"#utility.yul\":8230:8308   */\n      tag_136\n      jump\t// in\n    tag_255:\n        /* \"#utility.yul\":8220:8308   */\n      swap4\n      pop\n        /* \"#utility.yul\":8015:8318   */\n      pop\n        /* \"#utility.yul\":8385:8387   */\n      0x60\n        /* \"#utility.yul\":8374:8383   */\n      dup7\n        /* \"#utility.yul\":8370:8388   */\n      add\n        /* \"#utility.yul\":8357:8389   */\n      calldataload\n        /* \"#utility.yul\":8416:8434   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":8408:8414   */\n      dup2\n        /* \"#utility.yul\":8405:8435   */\n      gt\n        /* \"#utility.yul\":8402:8519   */\n      iszero\n      tag_256\n      jumpi\n        /* \"#utility.yul\":8438:8517   */\n      tag_257\n      tag_109\n      jump\t// in\n    tag_257:\n        /* \"#utility.yul\":8402:8519   */\n    tag_256:\n        /* \"#utility.yul\":8543:8621   */\n      tag_258\n        /* \"#utility.yul\":8613:8620   */\n      dup9\n        /* \"#utility.yul\":8604:8610   */\n      dup3\n        /* \"#utility.yul\":8593:8602   */\n      dup10\n        /* \"#utility.yul\":8589:8611   */\n      add\n        /* \"#utility.yul\":8543:8621   */\n      tag_136\n      jump\t// in\n    tag_258:\n        /* \"#utility.yul\":8533:8621   */\n      swap3\n      pop\n        /* \"#utility.yul\":8328:8631   */\n      pop\n        /* \"#utility.yul\":8698:8701   */\n      0x80\n        /* \"#utility.yul\":8687:8696   */\n      dup7\n        /* \"#utility.yul\":8683:8702   */\n      add\n        /* \"#utility.yul\":8670:8703   */\n      calldataload\n        /* \"#utility.yul\":8730:8748   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":8722:8728   */\n      dup2\n        /* \"#utility.yul\":8719:8749   */\n      gt\n        /* \"#utility.yul\":8716:8833   */\n      iszero\n      tag_259\n      jumpi\n        /* \"#utility.yul\":8752:8831   */\n      tag_260\n      tag_109\n      jump\t// in\n    tag_260:\n        /* \"#utility.yul\":8716:8833   */\n    tag_259:\n        /* \"#utility.yul\":8857:8919   */\n      tag_261\n        /* \"#utility.yul\":8911:8918   */\n      dup9\n        /* \"#utility.yul\":8902:8908   */\n      dup3\n        /* \"#utility.yul\":8891:8900   */\n      dup10\n        /* \"#utility.yul\":8887:8909   */\n      add\n        /* \"#utility.yul\":8857:8919   */\n      tag_141\n      jump\t// in\n    tag_261:\n        /* \"#utility.yul\":8847:8919   */\n      swap2\n      pop\n        /* \"#utility.yul\":8641:8929   */\n      pop\n        /* \"#utility.yul\":7427:8936   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8942:9057   */\n    tag_142:\n        /* \"#utility.yul\":9027:9050   */\n      tag_263\n        /* \"#utility.yul\":9044:9049   */\n      dup2\n        /* \"#utility.yul\":9027:9050   */\n      tag_110\n      jump\t// in\n    tag_263:\n        /* \"#utility.yul\":9022:9025   */\n      dup3\n        /* \"#utility.yul\":9015:9051   */\n      mstore\n        /* \"#utility.yul\":8942:9057   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9063:9281   */\n    tag_35:\n        /* \"#utility.yul\":9154:9158   */\n      0x00\n        /* \"#utility.yul\":9192:9194   */\n      0x20\n        /* \"#utility.yul\":9181:9190   */\n      dup3\n        /* \"#utility.yul\":9177:9195   */\n      add\n        /* \"#utility.yul\":9169:9195   */\n      swap1\n      pop\n        /* \"#utility.yul\":9205:9274   */\n      tag_265\n        /* \"#utility.yul\":9271:9272   */\n      0x00\n        /* \"#utility.yul\":9260:9269   */\n      dup4\n        /* \"#utility.yul\":9256:9273   */\n      add\n        /* \"#utility.yul\":9247:9253   */\n      dup5\n        /* \"#utility.yul\":9205:9274   */\n      tag_142\n      jump\t// in\n    tag_265:\n        /* \"#utility.yul\":9063:9281   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9287:9616   */\n    tag_38:\n        /* \"#utility.yul\":9346:9352   */\n      0x00\n        /* \"#utility.yul\":9395:9397   */\n      0x20\n        /* \"#utility.yul\":9383:9392   */\n      dup3\n        /* \"#utility.yul\":9374:9381   */\n      dup5\n        /* \"#utility.yul\":9370:9393   */\n      sub\n        /* \"#utility.yul\":9366:9398   */\n      slt\n        /* \"#utility.yul\":9363:9482   */\n      iszero\n      tag_267\n      jumpi\n        /* \"#utility.yul\":9401:9480   */\n      tag_268\n      tag_108\n      jump\t// in\n    tag_268:\n        /* \"#utility.yul\":9363:9482   */\n    tag_267:\n        /* \"#utility.yul\":9521:9522   */\n      0x00\n        /* \"#utility.yul\":9546:9599   */\n      tag_269\n        /* \"#utility.yul\":9591:9598   */\n      dup5\n        /* \"#utility.yul\":9582:9588   */\n      dup3\n        /* \"#utility.yul\":9571:9580   */\n      dup6\n        /* \"#utility.yul\":9567:9589   */\n      add\n        /* \"#utility.yul\":9546:9599   */\n      tag_134\n      jump\t// in\n    tag_269:\n        /* \"#utility.yul\":9536:9599   */\n      swap2\n      pop\n        /* \"#utility.yul\":9492:9609   */\n      pop\n        /* \"#utility.yul\":9287:9616   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9622:9740   */\n    tag_143:\n        /* \"#utility.yul\":9709:9733   */\n      tag_271\n        /* \"#utility.yul\":9727:9732   */\n      dup2\n        /* \"#utility.yul\":9709:9733   */\n      tag_132\n      jump\t// in\n    tag_271:\n        /* \"#utility.yul\":9704:9707   */\n      dup3\n        /* \"#utility.yul\":9697:9734   */\n      mstore\n        /* \"#utility.yul\":9622:9740   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9746:9968   */\n    tag_41:\n        /* \"#utility.yul\":9839:9843   */\n      0x00\n        /* \"#utility.yul\":9877:9879   */\n      0x20\n        /* \"#utility.yul\":9866:9875   */\n      dup3\n        /* \"#utility.yul\":9862:9880   */\n      add\n        /* \"#utility.yul\":9854:9880   */\n      swap1\n      pop\n        /* \"#utility.yul\":9890:9961   */\n      tag_273\n        /* \"#utility.yul\":9958:9959   */\n      0x00\n        /* \"#utility.yul\":9947:9956   */\n      dup4\n        /* \"#utility.yul\":9943:9960   */\n      add\n        /* \"#utility.yul\":9934:9940   */\n      dup5\n        /* \"#utility.yul\":9890:9961   */\n      tag_143\n      jump\t// in\n    tag_273:\n        /* \"#utility.yul\":9746:9968   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9974:10116   */\n    tag_144:\n        /* \"#utility.yul\":10040:10049   */\n      0x00\n        /* \"#utility.yul\":10073:10110   */\n      tag_275\n        /* \"#utility.yul\":10104:10109   */\n      dup3\n        /* \"#utility.yul\":10073:10110   */\n      tag_118\n      jump\t// in\n    tag_275:\n        /* \"#utility.yul\":10060:10110   */\n      swap1\n      pop\n        /* \"#utility.yul\":9974:10116   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10122:10285   */\n    tag_145:\n        /* \"#utility.yul\":10225:10278   */\n      tag_277\n        /* \"#utility.yul\":10272:10277   */\n      dup2\n        /* \"#utility.yul\":10225:10278   */\n      tag_144\n      jump\t// in\n    tag_277:\n        /* \"#utility.yul\":10220:10223   */\n      dup3\n        /* \"#utility.yul\":10213:10279   */\n      mstore\n        /* \"#utility.yul\":10122:10285   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10291:10545   */\n    tag_45:\n        /* \"#utility.yul\":10400:10404   */\n      0x00\n        /* \"#utility.yul\":10438:10440   */\n      0x20\n        /* \"#utility.yul\":10427:10436   */\n      dup3\n        /* \"#utility.yul\":10423:10441   */\n      add\n        /* \"#utility.yul\":10415:10441   */\n      swap1\n      pop\n        /* \"#utility.yul\":10451:10538   */\n      tag_279\n        /* \"#utility.yul\":10535:10536   */\n      0x00\n        /* \"#utility.yul\":10524:10533   */\n      dup4\n        /* \"#utility.yul\":10520:10537   */\n      add\n        /* \"#utility.yul\":10511:10517   */\n      dup5\n        /* \"#utility.yul\":10451:10538   */\n      tag_145\n      jump\t// in\n    tag_279:\n        /* \"#utility.yul\":10291:10545   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10551:11640   */\n    tag_48:\n        /* \"#utility.yul\":10655:10661   */\n      0x00\n        /* \"#utility.yul\":10663:10669   */\n      dup1\n        /* \"#utility.yul\":10671:10677   */\n      0x00\n        /* \"#utility.yul\":10679:10685   */\n      dup1\n        /* \"#utility.yul\":10687:10693   */\n      0x00\n        /* \"#utility.yul\":10736:10739   */\n      0xa0\n        /* \"#utility.yul\":10724:10733   */\n      dup7\n        /* \"#utility.yul\":10715:10722   */\n      dup9\n        /* \"#utility.yul\":10711:10734   */\n      sub\n        /* \"#utility.yul\":10707:10740   */\n      slt\n        /* \"#utility.yul\":10704:10824   */\n      iszero\n      tag_281\n      jumpi\n        /* \"#utility.yul\":10743:10822   */\n      tag_282\n      tag_108\n      jump\t// in\n    tag_282:\n        /* \"#utility.yul\":10704:10824   */\n    tag_281:\n        /* \"#utility.yul\":10863:10864   */\n      0x00\n        /* \"#utility.yul\":10888:10941   */\n      tag_283\n        /* \"#utility.yul\":10933:10940   */\n      dup9\n        /* \"#utility.yul\":10924:10930   */\n      dup3\n        /* \"#utility.yul\":10913:10922   */\n      dup10\n        /* \"#utility.yul\":10909:10931   */\n      add\n        /* \"#utility.yul\":10888:10941   */\n      tag_124\n      jump\t// in\n    tag_283:\n        /* \"#utility.yul\":10878:10941   */\n      swap6\n      pop\n        /* \"#utility.yul\":10834:10951   */\n      pop\n        /* \"#utility.yul\":10990:10992   */\n      0x20\n        /* \"#utility.yul\":11016:11069   */\n      tag_284\n        /* \"#utility.yul\":11061:11068   */\n      dup9\n        /* \"#utility.yul\":11052:11058   */\n      dup3\n        /* \"#utility.yul\":11041:11050   */\n      dup10\n        /* \"#utility.yul\":11037:11059   */\n      add\n        /* \"#utility.yul\":11016:11069   */\n      tag_124\n      jump\t// in\n    tag_284:\n        /* \"#utility.yul\":11006:11069   */\n      swap5\n      pop\n        /* \"#utility.yul\":10961:11079   */\n      pop\n        /* \"#utility.yul\":11118:11120   */\n      0x40\n        /* \"#utility.yul\":11144:11197   */\n      tag_285\n        /* \"#utility.yul\":11189:11196   */\n      dup9\n        /* \"#utility.yul\":11180:11186   */\n      dup3\n        /* \"#utility.yul\":11169:11178   */\n      dup10\n        /* \"#utility.yul\":11165:11187   */\n      add\n        /* \"#utility.yul\":11144:11197   */\n      tag_134\n      jump\t// in\n    tag_285:\n        /* \"#utility.yul\":11134:11197   */\n      swap4\n      pop\n        /* \"#utility.yul\":11089:11207   */\n      pop\n        /* \"#utility.yul\":11246:11248   */\n      0x60\n        /* \"#utility.yul\":11272:11325   */\n      tag_286\n        /* \"#utility.yul\":11317:11324   */\n      dup9\n        /* \"#utility.yul\":11308:11314   */\n      dup3\n        /* \"#utility.yul\":11297:11306   */\n      dup10\n        /* \"#utility.yul\":11293:11315   */\n      add\n        /* \"#utility.yul\":11272:11325   */\n      tag_134\n      jump\t// in\n    tag_286:\n        /* \"#utility.yul\":11262:11325   */\n      swap3\n      pop\n        /* \"#utility.yul\":11217:11335   */\n      pop\n        /* \"#utility.yul\":11402:11405   */\n      0x80\n        /* \"#utility.yul\":11391:11400   */\n      dup7\n        /* \"#utility.yul\":11387:11406   */\n      add\n        /* \"#utility.yul\":11374:11407   */\n      calldataload\n        /* \"#utility.yul\":11434:11452   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":11426:11432   */\n      dup2\n        /* \"#utility.yul\":11423:11453   */\n      gt\n        /* \"#utility.yul\":11420:11537   */\n      iszero\n      tag_287\n      jumpi\n        /* \"#utility.yul\":11456:11535   */\n      tag_288\n      tag_109\n      jump\t// in\n    tag_288:\n        /* \"#utility.yul\":11420:11537   */\n    tag_287:\n        /* \"#utility.yul\":11561:11623   */\n      tag_289\n        /* \"#utility.yul\":11615:11622   */\n      dup9\n        /* \"#utility.yul\":11606:11612   */\n      dup3\n        /* \"#utility.yul\":11595:11604   */\n      dup10\n        /* \"#utility.yul\":11591:11613   */\n      add\n        /* \"#utility.yul\":11561:11623   */\n      tag_141\n      jump\t// in\n    tag_289:\n        /* \"#utility.yul\":11551:11623   */\n      swap2\n      pop\n        /* \"#utility.yul\":11345:11633   */\n      pop\n        /* \"#utility.yul\":10551:11640   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11646:11975   */\n    tag_53:\n        /* \"#utility.yul\":11705:11711   */\n      0x00\n        /* \"#utility.yul\":11754:11756   */\n      0x20\n        /* \"#utility.yul\":11742:11751   */\n      dup3\n        /* \"#utility.yul\":11733:11740   */\n      dup5\n        /* \"#utility.yul\":11729:11752   */\n      sub\n        /* \"#utility.yul\":11725:11757   */\n      slt\n        /* \"#utility.yul\":11722:11841   */\n      iszero\n      tag_291\n      jumpi\n        /* \"#utility.yul\":11760:11839   */\n      tag_292\n      tag_108\n      jump\t// in\n    tag_292:\n        /* \"#utility.yul\":11722:11841   */\n    tag_291:\n        /* \"#utility.yul\":11880:11881   */\n      0x00\n        /* \"#utility.yul\":11905:11958   */\n      tag_293\n        /* \"#utility.yul\":11950:11957   */\n      dup5\n        /* \"#utility.yul\":11941:11947   */\n      dup3\n        /* \"#utility.yul\":11930:11939   */\n      dup6\n        /* \"#utility.yul\":11926:11948   */\n      add\n        /* \"#utility.yul\":11905:11958   */\n      tag_124\n      jump\t// in\n    tag_293:\n        /* \"#utility.yul\":11895:11958   */\n      swap2\n      pop\n        /* \"#utility.yul\":11851:11968   */\n      pop\n        /* \"#utility.yul\":11646:11975   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11981:12455   */\n    tag_57:\n        /* \"#utility.yul\":12049:12055   */\n      0x00\n        /* \"#utility.yul\":12057:12063   */\n      dup1\n        /* \"#utility.yul\":12106:12108   */\n      0x40\n        /* \"#utility.yul\":12094:12103   */\n      dup4\n        /* \"#utility.yul\":12085:12092   */\n      dup6\n        /* \"#utility.yul\":12081:12104   */\n      sub\n        /* \"#utility.yul\":12077:12109   */\n      slt\n        /* \"#utility.yul\":12074:12193   */\n      iszero\n      tag_295\n      jumpi\n        /* \"#utility.yul\":12112:12191   */\n      tag_296\n      tag_108\n      jump\t// in\n    tag_296:\n        /* \"#utility.yul\":12074:12193   */\n    tag_295:\n        /* \"#utility.yul\":12232:12233   */\n      0x00\n        /* \"#utility.yul\":12257:12310   */\n      tag_297\n        /* \"#utility.yul\":12302:12309   */\n      dup6\n        /* \"#utility.yul\":12293:12299   */\n      dup3\n        /* \"#utility.yul\":12282:12291   */\n      dup7\n        /* \"#utility.yul\":12278:12300   */\n      add\n        /* \"#utility.yul\":12257:12310   */\n      tag_134\n      jump\t// in\n    tag_297:\n        /* \"#utility.yul\":12247:12310   */\n      swap3\n      pop\n        /* \"#utility.yul\":12203:12320   */\n      pop\n        /* \"#utility.yul\":12359:12361   */\n      0x20\n        /* \"#utility.yul\":12385:12438   */\n      tag_298\n        /* \"#utility.yul\":12430:12437   */\n      dup6\n        /* \"#utility.yul\":12421:12427   */\n      dup3\n        /* \"#utility.yul\":12410:12419   */\n      dup7\n        /* \"#utility.yul\":12406:12428   */\n      add\n        /* \"#utility.yul\":12385:12438   */\n      tag_134\n      jump\t// in\n    tag_298:\n        /* \"#utility.yul\":12375:12438   */\n      swap2\n      pop\n        /* \"#utility.yul\":12330:12448   */\n      pop\n        /* \"#utility.yul\":11981:12455   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12461:12630   */\n    tag_146:\n        /* \"#utility.yul\":12545:12556   */\n      0x00\n        /* \"#utility.yul\":12579:12585   */\n      dup3\n        /* \"#utility.yul\":12574:12577   */\n      dup3\n        /* \"#utility.yul\":12567:12586   */\n      mstore\n        /* \"#utility.yul\":12619:12623   */\n      0x20\n        /* \"#utility.yul\":12614:12617   */\n      dup3\n        /* \"#utility.yul\":12610:12624   */\n      add\n        /* \"#utility.yul\":12595:12624   */\n      swap1\n      pop\n        /* \"#utility.yul\":12461:12630   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12636:12802   */\n    tag_147:\n        /* \"#utility.yul\":12776:12794   */\n      0x696e636f72726563742073656e64657200000000000000000000000000000000\n        /* \"#utility.yul\":12772:12773   */\n      0x00\n        /* \"#utility.yul\":12764:12770   */\n      dup3\n        /* \"#utility.yul\":12760:12774   */\n      add\n        /* \"#utility.yul\":12753:12795   */\n      mstore\n        /* \"#utility.yul\":12636:12802   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12808:13174   */\n    tag_148:\n        /* \"#utility.yul\":12950:12953   */\n      0x00\n        /* \"#utility.yul\":12971:13038   */\n      tag_302\n        /* \"#utility.yul\":13035:13037   */\n      0x10\n        /* \"#utility.yul\":13030:13033   */\n      dup4\n        /* \"#utility.yul\":12971:13038   */\n      tag_146\n      jump\t// in\n    tag_302:\n        /* \"#utility.yul\":12964:13038   */\n      swap2\n      pop\n        /* \"#utility.yul\":13047:13140   */\n      tag_303\n        /* \"#utility.yul\":13136:13139   */\n      dup3\n        /* \"#utility.yul\":13047:13140   */\n      tag_147\n      jump\t// in\n    tag_303:\n        /* \"#utility.yul\":13165:13167   */\n      0x20\n        /* \"#utility.yul\":13160:13163   */\n      dup3\n        /* \"#utility.yul\":13156:13168   */\n      add\n        /* \"#utility.yul\":13149:13168   */\n      swap1\n      pop\n        /* \"#utility.yul\":12808:13174   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13180:13599   */\n    tag_74:\n        /* \"#utility.yul\":13346:13350   */\n      0x00\n        /* \"#utility.yul\":13384:13386   */\n      0x20\n        /* \"#utility.yul\":13373:13382   */\n      dup3\n        /* \"#utility.yul\":13369:13387   */\n      add\n        /* \"#utility.yul\":13361:13387   */\n      swap1\n      pop\n        /* \"#utility.yul\":13433:13442   */\n      dup2\n        /* \"#utility.yul\":13427:13431   */\n      dup2\n        /* \"#utility.yul\":13423:13443   */\n      sub\n        /* \"#utility.yul\":13419:13420   */\n      0x00\n        /* \"#utility.yul\":13408:13417   */\n      dup4\n        /* \"#utility.yul\":13404:13421   */\n      add\n        /* \"#utility.yul\":13397:13444   */\n      mstore\n        /* \"#utility.yul\":13461:13592   */\n      tag_305\n        /* \"#utility.yul\":13587:13591   */\n      dup2\n        /* \"#utility.yul\":13461:13592   */\n      tag_148\n      jump\t// in\n    tag_305:\n        /* \"#utility.yul\":13453:13592   */\n      swap1\n      pop\n        /* \"#utility.yul\":13180:13599   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13605:13771   */\n    tag_149:\n        /* \"#utility.yul\":13745:13763   */\n      0x7175616e74697479206973207a65726f00000000000000000000000000000000\n        /* \"#utility.yul\":13741:13742   */\n      0x00\n        /* \"#utility.yul\":13733:13739   */\n      dup3\n        /* \"#utility.yul\":13729:13743   */\n      add\n        /* \"#utility.yul\":13722:13764   */\n      mstore\n        /* \"#utility.yul\":13605:13771   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13777:14143   */\n    tag_150:\n        /* \"#utility.yul\":13919:13922   */\n      0x00\n        /* \"#utility.yul\":13940:14007   */\n      tag_308\n        /* \"#utility.yul\":14004:14006   */\n      0x10\n        /* \"#utility.yul\":13999:14002   */\n      dup4\n        /* \"#utility.yul\":13940:14007   */\n      tag_146\n      jump\t// in\n    tag_308:\n        /* \"#utility.yul\":13933:14007   */\n      swap2\n      pop\n        /* \"#utility.yul\":14016:14109   */\n      tag_309\n        /* \"#utility.yul\":14105:14108   */\n      dup3\n        /* \"#utility.yul\":14016:14109   */\n      tag_149\n      jump\t// in\n    tag_309:\n        /* \"#utility.yul\":14134:14136   */\n      0x20\n        /* \"#utility.yul\":14129:14132   */\n      dup3\n        /* \"#utility.yul\":14125:14137   */\n      add\n        /* \"#utility.yul\":14118:14137   */\n      swap1\n      pop\n        /* \"#utility.yul\":13777:14143   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14149:14568   */\n    tag_77:\n        /* \"#utility.yul\":14315:14319   */\n      0x00\n        /* \"#utility.yul\":14353:14355   */\n      0x20\n        /* \"#utility.yul\":14342:14351   */\n      dup3\n        /* \"#utility.yul\":14338:14356   */\n      add\n        /* \"#utility.yul\":14330:14356   */\n      swap1\n      pop\n        /* \"#utility.yul\":14402:14411   */\n      dup2\n        /* \"#utility.yul\":14396:14400   */\n      dup2\n        /* \"#utility.yul\":14392:14412   */\n      sub\n        /* \"#utility.yul\":14388:14389   */\n      0x00\n        /* \"#utility.yul\":14377:14386   */\n      dup4\n        /* \"#utility.yul\":14373:14390   */\n      add\n        /* \"#utility.yul\":14366:14413   */\n      mstore\n        /* \"#utility.yul\":14430:14561   */\n      tag_311\n        /* \"#utility.yul\":14556:14560   */\n      dup2\n        /* \"#utility.yul\":14430:14561   */\n      tag_150\n      jump\t// in\n    tag_311:\n        /* \"#utility.yul\":14422:14561   */\n      swap1\n      pop\n        /* \"#utility.yul\":14149:14568   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14574:15127   */\n    tag_79:\n        /* \"#utility.yul\":14751:14755   */\n      0x00\n        /* \"#utility.yul\":14789:14792   */\n      0x80\n        /* \"#utility.yul\":14778:14787   */\n      dup3\n        /* \"#utility.yul\":14774:14793   */\n      add\n        /* \"#utility.yul\":14766:14793   */\n      swap1\n      pop\n        /* \"#utility.yul\":14803:14874   */\n      tag_313\n        /* \"#utility.yul\":14871:14872   */\n      0x00\n        /* \"#utility.yul\":14860:14869   */\n      dup4\n        /* \"#utility.yul\":14856:14873   */\n      add\n        /* \"#utility.yul\":14847:14853   */\n      dup8\n        /* \"#utility.yul\":14803:14874   */\n      tag_122\n      jump\t// in\n    tag_313:\n        /* \"#utility.yul\":14884:14956   */\n      tag_314\n        /* \"#utility.yul\":14952:14954   */\n      0x20\n        /* \"#utility.yul\":14941:14950   */\n      dup4\n        /* \"#utility.yul\":14937:14955   */\n      add\n        /* \"#utility.yul\":14928:14934   */\n      dup7\n        /* \"#utility.yul\":14884:14956   */\n      tag_122\n      jump\t// in\n    tag_314:\n        /* \"#utility.yul\":14966:15038   */\n      tag_315\n        /* \"#utility.yul\":15034:15036   */\n      0x40\n        /* \"#utility.yul\":15023:15032   */\n      dup4\n        /* \"#utility.yul\":15019:15037   */\n      add\n        /* \"#utility.yul\":15010:15016   */\n      dup6\n        /* \"#utility.yul\":14966:15038   */\n      tag_143\n      jump\t// in\n    tag_315:\n        /* \"#utility.yul\":15048:15120   */\n      tag_316\n        /* \"#utility.yul\":15116:15118   */\n      0x60\n        /* \"#utility.yul\":15105:15114   */\n      dup4\n        /* \"#utility.yul\":15101:15119   */\n      add\n        /* \"#utility.yul\":15092:15098   */\n      dup5\n        /* \"#utility.yul\":15048:15120   */\n      tag_143\n      jump\t// in\n    tag_316:\n        /* \"#utility.yul\":14574:15127   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15133:15298   */\n    tag_151:\n        /* \"#utility.yul\":15273:15290   */\n      0x746f6b656e4964206973207a65726f0000000000000000000000000000000000\n        /* \"#utility.yul\":15269:15270   */\n      0x00\n        /* \"#utility.yul\":15261:15267   */\n      dup3\n        /* \"#utility.yul\":15257:15271   */\n      add\n        /* \"#utility.yul\":15250:15291   */\n      mstore\n        /* \"#utility.yul\":15133:15298   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15304:15670   */\n    tag_152:\n        /* \"#utility.yul\":15446:15449   */\n      0x00\n        /* \"#utility.yul\":15467:15534   */\n      tag_319\n        /* \"#utility.yul\":15531:15533   */\n      0x0f\n        /* \"#utility.yul\":15526:15529   */\n      dup4\n        /* \"#utility.yul\":15467:15534   */\n      tag_146\n      jump\t// in\n    tag_319:\n        /* \"#utility.yul\":15460:15534   */\n      swap2\n      pop\n        /* \"#utility.yul\":15543:15636   */\n      tag_320\n        /* \"#utility.yul\":15632:15635   */\n      dup3\n        /* \"#utility.yul\":15543:15636   */\n      tag_151\n      jump\t// in\n    tag_320:\n        /* \"#utility.yul\":15661:15663   */\n      0x20\n        /* \"#utility.yul\":15656:15659   */\n      dup3\n        /* \"#utility.yul\":15652:15664   */\n      add\n        /* \"#utility.yul\":15645:15664   */\n      swap1\n      pop\n        /* \"#utility.yul\":15304:15670   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15676:16095   */\n    tag_91:\n        /* \"#utility.yul\":15842:15846   */\n      0x00\n        /* \"#utility.yul\":15880:15882   */\n      0x20\n        /* \"#utility.yul\":15869:15878   */\n      dup3\n        /* \"#utility.yul\":15865:15883   */\n      add\n        /* \"#utility.yul\":15857:15883   */\n      swap1\n      pop\n        /* \"#utility.yul\":15929:15938   */\n      dup2\n        /* \"#utility.yul\":15923:15927   */\n      dup2\n        /* \"#utility.yul\":15919:15939   */\n      sub\n        /* \"#utility.yul\":15915:15916   */\n      0x00\n        /* \"#utility.yul\":15904:15913   */\n      dup4\n        /* \"#utility.yul\":15900:15917   */\n      add\n        /* \"#utility.yul\":15893:15940   */\n      mstore\n        /* \"#utility.yul\":15957:16088   */\n      tag_322\n        /* \"#utility.yul\":16083:16087   */\n      dup2\n        /* \"#utility.yul\":15957:16088   */\n      tag_152\n      jump\t// in\n    tag_322:\n        /* \"#utility.yul\":15949:16088   */\n      swap1\n      pop\n        /* \"#utility.yul\":15676:16095   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16101:16264   */\n    tag_153:\n        /* \"#utility.yul\":16241:16256   */\n      0x7072696365206973207a65726f00000000000000000000000000000000000000\n        /* \"#utility.yul\":16237:16238   */\n      0x00\n        /* \"#utility.yul\":16229:16235   */\n      dup3\n        /* \"#utility.yul\":16225:16239   */\n      add\n        /* \"#utility.yul\":16218:16257   */\n      mstore\n        /* \"#utility.yul\":16101:16264   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16270:16636   */\n    tag_154:\n        /* \"#utility.yul\":16412:16415   */\n      0x00\n        /* \"#utility.yul\":16433:16500   */\n      tag_325\n        /* \"#utility.yul\":16497:16499   */\n      0x0d\n        /* \"#utility.yul\":16492:16495   */\n      dup4\n        /* \"#utility.yul\":16433:16500   */\n      tag_146\n      jump\t// in\n    tag_325:\n        /* \"#utility.yul\":16426:16500   */\n      swap2\n      pop\n        /* \"#utility.yul\":16509:16602   */\n      tag_326\n        /* \"#utility.yul\":16598:16601   */\n      dup3\n        /* \"#utility.yul\":16509:16602   */\n      tag_153\n      jump\t// in\n    tag_326:\n        /* \"#utility.yul\":16627:16629   */\n      0x20\n        /* \"#utility.yul\":16622:16625   */\n      dup3\n        /* \"#utility.yul\":16618:16630   */\n      add\n        /* \"#utility.yul\":16611:16630   */\n      swap1\n      pop\n        /* \"#utility.yul\":16270:16636   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16642:17061   */\n    tag_94:\n        /* \"#utility.yul\":16808:16812   */\n      0x00\n        /* \"#utility.yul\":16846:16848   */\n      0x20\n        /* \"#utility.yul\":16835:16844   */\n      dup3\n        /* \"#utility.yul\":16831:16849   */\n      add\n        /* \"#utility.yul\":16823:16849   */\n      swap1\n      pop\n        /* \"#utility.yul\":16895:16904   */\n      dup2\n        /* \"#utility.yul\":16889:16893   */\n      dup2\n        /* \"#utility.yul\":16885:16905   */\n      sub\n        /* \"#utility.yul\":16881:16882   */\n      0x00\n        /* \"#utility.yul\":16870:16879   */\n      dup4\n        /* \"#utility.yul\":16866:16883   */\n      add\n        /* \"#utility.yul\":16859:16906   */\n      mstore\n        /* \"#utility.yul\":16923:17054   */\n      tag_328\n        /* \"#utility.yul\":17049:17053   */\n      dup2\n        /* \"#utility.yul\":16923:17054   */\n      tag_154\n      jump\t// in\n    tag_328:\n        /* \"#utility.yul\":16915:17054   */\n      swap1\n      pop\n        /* \"#utility.yul\":16642:17061   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17067:17509   */\n    tag_96:\n        /* \"#utility.yul\":17216:17220   */\n      0x00\n        /* \"#utility.yul\":17254:17256   */\n      0x60\n        /* \"#utility.yul\":17243:17252   */\n      dup3\n        /* \"#utility.yul\":17239:17257   */\n      add\n        /* \"#utility.yul\":17231:17257   */\n      swap1\n      pop\n        /* \"#utility.yul\":17267:17338   */\n      tag_330\n        /* \"#utility.yul\":17335:17336   */\n      0x00\n        /* \"#utility.yul\":17324:17333   */\n      dup4\n        /* \"#utility.yul\":17320:17337   */\n      add\n        /* \"#utility.yul\":17311:17317   */\n      dup7\n        /* \"#utility.yul\":17267:17338   */\n      tag_143\n      jump\t// in\n    tag_330:\n        /* \"#utility.yul\":17348:17420   */\n      tag_331\n        /* \"#utility.yul\":17416:17418   */\n      0x20\n        /* \"#utility.yul\":17405:17414   */\n      dup4\n        /* \"#utility.yul\":17401:17419   */\n      add\n        /* \"#utility.yul\":17392:17398   */\n      dup6\n        /* \"#utility.yul\":17348:17420   */\n      tag_143\n      jump\t// in\n    tag_331:\n        /* \"#utility.yul\":17430:17502   */\n      tag_332\n        /* \"#utility.yul\":17498:17500   */\n      0x40\n        /* \"#utility.yul\":17487:17496   */\n      dup4\n        /* \"#utility.yul\":17483:17501   */\n      add\n        /* \"#utility.yul\":17474:17480   */\n      dup5\n        /* \"#utility.yul\":17430:17502   */\n      tag_143\n      jump\t// in\n    tag_332:\n        /* \"#utility.yul\":17067:17509   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212209cd88f30e118f7e0a1f698f2908d7b88275bc42c8b682749e9ef5473b66d5b7f64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1385": {
									"entryPoint": null,
									"id": 1385,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_msgSender_1243": {
									"entryPoint": 326,
									"id": 1243,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_146": {
									"entryPoint": 333,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 600,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address_fromMemory": {
									"entryPoint": 620,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 682,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 697,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 561,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 530,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 526,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 578,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:1707:15",
										"nodeType": "YulBlock",
										"src": "0:1707:15",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:15",
													"nodeType": "YulBlock",
													"src": "47:35:15",
													"statements": [
														{
															"nativeSrc": "57:19:15",
															"nodeType": "YulAssignment",
															"src": "57:19:15",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:15",
																		"nodeType": "YulLiteral",
																		"src": "73:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:15"
																},
																"nativeSrc": "67:9:15",
																"nodeType": "YulFunctionCall",
																"src": "67:9:15"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:15"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:15",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:15",
														"nodeType": "YulTypedName",
														"src": "40:6:15",
														"type": ""
													}
												],
												"src": "7:75:15"
											},
											{
												"body": {
													"nativeSrc": "177:28:15",
													"nodeType": "YulBlock",
													"src": "177:28:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:15",
																		"nodeType": "YulLiteral",
																		"src": "194:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:15",
																		"nodeType": "YulLiteral",
																		"src": "197:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:15"
																},
																"nativeSrc": "187:12:15",
																"nodeType": "YulFunctionCall",
																"src": "187:12:15"
															},
															"nativeSrc": "187:12:15",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:15"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:15",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:15"
											},
											{
												"body": {
													"nativeSrc": "300:28:15",
													"nodeType": "YulBlock",
													"src": "300:28:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:15",
																		"nodeType": "YulLiteral",
																		"src": "317:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:15",
																		"nodeType": "YulLiteral",
																		"src": "320:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:15"
																},
																"nativeSrc": "310:12:15",
																"nodeType": "YulFunctionCall",
																"src": "310:12:15"
															},
															"nativeSrc": "310:12:15",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:15"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:15",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:15"
											},
											{
												"body": {
													"nativeSrc": "379:81:15",
													"nodeType": "YulBlock",
													"src": "379:81:15",
													"statements": [
														{
															"nativeSrc": "389:65:15",
															"nodeType": "YulAssignment",
															"src": "389:65:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:15",
																		"nodeType": "YulLiteral",
																		"src": "411:42:15",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:15"
																},
																"nativeSrc": "400:54:15",
																"nodeType": "YulFunctionCall",
																"src": "400:54:15"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:15",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:15"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:15",
														"nodeType": "YulTypedName",
														"src": "361:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:15",
														"nodeType": "YulTypedName",
														"src": "371:7:15",
														"type": ""
													}
												],
												"src": "334:126:15"
											},
											{
												"body": {
													"nativeSrc": "511:51:15",
													"nodeType": "YulBlock",
													"src": "511:51:15",
													"statements": [
														{
															"nativeSrc": "521:35:15",
															"nodeType": "YulAssignment",
															"src": "521:35:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:15"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:15",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:15"
																},
																"nativeSrc": "532:24:15",
																"nodeType": "YulFunctionCall",
																"src": "532:24:15"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:15",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:15"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:15",
														"nodeType": "YulTypedName",
														"src": "493:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:15",
														"nodeType": "YulTypedName",
														"src": "503:7:15",
														"type": ""
													}
												],
												"src": "466:96:15"
											},
											{
												"body": {
													"nativeSrc": "611:79:15",
													"nodeType": "YulBlock",
													"src": "611:79:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:15",
																"nodeType": "YulBlock",
																"src": "668:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:15",
																					"nodeType": "YulLiteral",
																					"src": "677:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:15",
																					"nodeType": "YulLiteral",
																					"src": "680:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:15"
																			},
																			"nativeSrc": "670:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:15"
																		},
																		"nativeSrc": "670:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:15",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:15"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:15",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:15"
																				},
																				"nativeSrc": "641:24:15",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:15"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:15"
																		},
																		"nativeSrc": "631:35:15",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:15"
																},
																"nativeSrc": "624:43:15",
																"nodeType": "YulFunctionCall",
																"src": "624:43:15"
															},
															"nativeSrc": "621:63:15",
															"nodeType": "YulIf",
															"src": "621:63:15"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:15",
														"nodeType": "YulTypedName",
														"src": "604:5:15",
														"type": ""
													}
												],
												"src": "568:122:15"
											},
											{
												"body": {
													"nativeSrc": "759:80:15",
													"nodeType": "YulBlock",
													"src": "759:80:15",
													"statements": [
														{
															"nativeSrc": "769:22:15",
															"nodeType": "YulAssignment",
															"src": "769:22:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "784:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "778:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:15"
																},
																"nativeSrc": "778:13:15",
																"nodeType": "YulFunctionCall",
																"src": "778:13:15"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "769:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "827:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "800:26:15",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:15"
																},
																"nativeSrc": "800:33:15",
																"nodeType": "YulFunctionCall",
																"src": "800:33:15"
															},
															"nativeSrc": "800:33:15",
															"nodeType": "YulExpressionStatement",
															"src": "800:33:15"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "696:143:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "737:6:15",
														"nodeType": "YulTypedName",
														"src": "737:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "745:3:15",
														"nodeType": "YulTypedName",
														"src": "745:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "753:5:15",
														"nodeType": "YulTypedName",
														"src": "753:5:15",
														"type": ""
													}
												],
												"src": "696:143:15"
											},
											{
												"body": {
													"nativeSrc": "939:413:15",
													"nodeType": "YulBlock",
													"src": "939:413:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "985:83:15",
																"nodeType": "YulBlock",
																"src": "985:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "987:77:15",
																				"nodeType": "YulIdentifier",
																				"src": "987:77:15"
																			},
																			"nativeSrc": "987:79:15",
																			"nodeType": "YulFunctionCall",
																			"src": "987:79:15"
																		},
																		"nativeSrc": "987:79:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "987:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "960:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "960:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "969:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "969:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "956:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "956:3:15"
																		},
																		"nativeSrc": "956:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "956:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "981:2:15",
																		"nodeType": "YulLiteral",
																		"src": "981:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "952:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "952:3:15"
																},
																"nativeSrc": "952:32:15",
																"nodeType": "YulFunctionCall",
																"src": "952:32:15"
															},
															"nativeSrc": "949:119:15",
															"nodeType": "YulIf",
															"src": "949:119:15"
														},
														{
															"nativeSrc": "1078:128:15",
															"nodeType": "YulBlock",
															"src": "1078:128:15",
															"statements": [
																{
																	"nativeSrc": "1093:15:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1093:15:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1107:1:15",
																		"nodeType": "YulLiteral",
																		"src": "1107:1:15",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1097:6:15",
																			"nodeType": "YulTypedName",
																			"src": "1097:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1122:74:15",
																	"nodeType": "YulAssignment",
																	"src": "1122:74:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1168:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "1168:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1179:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "1179:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1164:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "1164:3:15"
																				},
																				"nativeSrc": "1164:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "1164:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1188:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "1188:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1132:31:15",
																			"nodeType": "YulIdentifier",
																			"src": "1132:31:15"
																		},
																		"nativeSrc": "1132:64:15",
																		"nodeType": "YulFunctionCall",
																		"src": "1132:64:15"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1122:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "1122:6:15"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1216:129:15",
															"nodeType": "YulBlock",
															"src": "1216:129:15",
															"statements": [
																{
																	"nativeSrc": "1231:16:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1231:16:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1245:2:15",
																		"nodeType": "YulLiteral",
																		"src": "1245:2:15",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1235:6:15",
																			"nodeType": "YulTypedName",
																			"src": "1235:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1261:74:15",
																	"nodeType": "YulAssignment",
																	"src": "1261:74:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1307:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "1307:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1318:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "1318:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1303:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "1303:3:15"
																				},
																				"nativeSrc": "1303:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "1303:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1327:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "1327:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1271:31:15",
																			"nodeType": "YulIdentifier",
																			"src": "1271:31:15"
																		},
																		"nativeSrc": "1271:64:15",
																		"nodeType": "YulFunctionCall",
																		"src": "1271:64:15"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1261:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "1261:6:15"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address_fromMemory",
												"nativeSrc": "845:507:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "901:9:15",
														"nodeType": "YulTypedName",
														"src": "901:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "912:7:15",
														"nodeType": "YulTypedName",
														"src": "912:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "924:6:15",
														"nodeType": "YulTypedName",
														"src": "924:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "932:6:15",
														"nodeType": "YulTypedName",
														"src": "932:6:15",
														"type": ""
													}
												],
												"src": "845:507:15"
											},
											{
												"body": {
													"nativeSrc": "1423:53:15",
													"nodeType": "YulBlock",
													"src": "1423:53:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1440:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "1440:3:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1463:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "1463:5:15"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "1445:17:15",
																			"nodeType": "YulIdentifier",
																			"src": "1445:17:15"
																		},
																		"nativeSrc": "1445:24:15",
																		"nodeType": "YulFunctionCall",
																		"src": "1445:24:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1433:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "1433:6:15"
																},
																"nativeSrc": "1433:37:15",
																"nodeType": "YulFunctionCall",
																"src": "1433:37:15"
															},
															"nativeSrc": "1433:37:15",
															"nodeType": "YulExpressionStatement",
															"src": "1433:37:15"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "1358:118:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1411:5:15",
														"nodeType": "YulTypedName",
														"src": "1411:5:15",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1418:3:15",
														"nodeType": "YulTypedName",
														"src": "1418:3:15",
														"type": ""
													}
												],
												"src": "1358:118:15"
											},
											{
												"body": {
													"nativeSrc": "1580:124:15",
													"nodeType": "YulBlock",
													"src": "1580:124:15",
													"statements": [
														{
															"nativeSrc": "1590:26:15",
															"nodeType": "YulAssignment",
															"src": "1590:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1602:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "1602:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1613:2:15",
																		"nodeType": "YulLiteral",
																		"src": "1613:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1598:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "1598:3:15"
																},
																"nativeSrc": "1598:18:15",
																"nodeType": "YulFunctionCall",
																"src": "1598:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1590:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "1590:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1670:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "1670:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1683:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "1683:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1694:1:15",
																				"nodeType": "YulLiteral",
																				"src": "1694:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1679:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "1679:3:15"
																		},
																		"nativeSrc": "1679:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "1679:17:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "1626:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "1626:43:15"
																},
																"nativeSrc": "1626:71:15",
																"nodeType": "YulFunctionCall",
																"src": "1626:71:15"
															},
															"nativeSrc": "1626:71:15",
															"nodeType": "YulExpressionStatement",
															"src": "1626:71:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "1482:222:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1552:9:15",
														"nodeType": "YulTypedName",
														"src": "1552:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1564:6:15",
														"nodeType": "YulTypedName",
														"src": "1564:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1575:4:15",
														"nodeType": "YulTypedName",
														"src": "1575:4:15",
														"type": ""
													}
												],
												"src": "1482:222:15"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 15,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b506040516113063803806113068339818101604052810190610031919061026c565b61003f61014660201b60201c565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036100af575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016100a691906102b9565b60405180910390fd5b6100be8161014d60201b60201c565b508160025f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508060015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050506102d2565b5f33905090565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61023b82610212565b9050919050565b61024b81610231565b8114610255575f80fd5b50565b5f8151905061026681610242565b92915050565b5f80604083850312156102825761028161020e565b5b5f61028f85828601610258565b92505060206102a085828601610258565b9150509250929050565b6102b381610231565b82525050565b5f6020820190506102cc5f8301846102aa565b92915050565b611027806102df5f395ff3fe608060405234801561000f575f80fd5b506004361061009c575f3560e01c8063d4ddce8a11610064578063d4ddce8a14610146578063ea75aa8f14610176578063f23a6e6114610194578063f2fde38b146101c4578063f7d97577146101e05761009c565b806301ffc9a7146100a05780632c1449e1146100d0578063715018a6146100ee5780638da5cb5b146100f8578063bc197c8114610116575b5f80fd5b6100ba60048036038101906100b591906107c7565b6101fc565b6040516100c7919061080c565b60405180910390f35b6100d8610275565b6040516100e5919061089f565b60405180910390f35b6100f661029a565b005b6101006102ad565b60405161010d91906108d8565b60405180910390f35b610130600480360381019061012b9190610b4e565b6102d4565b60405161013d9190610c28565b60405180910390f35b610160600480360381019061015b9190610c41565b6102e8565b60405161016d9190610c7b565b60405180910390f35b61017e6102fd565b60405161018b9190610cb4565b60405180910390f35b6101ae60048036038101906101a99190610ccd565b610322565b6040516101bb9190610c28565b60405180910390f35b6101de60048036038101906101d99190610d60565b610444565b005b6101fa60048036038101906101f59190610d8b565b6104c8565b005b5f7f4e2312e0000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061026e575061026d826105a9565b5b9050919050565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6102a2610612565b6102ab5f610699565b565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b5f63bc197c8160e01b905095945050505050565b6003602052805f5260405f205f915090505481565b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103b2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103a990610e23565b60405180910390fd5b5f83036103f4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103eb90610e8b565b60405180910390fd5b7f1650d49bac940346e34bac1dde642598b57ba618d7a0c005a91257851cae2c24868686866040516104299493929190610ea9565b60405180910390a163f23a6e6160e01b905095945050505050565b61044c610612565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036104bc575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016104b391906108d8565b60405180910390fd5b6104c581610699565b50565b6104d0610612565b5f8203610512576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161050990610f36565b60405180910390fd5b5f8103610554576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161054b90610f9e565b60405180910390fd5b8060035f8481526020019081526020015f20819055507f18e75bb8c091a6448c12a2023f055b2714c151b941a91df8b9938788769ffe1382824260405161059d93929190610fbc565b60405180910390a15050565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b61061a61075a565b73ffffffffffffffffffffffffffffffffffffffff166106386102ad565b73ffffffffffffffffffffffffffffffffffffffff16146106975761065b61075a565b6040517f118cdaa700000000000000000000000000000000000000000000000000000000815260040161068e91906108d8565b60405180910390fd5b565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f33905090565b5f604051905090565b5f80fd5b5f80fd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6107a681610772565b81146107b0575f80fd5b50565b5f813590506107c18161079d565b92915050565b5f602082840312156107dc576107db61076a565b5b5f6107e9848285016107b3565b91505092915050565b5f8115159050919050565b610806816107f2565b82525050565b5f60208201905061081f5f8301846107fd565b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f819050919050565b5f61086761086261085d84610825565b610844565b610825565b9050919050565b5f6108788261084d565b9050919050565b5f6108898261086e565b9050919050565b6108998161087f565b82525050565b5f6020820190506108b25f830184610890565b92915050565b5f6108c282610825565b9050919050565b6108d2816108b8565b82525050565b5f6020820190506108eb5f8301846108c9565b92915050565b6108fa816108b8565b8114610904575f80fd5b50565b5f81359050610915816108f1565b92915050565b5f80fd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b6109658261091f565b810181811067ffffffffffffffff821117156109845761098361092f565b5b80604052505050565b5f610996610761565b90506109a2828261095c565b919050565b5f67ffffffffffffffff8211156109c1576109c061092f565b5b602082029050602081019050919050565b5f80fd5b5f819050919050565b6109e8816109d6565b81146109f2575f80fd5b50565b5f81359050610a03816109df565b92915050565b5f610a1b610a16846109a7565b61098d565b90508083825260208201905060208402830185811115610a3e57610a3d6109d2565b5b835b81811015610a675780610a5388826109f5565b845260208401935050602081019050610a40565b5050509392505050565b5f82601f830112610a8557610a8461091b565b5b8135610a95848260208601610a09565b91505092915050565b5f80fd5b5f67ffffffffffffffff821115610abc57610abb61092f565b5b610ac58261091f565b9050602081019050919050565b828183375f83830152505050565b5f610af2610aed84610aa2565b61098d565b905082815260208101848484011115610b0e57610b0d610a9e565b5b610b19848285610ad2565b509392505050565b5f82601f830112610b3557610b3461091b565b5b8135610b45848260208601610ae0565b91505092915050565b5f805f805f60a08688031215610b6757610b6661076a565b5b5f610b7488828901610907565b9550506020610b8588828901610907565b945050604086013567ffffffffffffffff811115610ba657610ba561076e565b5b610bb288828901610a71565b935050606086013567ffffffffffffffff811115610bd357610bd261076e565b5b610bdf88828901610a71565b925050608086013567ffffffffffffffff811115610c0057610bff61076e565b5b610c0c88828901610b21565b9150509295509295909350565b610c2281610772565b82525050565b5f602082019050610c3b5f830184610c19565b92915050565b5f60208284031215610c5657610c5561076a565b5b5f610c63848285016109f5565b91505092915050565b610c75816109d6565b82525050565b5f602082019050610c8e5f830184610c6c565b92915050565b5f610c9e8261086e565b9050919050565b610cae81610c94565b82525050565b5f602082019050610cc75f830184610ca5565b92915050565b5f805f805f60a08688031215610ce657610ce561076a565b5b5f610cf388828901610907565b9550506020610d0488828901610907565b9450506040610d15888289016109f5565b9350506060610d26888289016109f5565b925050608086013567ffffffffffffffff811115610d4757610d4661076e565b5b610d5388828901610b21565b9150509295509295909350565b5f60208284031215610d7557610d7461076a565b5b5f610d8284828501610907565b91505092915050565b5f8060408385031215610da157610da061076a565b5b5f610dae858286016109f5565b9250506020610dbf858286016109f5565b9150509250929050565b5f82825260208201905092915050565b7f696e636f72726563742073656e646572000000000000000000000000000000005f82015250565b5f610e0d601083610dc9565b9150610e1882610dd9565b602082019050919050565b5f6020820190508181035f830152610e3a81610e01565b9050919050565b7f7175616e74697479206973207a65726f000000000000000000000000000000005f82015250565b5f610e75601083610dc9565b9150610e8082610e41565b602082019050919050565b5f6020820190508181035f830152610ea281610e69565b9050919050565b5f608082019050610ebc5f8301876108c9565b610ec960208301866108c9565b610ed66040830185610c6c565b610ee36060830184610c6c565b95945050505050565b7f746f6b656e4964206973207a65726f00000000000000000000000000000000005f82015250565b5f610f20600f83610dc9565b9150610f2b82610eec565b602082019050919050565b5f6020820190508181035f830152610f4d81610f14565b9050919050565b7f7072696365206973207a65726f000000000000000000000000000000000000005f82015250565b5f610f88600d83610dc9565b9150610f9382610f54565b602082019050919050565b5f6020820190508181035f830152610fb581610f7c565b9050919050565b5f606082019050610fcf5f830186610c6c565b610fdc6020830185610c6c565b610fe96040830184610c6c565b94935050505056fea26469706673582212209cd88f30e118f7e0a1f698f2908d7b88275bc42c8b682749e9ef5473b66d5b7f64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x1306 CODESIZE SUB DUP1 PUSH2 0x1306 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0x26C JUMP JUMPDEST PUSH2 0x3F PUSH2 0x146 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xAF JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA6 SWAP2 SWAP1 PUSH2 0x2B9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xBE DUP2 PUSH2 0x14D PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP DUP2 PUSH1 0x2 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP PUSH2 0x2D2 JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x23B DUP3 PUSH2 0x212 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x24B DUP2 PUSH2 0x231 JUMP JUMPDEST DUP2 EQ PUSH2 0x255 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x266 DUP2 PUSH2 0x242 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x282 JUMPI PUSH2 0x281 PUSH2 0x20E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x28F DUP6 DUP3 DUP7 ADD PUSH2 0x258 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2A0 DUP6 DUP3 DUP7 ADD PUSH2 0x258 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x2B3 DUP2 PUSH2 0x231 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2CC PUSH0 DUP4 ADD DUP5 PUSH2 0x2AA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1027 DUP1 PUSH2 0x2DF PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x9C JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xD4DDCE8A GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xD4DDCE8A EQ PUSH2 0x146 JUMPI DUP1 PUSH4 0xEA75AA8F EQ PUSH2 0x176 JUMPI DUP1 PUSH4 0xF23A6E61 EQ PUSH2 0x194 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1C4 JUMPI DUP1 PUSH4 0xF7D97577 EQ PUSH2 0x1E0 JUMPI PUSH2 0x9C JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xA0 JUMPI DUP1 PUSH4 0x2C1449E1 EQ PUSH2 0xD0 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xEE JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xF8 JUMPI DUP1 PUSH4 0xBC197C81 EQ PUSH2 0x116 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xBA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xB5 SWAP2 SWAP1 PUSH2 0x7C7 JUMP JUMPDEST PUSH2 0x1FC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC7 SWAP2 SWAP1 PUSH2 0x80C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD8 PUSH2 0x275 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE5 SWAP2 SWAP1 PUSH2 0x89F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF6 PUSH2 0x29A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x100 PUSH2 0x2AD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10D SWAP2 SWAP1 PUSH2 0x8D8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x130 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12B SWAP2 SWAP1 PUSH2 0xB4E JUMP JUMPDEST PUSH2 0x2D4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13D SWAP2 SWAP1 PUSH2 0xC28 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x160 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x15B SWAP2 SWAP1 PUSH2 0xC41 JUMP JUMPDEST PUSH2 0x2E8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16D SWAP2 SWAP1 PUSH2 0xC7B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x17E PUSH2 0x2FD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18B SWAP2 SWAP1 PUSH2 0xCB4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1AE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A9 SWAP2 SWAP1 PUSH2 0xCCD JUMP JUMPDEST PUSH2 0x322 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BB SWAP2 SWAP1 PUSH2 0xC28 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1DE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D9 SWAP2 SWAP1 PUSH2 0xD60 JUMP JUMPDEST PUSH2 0x444 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1FA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F5 SWAP2 SWAP1 PUSH2 0xD8B JUMP JUMPDEST PUSH2 0x4C8 JUMP JUMPDEST STOP JUMPDEST PUSH0 PUSH32 0x4E2312E000000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x26E JUMPI POP PUSH2 0x26D DUP3 PUSH2 0x5A9 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x2A2 PUSH2 0x612 JUMP JUMPDEST PUSH2 0x2AB PUSH0 PUSH2 0x699 JUMP JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH4 0xBC197C81 PUSH1 0xE0 SHL SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x3B2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3A9 SWAP1 PUSH2 0xE23 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP4 SUB PUSH2 0x3F4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3EB SWAP1 PUSH2 0xE8B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x1650D49BAC940346E34BAC1DDE642598B57BA618D7A0C005A91257851CAE2C24 DUP7 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0x429 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xEA9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH4 0xF23A6E61 PUSH1 0xE0 SHL SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x44C PUSH2 0x612 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x4BC JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4B3 SWAP2 SWAP1 PUSH2 0x8D8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4C5 DUP2 PUSH2 0x699 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x4D0 PUSH2 0x612 JUMP JUMPDEST PUSH0 DUP3 SUB PUSH2 0x512 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x509 SWAP1 PUSH2 0xF36 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 SUB PUSH2 0x554 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x54B SWAP1 PUSH2 0xF9E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH32 0x18E75BB8C091A6448C12A2023F055B2714C151B941A91DF8B9938788769FFE13 DUP3 DUP3 TIMESTAMP PUSH1 0x40 MLOAD PUSH2 0x59D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xFBC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x61A PUSH2 0x75A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x638 PUSH2 0x2AD JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x697 JUMPI PUSH2 0x65B PUSH2 0x75A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x68E SWAP2 SWAP1 PUSH2 0x8D8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7A6 DUP2 PUSH2 0x772 JUMP JUMPDEST DUP2 EQ PUSH2 0x7B0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x7C1 DUP2 PUSH2 0x79D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x7DC JUMPI PUSH2 0x7DB PUSH2 0x76A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x7E9 DUP5 DUP3 DUP6 ADD PUSH2 0x7B3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x806 DUP2 PUSH2 0x7F2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x81F PUSH0 DUP4 ADD DUP5 PUSH2 0x7FD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x867 PUSH2 0x862 PUSH2 0x85D DUP5 PUSH2 0x825 JUMP JUMPDEST PUSH2 0x844 JUMP JUMPDEST PUSH2 0x825 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x878 DUP3 PUSH2 0x84D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x889 DUP3 PUSH2 0x86E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x899 DUP2 PUSH2 0x87F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x8B2 PUSH0 DUP4 ADD DUP5 PUSH2 0x890 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x8C2 DUP3 PUSH2 0x825 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x8D2 DUP2 PUSH2 0x8B8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x8EB PUSH0 DUP4 ADD DUP5 PUSH2 0x8C9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x8FA DUP2 PUSH2 0x8B8 JUMP JUMPDEST DUP2 EQ PUSH2 0x904 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x915 DUP2 PUSH2 0x8F1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x965 DUP3 PUSH2 0x91F JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x984 JUMPI PUSH2 0x983 PUSH2 0x92F JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x996 PUSH2 0x761 JUMP JUMPDEST SWAP1 POP PUSH2 0x9A2 DUP3 DUP3 PUSH2 0x95C JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x9C1 JUMPI PUSH2 0x9C0 PUSH2 0x92F JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x9E8 DUP2 PUSH2 0x9D6 JUMP JUMPDEST DUP2 EQ PUSH2 0x9F2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xA03 DUP2 PUSH2 0x9DF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xA1B PUSH2 0xA16 DUP5 PUSH2 0x9A7 JUMP JUMPDEST PUSH2 0x98D JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0xA3E JUMPI PUSH2 0xA3D PUSH2 0x9D2 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xA67 JUMPI DUP1 PUSH2 0xA53 DUP9 DUP3 PUSH2 0x9F5 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xA40 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xA85 JUMPI PUSH2 0xA84 PUSH2 0x91B JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0xA95 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0xA09 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xABC JUMPI PUSH2 0xABB PUSH2 0x92F JUMP JUMPDEST JUMPDEST PUSH2 0xAC5 DUP3 PUSH2 0x91F JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xAF2 PUSH2 0xAED DUP5 PUSH2 0xAA2 JUMP JUMPDEST PUSH2 0x98D JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0xB0E JUMPI PUSH2 0xB0D PUSH2 0xA9E JUMP JUMPDEST JUMPDEST PUSH2 0xB19 DUP5 DUP3 DUP6 PUSH2 0xAD2 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xB35 JUMPI PUSH2 0xB34 PUSH2 0x91B JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0xB45 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0xAE0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xB67 JUMPI PUSH2 0xB66 PUSH2 0x76A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xB74 DUP9 DUP3 DUP10 ADD PUSH2 0x907 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0xB85 DUP9 DUP3 DUP10 ADD PUSH2 0x907 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xBA6 JUMPI PUSH2 0xBA5 PUSH2 0x76E JUMP JUMPDEST JUMPDEST PUSH2 0xBB2 DUP9 DUP3 DUP10 ADD PUSH2 0xA71 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xBD3 JUMPI PUSH2 0xBD2 PUSH2 0x76E JUMP JUMPDEST JUMPDEST PUSH2 0xBDF DUP9 DUP3 DUP10 ADD PUSH2 0xA71 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xC00 JUMPI PUSH2 0xBFF PUSH2 0x76E JUMP JUMPDEST JUMPDEST PUSH2 0xC0C DUP9 DUP3 DUP10 ADD PUSH2 0xB21 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH2 0xC22 DUP2 PUSH2 0x772 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC3B PUSH0 DUP4 ADD DUP5 PUSH2 0xC19 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC56 JUMPI PUSH2 0xC55 PUSH2 0x76A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xC63 DUP5 DUP3 DUP6 ADD PUSH2 0x9F5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xC75 DUP2 PUSH2 0x9D6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC8E PUSH0 DUP4 ADD DUP5 PUSH2 0xC6C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xC9E DUP3 PUSH2 0x86E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCAE DUP2 PUSH2 0xC94 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xCC7 PUSH0 DUP4 ADD DUP5 PUSH2 0xCA5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xCE6 JUMPI PUSH2 0xCE5 PUSH2 0x76A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xCF3 DUP9 DUP3 DUP10 ADD PUSH2 0x907 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0xD04 DUP9 DUP3 DUP10 ADD PUSH2 0x907 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0xD15 DUP9 DUP3 DUP10 ADD PUSH2 0x9F5 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0xD26 DUP9 DUP3 DUP10 ADD PUSH2 0x9F5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xD47 JUMPI PUSH2 0xD46 PUSH2 0x76E JUMP JUMPDEST JUMPDEST PUSH2 0xD53 DUP9 DUP3 DUP10 ADD PUSH2 0xB21 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD75 JUMPI PUSH2 0xD74 PUSH2 0x76A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xD82 DUP5 DUP3 DUP6 ADD PUSH2 0x907 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xDA1 JUMPI PUSH2 0xDA0 PUSH2 0x76A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xDAE DUP6 DUP3 DUP7 ADD PUSH2 0x9F5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xDBF DUP6 DUP3 DUP7 ADD PUSH2 0x9F5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x696E636F72726563742073656E64657200000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xE0D PUSH1 0x10 DUP4 PUSH2 0xDC9 JUMP JUMPDEST SWAP2 POP PUSH2 0xE18 DUP3 PUSH2 0xDD9 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xE3A DUP2 PUSH2 0xE01 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x7175616E74697479206973207A65726F00000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xE75 PUSH1 0x10 DUP4 PUSH2 0xDC9 JUMP JUMPDEST SWAP2 POP PUSH2 0xE80 DUP3 PUSH2 0xE41 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xEA2 DUP2 PUSH2 0xE69 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0xEBC PUSH0 DUP4 ADD DUP8 PUSH2 0x8C9 JUMP JUMPDEST PUSH2 0xEC9 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x8C9 JUMP JUMPDEST PUSH2 0xED6 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0xC6C JUMP JUMPDEST PUSH2 0xEE3 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0xC6C JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x746F6B656E4964206973207A65726F0000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xF20 PUSH1 0xF DUP4 PUSH2 0xDC9 JUMP JUMPDEST SWAP2 POP PUSH2 0xF2B DUP3 PUSH2 0xEEC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xF4D DUP2 PUSH2 0xF14 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x7072696365206973207A65726F00000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xF88 PUSH1 0xD DUP4 PUSH2 0xDC9 JUMP JUMPDEST SWAP2 POP PUSH2 0xF93 DUP3 PUSH2 0xF54 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xFB5 DUP2 PUSH2 0xF7C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xFCF PUSH0 DUP4 ADD DUP7 PUSH2 0xC6C JUMP JUMPDEST PUSH2 0xFDC PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xC6C JUMP JUMPDEST PUSH2 0xFE9 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xC6C JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP13 0xD8 DUP16 ADDRESS 0xE1 XOR 0xF7 0xE0 LOG1 0xF6 SWAP9 CALLCODE SWAP1 DUP14 PUSH28 0x88275BC42C8B682749E9EF5473B66D5B7F64736F6C634300081A0033 ",
							"sourceMap": "319:3465:14:-:0;;;1102:419;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1168:12;:10;;;:12;;:::i;:::-;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;1452:14:14::1;1429:11;;:38;;;;;;;;;;;;;;;;;;1500:12;1478;;:35;;;;;;;;;;;;;;;;;;1102:419:::0;;319:3465;;656:96:10;709:7;735:10;728:17;;656:96;:::o;2912:187:0:-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;88:117:15:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:507::-;924:6;932;981:2;969:9;960:7;956:23;952:32;949:119;;;987:79;;:::i;:::-;949:119;1107:1;1132:64;1188:7;1179:6;1168:9;1164:22;1132:64;:::i;:::-;1122:74;;1078:128;1245:2;1271:64;1327:7;1318:6;1307:9;1303:22;1271:64;:::i;:::-;1261:74;;1216:129;845:507;;;;;:::o;1358:118::-;1445:24;1463:5;1445:24;:::i;:::-;1440:3;1433:37;1358:118;;:::o;1482:222::-;1575:4;1613:2;1602:9;1598:18;1590:26;;1626:71;1694:1;1683:9;1679:17;1670:6;1626:71;:::i;:::-;1482:222;;;;:::o;319:3465:14:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_checkOwner_84": {
									"entryPoint": 1554,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_1243": {
									"entryPoint": 1882,
									"id": 1243,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_146": {
									"entryPoint": 1689,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@onERC1155BatchReceived_482": {
									"entryPoint": 724,
									"id": 482,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"@onERC1155Received_1431": {
									"entryPoint": 802,
									"id": 1431,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"@owner_67": {
									"entryPoint": 685,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_98": {
									"entryPoint": 666,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setPrice_1468": {
									"entryPoint": 1224,
									"id": 1468,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@snowmenGame_1339": {
									"entryPoint": 765,
									"id": 1339,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@snowmenToken_1336": {
									"entryPoint": 629,
									"id": 1336,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@supportsInterface_1306": {
									"entryPoint": 1449,
									"id": 1306,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_438": {
									"entryPoint": 508,
									"id": 438,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@tokenPrice_1343": {
									"entryPoint": 744,
									"id": 1343,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_126": {
									"entryPoint": 1092,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 2569,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_bytes_memory_ptr": {
									"entryPoint": 2784,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 2311,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 2673,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4": {
									"entryPoint": 1971,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_memory_ptr": {
									"entryPoint": 2849,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 2549,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 3424,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr": {
									"entryPoint": 2894,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr": {
									"entryPoint": 3277,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 1991,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 3137,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 3467,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2249,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 2045,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes4_to_t_bytes4_fromStack": {
									"entryPoint": 3097,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IERC1155_$360_to_t_address_fromStack": {
									"entryPoint": 3237,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IERC20_$561_to_t_address_fromStack": {
									"entryPoint": 2192,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_240c2a2420364d9260a9d9de5c0bdeaef40ae9271ae29d4c186edd83349afc50_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3860,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_4c1122224259dd0b02fff95af769f256a8450d91cf0444f02e6c136dce106f44_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3689,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_58b0c597f29dac8001964c5c8f94457e37567080fbc7198aa316b42b6379f65b_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3585,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ee8b0754ac04b271c493c71118fe013f51611851aeb777bded224dc19d7cd48c_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3964,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 3180,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 2264,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256__to_t_address_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 3753,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 2060,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed": {
									"entryPoint": 3112,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC1155_$360__to_t_address__fromStack_reversed": {
									"entryPoint": 3252,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$561__to_t_address__fromStack_reversed": {
									"entryPoint": 2207,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_240c2a2420364d9260a9d9de5c0bdeaef40ae9271ae29d4c186edd83349afc50__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3894,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4c1122224259dd0b02fff95af769f256a8450d91cf0444f02e6c136dce106f44__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3723,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_58b0c597f29dac8001964c5c8f94457e37567080fbc7198aa316b42b6379f65b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3619,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ee8b0754ac04b271c493c71118fe013f51611851aeb777bded224dc19d7cd48c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3998,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 3195,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 4028,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 2445,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 1889,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 2471,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_allocation_size_t_bytes_memory_ptr": {
									"entryPoint": 2722,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 3529,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 2232,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 2034,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 1906,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 2085,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 2518,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC1155_$360_to_t_address": {
									"entryPoint": 3220,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC20_$561_to_t_address": {
									"entryPoint": 2175,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 2158,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 2125,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_calldata_to_memory_with_cleanup": {
									"entryPoint": 2770,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"finalize_allocation": {
									"entryPoint": 2396,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 2116,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 2351,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 2331,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef": {
									"entryPoint": 2514,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 2718,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 1902,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1898,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 2335,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_240c2a2420364d9260a9d9de5c0bdeaef40ae9271ae29d4c186edd83349afc50": {
									"entryPoint": 3820,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_4c1122224259dd0b02fff95af769f256a8450d91cf0444f02e6c136dce106f44": {
									"entryPoint": 3649,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_58b0c597f29dac8001964c5c8f94457e37567080fbc7198aa316b42b6379f65b": {
									"entryPoint": 3545,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ee8b0754ac04b271c493c71118fe013f51611851aeb777bded224dc19d7cd48c": {
									"entryPoint": 3924,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 2289,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 1949,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 2527,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:17512:15",
										"nodeType": "YulBlock",
										"src": "0:17512:15",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:15",
													"nodeType": "YulBlock",
													"src": "47:35:15",
													"statements": [
														{
															"nativeSrc": "57:19:15",
															"nodeType": "YulAssignment",
															"src": "57:19:15",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:15",
																		"nodeType": "YulLiteral",
																		"src": "73:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:15"
																},
																"nativeSrc": "67:9:15",
																"nodeType": "YulFunctionCall",
																"src": "67:9:15"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:15"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:15",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:15",
														"nodeType": "YulTypedName",
														"src": "40:6:15",
														"type": ""
													}
												],
												"src": "7:75:15"
											},
											{
												"body": {
													"nativeSrc": "177:28:15",
													"nodeType": "YulBlock",
													"src": "177:28:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:15",
																		"nodeType": "YulLiteral",
																		"src": "194:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:15",
																		"nodeType": "YulLiteral",
																		"src": "197:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:15"
																},
																"nativeSrc": "187:12:15",
																"nodeType": "YulFunctionCall",
																"src": "187:12:15"
															},
															"nativeSrc": "187:12:15",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:15"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:15",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:15"
											},
											{
												"body": {
													"nativeSrc": "300:28:15",
													"nodeType": "YulBlock",
													"src": "300:28:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:15",
																		"nodeType": "YulLiteral",
																		"src": "317:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:15",
																		"nodeType": "YulLiteral",
																		"src": "320:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:15"
																},
																"nativeSrc": "310:12:15",
																"nodeType": "YulFunctionCall",
																"src": "310:12:15"
															},
															"nativeSrc": "310:12:15",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:15"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:15",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:15"
											},
											{
												"body": {
													"nativeSrc": "378:105:15",
													"nodeType": "YulBlock",
													"src": "378:105:15",
													"statements": [
														{
															"nativeSrc": "388:89:15",
															"nodeType": "YulAssignment",
															"src": "388:89:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "403:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "403:5:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "410:66:15",
																		"nodeType": "YulLiteral",
																		"src": "410:66:15",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "399:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "399:3:15"
																},
																"nativeSrc": "399:78:15",
																"nodeType": "YulFunctionCall",
																"src": "399:78:15"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "388:7:15",
																	"nodeType": "YulIdentifier",
																	"src": "388:7:15"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nativeSrc": "334:149:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "360:5:15",
														"nodeType": "YulTypedName",
														"src": "360:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "370:7:15",
														"nodeType": "YulTypedName",
														"src": "370:7:15",
														"type": ""
													}
												],
												"src": "334:149:15"
											},
											{
												"body": {
													"nativeSrc": "531:78:15",
													"nodeType": "YulBlock",
													"src": "531:78:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "587:16:15",
																"nodeType": "YulBlock",
																"src": "587:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "596:1:15",
																					"nodeType": "YulLiteral",
																					"src": "596:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "599:1:15",
																					"nodeType": "YulLiteral",
																					"src": "599:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "589:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "589:6:15"
																			},
																			"nativeSrc": "589:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "589:12:15"
																		},
																		"nativeSrc": "589:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "589:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "554:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "554:5:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "578:5:15",
																						"nodeType": "YulIdentifier",
																						"src": "578:5:15"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nativeSrc": "561:16:15",
																					"nodeType": "YulIdentifier",
																					"src": "561:16:15"
																				},
																				"nativeSrc": "561:23:15",
																				"nodeType": "YulFunctionCall",
																				"src": "561:23:15"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "551:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "551:2:15"
																		},
																		"nativeSrc": "551:34:15",
																		"nodeType": "YulFunctionCall",
																		"src": "551:34:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "544:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "544:6:15"
																},
																"nativeSrc": "544:42:15",
																"nodeType": "YulFunctionCall",
																"src": "544:42:15"
															},
															"nativeSrc": "541:62:15",
															"nodeType": "YulIf",
															"src": "541:62:15"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nativeSrc": "489:120:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "524:5:15",
														"nodeType": "YulTypedName",
														"src": "524:5:15",
														"type": ""
													}
												],
												"src": "489:120:15"
											},
											{
												"body": {
													"nativeSrc": "666:86:15",
													"nodeType": "YulBlock",
													"src": "666:86:15",
													"statements": [
														{
															"nativeSrc": "676:29:15",
															"nodeType": "YulAssignment",
															"src": "676:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "698:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "698:6:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "685:12:15",
																	"nodeType": "YulIdentifier",
																	"src": "685:12:15"
																},
																"nativeSrc": "685:20:15",
																"nodeType": "YulFunctionCall",
																"src": "685:20:15"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "676:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "676:5:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "740:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "740:5:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nativeSrc": "714:25:15",
																	"nodeType": "YulIdentifier",
																	"src": "714:25:15"
																},
																"nativeSrc": "714:32:15",
																"nodeType": "YulFunctionCall",
																"src": "714:32:15"
															},
															"nativeSrc": "714:32:15",
															"nodeType": "YulExpressionStatement",
															"src": "714:32:15"
														}
													]
												},
												"name": "abi_decode_t_bytes4",
												"nativeSrc": "615:137:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "644:6:15",
														"nodeType": "YulTypedName",
														"src": "644:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "652:3:15",
														"nodeType": "YulTypedName",
														"src": "652:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "660:5:15",
														"nodeType": "YulTypedName",
														"src": "660:5:15",
														"type": ""
													}
												],
												"src": "615:137:15"
											},
											{
												"body": {
													"nativeSrc": "823:262:15",
													"nodeType": "YulBlock",
													"src": "823:262:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "869:83:15",
																"nodeType": "YulBlock",
																"src": "869:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "871:77:15",
																				"nodeType": "YulIdentifier",
																				"src": "871:77:15"
																			},
																			"nativeSrc": "871:79:15",
																			"nodeType": "YulFunctionCall",
																			"src": "871:79:15"
																		},
																		"nativeSrc": "871:79:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "871:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "844:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "844:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "853:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "853:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "840:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "840:3:15"
																		},
																		"nativeSrc": "840:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "840:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "865:2:15",
																		"nodeType": "YulLiteral",
																		"src": "865:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "836:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "836:3:15"
																},
																"nativeSrc": "836:32:15",
																"nodeType": "YulFunctionCall",
																"src": "836:32:15"
															},
															"nativeSrc": "833:119:15",
															"nodeType": "YulIf",
															"src": "833:119:15"
														},
														{
															"nativeSrc": "962:116:15",
															"nodeType": "YulBlock",
															"src": "962:116:15",
															"statements": [
																{
																	"nativeSrc": "977:15:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "977:15:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "991:1:15",
																		"nodeType": "YulLiteral",
																		"src": "991:1:15",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "981:6:15",
																			"nodeType": "YulTypedName",
																			"src": "981:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1006:62:15",
																	"nodeType": "YulAssignment",
																	"src": "1006:62:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1040:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "1040:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1051:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "1051:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1036:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "1036:3:15"
																				},
																				"nativeSrc": "1036:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "1036:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1060:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "1060:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4",
																			"nativeSrc": "1016:19:15",
																			"nodeType": "YulIdentifier",
																			"src": "1016:19:15"
																		},
																		"nativeSrc": "1016:52:15",
																		"nodeType": "YulFunctionCall",
																		"src": "1016:52:15"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1006:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "1006:6:15"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nativeSrc": "758:327:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "793:9:15",
														"nodeType": "YulTypedName",
														"src": "793:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "804:7:15",
														"nodeType": "YulTypedName",
														"src": "804:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "816:6:15",
														"nodeType": "YulTypedName",
														"src": "816:6:15",
														"type": ""
													}
												],
												"src": "758:327:15"
											},
											{
												"body": {
													"nativeSrc": "1133:48:15",
													"nodeType": "YulBlock",
													"src": "1133:48:15",
													"statements": [
														{
															"nativeSrc": "1143:32:15",
															"nodeType": "YulAssignment",
															"src": "1143:32:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1168:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "1168:5:15"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1161:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "1161:6:15"
																		},
																		"nativeSrc": "1161:13:15",
																		"nodeType": "YulFunctionCall",
																		"src": "1161:13:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1154:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "1154:6:15"
																},
																"nativeSrc": "1154:21:15",
																"nodeType": "YulFunctionCall",
																"src": "1154:21:15"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1143:7:15",
																	"nodeType": "YulIdentifier",
																	"src": "1143:7:15"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "1091:90:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1115:5:15",
														"nodeType": "YulTypedName",
														"src": "1115:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1125:7:15",
														"nodeType": "YulTypedName",
														"src": "1125:7:15",
														"type": ""
													}
												],
												"src": "1091:90:15"
											},
											{
												"body": {
													"nativeSrc": "1246:50:15",
													"nodeType": "YulBlock",
													"src": "1246:50:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1263:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "1263:3:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1283:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "1283:5:15"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "1268:14:15",
																			"nodeType": "YulIdentifier",
																			"src": "1268:14:15"
																		},
																		"nativeSrc": "1268:21:15",
																		"nodeType": "YulFunctionCall",
																		"src": "1268:21:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1256:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "1256:6:15"
																},
																"nativeSrc": "1256:34:15",
																"nodeType": "YulFunctionCall",
																"src": "1256:34:15"
															},
															"nativeSrc": "1256:34:15",
															"nodeType": "YulExpressionStatement",
															"src": "1256:34:15"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "1187:109:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1234:5:15",
														"nodeType": "YulTypedName",
														"src": "1234:5:15",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1241:3:15",
														"nodeType": "YulTypedName",
														"src": "1241:3:15",
														"type": ""
													}
												],
												"src": "1187:109:15"
											},
											{
												"body": {
													"nativeSrc": "1394:118:15",
													"nodeType": "YulBlock",
													"src": "1394:118:15",
													"statements": [
														{
															"nativeSrc": "1404:26:15",
															"nodeType": "YulAssignment",
															"src": "1404:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1416:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "1416:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1427:2:15",
																		"nodeType": "YulLiteral",
																		"src": "1427:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1412:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "1412:3:15"
																},
																"nativeSrc": "1412:18:15",
																"nodeType": "YulFunctionCall",
																"src": "1412:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1404:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "1404:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1478:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "1478:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1491:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "1491:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1502:1:15",
																				"nodeType": "YulLiteral",
																				"src": "1502:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1487:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "1487:3:15"
																		},
																		"nativeSrc": "1487:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "1487:17:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "1440:37:15",
																	"nodeType": "YulIdentifier",
																	"src": "1440:37:15"
																},
																"nativeSrc": "1440:65:15",
																"nodeType": "YulFunctionCall",
																"src": "1440:65:15"
															},
															"nativeSrc": "1440:65:15",
															"nodeType": "YulExpressionStatement",
															"src": "1440:65:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1302:210:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1366:9:15",
														"nodeType": "YulTypedName",
														"src": "1366:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1378:6:15",
														"nodeType": "YulTypedName",
														"src": "1378:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1389:4:15",
														"nodeType": "YulTypedName",
														"src": "1389:4:15",
														"type": ""
													}
												],
												"src": "1302:210:15"
											},
											{
												"body": {
													"nativeSrc": "1563:81:15",
													"nodeType": "YulBlock",
													"src": "1563:81:15",
													"statements": [
														{
															"nativeSrc": "1573:65:15",
															"nodeType": "YulAssignment",
															"src": "1573:65:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1588:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "1588:5:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1595:42:15",
																		"nodeType": "YulLiteral",
																		"src": "1595:42:15",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1584:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "1584:3:15"
																},
																"nativeSrc": "1584:54:15",
																"nodeType": "YulFunctionCall",
																"src": "1584:54:15"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1573:7:15",
																	"nodeType": "YulIdentifier",
																	"src": "1573:7:15"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1518:126:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1545:5:15",
														"nodeType": "YulTypedName",
														"src": "1545:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1555:7:15",
														"nodeType": "YulTypedName",
														"src": "1555:7:15",
														"type": ""
													}
												],
												"src": "1518:126:15"
											},
											{
												"body": {
													"nativeSrc": "1682:28:15",
													"nodeType": "YulBlock",
													"src": "1682:28:15",
													"statements": [
														{
															"nativeSrc": "1692:12:15",
															"nodeType": "YulAssignment",
															"src": "1692:12:15",
															"value": {
																"name": "value",
																"nativeSrc": "1699:5:15",
																"nodeType": "YulIdentifier",
																"src": "1699:5:15"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "1692:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "1692:3:15"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "1650:60:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1668:5:15",
														"nodeType": "YulTypedName",
														"src": "1668:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "1678:3:15",
														"nodeType": "YulTypedName",
														"src": "1678:3:15",
														"type": ""
													}
												],
												"src": "1650:60:15"
											},
											{
												"body": {
													"nativeSrc": "1776:82:15",
													"nodeType": "YulBlock",
													"src": "1776:82:15",
													"statements": [
														{
															"nativeSrc": "1786:66:15",
															"nodeType": "YulAssignment",
															"src": "1786:66:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1844:5:15",
																						"nodeType": "YulIdentifier",
																						"src": "1844:5:15"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "1826:17:15",
																					"nodeType": "YulIdentifier",
																					"src": "1826:17:15"
																				},
																				"nativeSrc": "1826:24:15",
																				"nodeType": "YulFunctionCall",
																				"src": "1826:24:15"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "1817:8:15",
																			"nodeType": "YulIdentifier",
																			"src": "1817:8:15"
																		},
																		"nativeSrc": "1817:34:15",
																		"nodeType": "YulFunctionCall",
																		"src": "1817:34:15"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1799:17:15",
																	"nodeType": "YulIdentifier",
																	"src": "1799:17:15"
																},
																"nativeSrc": "1799:53:15",
																"nodeType": "YulFunctionCall",
																"src": "1799:53:15"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "1786:9:15",
																	"nodeType": "YulIdentifier",
																	"src": "1786:9:15"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nativeSrc": "1716:142:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1756:5:15",
														"nodeType": "YulTypedName",
														"src": "1756:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "1766:9:15",
														"nodeType": "YulTypedName",
														"src": "1766:9:15",
														"type": ""
													}
												],
												"src": "1716:142:15"
											},
											{
												"body": {
													"nativeSrc": "1924:66:15",
													"nodeType": "YulBlock",
													"src": "1924:66:15",
													"statements": [
														{
															"nativeSrc": "1934:50:15",
															"nodeType": "YulAssignment",
															"src": "1934:50:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1978:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "1978:5:15"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nativeSrc": "1947:30:15",
																	"nodeType": "YulIdentifier",
																	"src": "1947:30:15"
																},
																"nativeSrc": "1947:37:15",
																"nodeType": "YulFunctionCall",
																"src": "1947:37:15"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "1934:9:15",
																	"nodeType": "YulIdentifier",
																	"src": "1934:9:15"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nativeSrc": "1864:126:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1904:5:15",
														"nodeType": "YulTypedName",
														"src": "1904:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "1914:9:15",
														"nodeType": "YulTypedName",
														"src": "1914:9:15",
														"type": ""
													}
												],
												"src": "1864:126:15"
											},
											{
												"body": {
													"nativeSrc": "2070:66:15",
													"nodeType": "YulBlock",
													"src": "2070:66:15",
													"statements": [
														{
															"nativeSrc": "2080:50:15",
															"nodeType": "YulAssignment",
															"src": "2080:50:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2124:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "2124:5:15"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "2093:30:15",
																	"nodeType": "YulIdentifier",
																	"src": "2093:30:15"
																},
																"nativeSrc": "2093:37:15",
																"nodeType": "YulFunctionCall",
																"src": "2093:37:15"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "2080:9:15",
																	"nodeType": "YulIdentifier",
																	"src": "2080:9:15"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC20_$561_to_t_address",
												"nativeSrc": "1996:140:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2050:5:15",
														"nodeType": "YulTypedName",
														"src": "2050:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "2060:9:15",
														"nodeType": "YulTypedName",
														"src": "2060:9:15",
														"type": ""
													}
												],
												"src": "1996:140:15"
											},
											{
												"body": {
													"nativeSrc": "2221:80:15",
													"nodeType": "YulBlock",
													"src": "2221:80:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2238:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "2238:3:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2288:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "2288:5:15"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC20_$561_to_t_address",
																			"nativeSrc": "2243:44:15",
																			"nodeType": "YulIdentifier",
																			"src": "2243:44:15"
																		},
																		"nativeSrc": "2243:51:15",
																		"nodeType": "YulFunctionCall",
																		"src": "2243:51:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2231:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "2231:6:15"
																},
																"nativeSrc": "2231:64:15",
																"nodeType": "YulFunctionCall",
																"src": "2231:64:15"
															},
															"nativeSrc": "2231:64:15",
															"nodeType": "YulExpressionStatement",
															"src": "2231:64:15"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC20_$561_to_t_address_fromStack",
												"nativeSrc": "2142:159:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2209:5:15",
														"nodeType": "YulTypedName",
														"src": "2209:5:15",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2216:3:15",
														"nodeType": "YulTypedName",
														"src": "2216:3:15",
														"type": ""
													}
												],
												"src": "2142:159:15"
											},
											{
												"body": {
													"nativeSrc": "2419:138:15",
													"nodeType": "YulBlock",
													"src": "2419:138:15",
													"statements": [
														{
															"nativeSrc": "2429:26:15",
															"nodeType": "YulAssignment",
															"src": "2429:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2441:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "2441:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2452:2:15",
																		"nodeType": "YulLiteral",
																		"src": "2452:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2437:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "2437:3:15"
																},
																"nativeSrc": "2437:18:15",
																"nodeType": "YulFunctionCall",
																"src": "2437:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2429:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "2429:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2523:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "2523:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2536:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "2536:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2547:1:15",
																				"nodeType": "YulLiteral",
																				"src": "2547:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2532:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "2532:3:15"
																		},
																		"nativeSrc": "2532:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "2532:17:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20_$561_to_t_address_fromStack",
																	"nativeSrc": "2465:57:15",
																	"nodeType": "YulIdentifier",
																	"src": "2465:57:15"
																},
																"nativeSrc": "2465:85:15",
																"nodeType": "YulFunctionCall",
																"src": "2465:85:15"
															},
															"nativeSrc": "2465:85:15",
															"nodeType": "YulExpressionStatement",
															"src": "2465:85:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$561__to_t_address__fromStack_reversed",
												"nativeSrc": "2307:250:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2391:9:15",
														"nodeType": "YulTypedName",
														"src": "2391:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2403:6:15",
														"nodeType": "YulTypedName",
														"src": "2403:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2414:4:15",
														"nodeType": "YulTypedName",
														"src": "2414:4:15",
														"type": ""
													}
												],
												"src": "2307:250:15"
											},
											{
												"body": {
													"nativeSrc": "2608:51:15",
													"nodeType": "YulBlock",
													"src": "2608:51:15",
													"statements": [
														{
															"nativeSrc": "2618:35:15",
															"nodeType": "YulAssignment",
															"src": "2618:35:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2647:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "2647:5:15"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "2629:17:15",
																	"nodeType": "YulIdentifier",
																	"src": "2629:17:15"
																},
																"nativeSrc": "2629:24:15",
																"nodeType": "YulFunctionCall",
																"src": "2629:24:15"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2618:7:15",
																	"nodeType": "YulIdentifier",
																	"src": "2618:7:15"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "2563:96:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2590:5:15",
														"nodeType": "YulTypedName",
														"src": "2590:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2600:7:15",
														"nodeType": "YulTypedName",
														"src": "2600:7:15",
														"type": ""
													}
												],
												"src": "2563:96:15"
											},
											{
												"body": {
													"nativeSrc": "2730:53:15",
													"nodeType": "YulBlock",
													"src": "2730:53:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2747:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "2747:3:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2770:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "2770:5:15"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "2752:17:15",
																			"nodeType": "YulIdentifier",
																			"src": "2752:17:15"
																		},
																		"nativeSrc": "2752:24:15",
																		"nodeType": "YulFunctionCall",
																		"src": "2752:24:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2740:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "2740:6:15"
																},
																"nativeSrc": "2740:37:15",
																"nodeType": "YulFunctionCall",
																"src": "2740:37:15"
															},
															"nativeSrc": "2740:37:15",
															"nodeType": "YulExpressionStatement",
															"src": "2740:37:15"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "2665:118:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2718:5:15",
														"nodeType": "YulTypedName",
														"src": "2718:5:15",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2725:3:15",
														"nodeType": "YulTypedName",
														"src": "2725:3:15",
														"type": ""
													}
												],
												"src": "2665:118:15"
											},
											{
												"body": {
													"nativeSrc": "2887:124:15",
													"nodeType": "YulBlock",
													"src": "2887:124:15",
													"statements": [
														{
															"nativeSrc": "2897:26:15",
															"nodeType": "YulAssignment",
															"src": "2897:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2909:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "2909:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2920:2:15",
																		"nodeType": "YulLiteral",
																		"src": "2920:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2905:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "2905:3:15"
																},
																"nativeSrc": "2905:18:15",
																"nodeType": "YulFunctionCall",
																"src": "2905:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2897:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "2897:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2977:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "2977:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2990:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "2990:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3001:1:15",
																				"nodeType": "YulLiteral",
																				"src": "3001:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2986:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "2986:3:15"
																		},
																		"nativeSrc": "2986:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "2986:17:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "2933:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "2933:43:15"
																},
																"nativeSrc": "2933:71:15",
																"nodeType": "YulFunctionCall",
																"src": "2933:71:15"
															},
															"nativeSrc": "2933:71:15",
															"nodeType": "YulExpressionStatement",
															"src": "2933:71:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "2789:222:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2859:9:15",
														"nodeType": "YulTypedName",
														"src": "2859:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2871:6:15",
														"nodeType": "YulTypedName",
														"src": "2871:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2882:4:15",
														"nodeType": "YulTypedName",
														"src": "2882:4:15",
														"type": ""
													}
												],
												"src": "2789:222:15"
											},
											{
												"body": {
													"nativeSrc": "3060:79:15",
													"nodeType": "YulBlock",
													"src": "3060:79:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "3117:16:15",
																"nodeType": "YulBlock",
																"src": "3117:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3126:1:15",
																					"nodeType": "YulLiteral",
																					"src": "3126:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3129:1:15",
																					"nodeType": "YulLiteral",
																					"src": "3129:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3119:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "3119:6:15"
																			},
																			"nativeSrc": "3119:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "3119:12:15"
																		},
																		"nativeSrc": "3119:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "3119:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3083:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "3083:5:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3108:5:15",
																						"nodeType": "YulIdentifier",
																						"src": "3108:5:15"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "3090:17:15",
																					"nodeType": "YulIdentifier",
																					"src": "3090:17:15"
																				},
																				"nativeSrc": "3090:24:15",
																				"nodeType": "YulFunctionCall",
																				"src": "3090:24:15"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3080:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "3080:2:15"
																		},
																		"nativeSrc": "3080:35:15",
																		"nodeType": "YulFunctionCall",
																		"src": "3080:35:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3073:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "3073:6:15"
																},
																"nativeSrc": "3073:43:15",
																"nodeType": "YulFunctionCall",
																"src": "3073:43:15"
															},
															"nativeSrc": "3070:63:15",
															"nodeType": "YulIf",
															"src": "3070:63:15"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "3017:122:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3053:5:15",
														"nodeType": "YulTypedName",
														"src": "3053:5:15",
														"type": ""
													}
												],
												"src": "3017:122:15"
											},
											{
												"body": {
													"nativeSrc": "3197:87:15",
													"nodeType": "YulBlock",
													"src": "3197:87:15",
													"statements": [
														{
															"nativeSrc": "3207:29:15",
															"nodeType": "YulAssignment",
															"src": "3207:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3229:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "3229:6:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3216:12:15",
																	"nodeType": "YulIdentifier",
																	"src": "3216:12:15"
																},
																"nativeSrc": "3216:20:15",
																"nodeType": "YulFunctionCall",
																"src": "3216:20:15"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3207:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "3207:5:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3272:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "3272:5:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "3245:26:15",
																	"nodeType": "YulIdentifier",
																	"src": "3245:26:15"
																},
																"nativeSrc": "3245:33:15",
																"nodeType": "YulFunctionCall",
																"src": "3245:33:15"
															},
															"nativeSrc": "3245:33:15",
															"nodeType": "YulExpressionStatement",
															"src": "3245:33:15"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "3145:139:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3175:6:15",
														"nodeType": "YulTypedName",
														"src": "3175:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3183:3:15",
														"nodeType": "YulTypedName",
														"src": "3183:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3191:5:15",
														"nodeType": "YulTypedName",
														"src": "3191:5:15",
														"type": ""
													}
												],
												"src": "3145:139:15"
											},
											{
												"body": {
													"nativeSrc": "3379:28:15",
													"nodeType": "YulBlock",
													"src": "3379:28:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3396:1:15",
																		"nodeType": "YulLiteral",
																		"src": "3396:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3399:1:15",
																		"nodeType": "YulLiteral",
																		"src": "3399:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "3389:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "3389:6:15"
																},
																"nativeSrc": "3389:12:15",
																"nodeType": "YulFunctionCall",
																"src": "3389:12:15"
															},
															"nativeSrc": "3389:12:15",
															"nodeType": "YulExpressionStatement",
															"src": "3389:12:15"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "3290:117:15",
												"nodeType": "YulFunctionDefinition",
												"src": "3290:117:15"
											},
											{
												"body": {
													"nativeSrc": "3461:54:15",
													"nodeType": "YulBlock",
													"src": "3461:54:15",
													"statements": [
														{
															"nativeSrc": "3471:38:15",
															"nodeType": "YulAssignment",
															"src": "3471:38:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3489:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "3489:5:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3496:2:15",
																				"nodeType": "YulLiteral",
																				"src": "3496:2:15",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3485:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "3485:3:15"
																		},
																		"nativeSrc": "3485:14:15",
																		"nodeType": "YulFunctionCall",
																		"src": "3485:14:15"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "3505:2:15",
																				"nodeType": "YulLiteral",
																				"src": "3505:2:15",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "3501:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "3501:3:15"
																		},
																		"nativeSrc": "3501:7:15",
																		"nodeType": "YulFunctionCall",
																		"src": "3501:7:15"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3481:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "3481:3:15"
																},
																"nativeSrc": "3481:28:15",
																"nodeType": "YulFunctionCall",
																"src": "3481:28:15"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "3471:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "3471:6:15"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "3413:102:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3444:5:15",
														"nodeType": "YulTypedName",
														"src": "3444:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "3454:6:15",
														"nodeType": "YulTypedName",
														"src": "3454:6:15",
														"type": ""
													}
												],
												"src": "3413:102:15"
											},
											{
												"body": {
													"nativeSrc": "3549:152:15",
													"nodeType": "YulBlock",
													"src": "3549:152:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3566:1:15",
																		"nodeType": "YulLiteral",
																		"src": "3566:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3569:77:15",
																		"nodeType": "YulLiteral",
																		"src": "3569:77:15",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3559:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "3559:6:15"
																},
																"nativeSrc": "3559:88:15",
																"nodeType": "YulFunctionCall",
																"src": "3559:88:15"
															},
															"nativeSrc": "3559:88:15",
															"nodeType": "YulExpressionStatement",
															"src": "3559:88:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3663:1:15",
																		"nodeType": "YulLiteral",
																		"src": "3663:1:15",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3666:4:15",
																		"nodeType": "YulLiteral",
																		"src": "3666:4:15",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3656:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "3656:6:15"
																},
																"nativeSrc": "3656:15:15",
																"nodeType": "YulFunctionCall",
																"src": "3656:15:15"
															},
															"nativeSrc": "3656:15:15",
															"nodeType": "YulExpressionStatement",
															"src": "3656:15:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3687:1:15",
																		"nodeType": "YulLiteral",
																		"src": "3687:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3690:4:15",
																		"nodeType": "YulLiteral",
																		"src": "3690:4:15",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "3680:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "3680:6:15"
																},
																"nativeSrc": "3680:15:15",
																"nodeType": "YulFunctionCall",
																"src": "3680:15:15"
															},
															"nativeSrc": "3680:15:15",
															"nodeType": "YulExpressionStatement",
															"src": "3680:15:15"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "3521:180:15",
												"nodeType": "YulFunctionDefinition",
												"src": "3521:180:15"
											},
											{
												"body": {
													"nativeSrc": "3750:238:15",
													"nodeType": "YulBlock",
													"src": "3750:238:15",
													"statements": [
														{
															"nativeSrc": "3760:58:15",
															"nodeType": "YulVariableDeclaration",
															"src": "3760:58:15",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "3782:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "3782:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "3812:4:15",
																				"nodeType": "YulIdentifier",
																				"src": "3812:4:15"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "3790:21:15",
																			"nodeType": "YulIdentifier",
																			"src": "3790:21:15"
																		},
																		"nativeSrc": "3790:27:15",
																		"nodeType": "YulFunctionCall",
																		"src": "3790:27:15"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3778:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "3778:3:15"
																},
																"nativeSrc": "3778:40:15",
																"nodeType": "YulFunctionCall",
																"src": "3778:40:15"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "3764:10:15",
																	"nodeType": "YulTypedName",
																	"src": "3764:10:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3929:22:15",
																"nodeType": "YulBlock",
																"src": "3929:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "3931:16:15",
																				"nodeType": "YulIdentifier",
																				"src": "3931:16:15"
																			},
																			"nativeSrc": "3931:18:15",
																			"nodeType": "YulFunctionCall",
																			"src": "3931:18:15"
																		},
																		"nativeSrc": "3931:18:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "3931:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "3872:10:15",
																				"nodeType": "YulIdentifier",
																				"src": "3872:10:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3884:18:15",
																				"nodeType": "YulLiteral",
																				"src": "3884:18:15",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "3869:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "3869:2:15"
																		},
																		"nativeSrc": "3869:34:15",
																		"nodeType": "YulFunctionCall",
																		"src": "3869:34:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "3908:10:15",
																				"nodeType": "YulIdentifier",
																				"src": "3908:10:15"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "3920:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "3920:6:15"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "3905:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "3905:2:15"
																		},
																		"nativeSrc": "3905:22:15",
																		"nodeType": "YulFunctionCall",
																		"src": "3905:22:15"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "3866:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "3866:2:15"
																},
																"nativeSrc": "3866:62:15",
																"nodeType": "YulFunctionCall",
																"src": "3866:62:15"
															},
															"nativeSrc": "3863:88:15",
															"nodeType": "YulIf",
															"src": "3863:88:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3967:2:15",
																		"nodeType": "YulLiteral",
																		"src": "3967:2:15",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "3971:10:15",
																		"nodeType": "YulIdentifier",
																		"src": "3971:10:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3960:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "3960:6:15"
																},
																"nativeSrc": "3960:22:15",
																"nodeType": "YulFunctionCall",
																"src": "3960:22:15"
															},
															"nativeSrc": "3960:22:15",
															"nodeType": "YulExpressionStatement",
															"src": "3960:22:15"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "3707:281:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "3736:6:15",
														"nodeType": "YulTypedName",
														"src": "3736:6:15",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "3744:4:15",
														"nodeType": "YulTypedName",
														"src": "3744:4:15",
														"type": ""
													}
												],
												"src": "3707:281:15"
											},
											{
												"body": {
													"nativeSrc": "4035:88:15",
													"nodeType": "YulBlock",
													"src": "4035:88:15",
													"statements": [
														{
															"nativeSrc": "4045:30:15",
															"nodeType": "YulAssignment",
															"src": "4045:30:15",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "4055:18:15",
																	"nodeType": "YulIdentifier",
																	"src": "4055:18:15"
																},
																"nativeSrc": "4055:20:15",
																"nodeType": "YulFunctionCall",
																"src": "4055:20:15"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "4045:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "4045:6:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "4104:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "4104:6:15"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "4112:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "4112:4:15"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "4084:19:15",
																	"nodeType": "YulIdentifier",
																	"src": "4084:19:15"
																},
																"nativeSrc": "4084:33:15",
																"nodeType": "YulFunctionCall",
																"src": "4084:33:15"
															},
															"nativeSrc": "4084:33:15",
															"nodeType": "YulExpressionStatement",
															"src": "4084:33:15"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "3994:129:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "4019:4:15",
														"nodeType": "YulTypedName",
														"src": "4019:4:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "4028:6:15",
														"nodeType": "YulTypedName",
														"src": "4028:6:15",
														"type": ""
													}
												],
												"src": "3994:129:15"
											},
											{
												"body": {
													"nativeSrc": "4211:229:15",
													"nodeType": "YulBlock",
													"src": "4211:229:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "4316:22:15",
																"nodeType": "YulBlock",
																"src": "4316:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "4318:16:15",
																				"nodeType": "YulIdentifier",
																				"src": "4318:16:15"
																			},
																			"nativeSrc": "4318:18:15",
																			"nodeType": "YulFunctionCall",
																			"src": "4318:18:15"
																		},
																		"nativeSrc": "4318:18:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "4318:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "4288:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "4288:6:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4296:18:15",
																		"nodeType": "YulLiteral",
																		"src": "4296:18:15",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4285:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "4285:2:15"
																},
																"nativeSrc": "4285:30:15",
																"nodeType": "YulFunctionCall",
																"src": "4285:30:15"
															},
															"nativeSrc": "4282:56:15",
															"nodeType": "YulIf",
															"src": "4282:56:15"
														},
														{
															"nativeSrc": "4348:25:15",
															"nodeType": "YulAssignment",
															"src": "4348:25:15",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "4360:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "4360:6:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4368:4:15",
																		"nodeType": "YulLiteral",
																		"src": "4368:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "4356:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "4356:3:15"
																},
																"nativeSrc": "4356:17:15",
																"nodeType": "YulFunctionCall",
																"src": "4356:17:15"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "4348:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "4348:4:15"
																}
															]
														},
														{
															"nativeSrc": "4410:23:15",
															"nodeType": "YulAssignment",
															"src": "4410:23:15",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "4422:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "4422:4:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4428:4:15",
																		"nodeType": "YulLiteral",
																		"src": "4428:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4418:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "4418:3:15"
																},
																"nativeSrc": "4418:15:15",
																"nodeType": "YulFunctionCall",
																"src": "4418:15:15"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "4410:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "4410:4:15"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr",
												"nativeSrc": "4129:311:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "4195:6:15",
														"nodeType": "YulTypedName",
														"src": "4195:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "4206:4:15",
														"nodeType": "YulTypedName",
														"src": "4206:4:15",
														"type": ""
													}
												],
												"src": "4129:311:15"
											},
											{
												"body": {
													"nativeSrc": "4535:28:15",
													"nodeType": "YulBlock",
													"src": "4535:28:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4552:1:15",
																		"nodeType": "YulLiteral",
																		"src": "4552:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4555:1:15",
																		"nodeType": "YulLiteral",
																		"src": "4555:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "4545:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "4545:6:15"
																},
																"nativeSrc": "4545:12:15",
																"nodeType": "YulFunctionCall",
																"src": "4545:12:15"
															},
															"nativeSrc": "4545:12:15",
															"nodeType": "YulExpressionStatement",
															"src": "4545:12:15"
														}
													]
												},
												"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
												"nativeSrc": "4446:117:15",
												"nodeType": "YulFunctionDefinition",
												"src": "4446:117:15"
											},
											{
												"body": {
													"nativeSrc": "4614:32:15",
													"nodeType": "YulBlock",
													"src": "4614:32:15",
													"statements": [
														{
															"nativeSrc": "4624:16:15",
															"nodeType": "YulAssignment",
															"src": "4624:16:15",
															"value": {
																"name": "value",
																"nativeSrc": "4635:5:15",
																"nodeType": "YulIdentifier",
																"src": "4635:5:15"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "4624:7:15",
																	"nodeType": "YulIdentifier",
																	"src": "4624:7:15"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "4569:77:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4596:5:15",
														"nodeType": "YulTypedName",
														"src": "4596:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "4606:7:15",
														"nodeType": "YulTypedName",
														"src": "4606:7:15",
														"type": ""
													}
												],
												"src": "4569:77:15"
											},
											{
												"body": {
													"nativeSrc": "4695:79:15",
													"nodeType": "YulBlock",
													"src": "4695:79:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "4752:16:15",
																"nodeType": "YulBlock",
																"src": "4752:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4761:1:15",
																					"nodeType": "YulLiteral",
																					"src": "4761:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4764:1:15",
																					"nodeType": "YulLiteral",
																					"src": "4764:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4754:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "4754:6:15"
																			},
																			"nativeSrc": "4754:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "4754:12:15"
																		},
																		"nativeSrc": "4754:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "4754:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4718:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "4718:5:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4743:5:15",
																						"nodeType": "YulIdentifier",
																						"src": "4743:5:15"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "4725:17:15",
																					"nodeType": "YulIdentifier",
																					"src": "4725:17:15"
																				},
																				"nativeSrc": "4725:24:15",
																				"nodeType": "YulFunctionCall",
																				"src": "4725:24:15"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "4715:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "4715:2:15"
																		},
																		"nativeSrc": "4715:35:15",
																		"nodeType": "YulFunctionCall",
																		"src": "4715:35:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4708:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "4708:6:15"
																},
																"nativeSrc": "4708:43:15",
																"nodeType": "YulFunctionCall",
																"src": "4708:43:15"
															},
															"nativeSrc": "4705:63:15",
															"nodeType": "YulIf",
															"src": "4705:63:15"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "4652:122:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4688:5:15",
														"nodeType": "YulTypedName",
														"src": "4688:5:15",
														"type": ""
													}
												],
												"src": "4652:122:15"
											},
											{
												"body": {
													"nativeSrc": "4832:87:15",
													"nodeType": "YulBlock",
													"src": "4832:87:15",
													"statements": [
														{
															"nativeSrc": "4842:29:15",
															"nodeType": "YulAssignment",
															"src": "4842:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "4864:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "4864:6:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4851:12:15",
																	"nodeType": "YulIdentifier",
																	"src": "4851:12:15"
																},
																"nativeSrc": "4851:20:15",
																"nodeType": "YulFunctionCall",
																"src": "4851:20:15"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "4842:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "4842:5:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4907:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "4907:5:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "4880:26:15",
																	"nodeType": "YulIdentifier",
																	"src": "4880:26:15"
																},
																"nativeSrc": "4880:33:15",
																"nodeType": "YulFunctionCall",
																"src": "4880:33:15"
															},
															"nativeSrc": "4880:33:15",
															"nodeType": "YulExpressionStatement",
															"src": "4880:33:15"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "4780:139:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "4810:6:15",
														"nodeType": "YulTypedName",
														"src": "4810:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "4818:3:15",
														"nodeType": "YulTypedName",
														"src": "4818:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "4826:5:15",
														"nodeType": "YulTypedName",
														"src": "4826:5:15",
														"type": ""
													}
												],
												"src": "4780:139:15"
											},
											{
												"body": {
													"nativeSrc": "5044:608:15",
													"nodeType": "YulBlock",
													"src": "5044:608:15",
													"statements": [
														{
															"nativeSrc": "5054:90:15",
															"nodeType": "YulAssignment",
															"src": "5054:90:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "5136:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "5136:6:15"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr",
																			"nativeSrc": "5079:56:15",
																			"nodeType": "YulIdentifier",
																			"src": "5079:56:15"
																		},
																		"nativeSrc": "5079:64:15",
																		"nodeType": "YulFunctionCall",
																		"src": "5079:64:15"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "5063:15:15",
																	"nodeType": "YulIdentifier",
																	"src": "5063:15:15"
																},
																"nativeSrc": "5063:81:15",
																"nodeType": "YulFunctionCall",
																"src": "5063:81:15"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "5054:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "5054:5:15"
																}
															]
														},
														{
															"nativeSrc": "5153:16:15",
															"nodeType": "YulVariableDeclaration",
															"src": "5153:16:15",
															"value": {
																"name": "array",
																"nativeSrc": "5164:5:15",
																"nodeType": "YulIdentifier",
																"src": "5164:5:15"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "5157:3:15",
																	"nodeType": "YulTypedName",
																	"src": "5157:3:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "5186:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "5186:5:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "5193:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "5193:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5179:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "5179:6:15"
																},
																"nativeSrc": "5179:21:15",
																"nodeType": "YulFunctionCall",
																"src": "5179:21:15"
															},
															"nativeSrc": "5179:21:15",
															"nodeType": "YulExpressionStatement",
															"src": "5179:21:15"
														},
														{
															"nativeSrc": "5209:23:15",
															"nodeType": "YulAssignment",
															"src": "5209:23:15",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "5220:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "5220:5:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5227:4:15",
																		"nodeType": "YulLiteral",
																		"src": "5227:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5216:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "5216:3:15"
																},
																"nativeSrc": "5216:16:15",
																"nodeType": "YulFunctionCall",
																"src": "5216:16:15"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nativeSrc": "5209:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "5209:3:15"
																}
															]
														},
														{
															"nativeSrc": "5242:44:15",
															"nodeType": "YulVariableDeclaration",
															"src": "5242:44:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "5260:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "5260:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "5272:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "5272:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5280:4:15",
																				"nodeType": "YulLiteral",
																				"src": "5280:4:15",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "5268:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "5268:3:15"
																		},
																		"nativeSrc": "5268:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "5268:17:15"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5256:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "5256:3:15"
																},
																"nativeSrc": "5256:30:15",
																"nodeType": "YulFunctionCall",
																"src": "5256:30:15"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nativeSrc": "5246:6:15",
																	"nodeType": "YulTypedName",
																	"src": "5246:6:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5314:103:15",
																"nodeType": "YulBlock",
																"src": "5314:103:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nativeSrc": "5328:77:15",
																				"nodeType": "YulIdentifier",
																				"src": "5328:77:15"
																			},
																			"nativeSrc": "5328:79:15",
																			"nodeType": "YulFunctionCall",
																			"src": "5328:79:15"
																		},
																		"nativeSrc": "5328:79:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "5328:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nativeSrc": "5301:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "5301:6:15"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "5309:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "5309:3:15"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5298:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "5298:2:15"
																},
																"nativeSrc": "5298:15:15",
																"nodeType": "YulFunctionCall",
																"src": "5298:15:15"
															},
															"nativeSrc": "5295:122:15",
															"nodeType": "YulIf",
															"src": "5295:122:15"
														},
														{
															"body": {
																"nativeSrc": "5502:144:15",
																"nodeType": "YulBlock",
																"src": "5502:144:15",
																"statements": [
																	{
																		"nativeSrc": "5517:21:15",
																		"nodeType": "YulVariableDeclaration",
																		"src": "5517:21:15",
																		"value": {
																			"name": "src",
																			"nativeSrc": "5535:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "5535:3:15"
																		},
																		"variables": [
																			{
																				"name": "elementPos",
																				"nativeSrc": "5521:10:15",
																				"nodeType": "YulTypedName",
																				"src": "5521:10:15",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nativeSrc": "5559:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "5559:3:15"
																				},
																				{
																					"arguments": [
																						{
																							"name": "elementPos",
																							"nativeSrc": "5585:10:15",
																							"nodeType": "YulIdentifier",
																							"src": "5585:10:15"
																						},
																						{
																							"name": "end",
																							"nativeSrc": "5597:3:15",
																							"nodeType": "YulIdentifier",
																							"src": "5597:3:15"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_t_uint256",
																						"nativeSrc": "5564:20:15",
																						"nodeType": "YulIdentifier",
																						"src": "5564:20:15"
																					},
																					"nativeSrc": "5564:37:15",
																					"nodeType": "YulFunctionCall",
																					"src": "5564:37:15"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "5552:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "5552:6:15"
																			},
																			"nativeSrc": "5552:50:15",
																			"nodeType": "YulFunctionCall",
																			"src": "5552:50:15"
																		},
																		"nativeSrc": "5552:50:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "5552:50:15"
																	},
																	{
																		"nativeSrc": "5615:21:15",
																		"nodeType": "YulAssignment",
																		"src": "5615:21:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nativeSrc": "5626:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "5626:3:15"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5631:4:15",
																					"nodeType": "YulLiteral",
																					"src": "5631:4:15",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "5622:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "5622:3:15"
																			},
																			"nativeSrc": "5622:14:15",
																			"nodeType": "YulFunctionCall",
																			"src": "5622:14:15"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nativeSrc": "5615:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "5615:3:15"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "5455:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "5455:3:15"
																	},
																	{
																		"name": "srcEnd",
																		"nativeSrc": "5460:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "5460:6:15"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "5452:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "5452:2:15"
																},
																"nativeSrc": "5452:15:15",
																"nodeType": "YulFunctionCall",
																"src": "5452:15:15"
															},
															"nativeSrc": "5426:220:15",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "5468:25:15",
																"nodeType": "YulBlock",
																"src": "5468:25:15",
																"statements": [
																	{
																		"nativeSrc": "5470:21:15",
																		"nodeType": "YulAssignment",
																		"src": "5470:21:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nativeSrc": "5481:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "5481:3:15"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5486:4:15",
																					"nodeType": "YulLiteral",
																					"src": "5486:4:15",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "5477:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "5477:3:15"
																			},
																			"nativeSrc": "5477:14:15",
																			"nodeType": "YulFunctionCall",
																			"src": "5477:14:15"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nativeSrc": "5470:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "5470:3:15"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "5430:21:15",
																"nodeType": "YulBlock",
																"src": "5430:21:15",
																"statements": [
																	{
																		"nativeSrc": "5432:17:15",
																		"nodeType": "YulVariableDeclaration",
																		"src": "5432:17:15",
																		"value": {
																			"name": "offset",
																			"nativeSrc": "5443:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "5443:6:15"
																		},
																		"variables": [
																			{
																				"name": "src",
																				"nativeSrc": "5436:3:15",
																				"nodeType": "YulTypedName",
																				"src": "5436:3:15",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "5426:220:15"
														}
													]
												},
												"name": "abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr",
												"nativeSrc": "4942:710:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "5014:6:15",
														"nodeType": "YulTypedName",
														"src": "5014:6:15",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "5022:6:15",
														"nodeType": "YulTypedName",
														"src": "5022:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "5030:3:15",
														"nodeType": "YulTypedName",
														"src": "5030:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "5038:5:15",
														"nodeType": "YulTypedName",
														"src": "5038:5:15",
														"type": ""
													}
												],
												"src": "4942:710:15"
											},
											{
												"body": {
													"nativeSrc": "5752:293:15",
													"nodeType": "YulBlock",
													"src": "5752:293:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "5801:83:15",
																"nodeType": "YulBlock",
																"src": "5801:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "5803:77:15",
																				"nodeType": "YulIdentifier",
																				"src": "5803:77:15"
																			},
																			"nativeSrc": "5803:79:15",
																			"nodeType": "YulFunctionCall",
																			"src": "5803:79:15"
																		},
																		"nativeSrc": "5803:79:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "5803:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "5780:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "5780:6:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5788:4:15",
																						"nodeType": "YulLiteral",
																						"src": "5788:4:15",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5776:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "5776:3:15"
																				},
																				"nativeSrc": "5776:17:15",
																				"nodeType": "YulFunctionCall",
																				"src": "5776:17:15"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "5795:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "5795:3:15"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "5772:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "5772:3:15"
																		},
																		"nativeSrc": "5772:27:15",
																		"nodeType": "YulFunctionCall",
																		"src": "5772:27:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5765:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "5765:6:15"
																},
																"nativeSrc": "5765:35:15",
																"nodeType": "YulFunctionCall",
																"src": "5765:35:15"
															},
															"nativeSrc": "5762:122:15",
															"nodeType": "YulIf",
															"src": "5762:122:15"
														},
														{
															"nativeSrc": "5893:34:15",
															"nodeType": "YulVariableDeclaration",
															"src": "5893:34:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "5920:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "5920:6:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "5907:12:15",
																	"nodeType": "YulIdentifier",
																	"src": "5907:12:15"
																},
																"nativeSrc": "5907:20:15",
																"nodeType": "YulFunctionCall",
																"src": "5907:20:15"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "5897:6:15",
																	"nodeType": "YulTypedName",
																	"src": "5897:6:15",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5936:103:15",
															"nodeType": "YulAssignment",
															"src": "5936:103:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "6012:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "6012:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6020:4:15",
																				"nodeType": "YulLiteral",
																				"src": "6020:4:15",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6008:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "6008:3:15"
																		},
																		"nativeSrc": "6008:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "6008:17:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6027:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "6027:6:15"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "6035:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "6035:3:15"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr",
																	"nativeSrc": "5945:62:15",
																	"nodeType": "YulIdentifier",
																	"src": "5945:62:15"
																},
																"nativeSrc": "5945:94:15",
																"nodeType": "YulFunctionCall",
																"src": "5945:94:15"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "5936:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "5936:5:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
												"nativeSrc": "5675:370:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "5730:6:15",
														"nodeType": "YulTypedName",
														"src": "5730:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "5738:3:15",
														"nodeType": "YulTypedName",
														"src": "5738:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "5746:5:15",
														"nodeType": "YulTypedName",
														"src": "5746:5:15",
														"type": ""
													}
												],
												"src": "5675:370:15"
											},
											{
												"body": {
													"nativeSrc": "6140:28:15",
													"nodeType": "YulBlock",
													"src": "6140:28:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6157:1:15",
																		"nodeType": "YulLiteral",
																		"src": "6157:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6160:1:15",
																		"nodeType": "YulLiteral",
																		"src": "6160:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6150:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "6150:6:15"
																},
																"nativeSrc": "6150:12:15",
																"nodeType": "YulFunctionCall",
																"src": "6150:12:15"
															},
															"nativeSrc": "6150:12:15",
															"nodeType": "YulExpressionStatement",
															"src": "6150:12:15"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nativeSrc": "6051:117:15",
												"nodeType": "YulFunctionDefinition",
												"src": "6051:117:15"
											},
											{
												"body": {
													"nativeSrc": "6240:241:15",
													"nodeType": "YulBlock",
													"src": "6240:241:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "6345:22:15",
																"nodeType": "YulBlock",
																"src": "6345:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "6347:16:15",
																				"nodeType": "YulIdentifier",
																				"src": "6347:16:15"
																			},
																			"nativeSrc": "6347:18:15",
																			"nodeType": "YulFunctionCall",
																			"src": "6347:18:15"
																		},
																		"nativeSrc": "6347:18:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "6347:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "6317:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "6317:6:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6325:18:15",
																		"nodeType": "YulLiteral",
																		"src": "6325:18:15",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6314:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "6314:2:15"
																},
																"nativeSrc": "6314:30:15",
																"nodeType": "YulFunctionCall",
																"src": "6314:30:15"
															},
															"nativeSrc": "6311:56:15",
															"nodeType": "YulIf",
															"src": "6311:56:15"
														},
														{
															"nativeSrc": "6377:37:15",
															"nodeType": "YulAssignment",
															"src": "6377:37:15",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "6407:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "6407:6:15"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "6385:21:15",
																	"nodeType": "YulIdentifier",
																	"src": "6385:21:15"
																},
																"nativeSrc": "6385:29:15",
																"nodeType": "YulFunctionCall",
																"src": "6385:29:15"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "6377:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "6377:4:15"
																}
															]
														},
														{
															"nativeSrc": "6451:23:15",
															"nodeType": "YulAssignment",
															"src": "6451:23:15",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "6463:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "6463:4:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6469:4:15",
																		"nodeType": "YulLiteral",
																		"src": "6469:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6459:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "6459:3:15"
																},
																"nativeSrc": "6459:15:15",
																"nodeType": "YulFunctionCall",
																"src": "6459:15:15"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "6451:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "6451:4:15"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_bytes_memory_ptr",
												"nativeSrc": "6174:307:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "6224:6:15",
														"nodeType": "YulTypedName",
														"src": "6224:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "6235:4:15",
														"nodeType": "YulTypedName",
														"src": "6235:4:15",
														"type": ""
													}
												],
												"src": "6174:307:15"
											},
											{
												"body": {
													"nativeSrc": "6551:84:15",
													"nodeType": "YulBlock",
													"src": "6551:84:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "6575:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "6575:3:15"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "6580:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "6580:3:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6585:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "6585:6:15"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "6562:12:15",
																	"nodeType": "YulIdentifier",
																	"src": "6562:12:15"
																},
																"nativeSrc": "6562:30:15",
																"nodeType": "YulFunctionCall",
																"src": "6562:30:15"
															},
															"nativeSrc": "6562:30:15",
															"nodeType": "YulExpressionStatement",
															"src": "6562:30:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "6612:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "6612:3:15"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "6617:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "6617:6:15"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6608:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "6608:3:15"
																		},
																		"nativeSrc": "6608:16:15",
																		"nodeType": "YulFunctionCall",
																		"src": "6608:16:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6626:1:15",
																		"nodeType": "YulLiteral",
																		"src": "6626:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6601:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "6601:6:15"
																},
																"nativeSrc": "6601:27:15",
																"nodeType": "YulFunctionCall",
																"src": "6601:27:15"
															},
															"nativeSrc": "6601:27:15",
															"nodeType": "YulExpressionStatement",
															"src": "6601:27:15"
														}
													]
												},
												"name": "copy_calldata_to_memory_with_cleanup",
												"nativeSrc": "6487:148:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "6533:3:15",
														"nodeType": "YulTypedName",
														"src": "6533:3:15",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "6538:3:15",
														"nodeType": "YulTypedName",
														"src": "6538:3:15",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "6543:6:15",
														"nodeType": "YulTypedName",
														"src": "6543:6:15",
														"type": ""
													}
												],
												"src": "6487:148:15"
											},
											{
												"body": {
													"nativeSrc": "6724:340:15",
													"nodeType": "YulBlock",
													"src": "6724:340:15",
													"statements": [
														{
															"nativeSrc": "6734:74:15",
															"nodeType": "YulAssignment",
															"src": "6734:74:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "6800:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "6800:6:15"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_bytes_memory_ptr",
																			"nativeSrc": "6759:40:15",
																			"nodeType": "YulIdentifier",
																			"src": "6759:40:15"
																		},
																		"nativeSrc": "6759:48:15",
																		"nodeType": "YulFunctionCall",
																		"src": "6759:48:15"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "6743:15:15",
																	"nodeType": "YulIdentifier",
																	"src": "6743:15:15"
																},
																"nativeSrc": "6743:65:15",
																"nodeType": "YulFunctionCall",
																"src": "6743:65:15"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "6734:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "6734:5:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "6824:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "6824:5:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6831:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "6831:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6817:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "6817:6:15"
																},
																"nativeSrc": "6817:21:15",
																"nodeType": "YulFunctionCall",
																"src": "6817:21:15"
															},
															"nativeSrc": "6817:21:15",
															"nodeType": "YulExpressionStatement",
															"src": "6817:21:15"
														},
														{
															"nativeSrc": "6847:27:15",
															"nodeType": "YulVariableDeclaration",
															"src": "6847:27:15",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "6862:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "6862:5:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6869:4:15",
																		"nodeType": "YulLiteral",
																		"src": "6869:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6858:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "6858:3:15"
																},
																"nativeSrc": "6858:16:15",
																"nodeType": "YulFunctionCall",
																"src": "6858:16:15"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "6851:3:15",
																	"nodeType": "YulTypedName",
																	"src": "6851:3:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6912:83:15",
																"nodeType": "YulBlock",
																"src": "6912:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "6914:77:15",
																				"nodeType": "YulIdentifier",
																				"src": "6914:77:15"
																			},
																			"nativeSrc": "6914:79:15",
																			"nodeType": "YulFunctionCall",
																			"src": "6914:79:15"
																		},
																		"nativeSrc": "6914:79:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "6914:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "6893:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "6893:3:15"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "6898:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "6898:6:15"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6889:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "6889:3:15"
																		},
																		"nativeSrc": "6889:16:15",
																		"nodeType": "YulFunctionCall",
																		"src": "6889:16:15"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "6907:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "6907:3:15"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6886:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "6886:2:15"
																},
																"nativeSrc": "6886:25:15",
																"nodeType": "YulFunctionCall",
																"src": "6886:25:15"
															},
															"nativeSrc": "6883:112:15",
															"nodeType": "YulIf",
															"src": "6883:112:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "7041:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "7041:3:15"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "7046:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "7046:3:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7051:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "7051:6:15"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nativeSrc": "7004:36:15",
																	"nodeType": "YulIdentifier",
																	"src": "7004:36:15"
																},
																"nativeSrc": "7004:54:15",
																"nodeType": "YulFunctionCall",
																"src": "7004:54:15"
															},
															"nativeSrc": "7004:54:15",
															"nodeType": "YulExpressionStatement",
															"src": "7004:54:15"
														}
													]
												},
												"name": "abi_decode_available_length_t_bytes_memory_ptr",
												"nativeSrc": "6641:423:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "6697:3:15",
														"nodeType": "YulTypedName",
														"src": "6697:3:15",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "6702:6:15",
														"nodeType": "YulTypedName",
														"src": "6702:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "6710:3:15",
														"nodeType": "YulTypedName",
														"src": "6710:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "6718:5:15",
														"nodeType": "YulTypedName",
														"src": "6718:5:15",
														"type": ""
													}
												],
												"src": "6641:423:15"
											},
											{
												"body": {
													"nativeSrc": "7144:277:15",
													"nodeType": "YulBlock",
													"src": "7144:277:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "7193:83:15",
																"nodeType": "YulBlock",
																"src": "7193:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "7195:77:15",
																				"nodeType": "YulIdentifier",
																				"src": "7195:77:15"
																			},
																			"nativeSrc": "7195:79:15",
																			"nodeType": "YulFunctionCall",
																			"src": "7195:79:15"
																		},
																		"nativeSrc": "7195:79:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "7195:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "7172:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "7172:6:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7180:4:15",
																						"nodeType": "YulLiteral",
																						"src": "7180:4:15",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7168:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "7168:3:15"
																				},
																				"nativeSrc": "7168:17:15",
																				"nodeType": "YulFunctionCall",
																				"src": "7168:17:15"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "7187:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "7187:3:15"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "7164:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "7164:3:15"
																		},
																		"nativeSrc": "7164:27:15",
																		"nodeType": "YulFunctionCall",
																		"src": "7164:27:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7157:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "7157:6:15"
																},
																"nativeSrc": "7157:35:15",
																"nodeType": "YulFunctionCall",
																"src": "7157:35:15"
															},
															"nativeSrc": "7154:122:15",
															"nodeType": "YulIf",
															"src": "7154:122:15"
														},
														{
															"nativeSrc": "7285:34:15",
															"nodeType": "YulVariableDeclaration",
															"src": "7285:34:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "7312:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "7312:6:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "7299:12:15",
																	"nodeType": "YulIdentifier",
																	"src": "7299:12:15"
																},
																"nativeSrc": "7299:20:15",
																"nodeType": "YulFunctionCall",
																"src": "7299:20:15"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "7289:6:15",
																	"nodeType": "YulTypedName",
																	"src": "7289:6:15",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7328:87:15",
															"nodeType": "YulAssignment",
															"src": "7328:87:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "7388:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "7388:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7396:4:15",
																				"nodeType": "YulLiteral",
																				"src": "7396:4:15",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7384:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "7384:3:15"
																		},
																		"nativeSrc": "7384:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "7384:17:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7403:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "7403:6:15"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "7411:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "7411:3:15"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_bytes_memory_ptr",
																	"nativeSrc": "7337:46:15",
																	"nodeType": "YulIdentifier",
																	"src": "7337:46:15"
																},
																"nativeSrc": "7337:78:15",
																"nodeType": "YulFunctionCall",
																"src": "7337:78:15"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "7328:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "7328:5:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_bytes_memory_ptr",
												"nativeSrc": "7083:338:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "7122:6:15",
														"nodeType": "YulTypedName",
														"src": "7122:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "7130:3:15",
														"nodeType": "YulTypedName",
														"src": "7130:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "7138:5:15",
														"nodeType": "YulTypedName",
														"src": "7138:5:15",
														"type": ""
													}
												],
												"src": "7083:338:15"
											},
											{
												"body": {
													"nativeSrc": "7620:1316:15",
													"nodeType": "YulBlock",
													"src": "7620:1316:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "7667:83:15",
																"nodeType": "YulBlock",
																"src": "7667:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "7669:77:15",
																				"nodeType": "YulIdentifier",
																				"src": "7669:77:15"
																			},
																			"nativeSrc": "7669:79:15",
																			"nodeType": "YulFunctionCall",
																			"src": "7669:79:15"
																		},
																		"nativeSrc": "7669:79:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "7669:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7641:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "7641:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7650:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "7650:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7637:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "7637:3:15"
																		},
																		"nativeSrc": "7637:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "7637:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7662:3:15",
																		"nodeType": "YulLiteral",
																		"src": "7662:3:15",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7633:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "7633:3:15"
																},
																"nativeSrc": "7633:33:15",
																"nodeType": "YulFunctionCall",
																"src": "7633:33:15"
															},
															"nativeSrc": "7630:120:15",
															"nodeType": "YulIf",
															"src": "7630:120:15"
														},
														{
															"nativeSrc": "7760:117:15",
															"nodeType": "YulBlock",
															"src": "7760:117:15",
															"statements": [
																{
																	"nativeSrc": "7775:15:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7775:15:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7789:1:15",
																		"nodeType": "YulLiteral",
																		"src": "7789:1:15",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7779:6:15",
																			"nodeType": "YulTypedName",
																			"src": "7779:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7804:63:15",
																	"nodeType": "YulAssignment",
																	"src": "7804:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7839:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "7839:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7850:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "7850:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7835:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "7835:3:15"
																				},
																				"nativeSrc": "7835:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "7835:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7859:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "7859:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "7814:20:15",
																			"nodeType": "YulIdentifier",
																			"src": "7814:20:15"
																		},
																		"nativeSrc": "7814:53:15",
																		"nodeType": "YulFunctionCall",
																		"src": "7814:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "7804:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "7804:6:15"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "7887:118:15",
															"nodeType": "YulBlock",
															"src": "7887:118:15",
															"statements": [
																{
																	"nativeSrc": "7902:16:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7902:16:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7916:2:15",
																		"nodeType": "YulLiteral",
																		"src": "7916:2:15",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7906:6:15",
																			"nodeType": "YulTypedName",
																			"src": "7906:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7932:63:15",
																	"nodeType": "YulAssignment",
																	"src": "7932:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7967:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "7967:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7978:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "7978:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7963:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "7963:3:15"
																				},
																				"nativeSrc": "7963:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "7963:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7987:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "7987:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "7942:20:15",
																			"nodeType": "YulIdentifier",
																			"src": "7942:20:15"
																		},
																		"nativeSrc": "7942:53:15",
																		"nodeType": "YulFunctionCall",
																		"src": "7942:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "7932:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "7932:6:15"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "8015:303:15",
															"nodeType": "YulBlock",
															"src": "8015:303:15",
															"statements": [
																{
																	"nativeSrc": "8030:46:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8030:46:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8061:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "8061:9:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8072:2:15",
																						"nodeType": "YulLiteral",
																						"src": "8072:2:15",
																						"type": "",
																						"value": "64"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8057:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "8057:3:15"
																				},
																				"nativeSrc": "8057:18:15",
																				"nodeType": "YulFunctionCall",
																				"src": "8057:18:15"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "8044:12:15",
																			"nodeType": "YulIdentifier",
																			"src": "8044:12:15"
																		},
																		"nativeSrc": "8044:32:15",
																		"nodeType": "YulFunctionCall",
																		"src": "8044:32:15"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8034:6:15",
																			"nodeType": "YulTypedName",
																			"src": "8034:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "8123:83:15",
																		"nodeType": "YulBlock",
																		"src": "8123:83:15",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "8125:77:15",
																						"nodeType": "YulIdentifier",
																						"src": "8125:77:15"
																					},
																					"nativeSrc": "8125:79:15",
																					"nodeType": "YulFunctionCall",
																					"src": "8125:79:15"
																				},
																				"nativeSrc": "8125:79:15",
																				"nodeType": "YulExpressionStatement",
																				"src": "8125:79:15"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "8095:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "8095:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8103:18:15",
																				"nodeType": "YulLiteral",
																				"src": "8103:18:15",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "8092:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "8092:2:15"
																		},
																		"nativeSrc": "8092:30:15",
																		"nodeType": "YulFunctionCall",
																		"src": "8092:30:15"
																	},
																	"nativeSrc": "8089:117:15",
																	"nodeType": "YulIf",
																	"src": "8089:117:15"
																},
																{
																	"nativeSrc": "8220:88:15",
																	"nodeType": "YulAssignment",
																	"src": "8220:88:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8280:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "8280:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8291:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "8291:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8276:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "8276:3:15"
																				},
																				"nativeSrc": "8276:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "8276:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8300:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "8300:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
																			"nativeSrc": "8230:45:15",
																			"nodeType": "YulIdentifier",
																			"src": "8230:45:15"
																		},
																		"nativeSrc": "8230:78:15",
																		"nodeType": "YulFunctionCall",
																		"src": "8230:78:15"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "8220:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "8220:6:15"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "8328:303:15",
															"nodeType": "YulBlock",
															"src": "8328:303:15",
															"statements": [
																{
																	"nativeSrc": "8343:46:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8343:46:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8374:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "8374:9:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8385:2:15",
																						"nodeType": "YulLiteral",
																						"src": "8385:2:15",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8370:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "8370:3:15"
																				},
																				"nativeSrc": "8370:18:15",
																				"nodeType": "YulFunctionCall",
																				"src": "8370:18:15"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "8357:12:15",
																			"nodeType": "YulIdentifier",
																			"src": "8357:12:15"
																		},
																		"nativeSrc": "8357:32:15",
																		"nodeType": "YulFunctionCall",
																		"src": "8357:32:15"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8347:6:15",
																			"nodeType": "YulTypedName",
																			"src": "8347:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "8436:83:15",
																		"nodeType": "YulBlock",
																		"src": "8436:83:15",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "8438:77:15",
																						"nodeType": "YulIdentifier",
																						"src": "8438:77:15"
																					},
																					"nativeSrc": "8438:79:15",
																					"nodeType": "YulFunctionCall",
																					"src": "8438:79:15"
																				},
																				"nativeSrc": "8438:79:15",
																				"nodeType": "YulExpressionStatement",
																				"src": "8438:79:15"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "8408:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "8408:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8416:18:15",
																				"nodeType": "YulLiteral",
																				"src": "8416:18:15",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "8405:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "8405:2:15"
																		},
																		"nativeSrc": "8405:30:15",
																		"nodeType": "YulFunctionCall",
																		"src": "8405:30:15"
																	},
																	"nativeSrc": "8402:117:15",
																	"nodeType": "YulIf",
																	"src": "8402:117:15"
																},
																{
																	"nativeSrc": "8533:88:15",
																	"nodeType": "YulAssignment",
																	"src": "8533:88:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8593:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "8593:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8604:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "8604:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8589:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "8589:3:15"
																				},
																				"nativeSrc": "8589:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "8589:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8613:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "8613:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
																			"nativeSrc": "8543:45:15",
																			"nodeType": "YulIdentifier",
																			"src": "8543:45:15"
																		},
																		"nativeSrc": "8543:78:15",
																		"nodeType": "YulFunctionCall",
																		"src": "8543:78:15"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "8533:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "8533:6:15"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "8641:288:15",
															"nodeType": "YulBlock",
															"src": "8641:288:15",
															"statements": [
																{
																	"nativeSrc": "8656:47:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8656:47:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8687:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "8687:9:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8698:3:15",
																						"nodeType": "YulLiteral",
																						"src": "8698:3:15",
																						"type": "",
																						"value": "128"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8683:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "8683:3:15"
																				},
																				"nativeSrc": "8683:19:15",
																				"nodeType": "YulFunctionCall",
																				"src": "8683:19:15"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "8670:12:15",
																			"nodeType": "YulIdentifier",
																			"src": "8670:12:15"
																		},
																		"nativeSrc": "8670:33:15",
																		"nodeType": "YulFunctionCall",
																		"src": "8670:33:15"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8660:6:15",
																			"nodeType": "YulTypedName",
																			"src": "8660:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "8750:83:15",
																		"nodeType": "YulBlock",
																		"src": "8750:83:15",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "8752:77:15",
																						"nodeType": "YulIdentifier",
																						"src": "8752:77:15"
																					},
																					"nativeSrc": "8752:79:15",
																					"nodeType": "YulFunctionCall",
																					"src": "8752:79:15"
																				},
																				"nativeSrc": "8752:79:15",
																				"nodeType": "YulExpressionStatement",
																				"src": "8752:79:15"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "8722:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "8722:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8730:18:15",
																				"nodeType": "YulLiteral",
																				"src": "8730:18:15",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "8719:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "8719:2:15"
																		},
																		"nativeSrc": "8719:30:15",
																		"nodeType": "YulFunctionCall",
																		"src": "8719:30:15"
																	},
																	"nativeSrc": "8716:117:15",
																	"nodeType": "YulIf",
																	"src": "8716:117:15"
																},
																{
																	"nativeSrc": "8847:72:15",
																	"nodeType": "YulAssignment",
																	"src": "8847:72:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8891:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "8891:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8902:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "8902:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8887:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "8887:3:15"
																				},
																				"nativeSrc": "8887:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "8887:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8911:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "8911:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nativeSrc": "8857:29:15",
																			"nodeType": "YulIdentifier",
																			"src": "8857:29:15"
																		},
																		"nativeSrc": "8857:62:15",
																		"nodeType": "YulFunctionCall",
																		"src": "8857:62:15"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nativeSrc": "8847:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "8847:6:15"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr",
												"nativeSrc": "7427:1509:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7558:9:15",
														"nodeType": "YulTypedName",
														"src": "7558:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7569:7:15",
														"nodeType": "YulTypedName",
														"src": "7569:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7581:6:15",
														"nodeType": "YulTypedName",
														"src": "7581:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7589:6:15",
														"nodeType": "YulTypedName",
														"src": "7589:6:15",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "7597:6:15",
														"nodeType": "YulTypedName",
														"src": "7597:6:15",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "7605:6:15",
														"nodeType": "YulTypedName",
														"src": "7605:6:15",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "7613:6:15",
														"nodeType": "YulTypedName",
														"src": "7613:6:15",
														"type": ""
													}
												],
												"src": "7427:1509:15"
											},
											{
												"body": {
													"nativeSrc": "9005:52:15",
													"nodeType": "YulBlock",
													"src": "9005:52:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9022:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "9022:3:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "9044:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "9044:5:15"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes4",
																			"nativeSrc": "9027:16:15",
																			"nodeType": "YulIdentifier",
																			"src": "9027:16:15"
																		},
																		"nativeSrc": "9027:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "9027:23:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9015:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "9015:6:15"
																},
																"nativeSrc": "9015:36:15",
																"nodeType": "YulFunctionCall",
																"src": "9015:36:15"
															},
															"nativeSrc": "9015:36:15",
															"nodeType": "YulExpressionStatement",
															"src": "9015:36:15"
														}
													]
												},
												"name": "abi_encode_t_bytes4_to_t_bytes4_fromStack",
												"nativeSrc": "8942:115:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8993:5:15",
														"nodeType": "YulTypedName",
														"src": "8993:5:15",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "9000:3:15",
														"nodeType": "YulTypedName",
														"src": "9000:3:15",
														"type": ""
													}
												],
												"src": "8942:115:15"
											},
											{
												"body": {
													"nativeSrc": "9159:122:15",
													"nodeType": "YulBlock",
													"src": "9159:122:15",
													"statements": [
														{
															"nativeSrc": "9169:26:15",
															"nodeType": "YulAssignment",
															"src": "9169:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9181:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "9181:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9192:2:15",
																		"nodeType": "YulLiteral",
																		"src": "9192:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9177:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "9177:3:15"
																},
																"nativeSrc": "9177:18:15",
																"nodeType": "YulFunctionCall",
																"src": "9177:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9169:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "9169:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9247:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "9247:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9260:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "9260:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9271:1:15",
																				"nodeType": "YulLiteral",
																				"src": "9271:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9256:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "9256:3:15"
																		},
																		"nativeSrc": "9256:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "9256:17:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes4_to_t_bytes4_fromStack",
																	"nativeSrc": "9205:41:15",
																	"nodeType": "YulIdentifier",
																	"src": "9205:41:15"
																},
																"nativeSrc": "9205:69:15",
																"nodeType": "YulFunctionCall",
																"src": "9205:69:15"
															},
															"nativeSrc": "9205:69:15",
															"nodeType": "YulExpressionStatement",
															"src": "9205:69:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed",
												"nativeSrc": "9063:218:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9131:9:15",
														"nodeType": "YulTypedName",
														"src": "9131:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9143:6:15",
														"nodeType": "YulTypedName",
														"src": "9143:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9154:4:15",
														"nodeType": "YulTypedName",
														"src": "9154:4:15",
														"type": ""
													}
												],
												"src": "9063:218:15"
											},
											{
												"body": {
													"nativeSrc": "9353:263:15",
													"nodeType": "YulBlock",
													"src": "9353:263:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "9399:83:15",
																"nodeType": "YulBlock",
																"src": "9399:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "9401:77:15",
																				"nodeType": "YulIdentifier",
																				"src": "9401:77:15"
																			},
																			"nativeSrc": "9401:79:15",
																			"nodeType": "YulFunctionCall",
																			"src": "9401:79:15"
																		},
																		"nativeSrc": "9401:79:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "9401:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9374:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "9374:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9383:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "9383:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9370:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "9370:3:15"
																		},
																		"nativeSrc": "9370:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "9370:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9395:2:15",
																		"nodeType": "YulLiteral",
																		"src": "9395:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "9366:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "9366:3:15"
																},
																"nativeSrc": "9366:32:15",
																"nodeType": "YulFunctionCall",
																"src": "9366:32:15"
															},
															"nativeSrc": "9363:119:15",
															"nodeType": "YulIf",
															"src": "9363:119:15"
														},
														{
															"nativeSrc": "9492:117:15",
															"nodeType": "YulBlock",
															"src": "9492:117:15",
															"statements": [
																{
																	"nativeSrc": "9507:15:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9507:15:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9521:1:15",
																		"nodeType": "YulLiteral",
																		"src": "9521:1:15",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9511:6:15",
																			"nodeType": "YulTypedName",
																			"src": "9511:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9536:63:15",
																	"nodeType": "YulAssignment",
																	"src": "9536:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9571:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "9571:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9582:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "9582:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9567:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "9567:3:15"
																				},
																				"nativeSrc": "9567:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "9567:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9591:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "9591:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "9546:20:15",
																			"nodeType": "YulIdentifier",
																			"src": "9546:20:15"
																		},
																		"nativeSrc": "9546:53:15",
																		"nodeType": "YulFunctionCall",
																		"src": "9546:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "9536:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "9536:6:15"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "9287:329:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9323:9:15",
														"nodeType": "YulTypedName",
														"src": "9323:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "9334:7:15",
														"nodeType": "YulTypedName",
														"src": "9334:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "9346:6:15",
														"nodeType": "YulTypedName",
														"src": "9346:6:15",
														"type": ""
													}
												],
												"src": "9287:329:15"
											},
											{
												"body": {
													"nativeSrc": "9687:53:15",
													"nodeType": "YulBlock",
													"src": "9687:53:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9704:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "9704:3:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "9727:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "9727:5:15"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "9709:17:15",
																			"nodeType": "YulIdentifier",
																			"src": "9709:17:15"
																		},
																		"nativeSrc": "9709:24:15",
																		"nodeType": "YulFunctionCall",
																		"src": "9709:24:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9697:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "9697:6:15"
																},
																"nativeSrc": "9697:37:15",
																"nodeType": "YulFunctionCall",
																"src": "9697:37:15"
															},
															"nativeSrc": "9697:37:15",
															"nodeType": "YulExpressionStatement",
															"src": "9697:37:15"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "9622:118:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9675:5:15",
														"nodeType": "YulTypedName",
														"src": "9675:5:15",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "9682:3:15",
														"nodeType": "YulTypedName",
														"src": "9682:3:15",
														"type": ""
													}
												],
												"src": "9622:118:15"
											},
											{
												"body": {
													"nativeSrc": "9844:124:15",
													"nodeType": "YulBlock",
													"src": "9844:124:15",
													"statements": [
														{
															"nativeSrc": "9854:26:15",
															"nodeType": "YulAssignment",
															"src": "9854:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9866:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "9866:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9877:2:15",
																		"nodeType": "YulLiteral",
																		"src": "9877:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9862:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "9862:3:15"
																},
																"nativeSrc": "9862:18:15",
																"nodeType": "YulFunctionCall",
																"src": "9862:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9854:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "9854:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9934:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "9934:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9947:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "9947:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9958:1:15",
																				"nodeType": "YulLiteral",
																				"src": "9958:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9943:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "9943:3:15"
																		},
																		"nativeSrc": "9943:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "9943:17:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "9890:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "9890:43:15"
																},
																"nativeSrc": "9890:71:15",
																"nodeType": "YulFunctionCall",
																"src": "9890:71:15"
															},
															"nativeSrc": "9890:71:15",
															"nodeType": "YulExpressionStatement",
															"src": "9890:71:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "9746:222:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9816:9:15",
														"nodeType": "YulTypedName",
														"src": "9816:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9828:6:15",
														"nodeType": "YulTypedName",
														"src": "9828:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9839:4:15",
														"nodeType": "YulTypedName",
														"src": "9839:4:15",
														"type": ""
													}
												],
												"src": "9746:222:15"
											},
											{
												"body": {
													"nativeSrc": "10050:66:15",
													"nodeType": "YulBlock",
													"src": "10050:66:15",
													"statements": [
														{
															"nativeSrc": "10060:50:15",
															"nodeType": "YulAssignment",
															"src": "10060:50:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "10104:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "10104:5:15"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "10073:30:15",
																	"nodeType": "YulIdentifier",
																	"src": "10073:30:15"
																},
																"nativeSrc": "10073:37:15",
																"nodeType": "YulFunctionCall",
																"src": "10073:37:15"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "10060:9:15",
																	"nodeType": "YulIdentifier",
																	"src": "10060:9:15"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC1155_$360_to_t_address",
												"nativeSrc": "9974:142:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10030:5:15",
														"nodeType": "YulTypedName",
														"src": "10030:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "10040:9:15",
														"nodeType": "YulTypedName",
														"src": "10040:9:15",
														"type": ""
													}
												],
												"src": "9974:142:15"
											},
											{
												"body": {
													"nativeSrc": "10203:82:15",
													"nodeType": "YulBlock",
													"src": "10203:82:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10220:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "10220:3:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "10272:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "10272:5:15"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC1155_$360_to_t_address",
																			"nativeSrc": "10225:46:15",
																			"nodeType": "YulIdentifier",
																			"src": "10225:46:15"
																		},
																		"nativeSrc": "10225:53:15",
																		"nodeType": "YulFunctionCall",
																		"src": "10225:53:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10213:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "10213:6:15"
																},
																"nativeSrc": "10213:66:15",
																"nodeType": "YulFunctionCall",
																"src": "10213:66:15"
															},
															"nativeSrc": "10213:66:15",
															"nodeType": "YulExpressionStatement",
															"src": "10213:66:15"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC1155_$360_to_t_address_fromStack",
												"nativeSrc": "10122:163:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10191:5:15",
														"nodeType": "YulTypedName",
														"src": "10191:5:15",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "10198:3:15",
														"nodeType": "YulTypedName",
														"src": "10198:3:15",
														"type": ""
													}
												],
												"src": "10122:163:15"
											},
											{
												"body": {
													"nativeSrc": "10405:140:15",
													"nodeType": "YulBlock",
													"src": "10405:140:15",
													"statements": [
														{
															"nativeSrc": "10415:26:15",
															"nodeType": "YulAssignment",
															"src": "10415:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10427:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "10427:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10438:2:15",
																		"nodeType": "YulLiteral",
																		"src": "10438:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10423:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "10423:3:15"
																},
																"nativeSrc": "10423:18:15",
																"nodeType": "YulFunctionCall",
																"src": "10423:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10415:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "10415:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "10511:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "10511:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10524:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "10524:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10535:1:15",
																				"nodeType": "YulLiteral",
																				"src": "10535:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10520:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "10520:3:15"
																		},
																		"nativeSrc": "10520:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "10520:17:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC1155_$360_to_t_address_fromStack",
																	"nativeSrc": "10451:59:15",
																	"nodeType": "YulIdentifier",
																	"src": "10451:59:15"
																},
																"nativeSrc": "10451:87:15",
																"nodeType": "YulFunctionCall",
																"src": "10451:87:15"
															},
															"nativeSrc": "10451:87:15",
															"nodeType": "YulExpressionStatement",
															"src": "10451:87:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC1155_$360__to_t_address__fromStack_reversed",
												"nativeSrc": "10291:254:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10377:9:15",
														"nodeType": "YulTypedName",
														"src": "10377:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10389:6:15",
														"nodeType": "YulTypedName",
														"src": "10389:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10400:4:15",
														"nodeType": "YulTypedName",
														"src": "10400:4:15",
														"type": ""
													}
												],
												"src": "10291:254:15"
											},
											{
												"body": {
													"nativeSrc": "10694:946:15",
													"nodeType": "YulBlock",
													"src": "10694:946:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "10741:83:15",
																"nodeType": "YulBlock",
																"src": "10741:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "10743:77:15",
																				"nodeType": "YulIdentifier",
																				"src": "10743:77:15"
																			},
																			"nativeSrc": "10743:79:15",
																			"nodeType": "YulFunctionCall",
																			"src": "10743:79:15"
																		},
																		"nativeSrc": "10743:79:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "10743:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10715:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "10715:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10724:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "10724:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10711:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "10711:3:15"
																		},
																		"nativeSrc": "10711:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "10711:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10736:3:15",
																		"nodeType": "YulLiteral",
																		"src": "10736:3:15",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "10707:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "10707:3:15"
																},
																"nativeSrc": "10707:33:15",
																"nodeType": "YulFunctionCall",
																"src": "10707:33:15"
															},
															"nativeSrc": "10704:120:15",
															"nodeType": "YulIf",
															"src": "10704:120:15"
														},
														{
															"nativeSrc": "10834:117:15",
															"nodeType": "YulBlock",
															"src": "10834:117:15",
															"statements": [
																{
																	"nativeSrc": "10849:15:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10849:15:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10863:1:15",
																		"nodeType": "YulLiteral",
																		"src": "10863:1:15",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10853:6:15",
																			"nodeType": "YulTypedName",
																			"src": "10853:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10878:63:15",
																	"nodeType": "YulAssignment",
																	"src": "10878:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10913:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "10913:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10924:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "10924:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10909:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "10909:3:15"
																				},
																				"nativeSrc": "10909:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "10909:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10933:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "10933:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "10888:20:15",
																			"nodeType": "YulIdentifier",
																			"src": "10888:20:15"
																		},
																		"nativeSrc": "10888:53:15",
																		"nodeType": "YulFunctionCall",
																		"src": "10888:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "10878:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "10878:6:15"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "10961:118:15",
															"nodeType": "YulBlock",
															"src": "10961:118:15",
															"statements": [
																{
																	"nativeSrc": "10976:16:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10976:16:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10990:2:15",
																		"nodeType": "YulLiteral",
																		"src": "10990:2:15",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10980:6:15",
																			"nodeType": "YulTypedName",
																			"src": "10980:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "11006:63:15",
																	"nodeType": "YulAssignment",
																	"src": "11006:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11041:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "11041:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "11052:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "11052:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11037:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "11037:3:15"
																				},
																				"nativeSrc": "11037:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "11037:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11061:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "11061:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "11016:20:15",
																			"nodeType": "YulIdentifier",
																			"src": "11016:20:15"
																		},
																		"nativeSrc": "11016:53:15",
																		"nodeType": "YulFunctionCall",
																		"src": "11016:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "11006:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "11006:6:15"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "11089:118:15",
															"nodeType": "YulBlock",
															"src": "11089:118:15",
															"statements": [
																{
																	"nativeSrc": "11104:16:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11104:16:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "11118:2:15",
																		"nodeType": "YulLiteral",
																		"src": "11118:2:15",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "11108:6:15",
																			"nodeType": "YulTypedName",
																			"src": "11108:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "11134:63:15",
																	"nodeType": "YulAssignment",
																	"src": "11134:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11169:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "11169:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "11180:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "11180:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11165:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "11165:3:15"
																				},
																				"nativeSrc": "11165:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "11165:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11189:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "11189:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "11144:20:15",
																			"nodeType": "YulIdentifier",
																			"src": "11144:20:15"
																		},
																		"nativeSrc": "11144:53:15",
																		"nodeType": "YulFunctionCall",
																		"src": "11144:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "11134:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "11134:6:15"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "11217:118:15",
															"nodeType": "YulBlock",
															"src": "11217:118:15",
															"statements": [
																{
																	"nativeSrc": "11232:16:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11232:16:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "11246:2:15",
																		"nodeType": "YulLiteral",
																		"src": "11246:2:15",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "11236:6:15",
																			"nodeType": "YulTypedName",
																			"src": "11236:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "11262:63:15",
																	"nodeType": "YulAssignment",
																	"src": "11262:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11297:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "11297:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "11308:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "11308:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11293:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "11293:3:15"
																				},
																				"nativeSrc": "11293:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "11293:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11317:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "11317:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "11272:20:15",
																			"nodeType": "YulIdentifier",
																			"src": "11272:20:15"
																		},
																		"nativeSrc": "11272:53:15",
																		"nodeType": "YulFunctionCall",
																		"src": "11272:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "11262:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "11262:6:15"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "11345:288:15",
															"nodeType": "YulBlock",
															"src": "11345:288:15",
															"statements": [
																{
																	"nativeSrc": "11360:47:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11360:47:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11391:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "11391:9:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "11402:3:15",
																						"nodeType": "YulLiteral",
																						"src": "11402:3:15",
																						"type": "",
																						"value": "128"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11387:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "11387:3:15"
																				},
																				"nativeSrc": "11387:19:15",
																				"nodeType": "YulFunctionCall",
																				"src": "11387:19:15"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "11374:12:15",
																			"nodeType": "YulIdentifier",
																			"src": "11374:12:15"
																		},
																		"nativeSrc": "11374:33:15",
																		"nodeType": "YulFunctionCall",
																		"src": "11374:33:15"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "11364:6:15",
																			"nodeType": "YulTypedName",
																			"src": "11364:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "11454:83:15",
																		"nodeType": "YulBlock",
																		"src": "11454:83:15",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "11456:77:15",
																						"nodeType": "YulIdentifier",
																						"src": "11456:77:15"
																					},
																					"nativeSrc": "11456:79:15",
																					"nodeType": "YulFunctionCall",
																					"src": "11456:79:15"
																				},
																				"nativeSrc": "11456:79:15",
																				"nodeType": "YulExpressionStatement",
																				"src": "11456:79:15"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "11426:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "11426:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11434:18:15",
																				"nodeType": "YulLiteral",
																				"src": "11434:18:15",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "11423:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "11423:2:15"
																		},
																		"nativeSrc": "11423:30:15",
																		"nodeType": "YulFunctionCall",
																		"src": "11423:30:15"
																	},
																	"nativeSrc": "11420:117:15",
																	"nodeType": "YulIf",
																	"src": "11420:117:15"
																},
																{
																	"nativeSrc": "11551:72:15",
																	"nodeType": "YulAssignment",
																	"src": "11551:72:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11595:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "11595:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "11606:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "11606:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11591:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "11591:3:15"
																				},
																				"nativeSrc": "11591:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "11591:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11615:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "11615:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nativeSrc": "11561:29:15",
																			"nodeType": "YulIdentifier",
																			"src": "11561:29:15"
																		},
																		"nativeSrc": "11561:62:15",
																		"nodeType": "YulFunctionCall",
																		"src": "11561:62:15"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nativeSrc": "11551:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "11551:6:15"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr",
												"nativeSrc": "10551:1089:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10632:9:15",
														"nodeType": "YulTypedName",
														"src": "10632:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "10643:7:15",
														"nodeType": "YulTypedName",
														"src": "10643:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "10655:6:15",
														"nodeType": "YulTypedName",
														"src": "10655:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10663:6:15",
														"nodeType": "YulTypedName",
														"src": "10663:6:15",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "10671:6:15",
														"nodeType": "YulTypedName",
														"src": "10671:6:15",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "10679:6:15",
														"nodeType": "YulTypedName",
														"src": "10679:6:15",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "10687:6:15",
														"nodeType": "YulTypedName",
														"src": "10687:6:15",
														"type": ""
													}
												],
												"src": "10551:1089:15"
											},
											{
												"body": {
													"nativeSrc": "11712:263:15",
													"nodeType": "YulBlock",
													"src": "11712:263:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "11758:83:15",
																"nodeType": "YulBlock",
																"src": "11758:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "11760:77:15",
																				"nodeType": "YulIdentifier",
																				"src": "11760:77:15"
																			},
																			"nativeSrc": "11760:79:15",
																			"nodeType": "YulFunctionCall",
																			"src": "11760:79:15"
																		},
																		"nativeSrc": "11760:79:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "11760:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11733:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "11733:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11742:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "11742:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11729:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "11729:3:15"
																		},
																		"nativeSrc": "11729:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "11729:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11754:2:15",
																		"nodeType": "YulLiteral",
																		"src": "11754:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "11725:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "11725:3:15"
																},
																"nativeSrc": "11725:32:15",
																"nodeType": "YulFunctionCall",
																"src": "11725:32:15"
															},
															"nativeSrc": "11722:119:15",
															"nodeType": "YulIf",
															"src": "11722:119:15"
														},
														{
															"nativeSrc": "11851:117:15",
															"nodeType": "YulBlock",
															"src": "11851:117:15",
															"statements": [
																{
																	"nativeSrc": "11866:15:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11866:15:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "11880:1:15",
																		"nodeType": "YulLiteral",
																		"src": "11880:1:15",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "11870:6:15",
																			"nodeType": "YulTypedName",
																			"src": "11870:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "11895:63:15",
																	"nodeType": "YulAssignment",
																	"src": "11895:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11930:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "11930:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "11941:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "11941:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11926:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "11926:3:15"
																				},
																				"nativeSrc": "11926:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "11926:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11950:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "11950:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "11905:20:15",
																			"nodeType": "YulIdentifier",
																			"src": "11905:20:15"
																		},
																		"nativeSrc": "11905:53:15",
																		"nodeType": "YulFunctionCall",
																		"src": "11905:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "11895:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "11895:6:15"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "11646:329:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11682:9:15",
														"nodeType": "YulTypedName",
														"src": "11682:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "11693:7:15",
														"nodeType": "YulTypedName",
														"src": "11693:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "11705:6:15",
														"nodeType": "YulTypedName",
														"src": "11705:6:15",
														"type": ""
													}
												],
												"src": "11646:329:15"
											},
											{
												"body": {
													"nativeSrc": "12064:391:15",
													"nodeType": "YulBlock",
													"src": "12064:391:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "12110:83:15",
																"nodeType": "YulBlock",
																"src": "12110:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "12112:77:15",
																				"nodeType": "YulIdentifier",
																				"src": "12112:77:15"
																			},
																			"nativeSrc": "12112:79:15",
																			"nodeType": "YulFunctionCall",
																			"src": "12112:79:15"
																		},
																		"nativeSrc": "12112:79:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "12112:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12085:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "12085:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12094:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "12094:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12081:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "12081:3:15"
																		},
																		"nativeSrc": "12081:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "12081:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12106:2:15",
																		"nodeType": "YulLiteral",
																		"src": "12106:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "12077:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "12077:3:15"
																},
																"nativeSrc": "12077:32:15",
																"nodeType": "YulFunctionCall",
																"src": "12077:32:15"
															},
															"nativeSrc": "12074:119:15",
															"nodeType": "YulIf",
															"src": "12074:119:15"
														},
														{
															"nativeSrc": "12203:117:15",
															"nodeType": "YulBlock",
															"src": "12203:117:15",
															"statements": [
																{
																	"nativeSrc": "12218:15:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "12218:15:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "12232:1:15",
																		"nodeType": "YulLiteral",
																		"src": "12232:1:15",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "12222:6:15",
																			"nodeType": "YulTypedName",
																			"src": "12222:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "12247:63:15",
																	"nodeType": "YulAssignment",
																	"src": "12247:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12282:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "12282:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "12293:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "12293:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12278:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "12278:3:15"
																				},
																				"nativeSrc": "12278:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "12278:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12302:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "12302:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "12257:20:15",
																			"nodeType": "YulIdentifier",
																			"src": "12257:20:15"
																		},
																		"nativeSrc": "12257:53:15",
																		"nodeType": "YulFunctionCall",
																		"src": "12257:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "12247:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "12247:6:15"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "12330:118:15",
															"nodeType": "YulBlock",
															"src": "12330:118:15",
															"statements": [
																{
																	"nativeSrc": "12345:16:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "12345:16:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "12359:2:15",
																		"nodeType": "YulLiteral",
																		"src": "12359:2:15",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "12349:6:15",
																			"nodeType": "YulTypedName",
																			"src": "12349:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "12375:63:15",
																	"nodeType": "YulAssignment",
																	"src": "12375:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12410:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "12410:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "12421:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "12421:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12406:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "12406:3:15"
																				},
																				"nativeSrc": "12406:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "12406:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12430:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "12430:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "12385:20:15",
																			"nodeType": "YulIdentifier",
																			"src": "12385:20:15"
																		},
																		"nativeSrc": "12385:53:15",
																		"nodeType": "YulFunctionCall",
																		"src": "12385:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "12375:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "12375:6:15"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nativeSrc": "11981:474:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12026:9:15",
														"nodeType": "YulTypedName",
														"src": "12026:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "12037:7:15",
														"nodeType": "YulTypedName",
														"src": "12037:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "12049:6:15",
														"nodeType": "YulTypedName",
														"src": "12049:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "12057:6:15",
														"nodeType": "YulTypedName",
														"src": "12057:6:15",
														"type": ""
													}
												],
												"src": "11981:474:15"
											},
											{
												"body": {
													"nativeSrc": "12557:73:15",
													"nodeType": "YulBlock",
													"src": "12557:73:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12574:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "12574:3:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "12579:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "12579:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12567:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "12567:6:15"
																},
																"nativeSrc": "12567:19:15",
																"nodeType": "YulFunctionCall",
																"src": "12567:19:15"
															},
															"nativeSrc": "12567:19:15",
															"nodeType": "YulExpressionStatement",
															"src": "12567:19:15"
														},
														{
															"nativeSrc": "12595:29:15",
															"nodeType": "YulAssignment",
															"src": "12595:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12614:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "12614:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12619:4:15",
																		"nodeType": "YulLiteral",
																		"src": "12619:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12610:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "12610:3:15"
																},
																"nativeSrc": "12610:14:15",
																"nodeType": "YulFunctionCall",
																"src": "12610:14:15"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "12595:11:15",
																	"nodeType": "YulIdentifier",
																	"src": "12595:11:15"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "12461:169:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "12529:3:15",
														"nodeType": "YulTypedName",
														"src": "12529:3:15",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "12534:6:15",
														"nodeType": "YulTypedName",
														"src": "12534:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "12545:11:15",
														"nodeType": "YulTypedName",
														"src": "12545:11:15",
														"type": ""
													}
												],
												"src": "12461:169:15"
											},
											{
												"body": {
													"nativeSrc": "12742:60:15",
													"nodeType": "YulBlock",
													"src": "12742:60:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "12764:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "12764:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12772:1:15",
																				"nodeType": "YulLiteral",
																				"src": "12772:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12760:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "12760:3:15"
																		},
																		"nativeSrc": "12760:14:15",
																		"nodeType": "YulFunctionCall",
																		"src": "12760:14:15"
																	},
																	{
																		"hexValue": "696e636f72726563742073656e646572",
																		"kind": "string",
																		"nativeSrc": "12776:18:15",
																		"nodeType": "YulLiteral",
																		"src": "12776:18:15",
																		"type": "",
																		"value": "incorrect sender"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12753:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "12753:6:15"
																},
																"nativeSrc": "12753:42:15",
																"nodeType": "YulFunctionCall",
																"src": "12753:42:15"
															},
															"nativeSrc": "12753:42:15",
															"nodeType": "YulExpressionStatement",
															"src": "12753:42:15"
														}
													]
												},
												"name": "store_literal_in_memory_58b0c597f29dac8001964c5c8f94457e37567080fbc7198aa316b42b6379f65b",
												"nativeSrc": "12636:166:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "12734:6:15",
														"nodeType": "YulTypedName",
														"src": "12734:6:15",
														"type": ""
													}
												],
												"src": "12636:166:15"
											},
											{
												"body": {
													"nativeSrc": "12954:220:15",
													"nodeType": "YulBlock",
													"src": "12954:220:15",
													"statements": [
														{
															"nativeSrc": "12964:74:15",
															"nodeType": "YulAssignment",
															"src": "12964:74:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13030:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "13030:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13035:2:15",
																		"nodeType": "YulLiteral",
																		"src": "13035:2:15",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12971:58:15",
																	"nodeType": "YulIdentifier",
																	"src": "12971:58:15"
																},
																"nativeSrc": "12971:67:15",
																"nodeType": "YulFunctionCall",
																"src": "12971:67:15"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "12964:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "12964:3:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13136:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "13136:3:15"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_58b0c597f29dac8001964c5c8f94457e37567080fbc7198aa316b42b6379f65b",
																	"nativeSrc": "13047:88:15",
																	"nodeType": "YulIdentifier",
																	"src": "13047:88:15"
																},
																"nativeSrc": "13047:93:15",
																"nodeType": "YulFunctionCall",
																"src": "13047:93:15"
															},
															"nativeSrc": "13047:93:15",
															"nodeType": "YulExpressionStatement",
															"src": "13047:93:15"
														},
														{
															"nativeSrc": "13149:19:15",
															"nodeType": "YulAssignment",
															"src": "13149:19:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13160:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "13160:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13165:2:15",
																		"nodeType": "YulLiteral",
																		"src": "13165:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13156:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "13156:3:15"
																},
																"nativeSrc": "13156:12:15",
																"nodeType": "YulFunctionCall",
																"src": "13156:12:15"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "13149:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "13149:3:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_58b0c597f29dac8001964c5c8f94457e37567080fbc7198aa316b42b6379f65b_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "12808:366:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "12942:3:15",
														"nodeType": "YulTypedName",
														"src": "12942:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "12950:3:15",
														"nodeType": "YulTypedName",
														"src": "12950:3:15",
														"type": ""
													}
												],
												"src": "12808:366:15"
											},
											{
												"body": {
													"nativeSrc": "13351:248:15",
													"nodeType": "YulBlock",
													"src": "13351:248:15",
													"statements": [
														{
															"nativeSrc": "13361:26:15",
															"nodeType": "YulAssignment",
															"src": "13361:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13373:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "13373:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13384:2:15",
																		"nodeType": "YulLiteral",
																		"src": "13384:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13369:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "13369:3:15"
																},
																"nativeSrc": "13369:18:15",
																"nodeType": "YulFunctionCall",
																"src": "13369:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13361:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "13361:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13408:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "13408:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13419:1:15",
																				"nodeType": "YulLiteral",
																				"src": "13419:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13404:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "13404:3:15"
																		},
																		"nativeSrc": "13404:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "13404:17:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "13427:4:15",
																				"nodeType": "YulIdentifier",
																				"src": "13427:4:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "13433:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "13433:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13423:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "13423:3:15"
																		},
																		"nativeSrc": "13423:20:15",
																		"nodeType": "YulFunctionCall",
																		"src": "13423:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13397:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "13397:6:15"
																},
																"nativeSrc": "13397:47:15",
																"nodeType": "YulFunctionCall",
																"src": "13397:47:15"
															},
															"nativeSrc": "13397:47:15",
															"nodeType": "YulExpressionStatement",
															"src": "13397:47:15"
														},
														{
															"nativeSrc": "13453:139:15",
															"nodeType": "YulAssignment",
															"src": "13453:139:15",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "13587:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "13587:4:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_58b0c597f29dac8001964c5c8f94457e37567080fbc7198aa316b42b6379f65b_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13461:124:15",
																	"nodeType": "YulIdentifier",
																	"src": "13461:124:15"
																},
																"nativeSrc": "13461:131:15",
																"nodeType": "YulFunctionCall",
																"src": "13461:131:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13453:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "13453:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_58b0c597f29dac8001964c5c8f94457e37567080fbc7198aa316b42b6379f65b__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "13180:419:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13331:9:15",
														"nodeType": "YulTypedName",
														"src": "13331:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13346:4:15",
														"nodeType": "YulTypedName",
														"src": "13346:4:15",
														"type": ""
													}
												],
												"src": "13180:419:15"
											},
											{
												"body": {
													"nativeSrc": "13711:60:15",
													"nodeType": "YulBlock",
													"src": "13711:60:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "13733:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "13733:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13741:1:15",
																				"nodeType": "YulLiteral",
																				"src": "13741:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13729:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "13729:3:15"
																		},
																		"nativeSrc": "13729:14:15",
																		"nodeType": "YulFunctionCall",
																		"src": "13729:14:15"
																	},
																	{
																		"hexValue": "7175616e74697479206973207a65726f",
																		"kind": "string",
																		"nativeSrc": "13745:18:15",
																		"nodeType": "YulLiteral",
																		"src": "13745:18:15",
																		"type": "",
																		"value": "quantity is zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13722:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "13722:6:15"
																},
																"nativeSrc": "13722:42:15",
																"nodeType": "YulFunctionCall",
																"src": "13722:42:15"
															},
															"nativeSrc": "13722:42:15",
															"nodeType": "YulExpressionStatement",
															"src": "13722:42:15"
														}
													]
												},
												"name": "store_literal_in_memory_4c1122224259dd0b02fff95af769f256a8450d91cf0444f02e6c136dce106f44",
												"nativeSrc": "13605:166:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "13703:6:15",
														"nodeType": "YulTypedName",
														"src": "13703:6:15",
														"type": ""
													}
												],
												"src": "13605:166:15"
											},
											{
												"body": {
													"nativeSrc": "13923:220:15",
													"nodeType": "YulBlock",
													"src": "13923:220:15",
													"statements": [
														{
															"nativeSrc": "13933:74:15",
															"nodeType": "YulAssignment",
															"src": "13933:74:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13999:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "13999:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14004:2:15",
																		"nodeType": "YulLiteral",
																		"src": "14004:2:15",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13940:58:15",
																	"nodeType": "YulIdentifier",
																	"src": "13940:58:15"
																},
																"nativeSrc": "13940:67:15",
																"nodeType": "YulFunctionCall",
																"src": "13940:67:15"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "13933:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "13933:3:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14105:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "14105:3:15"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_4c1122224259dd0b02fff95af769f256a8450d91cf0444f02e6c136dce106f44",
																	"nativeSrc": "14016:88:15",
																	"nodeType": "YulIdentifier",
																	"src": "14016:88:15"
																},
																"nativeSrc": "14016:93:15",
																"nodeType": "YulFunctionCall",
																"src": "14016:93:15"
															},
															"nativeSrc": "14016:93:15",
															"nodeType": "YulExpressionStatement",
															"src": "14016:93:15"
														},
														{
															"nativeSrc": "14118:19:15",
															"nodeType": "YulAssignment",
															"src": "14118:19:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14129:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "14129:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14134:2:15",
																		"nodeType": "YulLiteral",
																		"src": "14134:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14125:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "14125:3:15"
																},
																"nativeSrc": "14125:12:15",
																"nodeType": "YulFunctionCall",
																"src": "14125:12:15"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "14118:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "14118:3:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_4c1122224259dd0b02fff95af769f256a8450d91cf0444f02e6c136dce106f44_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "13777:366:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "13911:3:15",
														"nodeType": "YulTypedName",
														"src": "13911:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "13919:3:15",
														"nodeType": "YulTypedName",
														"src": "13919:3:15",
														"type": ""
													}
												],
												"src": "13777:366:15"
											},
											{
												"body": {
													"nativeSrc": "14320:248:15",
													"nodeType": "YulBlock",
													"src": "14320:248:15",
													"statements": [
														{
															"nativeSrc": "14330:26:15",
															"nodeType": "YulAssignment",
															"src": "14330:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14342:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "14342:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14353:2:15",
																		"nodeType": "YulLiteral",
																		"src": "14353:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14338:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "14338:3:15"
																},
																"nativeSrc": "14338:18:15",
																"nodeType": "YulFunctionCall",
																"src": "14338:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14330:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "14330:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14377:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "14377:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14388:1:15",
																				"nodeType": "YulLiteral",
																				"src": "14388:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14373:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "14373:3:15"
																		},
																		"nativeSrc": "14373:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "14373:17:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "14396:4:15",
																				"nodeType": "YulIdentifier",
																				"src": "14396:4:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "14402:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "14402:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "14392:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "14392:3:15"
																		},
																		"nativeSrc": "14392:20:15",
																		"nodeType": "YulFunctionCall",
																		"src": "14392:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14366:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "14366:6:15"
																},
																"nativeSrc": "14366:47:15",
																"nodeType": "YulFunctionCall",
																"src": "14366:47:15"
															},
															"nativeSrc": "14366:47:15",
															"nodeType": "YulExpressionStatement",
															"src": "14366:47:15"
														},
														{
															"nativeSrc": "14422:139:15",
															"nodeType": "YulAssignment",
															"src": "14422:139:15",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "14556:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "14556:4:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_4c1122224259dd0b02fff95af769f256a8450d91cf0444f02e6c136dce106f44_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14430:124:15",
																	"nodeType": "YulIdentifier",
																	"src": "14430:124:15"
																},
																"nativeSrc": "14430:131:15",
																"nodeType": "YulFunctionCall",
																"src": "14430:131:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14422:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "14422:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4c1122224259dd0b02fff95af769f256a8450d91cf0444f02e6c136dce106f44__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14149:419:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14300:9:15",
														"nodeType": "YulTypedName",
														"src": "14300:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14315:4:15",
														"nodeType": "YulTypedName",
														"src": "14315:4:15",
														"type": ""
													}
												],
												"src": "14149:419:15"
											},
											{
												"body": {
													"nativeSrc": "14756:371:15",
													"nodeType": "YulBlock",
													"src": "14756:371:15",
													"statements": [
														{
															"nativeSrc": "14766:27:15",
															"nodeType": "YulAssignment",
															"src": "14766:27:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14778:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "14778:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14789:3:15",
																		"nodeType": "YulLiteral",
																		"src": "14789:3:15",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14774:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "14774:3:15"
																},
																"nativeSrc": "14774:19:15",
																"nodeType": "YulFunctionCall",
																"src": "14774:19:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14766:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "14766:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "14847:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "14847:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14860:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "14860:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14871:1:15",
																				"nodeType": "YulLiteral",
																				"src": "14871:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14856:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "14856:3:15"
																		},
																		"nativeSrc": "14856:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "14856:17:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "14803:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "14803:43:15"
																},
																"nativeSrc": "14803:71:15",
																"nodeType": "YulFunctionCall",
																"src": "14803:71:15"
															},
															"nativeSrc": "14803:71:15",
															"nodeType": "YulExpressionStatement",
															"src": "14803:71:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "14928:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "14928:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14941:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "14941:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14952:2:15",
																				"nodeType": "YulLiteral",
																				"src": "14952:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14937:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "14937:3:15"
																		},
																		"nativeSrc": "14937:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "14937:18:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "14884:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "14884:43:15"
																},
																"nativeSrc": "14884:72:15",
																"nodeType": "YulFunctionCall",
																"src": "14884:72:15"
															},
															"nativeSrc": "14884:72:15",
															"nodeType": "YulExpressionStatement",
															"src": "14884:72:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "15010:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "15010:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15023:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "15023:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15034:2:15",
																				"nodeType": "YulLiteral",
																				"src": "15034:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15019:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "15019:3:15"
																		},
																		"nativeSrc": "15019:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "15019:18:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "14966:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "14966:43:15"
																},
																"nativeSrc": "14966:72:15",
																"nodeType": "YulFunctionCall",
																"src": "14966:72:15"
															},
															"nativeSrc": "14966:72:15",
															"nodeType": "YulExpressionStatement",
															"src": "14966:72:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "15092:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "15092:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15105:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "15105:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15116:2:15",
																				"nodeType": "YulLiteral",
																				"src": "15116:2:15",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15101:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "15101:3:15"
																		},
																		"nativeSrc": "15101:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "15101:18:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "15048:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "15048:43:15"
																},
																"nativeSrc": "15048:72:15",
																"nodeType": "YulFunctionCall",
																"src": "15048:72:15"
															},
															"nativeSrc": "15048:72:15",
															"nodeType": "YulExpressionStatement",
															"src": "15048:72:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_uint256__to_t_address_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "14574:553:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14704:9:15",
														"nodeType": "YulTypedName",
														"src": "14704:9:15",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "14716:6:15",
														"nodeType": "YulTypedName",
														"src": "14716:6:15",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "14724:6:15",
														"nodeType": "YulTypedName",
														"src": "14724:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "14732:6:15",
														"nodeType": "YulTypedName",
														"src": "14732:6:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "14740:6:15",
														"nodeType": "YulTypedName",
														"src": "14740:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14751:4:15",
														"nodeType": "YulTypedName",
														"src": "14751:4:15",
														"type": ""
													}
												],
												"src": "14574:553:15"
											},
											{
												"body": {
													"nativeSrc": "15239:59:15",
													"nodeType": "YulBlock",
													"src": "15239:59:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "15261:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "15261:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15269:1:15",
																				"nodeType": "YulLiteral",
																				"src": "15269:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15257:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "15257:3:15"
																		},
																		"nativeSrc": "15257:14:15",
																		"nodeType": "YulFunctionCall",
																		"src": "15257:14:15"
																	},
																	{
																		"hexValue": "746f6b656e4964206973207a65726f",
																		"kind": "string",
																		"nativeSrc": "15273:17:15",
																		"nodeType": "YulLiteral",
																		"src": "15273:17:15",
																		"type": "",
																		"value": "tokenId is zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15250:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "15250:6:15"
																},
																"nativeSrc": "15250:41:15",
																"nodeType": "YulFunctionCall",
																"src": "15250:41:15"
															},
															"nativeSrc": "15250:41:15",
															"nodeType": "YulExpressionStatement",
															"src": "15250:41:15"
														}
													]
												},
												"name": "store_literal_in_memory_240c2a2420364d9260a9d9de5c0bdeaef40ae9271ae29d4c186edd83349afc50",
												"nativeSrc": "15133:165:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "15231:6:15",
														"nodeType": "YulTypedName",
														"src": "15231:6:15",
														"type": ""
													}
												],
												"src": "15133:165:15"
											},
											{
												"body": {
													"nativeSrc": "15450:220:15",
													"nodeType": "YulBlock",
													"src": "15450:220:15",
													"statements": [
														{
															"nativeSrc": "15460:74:15",
															"nodeType": "YulAssignment",
															"src": "15460:74:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15526:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "15526:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15531:2:15",
																		"nodeType": "YulLiteral",
																		"src": "15531:2:15",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15467:58:15",
																	"nodeType": "YulIdentifier",
																	"src": "15467:58:15"
																},
																"nativeSrc": "15467:67:15",
																"nodeType": "YulFunctionCall",
																"src": "15467:67:15"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "15460:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "15460:3:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15632:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "15632:3:15"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_240c2a2420364d9260a9d9de5c0bdeaef40ae9271ae29d4c186edd83349afc50",
																	"nativeSrc": "15543:88:15",
																	"nodeType": "YulIdentifier",
																	"src": "15543:88:15"
																},
																"nativeSrc": "15543:93:15",
																"nodeType": "YulFunctionCall",
																"src": "15543:93:15"
															},
															"nativeSrc": "15543:93:15",
															"nodeType": "YulExpressionStatement",
															"src": "15543:93:15"
														},
														{
															"nativeSrc": "15645:19:15",
															"nodeType": "YulAssignment",
															"src": "15645:19:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15656:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "15656:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15661:2:15",
																		"nodeType": "YulLiteral",
																		"src": "15661:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15652:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "15652:3:15"
																},
																"nativeSrc": "15652:12:15",
																"nodeType": "YulFunctionCall",
																"src": "15652:12:15"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "15645:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "15645:3:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_240c2a2420364d9260a9d9de5c0bdeaef40ae9271ae29d4c186edd83349afc50_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "15304:366:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "15438:3:15",
														"nodeType": "YulTypedName",
														"src": "15438:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "15446:3:15",
														"nodeType": "YulTypedName",
														"src": "15446:3:15",
														"type": ""
													}
												],
												"src": "15304:366:15"
											},
											{
												"body": {
													"nativeSrc": "15847:248:15",
													"nodeType": "YulBlock",
													"src": "15847:248:15",
													"statements": [
														{
															"nativeSrc": "15857:26:15",
															"nodeType": "YulAssignment",
															"src": "15857:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15869:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "15869:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15880:2:15",
																		"nodeType": "YulLiteral",
																		"src": "15880:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15865:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "15865:3:15"
																},
																"nativeSrc": "15865:18:15",
																"nodeType": "YulFunctionCall",
																"src": "15865:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15857:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "15857:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15904:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "15904:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15915:1:15",
																				"nodeType": "YulLiteral",
																				"src": "15915:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15900:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "15900:3:15"
																		},
																		"nativeSrc": "15900:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "15900:17:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "15923:4:15",
																				"nodeType": "YulIdentifier",
																				"src": "15923:4:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "15929:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "15929:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "15919:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "15919:3:15"
																		},
																		"nativeSrc": "15919:20:15",
																		"nodeType": "YulFunctionCall",
																		"src": "15919:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15893:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "15893:6:15"
																},
																"nativeSrc": "15893:47:15",
																"nodeType": "YulFunctionCall",
																"src": "15893:47:15"
															},
															"nativeSrc": "15893:47:15",
															"nodeType": "YulExpressionStatement",
															"src": "15893:47:15"
														},
														{
															"nativeSrc": "15949:139:15",
															"nodeType": "YulAssignment",
															"src": "15949:139:15",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "16083:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "16083:4:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_240c2a2420364d9260a9d9de5c0bdeaef40ae9271ae29d4c186edd83349afc50_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15957:124:15",
																	"nodeType": "YulIdentifier",
																	"src": "15957:124:15"
																},
																"nativeSrc": "15957:131:15",
																"nodeType": "YulFunctionCall",
																"src": "15957:131:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15949:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "15949:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_240c2a2420364d9260a9d9de5c0bdeaef40ae9271ae29d4c186edd83349afc50__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "15676:419:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15827:9:15",
														"nodeType": "YulTypedName",
														"src": "15827:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15842:4:15",
														"nodeType": "YulTypedName",
														"src": "15842:4:15",
														"type": ""
													}
												],
												"src": "15676:419:15"
											},
											{
												"body": {
													"nativeSrc": "16207:57:15",
													"nodeType": "YulBlock",
													"src": "16207:57:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "16229:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "16229:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16237:1:15",
																				"nodeType": "YulLiteral",
																				"src": "16237:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16225:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "16225:3:15"
																		},
																		"nativeSrc": "16225:14:15",
																		"nodeType": "YulFunctionCall",
																		"src": "16225:14:15"
																	},
																	{
																		"hexValue": "7072696365206973207a65726f",
																		"kind": "string",
																		"nativeSrc": "16241:15:15",
																		"nodeType": "YulLiteral",
																		"src": "16241:15:15",
																		"type": "",
																		"value": "price is zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16218:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "16218:6:15"
																},
																"nativeSrc": "16218:39:15",
																"nodeType": "YulFunctionCall",
																"src": "16218:39:15"
															},
															"nativeSrc": "16218:39:15",
															"nodeType": "YulExpressionStatement",
															"src": "16218:39:15"
														}
													]
												},
												"name": "store_literal_in_memory_ee8b0754ac04b271c493c71118fe013f51611851aeb777bded224dc19d7cd48c",
												"nativeSrc": "16101:163:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "16199:6:15",
														"nodeType": "YulTypedName",
														"src": "16199:6:15",
														"type": ""
													}
												],
												"src": "16101:163:15"
											},
											{
												"body": {
													"nativeSrc": "16416:220:15",
													"nodeType": "YulBlock",
													"src": "16416:220:15",
													"statements": [
														{
															"nativeSrc": "16426:74:15",
															"nodeType": "YulAssignment",
															"src": "16426:74:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16492:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "16492:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16497:2:15",
																		"nodeType": "YulLiteral",
																		"src": "16497:2:15",
																		"type": "",
																		"value": "13"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "16433:58:15",
																	"nodeType": "YulIdentifier",
																	"src": "16433:58:15"
																},
																"nativeSrc": "16433:67:15",
																"nodeType": "YulFunctionCall",
																"src": "16433:67:15"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "16426:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "16426:3:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16598:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "16598:3:15"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ee8b0754ac04b271c493c71118fe013f51611851aeb777bded224dc19d7cd48c",
																	"nativeSrc": "16509:88:15",
																	"nodeType": "YulIdentifier",
																	"src": "16509:88:15"
																},
																"nativeSrc": "16509:93:15",
																"nodeType": "YulFunctionCall",
																"src": "16509:93:15"
															},
															"nativeSrc": "16509:93:15",
															"nodeType": "YulExpressionStatement",
															"src": "16509:93:15"
														},
														{
															"nativeSrc": "16611:19:15",
															"nodeType": "YulAssignment",
															"src": "16611:19:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16622:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "16622:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16627:2:15",
																		"nodeType": "YulLiteral",
																		"src": "16627:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16618:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "16618:3:15"
																},
																"nativeSrc": "16618:12:15",
																"nodeType": "YulFunctionCall",
																"src": "16618:12:15"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "16611:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "16611:3:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ee8b0754ac04b271c493c71118fe013f51611851aeb777bded224dc19d7cd48c_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "16270:366:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "16404:3:15",
														"nodeType": "YulTypedName",
														"src": "16404:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "16412:3:15",
														"nodeType": "YulTypedName",
														"src": "16412:3:15",
														"type": ""
													}
												],
												"src": "16270:366:15"
											},
											{
												"body": {
													"nativeSrc": "16813:248:15",
													"nodeType": "YulBlock",
													"src": "16813:248:15",
													"statements": [
														{
															"nativeSrc": "16823:26:15",
															"nodeType": "YulAssignment",
															"src": "16823:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16835:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "16835:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16846:2:15",
																		"nodeType": "YulLiteral",
																		"src": "16846:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16831:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "16831:3:15"
																},
																"nativeSrc": "16831:18:15",
																"nodeType": "YulFunctionCall",
																"src": "16831:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16823:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "16823:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16870:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "16870:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16881:1:15",
																				"nodeType": "YulLiteral",
																				"src": "16881:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16866:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "16866:3:15"
																		},
																		"nativeSrc": "16866:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "16866:17:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "16889:4:15",
																				"nodeType": "YulIdentifier",
																				"src": "16889:4:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "16895:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "16895:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "16885:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "16885:3:15"
																		},
																		"nativeSrc": "16885:20:15",
																		"nodeType": "YulFunctionCall",
																		"src": "16885:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16859:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "16859:6:15"
																},
																"nativeSrc": "16859:47:15",
																"nodeType": "YulFunctionCall",
																"src": "16859:47:15"
															},
															"nativeSrc": "16859:47:15",
															"nodeType": "YulExpressionStatement",
															"src": "16859:47:15"
														},
														{
															"nativeSrc": "16915:139:15",
															"nodeType": "YulAssignment",
															"src": "16915:139:15",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "17049:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "17049:4:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ee8b0754ac04b271c493c71118fe013f51611851aeb777bded224dc19d7cd48c_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "16923:124:15",
																	"nodeType": "YulIdentifier",
																	"src": "16923:124:15"
																},
																"nativeSrc": "16923:131:15",
																"nodeType": "YulFunctionCall",
																"src": "16923:131:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16915:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "16915:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ee8b0754ac04b271c493c71118fe013f51611851aeb777bded224dc19d7cd48c__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "16642:419:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16793:9:15",
														"nodeType": "YulTypedName",
														"src": "16793:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "16808:4:15",
														"nodeType": "YulTypedName",
														"src": "16808:4:15",
														"type": ""
													}
												],
												"src": "16642:419:15"
											},
											{
												"body": {
													"nativeSrc": "17221:288:15",
													"nodeType": "YulBlock",
													"src": "17221:288:15",
													"statements": [
														{
															"nativeSrc": "17231:26:15",
															"nodeType": "YulAssignment",
															"src": "17231:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "17243:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "17243:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17254:2:15",
																		"nodeType": "YulLiteral",
																		"src": "17254:2:15",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17239:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "17239:3:15"
																},
																"nativeSrc": "17239:18:15",
																"nodeType": "YulFunctionCall",
																"src": "17239:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17231:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "17231:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "17311:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "17311:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17324:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "17324:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17335:1:15",
																				"nodeType": "YulLiteral",
																				"src": "17335:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17320:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "17320:3:15"
																		},
																		"nativeSrc": "17320:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "17320:17:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "17267:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "17267:43:15"
																},
																"nativeSrc": "17267:71:15",
																"nodeType": "YulFunctionCall",
																"src": "17267:71:15"
															},
															"nativeSrc": "17267:71:15",
															"nodeType": "YulExpressionStatement",
															"src": "17267:71:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "17392:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "17392:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17405:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "17405:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17416:2:15",
																				"nodeType": "YulLiteral",
																				"src": "17416:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17401:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "17401:3:15"
																		},
																		"nativeSrc": "17401:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "17401:18:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "17348:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "17348:43:15"
																},
																"nativeSrc": "17348:72:15",
																"nodeType": "YulFunctionCall",
																"src": "17348:72:15"
															},
															"nativeSrc": "17348:72:15",
															"nodeType": "YulExpressionStatement",
															"src": "17348:72:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "17474:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "17474:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17487:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "17487:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17498:2:15",
																				"nodeType": "YulLiteral",
																				"src": "17498:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17483:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "17483:3:15"
																		},
																		"nativeSrc": "17483:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "17483:18:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "17430:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "17430:43:15"
																},
																"nativeSrc": "17430:72:15",
																"nodeType": "YulFunctionCall",
																"src": "17430:72:15"
															},
															"nativeSrc": "17430:72:15",
															"nodeType": "YulExpressionStatement",
															"src": "17430:72:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "17067:442:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "17177:9:15",
														"nodeType": "YulTypedName",
														"src": "17177:9:15",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "17189:6:15",
														"nodeType": "YulTypedName",
														"src": "17189:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "17197:6:15",
														"nodeType": "YulTypedName",
														"src": "17197:6:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "17205:6:15",
														"nodeType": "YulTypedName",
														"src": "17205:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "17216:4:15",
														"nodeType": "YulTypedName",
														"src": "17216:4:15",
														"type": ""
													}
												],
												"src": "17067:442:15"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC20_$561_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC20_$561_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$561_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$561__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$561_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    // uint256[]\n    function abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_uint256(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // uint256[]\n    function abi_decode_t_array$_t_uint256_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 128))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value4 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bytes4_to_t_bytes4_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes4(value))\n    }\n\n    function abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes4_to_t_bytes4_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function convert_t_contract$_IERC1155_$360_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC1155_$360_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC1155_$360_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC1155_$360__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC1155_$360_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 128))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value4 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_58b0c597f29dac8001964c5c8f94457e37567080fbc7198aa316b42b6379f65b(memPtr) {\n\n        mstore(add(memPtr, 0), \"incorrect sender\")\n\n    }\n\n    function abi_encode_t_stringliteral_58b0c597f29dac8001964c5c8f94457e37567080fbc7198aa316b42b6379f65b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 16)\n        store_literal_in_memory_58b0c597f29dac8001964c5c8f94457e37567080fbc7198aa316b42b6379f65b(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_58b0c597f29dac8001964c5c8f94457e37567080fbc7198aa316b42b6379f65b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_58b0c597f29dac8001964c5c8f94457e37567080fbc7198aa316b42b6379f65b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_4c1122224259dd0b02fff95af769f256a8450d91cf0444f02e6c136dce106f44(memPtr) {\n\n        mstore(add(memPtr, 0), \"quantity is zero\")\n\n    }\n\n    function abi_encode_t_stringliteral_4c1122224259dd0b02fff95af769f256a8450d91cf0444f02e6c136dce106f44_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 16)\n        store_literal_in_memory_4c1122224259dd0b02fff95af769f256a8450d91cf0444f02e6c136dce106f44(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_4c1122224259dd0b02fff95af769f256a8450d91cf0444f02e6c136dce106f44__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4c1122224259dd0b02fff95af769f256a8450d91cf0444f02e6c136dce106f44_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_uint256__to_t_address_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function store_literal_in_memory_240c2a2420364d9260a9d9de5c0bdeaef40ae9271ae29d4c186edd83349afc50(memPtr) {\n\n        mstore(add(memPtr, 0), \"tokenId is zero\")\n\n    }\n\n    function abi_encode_t_stringliteral_240c2a2420364d9260a9d9de5c0bdeaef40ae9271ae29d4c186edd83349afc50_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 15)\n        store_literal_in_memory_240c2a2420364d9260a9d9de5c0bdeaef40ae9271ae29d4c186edd83349afc50(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_240c2a2420364d9260a9d9de5c0bdeaef40ae9271ae29d4c186edd83349afc50__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_240c2a2420364d9260a9d9de5c0bdeaef40ae9271ae29d4c186edd83349afc50_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_ee8b0754ac04b271c493c71118fe013f51611851aeb777bded224dc19d7cd48c(memPtr) {\n\n        mstore(add(memPtr, 0), \"price is zero\")\n\n    }\n\n    function abi_encode_t_stringliteral_ee8b0754ac04b271c493c71118fe013f51611851aeb777bded224dc19d7cd48c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 13)\n        store_literal_in_memory_ee8b0754ac04b271c493c71118fe013f51611851aeb777bded224dc19d7cd48c(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ee8b0754ac04b271c493c71118fe013f51611851aeb777bded224dc19d7cd48c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ee8b0754ac04b271c493c71118fe013f51611851aeb777bded224dc19d7cd48c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n}\n",
									"id": 15,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b506004361061009c575f3560e01c8063d4ddce8a11610064578063d4ddce8a14610146578063ea75aa8f14610176578063f23a6e6114610194578063f2fde38b146101c4578063f7d97577146101e05761009c565b806301ffc9a7146100a05780632c1449e1146100d0578063715018a6146100ee5780638da5cb5b146100f8578063bc197c8114610116575b5f80fd5b6100ba60048036038101906100b591906107c7565b6101fc565b6040516100c7919061080c565b60405180910390f35b6100d8610275565b6040516100e5919061089f565b60405180910390f35b6100f661029a565b005b6101006102ad565b60405161010d91906108d8565b60405180910390f35b610130600480360381019061012b9190610b4e565b6102d4565b60405161013d9190610c28565b60405180910390f35b610160600480360381019061015b9190610c41565b6102e8565b60405161016d9190610c7b565b60405180910390f35b61017e6102fd565b60405161018b9190610cb4565b60405180910390f35b6101ae60048036038101906101a99190610ccd565b610322565b6040516101bb9190610c28565b60405180910390f35b6101de60048036038101906101d99190610d60565b610444565b005b6101fa60048036038101906101f59190610d8b565b6104c8565b005b5f7f4e2312e0000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061026e575061026d826105a9565b5b9050919050565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6102a2610612565b6102ab5f610699565b565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b5f63bc197c8160e01b905095945050505050565b6003602052805f5260405f205f915090505481565b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103b2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103a990610e23565b60405180910390fd5b5f83036103f4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103eb90610e8b565b60405180910390fd5b7f1650d49bac940346e34bac1dde642598b57ba618d7a0c005a91257851cae2c24868686866040516104299493929190610ea9565b60405180910390a163f23a6e6160e01b905095945050505050565b61044c610612565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036104bc575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016104b391906108d8565b60405180910390fd5b6104c581610699565b50565b6104d0610612565b5f8203610512576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161050990610f36565b60405180910390fd5b5f8103610554576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161054b90610f9e565b60405180910390fd5b8060035f8481526020019081526020015f20819055507f18e75bb8c091a6448c12a2023f055b2714c151b941a91df8b9938788769ffe1382824260405161059d93929190610fbc565b60405180910390a15050565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b61061a61075a565b73ffffffffffffffffffffffffffffffffffffffff166106386102ad565b73ffffffffffffffffffffffffffffffffffffffff16146106975761065b61075a565b6040517f118cdaa700000000000000000000000000000000000000000000000000000000815260040161068e91906108d8565b60405180910390fd5b565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f33905090565b5f604051905090565b5f80fd5b5f80fd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6107a681610772565b81146107b0575f80fd5b50565b5f813590506107c18161079d565b92915050565b5f602082840312156107dc576107db61076a565b5b5f6107e9848285016107b3565b91505092915050565b5f8115159050919050565b610806816107f2565b82525050565b5f60208201905061081f5f8301846107fd565b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f819050919050565b5f61086761086261085d84610825565b610844565b610825565b9050919050565b5f6108788261084d565b9050919050565b5f6108898261086e565b9050919050565b6108998161087f565b82525050565b5f6020820190506108b25f830184610890565b92915050565b5f6108c282610825565b9050919050565b6108d2816108b8565b82525050565b5f6020820190506108eb5f8301846108c9565b92915050565b6108fa816108b8565b8114610904575f80fd5b50565b5f81359050610915816108f1565b92915050565b5f80fd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b6109658261091f565b810181811067ffffffffffffffff821117156109845761098361092f565b5b80604052505050565b5f610996610761565b90506109a2828261095c565b919050565b5f67ffffffffffffffff8211156109c1576109c061092f565b5b602082029050602081019050919050565b5f80fd5b5f819050919050565b6109e8816109d6565b81146109f2575f80fd5b50565b5f81359050610a03816109df565b92915050565b5f610a1b610a16846109a7565b61098d565b90508083825260208201905060208402830185811115610a3e57610a3d6109d2565b5b835b81811015610a675780610a5388826109f5565b845260208401935050602081019050610a40565b5050509392505050565b5f82601f830112610a8557610a8461091b565b5b8135610a95848260208601610a09565b91505092915050565b5f80fd5b5f67ffffffffffffffff821115610abc57610abb61092f565b5b610ac58261091f565b9050602081019050919050565b828183375f83830152505050565b5f610af2610aed84610aa2565b61098d565b905082815260208101848484011115610b0e57610b0d610a9e565b5b610b19848285610ad2565b509392505050565b5f82601f830112610b3557610b3461091b565b5b8135610b45848260208601610ae0565b91505092915050565b5f805f805f60a08688031215610b6757610b6661076a565b5b5f610b7488828901610907565b9550506020610b8588828901610907565b945050604086013567ffffffffffffffff811115610ba657610ba561076e565b5b610bb288828901610a71565b935050606086013567ffffffffffffffff811115610bd357610bd261076e565b5b610bdf88828901610a71565b925050608086013567ffffffffffffffff811115610c0057610bff61076e565b5b610c0c88828901610b21565b9150509295509295909350565b610c2281610772565b82525050565b5f602082019050610c3b5f830184610c19565b92915050565b5f60208284031215610c5657610c5561076a565b5b5f610c63848285016109f5565b91505092915050565b610c75816109d6565b82525050565b5f602082019050610c8e5f830184610c6c565b92915050565b5f610c9e8261086e565b9050919050565b610cae81610c94565b82525050565b5f602082019050610cc75f830184610ca5565b92915050565b5f805f805f60a08688031215610ce657610ce561076a565b5b5f610cf388828901610907565b9550506020610d0488828901610907565b9450506040610d15888289016109f5565b9350506060610d26888289016109f5565b925050608086013567ffffffffffffffff811115610d4757610d4661076e565b5b610d5388828901610b21565b9150509295509295909350565b5f60208284031215610d7557610d7461076a565b5b5f610d8284828501610907565b91505092915050565b5f8060408385031215610da157610da061076a565b5b5f610dae858286016109f5565b9250506020610dbf858286016109f5565b9150509250929050565b5f82825260208201905092915050565b7f696e636f72726563742073656e646572000000000000000000000000000000005f82015250565b5f610e0d601083610dc9565b9150610e1882610dd9565b602082019050919050565b5f6020820190508181035f830152610e3a81610e01565b9050919050565b7f7175616e74697479206973207a65726f000000000000000000000000000000005f82015250565b5f610e75601083610dc9565b9150610e8082610e41565b602082019050919050565b5f6020820190508181035f830152610ea281610e69565b9050919050565b5f608082019050610ebc5f8301876108c9565b610ec960208301866108c9565b610ed66040830185610c6c565b610ee36060830184610c6c565b95945050505050565b7f746f6b656e4964206973207a65726f00000000000000000000000000000000005f82015250565b5f610f20600f83610dc9565b9150610f2b82610eec565b602082019050919050565b5f6020820190508181035f830152610f4d81610f14565b9050919050565b7f7072696365206973207a65726f000000000000000000000000000000000000005f82015250565b5f610f88600d83610dc9565b9150610f9382610f54565b602082019050919050565b5f6020820190508181035f830152610fb581610f7c565b9050919050565b5f606082019050610fcf5f830186610c6c565b610fdc6020830185610c6c565b610fe96040830184610c6c565b94935050505056fea26469706673582212209cd88f30e118f7e0a1f698f2908d7b88275bc42c8b682749e9ef5473b66d5b7f64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x9C JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xD4DDCE8A GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xD4DDCE8A EQ PUSH2 0x146 JUMPI DUP1 PUSH4 0xEA75AA8F EQ PUSH2 0x176 JUMPI DUP1 PUSH4 0xF23A6E61 EQ PUSH2 0x194 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1C4 JUMPI DUP1 PUSH4 0xF7D97577 EQ PUSH2 0x1E0 JUMPI PUSH2 0x9C JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xA0 JUMPI DUP1 PUSH4 0x2C1449E1 EQ PUSH2 0xD0 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xEE JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xF8 JUMPI DUP1 PUSH4 0xBC197C81 EQ PUSH2 0x116 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xBA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xB5 SWAP2 SWAP1 PUSH2 0x7C7 JUMP JUMPDEST PUSH2 0x1FC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC7 SWAP2 SWAP1 PUSH2 0x80C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD8 PUSH2 0x275 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE5 SWAP2 SWAP1 PUSH2 0x89F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF6 PUSH2 0x29A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x100 PUSH2 0x2AD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10D SWAP2 SWAP1 PUSH2 0x8D8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x130 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12B SWAP2 SWAP1 PUSH2 0xB4E JUMP JUMPDEST PUSH2 0x2D4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13D SWAP2 SWAP1 PUSH2 0xC28 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x160 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x15B SWAP2 SWAP1 PUSH2 0xC41 JUMP JUMPDEST PUSH2 0x2E8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16D SWAP2 SWAP1 PUSH2 0xC7B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x17E PUSH2 0x2FD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18B SWAP2 SWAP1 PUSH2 0xCB4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1AE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A9 SWAP2 SWAP1 PUSH2 0xCCD JUMP JUMPDEST PUSH2 0x322 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BB SWAP2 SWAP1 PUSH2 0xC28 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1DE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D9 SWAP2 SWAP1 PUSH2 0xD60 JUMP JUMPDEST PUSH2 0x444 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1FA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F5 SWAP2 SWAP1 PUSH2 0xD8B JUMP JUMPDEST PUSH2 0x4C8 JUMP JUMPDEST STOP JUMPDEST PUSH0 PUSH32 0x4E2312E000000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x26E JUMPI POP PUSH2 0x26D DUP3 PUSH2 0x5A9 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x2A2 PUSH2 0x612 JUMP JUMPDEST PUSH2 0x2AB PUSH0 PUSH2 0x699 JUMP JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH4 0xBC197C81 PUSH1 0xE0 SHL SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x3B2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3A9 SWAP1 PUSH2 0xE23 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP4 SUB PUSH2 0x3F4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3EB SWAP1 PUSH2 0xE8B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x1650D49BAC940346E34BAC1DDE642598B57BA618D7A0C005A91257851CAE2C24 DUP7 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0x429 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xEA9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH4 0xF23A6E61 PUSH1 0xE0 SHL SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x44C PUSH2 0x612 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x4BC JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4B3 SWAP2 SWAP1 PUSH2 0x8D8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4C5 DUP2 PUSH2 0x699 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x4D0 PUSH2 0x612 JUMP JUMPDEST PUSH0 DUP3 SUB PUSH2 0x512 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x509 SWAP1 PUSH2 0xF36 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 SUB PUSH2 0x554 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x54B SWAP1 PUSH2 0xF9E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH32 0x18E75BB8C091A6448C12A2023F055B2714C151B941A91DF8B9938788769FFE13 DUP3 DUP3 TIMESTAMP PUSH1 0x40 MLOAD PUSH2 0x59D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xFBC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x61A PUSH2 0x75A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x638 PUSH2 0x2AD JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x697 JUMPI PUSH2 0x65B PUSH2 0x75A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x68E SWAP2 SWAP1 PUSH2 0x8D8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7A6 DUP2 PUSH2 0x772 JUMP JUMPDEST DUP2 EQ PUSH2 0x7B0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x7C1 DUP2 PUSH2 0x79D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x7DC JUMPI PUSH2 0x7DB PUSH2 0x76A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x7E9 DUP5 DUP3 DUP6 ADD PUSH2 0x7B3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x806 DUP2 PUSH2 0x7F2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x81F PUSH0 DUP4 ADD DUP5 PUSH2 0x7FD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x867 PUSH2 0x862 PUSH2 0x85D DUP5 PUSH2 0x825 JUMP JUMPDEST PUSH2 0x844 JUMP JUMPDEST PUSH2 0x825 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x878 DUP3 PUSH2 0x84D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x889 DUP3 PUSH2 0x86E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x899 DUP2 PUSH2 0x87F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x8B2 PUSH0 DUP4 ADD DUP5 PUSH2 0x890 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x8C2 DUP3 PUSH2 0x825 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x8D2 DUP2 PUSH2 0x8B8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x8EB PUSH0 DUP4 ADD DUP5 PUSH2 0x8C9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x8FA DUP2 PUSH2 0x8B8 JUMP JUMPDEST DUP2 EQ PUSH2 0x904 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x915 DUP2 PUSH2 0x8F1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x965 DUP3 PUSH2 0x91F JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x984 JUMPI PUSH2 0x983 PUSH2 0x92F JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x996 PUSH2 0x761 JUMP JUMPDEST SWAP1 POP PUSH2 0x9A2 DUP3 DUP3 PUSH2 0x95C JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x9C1 JUMPI PUSH2 0x9C0 PUSH2 0x92F JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x9E8 DUP2 PUSH2 0x9D6 JUMP JUMPDEST DUP2 EQ PUSH2 0x9F2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xA03 DUP2 PUSH2 0x9DF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xA1B PUSH2 0xA16 DUP5 PUSH2 0x9A7 JUMP JUMPDEST PUSH2 0x98D JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0xA3E JUMPI PUSH2 0xA3D PUSH2 0x9D2 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xA67 JUMPI DUP1 PUSH2 0xA53 DUP9 DUP3 PUSH2 0x9F5 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xA40 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xA85 JUMPI PUSH2 0xA84 PUSH2 0x91B JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0xA95 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0xA09 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xABC JUMPI PUSH2 0xABB PUSH2 0x92F JUMP JUMPDEST JUMPDEST PUSH2 0xAC5 DUP3 PUSH2 0x91F JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xAF2 PUSH2 0xAED DUP5 PUSH2 0xAA2 JUMP JUMPDEST PUSH2 0x98D JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0xB0E JUMPI PUSH2 0xB0D PUSH2 0xA9E JUMP JUMPDEST JUMPDEST PUSH2 0xB19 DUP5 DUP3 DUP6 PUSH2 0xAD2 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xB35 JUMPI PUSH2 0xB34 PUSH2 0x91B JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0xB45 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0xAE0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xB67 JUMPI PUSH2 0xB66 PUSH2 0x76A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xB74 DUP9 DUP3 DUP10 ADD PUSH2 0x907 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0xB85 DUP9 DUP3 DUP10 ADD PUSH2 0x907 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xBA6 JUMPI PUSH2 0xBA5 PUSH2 0x76E JUMP JUMPDEST JUMPDEST PUSH2 0xBB2 DUP9 DUP3 DUP10 ADD PUSH2 0xA71 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xBD3 JUMPI PUSH2 0xBD2 PUSH2 0x76E JUMP JUMPDEST JUMPDEST PUSH2 0xBDF DUP9 DUP3 DUP10 ADD PUSH2 0xA71 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xC00 JUMPI PUSH2 0xBFF PUSH2 0x76E JUMP JUMPDEST JUMPDEST PUSH2 0xC0C DUP9 DUP3 DUP10 ADD PUSH2 0xB21 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH2 0xC22 DUP2 PUSH2 0x772 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC3B PUSH0 DUP4 ADD DUP5 PUSH2 0xC19 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC56 JUMPI PUSH2 0xC55 PUSH2 0x76A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xC63 DUP5 DUP3 DUP6 ADD PUSH2 0x9F5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xC75 DUP2 PUSH2 0x9D6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC8E PUSH0 DUP4 ADD DUP5 PUSH2 0xC6C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xC9E DUP3 PUSH2 0x86E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCAE DUP2 PUSH2 0xC94 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xCC7 PUSH0 DUP4 ADD DUP5 PUSH2 0xCA5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xCE6 JUMPI PUSH2 0xCE5 PUSH2 0x76A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xCF3 DUP9 DUP3 DUP10 ADD PUSH2 0x907 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0xD04 DUP9 DUP3 DUP10 ADD PUSH2 0x907 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0xD15 DUP9 DUP3 DUP10 ADD PUSH2 0x9F5 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0xD26 DUP9 DUP3 DUP10 ADD PUSH2 0x9F5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xD47 JUMPI PUSH2 0xD46 PUSH2 0x76E JUMP JUMPDEST JUMPDEST PUSH2 0xD53 DUP9 DUP3 DUP10 ADD PUSH2 0xB21 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD75 JUMPI PUSH2 0xD74 PUSH2 0x76A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xD82 DUP5 DUP3 DUP6 ADD PUSH2 0x907 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xDA1 JUMPI PUSH2 0xDA0 PUSH2 0x76A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xDAE DUP6 DUP3 DUP7 ADD PUSH2 0x9F5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xDBF DUP6 DUP3 DUP7 ADD PUSH2 0x9F5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x696E636F72726563742073656E64657200000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xE0D PUSH1 0x10 DUP4 PUSH2 0xDC9 JUMP JUMPDEST SWAP2 POP PUSH2 0xE18 DUP3 PUSH2 0xDD9 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xE3A DUP2 PUSH2 0xE01 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x7175616E74697479206973207A65726F00000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xE75 PUSH1 0x10 DUP4 PUSH2 0xDC9 JUMP JUMPDEST SWAP2 POP PUSH2 0xE80 DUP3 PUSH2 0xE41 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xEA2 DUP2 PUSH2 0xE69 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0xEBC PUSH0 DUP4 ADD DUP8 PUSH2 0x8C9 JUMP JUMPDEST PUSH2 0xEC9 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x8C9 JUMP JUMPDEST PUSH2 0xED6 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0xC6C JUMP JUMPDEST PUSH2 0xEE3 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0xC6C JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x746F6B656E4964206973207A65726F0000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xF20 PUSH1 0xF DUP4 PUSH2 0xDC9 JUMP JUMPDEST SWAP2 POP PUSH2 0xF2B DUP3 PUSH2 0xEEC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xF4D DUP2 PUSH2 0xF14 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x7072696365206973207A65726F00000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xF88 PUSH1 0xD DUP4 PUSH2 0xDC9 JUMP JUMPDEST SWAP2 POP PUSH2 0xF93 DUP3 PUSH2 0xF54 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xFB5 DUP2 PUSH2 0xF7C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xFCF PUSH0 DUP4 ADD DUP7 PUSH2 0xC6C JUMP JUMPDEST PUSH2 0xFDC PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xC6C JUMP JUMPDEST PUSH2 0xFE9 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xC6C JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP13 0xD8 DUP16 ADDRESS 0xE1 XOR 0xF7 0xE0 LOG1 0xF6 SWAP9 CALLCODE SWAP1 DUP14 PUSH28 0x88275BC42C8B682749E9EF5473B66D5B7F64736F6C634300081A0033 ",
							"sourceMap": "319:3465:14:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;650:221:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;513:26:14;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:0;;;:::i;:::-;;1638:85;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1102:247:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;699:45:14;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;589:27;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1529:1928;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2543:215:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3465:315:14;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;650:221:6;752:4;790:34;775:49;;;:11;:49;;;;:89;;;;828:36;852:11;828:23;:36::i;:::-;775:89;768:96;;650:221;;;:::o;513:26:14:-;;;;;;;;;;;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1638:85::-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;1102:247:6:-;1281:6;1306:36;;;1299:43;;1102:247;;;;;;;:::o;699:45:14:-;;;;;;;;;;;;;;;;;:::o;589:27::-;;;;;;;;;;;;;:::o;1529:1928::-;1940:6;2429:11;;;;;;;;;;;2407:34;;:10;:34;;;2399:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;2703:1;2694:5;:10;2686:39;;;;;;;;;;;;:::i;:::-;;;;;;;;;2840:52;2866:8;2876:4;2882:2;2886:5;2840:52;;;;;;;;;:::i;:::-;;;;;;;;3128:31;;;3121:38;;1529:1928;;;;;;;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;3465:315:14:-;1531:13:0;:11;:13::i;:::-;3563:1:14::1;3552:7;:12:::0;3544:40:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;3612:1;3603:5;:10:::0;3595:36:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;3664:5;3642:10;:19;3653:7;3642:19;;;;;;;;;;;:27;;;;3685:41;3694:7;3703:5;3710:15;3685:41;;;;;;;;:::i;:::-;;;;;;;;3465:315:::0;;:::o;763:146:12:-;839:4;877:25;862:40;;;:11;:40;;;;855:47;;763:146;;;:::o;1796:162:0:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2912:187::-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;656:96:10:-;709:7;735:10;728:17;;656:96;:::o;7:75:15:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:126::-;1555:7;1595:42;1588:5;1584:54;1573:65;;1518:126;;;:::o;1650:60::-;1678:3;1699:5;1692:12;;1650:60;;;:::o;1716:142::-;1766:9;1799:53;1817:34;1826:24;1844:5;1826:24;:::i;:::-;1817:34;:::i;:::-;1799:53;:::i;:::-;1786:66;;1716:142;;;:::o;1864:126::-;1914:9;1947:37;1978:5;1947:37;:::i;:::-;1934:50;;1864:126;;;:::o;1996:140::-;2060:9;2093:37;2124:5;2093:37;:::i;:::-;2080:50;;1996:140;;;:::o;2142:159::-;2243:51;2288:5;2243:51;:::i;:::-;2238:3;2231:64;2142:159;;:::o;2307:250::-;2414:4;2452:2;2441:9;2437:18;2429:26;;2465:85;2547:1;2536:9;2532:17;2523:6;2465:85;:::i;:::-;2307:250;;;;:::o;2563:96::-;2600:7;2629:24;2647:5;2629:24;:::i;:::-;2618:35;;2563:96;;;:::o;2665:118::-;2752:24;2770:5;2752:24;:::i;:::-;2747:3;2740:37;2665:118;;:::o;2789:222::-;2882:4;2920:2;2909:9;2905:18;2897:26;;2933:71;3001:1;2990:9;2986:17;2977:6;2933:71;:::i;:::-;2789:222;;;;:::o;3017:122::-;3090:24;3108:5;3090:24;:::i;:::-;3083:5;3080:35;3070:63;;3129:1;3126;3119:12;3070:63;3017:122;:::o;3145:139::-;3191:5;3229:6;3216:20;3207:29;;3245:33;3272:5;3245:33;:::i;:::-;3145:139;;;;:::o;3290:117::-;3399:1;3396;3389:12;3413:102;3454:6;3505:2;3501:7;3496:2;3489:5;3485:14;3481:28;3471:38;;3413:102;;;:::o;3521:180::-;3569:77;3566:1;3559:88;3666:4;3663:1;3656:15;3690:4;3687:1;3680:15;3707:281;3790:27;3812:4;3790:27;:::i;:::-;3782:6;3778:40;3920:6;3908:10;3905:22;3884:18;3872:10;3869:34;3866:62;3863:88;;;3931:18;;:::i;:::-;3863:88;3971:10;3967:2;3960:22;3750:238;3707:281;;:::o;3994:129::-;4028:6;4055:20;;:::i;:::-;4045:30;;4084:33;4112:4;4104:6;4084:33;:::i;:::-;3994:129;;;:::o;4129:311::-;4206:4;4296:18;4288:6;4285:30;4282:56;;;4318:18;;:::i;:::-;4282:56;4368:4;4360:6;4356:17;4348:25;;4428:4;4422;4418:15;4410:23;;4129:311;;;:::o;4446:117::-;4555:1;4552;4545:12;4569:77;4606:7;4635:5;4624:16;;4569:77;;;:::o;4652:122::-;4725:24;4743:5;4725:24;:::i;:::-;4718:5;4715:35;4705:63;;4764:1;4761;4754:12;4705:63;4652:122;:::o;4780:139::-;4826:5;4864:6;4851:20;4842:29;;4880:33;4907:5;4880:33;:::i;:::-;4780:139;;;;:::o;4942:710::-;5038:5;5063:81;5079:64;5136:6;5079:64;:::i;:::-;5063:81;:::i;:::-;5054:90;;5164:5;5193:6;5186:5;5179:21;5227:4;5220:5;5216:16;5209:23;;5280:4;5272:6;5268:17;5260:6;5256:30;5309:3;5301:6;5298:15;5295:122;;;5328:79;;:::i;:::-;5295:122;5443:6;5426:220;5460:6;5455:3;5452:15;5426:220;;;5535:3;5564:37;5597:3;5585:10;5564:37;:::i;:::-;5559:3;5552:50;5631:4;5626:3;5622:14;5615:21;;5502:144;5486:4;5481:3;5477:14;5470:21;;5426:220;;;5430:21;5044:608;;4942:710;;;;;:::o;5675:370::-;5746:5;5795:3;5788:4;5780:6;5776:17;5772:27;5762:122;;5803:79;;:::i;:::-;5762:122;5920:6;5907:20;5945:94;6035:3;6027:6;6020:4;6012:6;6008:17;5945:94;:::i;:::-;5936:103;;5752:293;5675:370;;;;:::o;6051:117::-;6160:1;6157;6150:12;6174:307;6235:4;6325:18;6317:6;6314:30;6311:56;;;6347:18;;:::i;:::-;6311:56;6385:29;6407:6;6385:29;:::i;:::-;6377:37;;6469:4;6463;6459:15;6451:23;;6174:307;;;:::o;6487:148::-;6585:6;6580:3;6575;6562:30;6626:1;6617:6;6612:3;6608:16;6601:27;6487:148;;;:::o;6641:423::-;6718:5;6743:65;6759:48;6800:6;6759:48;:::i;:::-;6743:65;:::i;:::-;6734:74;;6831:6;6824:5;6817:21;6869:4;6862:5;6858:16;6907:3;6898:6;6893:3;6889:16;6886:25;6883:112;;;6914:79;;:::i;:::-;6883:112;7004:54;7051:6;7046:3;7041;7004:54;:::i;:::-;6724:340;6641:423;;;;;:::o;7083:338::-;7138:5;7187:3;7180:4;7172:6;7168:17;7164:27;7154:122;;7195:79;;:::i;:::-;7154:122;7312:6;7299:20;7337:78;7411:3;7403:6;7396:4;7388:6;7384:17;7337:78;:::i;:::-;7328:87;;7144:277;7083:338;;;;:::o;7427:1509::-;7581:6;7589;7597;7605;7613;7662:3;7650:9;7641:7;7637:23;7633:33;7630:120;;;7669:79;;:::i;:::-;7630:120;7789:1;7814:53;7859:7;7850:6;7839:9;7835:22;7814:53;:::i;:::-;7804:63;;7760:117;7916:2;7942:53;7987:7;7978:6;7967:9;7963:22;7942:53;:::i;:::-;7932:63;;7887:118;8072:2;8061:9;8057:18;8044:32;8103:18;8095:6;8092:30;8089:117;;;8125:79;;:::i;:::-;8089:117;8230:78;8300:7;8291:6;8280:9;8276:22;8230:78;:::i;:::-;8220:88;;8015:303;8385:2;8374:9;8370:18;8357:32;8416:18;8408:6;8405:30;8402:117;;;8438:79;;:::i;:::-;8402:117;8543:78;8613:7;8604:6;8593:9;8589:22;8543:78;:::i;:::-;8533:88;;8328:303;8698:3;8687:9;8683:19;8670:33;8730:18;8722:6;8719:30;8716:117;;;8752:79;;:::i;:::-;8716:117;8857:62;8911:7;8902:6;8891:9;8887:22;8857:62;:::i;:::-;8847:72;;8641:288;7427:1509;;;;;;;;:::o;8942:115::-;9027:23;9044:5;9027:23;:::i;:::-;9022:3;9015:36;8942:115;;:::o;9063:218::-;9154:4;9192:2;9181:9;9177:18;9169:26;;9205:69;9271:1;9260:9;9256:17;9247:6;9205:69;:::i;:::-;9063:218;;;;:::o;9287:329::-;9346:6;9395:2;9383:9;9374:7;9370:23;9366:32;9363:119;;;9401:79;;:::i;:::-;9363:119;9521:1;9546:53;9591:7;9582:6;9571:9;9567:22;9546:53;:::i;:::-;9536:63;;9492:117;9287:329;;;;:::o;9622:118::-;9709:24;9727:5;9709:24;:::i;:::-;9704:3;9697:37;9622:118;;:::o;9746:222::-;9839:4;9877:2;9866:9;9862:18;9854:26;;9890:71;9958:1;9947:9;9943:17;9934:6;9890:71;:::i;:::-;9746:222;;;;:::o;9974:142::-;10040:9;10073:37;10104:5;10073:37;:::i;:::-;10060:50;;9974:142;;;:::o;10122:163::-;10225:53;10272:5;10225:53;:::i;:::-;10220:3;10213:66;10122:163;;:::o;10291:254::-;10400:4;10438:2;10427:9;10423:18;10415:26;;10451:87;10535:1;10524:9;10520:17;10511:6;10451:87;:::i;:::-;10291:254;;;;:::o;10551:1089::-;10655:6;10663;10671;10679;10687;10736:3;10724:9;10715:7;10711:23;10707:33;10704:120;;;10743:79;;:::i;:::-;10704:120;10863:1;10888:53;10933:7;10924:6;10913:9;10909:22;10888:53;:::i;:::-;10878:63;;10834:117;10990:2;11016:53;11061:7;11052:6;11041:9;11037:22;11016:53;:::i;:::-;11006:63;;10961:118;11118:2;11144:53;11189:7;11180:6;11169:9;11165:22;11144:53;:::i;:::-;11134:63;;11089:118;11246:2;11272:53;11317:7;11308:6;11297:9;11293:22;11272:53;:::i;:::-;11262:63;;11217:118;11402:3;11391:9;11387:19;11374:33;11434:18;11426:6;11423:30;11420:117;;;11456:79;;:::i;:::-;11420:117;11561:62;11615:7;11606:6;11595:9;11591:22;11561:62;:::i;:::-;11551:72;;11345:288;10551:1089;;;;;;;;:::o;11646:329::-;11705:6;11754:2;11742:9;11733:7;11729:23;11725:32;11722:119;;;11760:79;;:::i;:::-;11722:119;11880:1;11905:53;11950:7;11941:6;11930:9;11926:22;11905:53;:::i;:::-;11895:63;;11851:117;11646:329;;;;:::o;11981:474::-;12049:6;12057;12106:2;12094:9;12085:7;12081:23;12077:32;12074:119;;;12112:79;;:::i;:::-;12074:119;12232:1;12257:53;12302:7;12293:6;12282:9;12278:22;12257:53;:::i;:::-;12247:63;;12203:117;12359:2;12385:53;12430:7;12421:6;12410:9;12406:22;12385:53;:::i;:::-;12375:63;;12330:118;11981:474;;;;;:::o;12461:169::-;12545:11;12579:6;12574:3;12567:19;12619:4;12614:3;12610:14;12595:29;;12461:169;;;;:::o;12636:166::-;12776:18;12772:1;12764:6;12760:14;12753:42;12636:166;:::o;12808:366::-;12950:3;12971:67;13035:2;13030:3;12971:67;:::i;:::-;12964:74;;13047:93;13136:3;13047:93;:::i;:::-;13165:2;13160:3;13156:12;13149:19;;12808:366;;;:::o;13180:419::-;13346:4;13384:2;13373:9;13369:18;13361:26;;13433:9;13427:4;13423:20;13419:1;13408:9;13404:17;13397:47;13461:131;13587:4;13461:131;:::i;:::-;13453:139;;13180:419;;;:::o;13605:166::-;13745:18;13741:1;13733:6;13729:14;13722:42;13605:166;:::o;13777:366::-;13919:3;13940:67;14004:2;13999:3;13940:67;:::i;:::-;13933:74;;14016:93;14105:3;14016:93;:::i;:::-;14134:2;14129:3;14125:12;14118:19;;13777:366;;;:::o;14149:419::-;14315:4;14353:2;14342:9;14338:18;14330:26;;14402:9;14396:4;14392:20;14388:1;14377:9;14373:17;14366:47;14430:131;14556:4;14430:131;:::i;:::-;14422:139;;14149:419;;;:::o;14574:553::-;14751:4;14789:3;14778:9;14774:19;14766:27;;14803:71;14871:1;14860:9;14856:17;14847:6;14803:71;:::i;:::-;14884:72;14952:2;14941:9;14937:18;14928:6;14884:72;:::i;:::-;14966;15034:2;15023:9;15019:18;15010:6;14966:72;:::i;:::-;15048;15116:2;15105:9;15101:18;15092:6;15048:72;:::i;:::-;14574:553;;;;;;;:::o;15133:165::-;15273:17;15269:1;15261:6;15257:14;15250:41;15133:165;:::o;15304:366::-;15446:3;15467:67;15531:2;15526:3;15467:67;:::i;:::-;15460:74;;15543:93;15632:3;15543:93;:::i;:::-;15661:2;15656:3;15652:12;15645:19;;15304:366;;;:::o;15676:419::-;15842:4;15880:2;15869:9;15865:18;15857:26;;15929:9;15923:4;15919:20;15915:1;15904:9;15900:17;15893:47;15957:131;16083:4;15957:131;:::i;:::-;15949:139;;15676:419;;;:::o;16101:163::-;16241:15;16237:1;16229:6;16225:14;16218:39;16101:163;:::o;16270:366::-;16412:3;16433:67;16497:2;16492:3;16433:67;:::i;:::-;16426:74;;16509:93;16598:3;16509:93;:::i;:::-;16627:2;16622:3;16618:12;16611:19;;16270:366;;;:::o;16642:419::-;16808:4;16846:2;16835:9;16831:18;16823:26;;16895:9;16889:4;16885:20;16881:1;16870:9;16866:17;16859:47;16923:131;17049:4;16923:131;:::i;:::-;16915:139;;16642:419;;;:::o;17067:442::-;17216:4;17254:2;17243:9;17239:18;17231:26;;17267:71;17335:1;17324:9;17320:17;17311:6;17267:71;:::i;:::-;17348:72;17416:2;17405:9;17401:18;17392:6;17348:72;:::i;:::-;17430;17498:2;17487:9;17483:18;17474:6;17430:72;:::i;:::-;17067:442;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "827000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": "infinite",
								"onERC1155Received(address,address,uint256,uint256,bytes)": "infinite",
								"owner()": "2582",
								"renounceOwnership()": "infinite",
								"setPrice(uint256,uint256)": "infinite",
								"snowmenGame()": "infinite",
								"snowmenToken()": "infinite",
								"supportsInterface(bytes4)": "718",
								"tokenPrice(uint256)": "infinite",
								"transferOwnership(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 319,
									"end": 3784,
									"name": "PUSH",
									"source": 14,
									"value": "80"
								},
								{
									"begin": 319,
									"end": 3784,
									"name": "PUSH",
									"source": 14,
									"value": "40"
								},
								{
									"begin": 319,
									"end": 3784,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 1102,
									"end": 1521,
									"name": "CALLVALUE",
									"source": 14
								},
								{
									"begin": 1102,
									"end": 1521,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 1102,
									"end": 1521,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 1102,
									"end": 1521,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 1102,
									"end": 1521,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 1102,
									"end": 1521,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 1102,
									"end": 1521,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 1102,
									"end": 1521,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 1102,
									"end": 1521,
									"name": "tag",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 1102,
									"end": 1521,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1102,
									"end": 1521,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1102,
									"end": 1521,
									"name": "PUSH",
									"source": 14,
									"value": "40"
								},
								{
									"begin": 1102,
									"end": 1521,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 1102,
									"end": 1521,
									"name": "PUSHSIZE",
									"source": 14
								},
								{
									"begin": 1102,
									"end": 1521,
									"name": "CODESIZE",
									"source": 14
								},
								{
									"begin": 1102,
									"end": 1521,
									"name": "SUB",
									"source": 14
								},
								{
									"begin": 1102,
									"end": 1521,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 1102,
									"end": 1521,
									"name": "PUSHSIZE",
									"source": 14
								},
								{
									"begin": 1102,
									"end": 1521,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 1102,
									"end": 1521,
									"name": "CODECOPY",
									"source": 14
								},
								{
									"begin": 1102,
									"end": 1521,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 1102,
									"end": 1521,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 1102,
									"end": 1521,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 1102,
									"end": 1521,
									"name": "PUSH",
									"source": 14,
									"value": "40"
								},
								{
									"begin": 1102,
									"end": 1521,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 1102,
									"end": 1521,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 1102,
									"end": 1521,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 1102,
									"end": 1521,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 1102,
									"end": 1521,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "2"
								},
								{
									"begin": 1102,
									"end": 1521,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 1102,
									"end": 1521,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 1102,
									"end": 1521,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "3"
								},
								{
									"begin": 1102,
									"end": 1521,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 1102,
									"end": 1521,
									"name": "tag",
									"source": 14,
									"value": "2"
								},
								{
									"begin": 1102,
									"end": 1521,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1168,
									"end": 1180,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "5"
								},
								{
									"begin": 1168,
									"end": 1178,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "6"
								},
								{
									"begin": 1168,
									"end": 1178,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 1168,
									"end": 1178,
									"name": "SHL",
									"source": 14
								},
								{
									"begin": 1168,
									"end": 1180,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 1168,
									"end": 1180,
									"name": "SHR",
									"source": 14
								},
								{
									"begin": 1168,
									"end": 1180,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 1168,
									"end": 1180,
									"name": "tag",
									"source": 14,
									"value": "5"
								},
								{
									"begin": 1168,
									"end": 1180,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1452,
									"end": 1466,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 1429,
									"end": 1440,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 14,
									"value": "2"
								},
								{
									"begin": 1429,
									"end": 1440,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 1429,
									"end": 1467,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 14,
									"value": "100"
								},
								{
									"begin": 1429,
									"end": 1467,
									"modifierDepth": 1,
									"name": "EXP",
									"source": 14
								},
								{
									"begin": 1429,
									"end": 1467,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 1429,
									"end": 1467,
									"modifierDepth": 1,
									"name": "SLOAD",
									"source": 14
								},
								{
									"begin": 1429,
									"end": 1467,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 1429,
									"end": 1467,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 14,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1429,
									"end": 1467,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 14
								},
								{
									"begin": 1429,
									"end": 1467,
									"modifierDepth": 1,
									"name": "NOT",
									"source": 14
								},
								{
									"begin": 1429,
									"end": 1467,
									"modifierDepth": 1,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 1429,
									"end": 1467,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 1429,
									"end": 1467,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 1429,
									"end": 1467,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 14,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1429,
									"end": 1467,
									"modifierDepth": 1,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 1429,
									"end": 1467,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 14
								},
								{
									"begin": 1429,
									"end": 1467,
									"modifierDepth": 1,
									"name": "OR",
									"source": 14
								},
								{
									"begin": 1429,
									"end": 1467,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 1429,
									"end": 1467,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 14
								},
								{
									"begin": 1429,
									"end": 1467,
									"modifierDepth": 1,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1500,
									"end": 1512,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 1478,
									"end": 1490,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 1478,
									"end": 1490,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 1478,
									"end": 1513,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 14,
									"value": "100"
								},
								{
									"begin": 1478,
									"end": 1513,
									"modifierDepth": 1,
									"name": "EXP",
									"source": 14
								},
								{
									"begin": 1478,
									"end": 1513,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 1478,
									"end": 1513,
									"modifierDepth": 1,
									"name": "SLOAD",
									"source": 14
								},
								{
									"begin": 1478,
									"end": 1513,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 1478,
									"end": 1513,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 14,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1478,
									"end": 1513,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 14
								},
								{
									"begin": 1478,
									"end": 1513,
									"modifierDepth": 1,
									"name": "NOT",
									"source": 14
								},
								{
									"begin": 1478,
									"end": 1513,
									"modifierDepth": 1,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 1478,
									"end": 1513,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 1478,
									"end": 1513,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 1478,
									"end": 1513,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 14,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1478,
									"end": 1513,
									"modifierDepth": 1,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 1478,
									"end": 1513,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 14
								},
								{
									"begin": 1478,
									"end": 1513,
									"modifierDepth": 1,
									"name": "OR",
									"source": 14
								},
								{
									"begin": 1478,
									"end": 1513,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 1478,
									"end": 1513,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 14
								},
								{
									"begin": 1478,
									"end": 1513,
									"modifierDepth": 1,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1102,
									"end": 1521,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1102,
									"end": 1521,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 319,
									"end": 3784,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "15"
								},
								{
									"begin": 319,
									"end": 3784,
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 656,
									"end": 752,
									"name": "tag",
									"source": 10,
									"value": "6"
								},
								{
									"begin": 656,
									"end": 752,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 709,
									"end": 716,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 735,
									"end": 745,
									"name": "CALLER",
									"source": 10
								},
								{
									"begin": 728,
									"end": 745,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 728,
									"end": 745,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 656,
									"end": 752,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 656,
									"end": 752,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 15,
									"value": "19"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 15
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 15,
									"value": "21"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 15,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 15
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 15,
									"value": "22"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "32"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "21"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 15,
									"value": "32"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 15,
									"value": "23"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "34"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "22"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 15,
									"value": "34"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 15
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "35"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 15
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 15,
									"value": "35"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 15,
									"value": "24"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 15
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "37"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "23"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 15,
									"value": "37"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 15
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "tag",
									"source": 15,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 924,
									"end": 930,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 932,
									"end": 938,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 981,
									"end": 983,
									"name": "PUSH",
									"source": 15,
									"value": "40"
								},
								{
									"begin": 969,
									"end": 978,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 960,
									"end": 967,
									"name": "DUP6",
									"source": 15
								},
								{
									"begin": 956,
									"end": 979,
									"name": "SUB",
									"source": 15
								},
								{
									"begin": 952,
									"end": 984,
									"name": "SLT",
									"source": 15
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "ISZERO",
									"source": 15
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "39"
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "40"
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "19"
								},
								{
									"begin": 987,
									"end": 1066,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "tag",
									"source": 15,
									"value": "40"
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "tag",
									"source": 15,
									"value": "39"
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1107,
									"end": 1108,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "41"
								},
								{
									"begin": 1188,
									"end": 1195,
									"name": "DUP6",
									"source": 15
								},
								{
									"begin": 1179,
									"end": 1185,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 1168,
									"end": 1177,
									"name": "DUP7",
									"source": 15
								},
								{
									"begin": 1164,
									"end": 1186,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "24"
								},
								{
									"begin": 1132,
									"end": 1196,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "tag",
									"source": 15,
									"value": "41"
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1122,
									"end": 1196,
									"name": "SWAP3",
									"source": 15
								},
								{
									"begin": 1122,
									"end": 1196,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1078,
									"end": 1206,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1245,
									"end": 1247,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "42"
								},
								{
									"begin": 1327,
									"end": 1334,
									"name": "DUP6",
									"source": 15
								},
								{
									"begin": 1318,
									"end": 1324,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 1307,
									"end": 1316,
									"name": "DUP7",
									"source": 15
								},
								{
									"begin": 1303,
									"end": 1325,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "24"
								},
								{
									"begin": 1271,
									"end": 1335,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "tag",
									"source": 15,
									"value": "42"
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1261,
									"end": 1335,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 1261,
									"end": 1335,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1216,
									"end": 1345,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "SWAP3",
									"source": 15
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "SWAP3",
									"source": 15
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 845,
									"end": 1352,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 1358,
									"end": 1476,
									"name": "tag",
									"source": 15,
									"value": "25"
								},
								{
									"begin": 1358,
									"end": 1476,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1445,
									"end": 1469,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "44"
								},
								{
									"begin": 1463,
									"end": 1468,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 1445,
									"end": 1469,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "22"
								},
								{
									"begin": 1445,
									"end": 1469,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 1445,
									"end": 1469,
									"name": "tag",
									"source": 15,
									"value": "44"
								},
								{
									"begin": 1445,
									"end": 1469,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1440,
									"end": 1443,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 1433,
									"end": 1470,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 1358,
									"end": 1476,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1358,
									"end": 1476,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1358,
									"end": 1476,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 1482,
									"end": 1704,
									"name": "tag",
									"source": 15,
									"value": "11"
								},
								{
									"begin": 1482,
									"end": 1704,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1575,
									"end": 1579,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 1613,
									"end": 1615,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 1602,
									"end": 1611,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 1598,
									"end": 1616,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 1590,
									"end": 1616,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 1590,
									"end": 1616,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1626,
									"end": 1697,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "46"
								},
								{
									"begin": 1694,
									"end": 1695,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 1683,
									"end": 1692,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 1679,
									"end": 1696,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 1670,
									"end": 1676,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 1626,
									"end": 1697,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "25"
								},
								{
									"begin": 1626,
									"end": 1697,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 1626,
									"end": 1697,
									"name": "tag",
									"source": 15,
									"value": "46"
								},
								{
									"begin": 1626,
									"end": 1697,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1482,
									"end": 1704,
									"name": "SWAP3",
									"source": 15
								},
								{
									"begin": 1482,
									"end": 1704,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 1482,
									"end": 1704,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1482,
									"end": 1704,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1482,
									"end": 1704,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 319,
									"end": 3784,
									"name": "tag",
									"source": 14,
									"value": "15"
								},
								{
									"begin": 319,
									"end": 3784,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 319,
									"end": 3784,
									"name": "PUSH #[$]",
									"source": 14,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 319,
									"end": 3784,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 319,
									"end": 3784,
									"name": "PUSH [$]",
									"source": 14,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 319,
									"end": 3784,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 319,
									"end": 3784,
									"name": "CODECOPY",
									"source": 14
								},
								{
									"begin": 319,
									"end": 3784,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 319,
									"end": 3784,
									"name": "RETURN",
									"source": 14
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212209cd88f30e118f7e0a1f698f2908d7b88275bc42c8b682749e9ef5473b66d5b7f64736f6c634300081a0033",
									".code": [
										{
											"begin": 319,
											"end": 3784,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 319,
											"end": 3784,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 319,
											"end": 3784,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 319,
											"end": 3784,
											"name": "CALLVALUE",
											"source": 14
										},
										{
											"begin": 319,
											"end": 3784,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 319,
											"end": 3784,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 319,
											"end": 3784,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 319,
											"end": 3784,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 319,
											"end": 3784,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 319,
											"end": 3784,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 319,
											"end": 3784,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 319,
											"end": 3784,
											"name": "tag",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 319,
											"end": 3784,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 319,
											"end": 3784,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 319,
											"end": 3784,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 319,
											"end": 3784,
											"name": "CALLDATASIZE",
											"source": 14
										},
										{
											"begin": 319,
											"end": 3784,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 319,
											"end": 3784,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 319,
											"end": 3784,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 319,
											"end": 3784,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 319,
											"end": 3784,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 319,
											"end": 3784,
											"name": "PUSH",
											"source": 14,
											"value": "E0"
										},
										{
											"begin": 319,
											"end": 3784,
											"name": "SHR",
											"source": 14
										},
										{
											"begin": 319,
											"end": 3784,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 319,
											"end": 3784,
											"name": "PUSH",
											"source": 14,
											"value": "D4DDCE8A"
										},
										{
											"begin": 319,
											"end": 3784,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 319,
											"end": 3784,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "13"
										},
										{
											"begin": 319,
											"end": 3784,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 319,
											"end": 3784,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 319,
											"end": 3784,
											"name": "PUSH",
											"source": 14,
											"value": "D4DDCE8A"
										},
										{
											"begin": 319,
											"end": 3784,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 319,
											"end": 3784,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "8"
										},
										{
											"begin": 319,
											"end": 3784,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 319,
											"end": 3784,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 319,
											"end": 3784,
											"name": "PUSH",
											"source": 14,
											"value": "EA75AA8F"
										},
										{
											"begin": 319,
											"end": 3784,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 319,
											"end": 3784,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "9"
										},
										{
											"begin": 319,
											"end": 3784,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 319,
											"end": 3784,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 319,
											"end": 3784,
											"name": "PUSH",
											"source": 14,
											"value": "F23A6E61"
										},
										{
											"begin": 319,
											"end": 3784,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 319,
											"end": 3784,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "10"
										},
										{
											"begin": 319,
											"end": 3784,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 319,
											"end": 3784,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 319,
											"end": 3784,
											"name": "PUSH",
											"source": 14,
											"value": "F2FDE38B"
										},
										{
											"begin": 319,
											"end": 3784,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 319,
											"end": 3784,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "11"
										},
										{
											"begin": 319,
											"end": 3784,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 319,
											"end": 3784,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 319,
											"end": 3784,
											"name": "PUSH",
											"source": 14,
											"value": "F7D97577"
										},
										{
											"begin": 319,
											"end": 3784,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 319,
											"end": 3784,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "12"
										},
										{
											"begin": 319,
											"end": 3784,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 319,
											"end": 3784,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 319,
											"end": 3784,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 319,
											"end": 3784,
											"name": "tag",
											"source": 14,
											"value": "13"
										},
										{
											"begin": 319,
											"end": 3784,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 319,
											"end": 3784,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 319,
											"end": 3784,
											"name": "PUSH",
											"source": 14,
											"value": "1FFC9A7"
										},
										{
											"begin": 319,
											"end": 3784,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 319,
											"end": 3784,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "3"
										},
										{
											"begin": 319,
											"end": 3784,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 319,
											"end": 3784,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 319,
											"end": 3784,
											"name": "PUSH",
											"source": 14,
											"value": "2C1449E1"
										},
										{
											"begin": 319,
											"end": 3784,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 319,
											"end": 3784,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 319,
											"end": 3784,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 319,
											"end": 3784,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 319,
											"end": 3784,
											"name": "PUSH",
											"source": 14,
											"value": "715018A6"
										},
										{
											"begin": 319,
											"end": 3784,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 319,
											"end": 3784,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "5"
										},
										{
											"begin": 319,
											"end": 3784,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 319,
											"end": 3784,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 319,
											"end": 3784,
											"name": "PUSH",
											"source": 14,
											"value": "8DA5CB5B"
										},
										{
											"begin": 319,
											"end": 3784,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 319,
											"end": 3784,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "6"
										},
										{
											"begin": 319,
											"end": 3784,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 319,
											"end": 3784,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 319,
											"end": 3784,
											"name": "PUSH",
											"source": 14,
											"value": "BC197C81"
										},
										{
											"begin": 319,
											"end": 3784,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 319,
											"end": 3784,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "7"
										},
										{
											"begin": 319,
											"end": 3784,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 319,
											"end": 3784,
											"name": "tag",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 319,
											"end": 3784,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 319,
											"end": 3784,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 319,
											"end": 3784,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 319,
											"end": 3784,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 650,
											"end": 871,
											"name": "tag",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 650,
											"end": 871,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 650,
											"end": 871,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 650,
											"end": 871,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 650,
											"end": 871,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 650,
											"end": 871,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 650,
											"end": 871,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 650,
											"end": 871,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 650,
											"end": 871,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 650,
											"end": 871,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 650,
											"end": 871,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 650,
											"end": 871,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 650,
											"end": 871,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 650,
											"end": 871,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 650,
											"end": 871,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 650,
											"end": 871,
											"name": "tag",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 650,
											"end": 871,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 650,
											"end": 871,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 650,
											"end": 871,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 650,
											"end": 871,
											"name": "tag",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 650,
											"end": 871,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 650,
											"end": 871,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 650,
											"end": 871,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 650,
											"end": 871,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 650,
											"end": 871,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 650,
											"end": 871,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 650,
											"end": 871,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 650,
											"end": 871,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 650,
											"end": 871,
											"name": "tag",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 650,
											"end": 871,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 650,
											"end": 871,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 650,
											"end": 871,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 650,
											"end": 871,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 650,
											"end": 871,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 650,
											"end": 871,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 650,
											"end": 871,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 650,
											"end": 871,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 513,
											"end": 539,
											"name": "tag",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 513,
											"end": 539,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 513,
											"end": 539,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 513,
											"end": 539,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "21"
										},
										{
											"begin": 513,
											"end": 539,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 513,
											"end": 539,
											"name": "tag",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 513,
											"end": 539,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 513,
											"end": 539,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 513,
											"end": 539,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 513,
											"end": 539,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "22"
										},
										{
											"begin": 513,
											"end": 539,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 513,
											"end": 539,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 513,
											"end": 539,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "23"
										},
										{
											"begin": 513,
											"end": 539,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 513,
											"end": 539,
											"name": "tag",
											"source": 14,
											"value": "22"
										},
										{
											"begin": 513,
											"end": 539,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 513,
											"end": 539,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 513,
											"end": 539,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 513,
											"end": 539,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 513,
											"end": 539,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 513,
											"end": 539,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 513,
											"end": 539,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 513,
											"end": 539,
											"name": "RETURN",
											"source": 14
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1102,
											"end": 1349,
											"name": "tag",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 1102,
											"end": 1349,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1102,
											"end": 1349,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 1102,
											"end": 1349,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1102,
											"end": 1349,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1102,
											"end": 1349,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1102,
											"end": 1349,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1102,
											"end": 1349,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1102,
											"end": 1349,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1102,
											"end": 1349,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1102,
											"end": 1349,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 1102,
											"end": 1349,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1102,
											"end": 1349,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1102,
											"end": 1349,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 1102,
											"end": 1349,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1102,
											"end": 1349,
											"name": "tag",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 1102,
											"end": 1349,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1102,
											"end": 1349,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "33"
										},
										{
											"begin": 1102,
											"end": 1349,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1102,
											"end": 1349,
											"name": "tag",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 1102,
											"end": 1349,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1102,
											"end": 1349,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1102,
											"end": 1349,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1102,
											"end": 1349,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 1102,
											"end": 1349,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1102,
											"end": 1349,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1102,
											"end": 1349,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 1102,
											"end": 1349,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1102,
											"end": 1349,
											"name": "tag",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 1102,
											"end": 1349,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1102,
											"end": 1349,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1102,
											"end": 1349,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1102,
											"end": 1349,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1102,
											"end": 1349,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1102,
											"end": 1349,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1102,
											"end": 1349,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1102,
											"end": 1349,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 699,
											"end": 744,
											"name": "tag",
											"source": 14,
											"value": "8"
										},
										{
											"begin": 699,
											"end": 744,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 699,
											"end": 744,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "36"
										},
										{
											"begin": 699,
											"end": 744,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 699,
											"end": 744,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 699,
											"end": 744,
											"name": "CALLDATASIZE",
											"source": 14
										},
										{
											"begin": 699,
											"end": 744,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 699,
											"end": 744,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 699,
											"end": 744,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 699,
											"end": 744,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 699,
											"end": 744,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "37"
										},
										{
											"begin": 699,
											"end": 744,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 699,
											"end": 744,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 699,
											"end": 744,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "38"
										},
										{
											"begin": 699,
											"end": 744,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 699,
											"end": 744,
											"name": "tag",
											"source": 14,
											"value": "37"
										},
										{
											"begin": 699,
											"end": 744,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 699,
											"end": 744,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "39"
										},
										{
											"begin": 699,
											"end": 744,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 699,
											"end": 744,
											"name": "tag",
											"source": 14,
											"value": "36"
										},
										{
											"begin": 699,
											"end": 744,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 699,
											"end": 744,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 699,
											"end": 744,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 699,
											"end": 744,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 699,
											"end": 744,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 699,
											"end": 744,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 699,
											"end": 744,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "41"
										},
										{
											"begin": 699,
											"end": 744,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 699,
											"end": 744,
											"name": "tag",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 699,
											"end": 744,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 699,
											"end": 744,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 699,
											"end": 744,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 699,
											"end": 744,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 699,
											"end": 744,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 699,
											"end": 744,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 699,
											"end": 744,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 699,
											"end": 744,
											"name": "RETURN",
											"source": 14
										},
										{
											"begin": 589,
											"end": 616,
											"name": "tag",
											"source": 14,
											"value": "9"
										},
										{
											"begin": 589,
											"end": 616,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 589,
											"end": 616,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "42"
										},
										{
											"begin": 589,
											"end": 616,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "43"
										},
										{
											"begin": 589,
											"end": 616,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 589,
											"end": 616,
											"name": "tag",
											"source": 14,
											"value": "42"
										},
										{
											"begin": 589,
											"end": 616,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 589,
											"end": 616,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 589,
											"end": 616,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 589,
											"end": 616,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "44"
										},
										{
											"begin": 589,
											"end": 616,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 589,
											"end": 616,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 589,
											"end": 616,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "45"
										},
										{
											"begin": 589,
											"end": 616,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 589,
											"end": 616,
											"name": "tag",
											"source": 14,
											"value": "44"
										},
										{
											"begin": 589,
											"end": 616,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 589,
											"end": 616,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 589,
											"end": 616,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 589,
											"end": 616,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 589,
											"end": 616,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 589,
											"end": 616,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 589,
											"end": 616,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 589,
											"end": 616,
											"name": "RETURN",
											"source": 14
										},
										{
											"begin": 1529,
											"end": 3457,
											"name": "tag",
											"source": 14,
											"value": "10"
										},
										{
											"begin": 1529,
											"end": 3457,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1529,
											"end": 3457,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "46"
										},
										{
											"begin": 1529,
											"end": 3457,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 1529,
											"end": 3457,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1529,
											"end": 3457,
											"name": "CALLDATASIZE",
											"source": 14
										},
										{
											"begin": 1529,
											"end": 3457,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 1529,
											"end": 3457,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1529,
											"end": 3457,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1529,
											"end": 3457,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1529,
											"end": 3457,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "47"
										},
										{
											"begin": 1529,
											"end": 3457,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1529,
											"end": 3457,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1529,
											"end": 3457,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "48"
										},
										{
											"begin": 1529,
											"end": 3457,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1529,
											"end": 3457,
											"name": "tag",
											"source": 14,
											"value": "47"
										},
										{
											"begin": 1529,
											"end": 3457,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1529,
											"end": 3457,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "49"
										},
										{
											"begin": 1529,
											"end": 3457,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1529,
											"end": 3457,
											"name": "tag",
											"source": 14,
											"value": "46"
										},
										{
											"begin": 1529,
											"end": 3457,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1529,
											"end": 3457,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1529,
											"end": 3457,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 1529,
											"end": 3457,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "50"
										},
										{
											"begin": 1529,
											"end": 3457,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1529,
											"end": 3457,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1529,
											"end": 3457,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "35"
										},
										{
											"begin": 1529,
											"end": 3457,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1529,
											"end": 3457,
											"name": "tag",
											"source": 14,
											"value": "50"
										},
										{
											"begin": 1529,
											"end": 3457,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1529,
											"end": 3457,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1529,
											"end": 3457,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 1529,
											"end": 3457,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1529,
											"end": 3457,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1529,
											"end": 3457,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 1529,
											"end": 3457,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1529,
											"end": 3457,
											"name": "RETURN",
											"source": 14
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 3465,
											"end": 3780,
											"name": "tag",
											"source": 14,
											"value": "12"
										},
										{
											"begin": 3465,
											"end": 3780,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3465,
											"end": 3780,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "55"
										},
										{
											"begin": 3465,
											"end": 3780,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 3465,
											"end": 3780,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3465,
											"end": 3780,
											"name": "CALLDATASIZE",
											"source": 14
										},
										{
											"begin": 3465,
											"end": 3780,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 3465,
											"end": 3780,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3465,
											"end": 3780,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3465,
											"end": 3780,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3465,
											"end": 3780,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "56"
										},
										{
											"begin": 3465,
											"end": 3780,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3465,
											"end": 3780,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3465,
											"end": 3780,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "57"
										},
										{
											"begin": 3465,
											"end": 3780,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3465,
											"end": 3780,
											"name": "tag",
											"source": 14,
											"value": "56"
										},
										{
											"begin": 3465,
											"end": 3780,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3465,
											"end": 3780,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "58"
										},
										{
											"begin": 3465,
											"end": 3780,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3465,
											"end": 3780,
											"name": "tag",
											"source": 14,
											"value": "55"
										},
										{
											"begin": 3465,
											"end": 3780,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3465,
											"end": 3780,
											"name": "STOP",
											"source": 14
										},
										{
											"begin": 650,
											"end": 871,
											"name": "tag",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 650,
											"end": 871,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 752,
											"end": 756,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 790,
											"end": 824,
											"name": "PUSH",
											"source": 6,
											"value": "4E2312E000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 775,
											"end": 824,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 775,
											"end": 824,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 775,
											"end": 824,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 775,
											"end": 786,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 775,
											"end": 824,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 775,
											"end": 824,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 775,
											"end": 824,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 775,
											"end": 824,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 775,
											"end": 864,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 775,
											"end": 864,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 775,
											"end": 864,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 775,
											"end": 864,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 828,
											"end": 864,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 852,
											"end": 863,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 828,
											"end": 851,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "62"
										},
										{
											"begin": 828,
											"end": 864,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 828,
											"end": 864,
											"name": "tag",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 828,
											"end": 864,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 775,
											"end": 864,
											"name": "tag",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 775,
											"end": 864,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 768,
											"end": 864,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 768,
											"end": 864,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 650,
											"end": 871,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 650,
											"end": 871,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 650,
											"end": 871,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 650,
											"end": 871,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 513,
											"end": 539,
											"name": "tag",
											"source": 14,
											"value": "21"
										},
										{
											"begin": 513,
											"end": 539,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 513,
											"end": 539,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 513,
											"end": 539,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 513,
											"end": 539,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 513,
											"end": 539,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 513,
											"end": 539,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 513,
											"end": 539,
											"name": "PUSH",
											"source": 14,
											"value": "100"
										},
										{
											"begin": 513,
											"end": 539,
											"name": "EXP",
											"source": 14
										},
										{
											"begin": 513,
											"end": 539,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 513,
											"end": 539,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 513,
											"end": 539,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 513,
											"end": 539,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 513,
											"end": 539,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 513,
											"end": 539,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1102,
											"end": 1349,
											"name": "tag",
											"source": 6,
											"value": "33"
										},
										{
											"begin": 1102,
											"end": 1349,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1281,
											"end": 1287,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1306,
											"end": 1342,
											"name": "PUSH",
											"source": 6,
											"value": "BC197C81"
										},
										{
											"begin": 1306,
											"end": 1342,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 1306,
											"end": 1342,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 1299,
											"end": 1342,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1299,
											"end": 1342,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1102,
											"end": 1349,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 1102,
											"end": 1349,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 1102,
											"end": 1349,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1102,
											"end": 1349,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1102,
											"end": 1349,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1102,
											"end": 1349,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1102,
											"end": 1349,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1102,
											"end": 1349,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 699,
											"end": 744,
											"name": "tag",
											"source": 14,
											"value": "39"
										},
										{
											"begin": 699,
											"end": 744,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 699,
											"end": 744,
											"name": "PUSH",
											"source": 14,
											"value": "3"
										},
										{
											"begin": 699,
											"end": 744,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 699,
											"end": 744,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 699,
											"end": 744,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 699,
											"end": 744,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 699,
											"end": 744,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 699,
											"end": 744,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 699,
											"end": 744,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 699,
											"end": 744,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 699,
											"end": 744,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 699,
											"end": 744,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 699,
											"end": 744,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 699,
											"end": 744,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 699,
											"end": 744,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 699,
											"end": 744,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 699,
											"end": 744,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 699,
											"end": 744,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 589,
											"end": 616,
											"name": "tag",
											"source": 14,
											"value": "43"
										},
										{
											"begin": 589,
											"end": 616,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 589,
											"end": 616,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 589,
											"end": 616,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 589,
											"end": 616,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 589,
											"end": 616,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 589,
											"end": 616,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 589,
											"end": 616,
											"name": "PUSH",
											"source": 14,
											"value": "100"
										},
										{
											"begin": 589,
											"end": 616,
											"name": "EXP",
											"source": 14
										},
										{
											"begin": 589,
											"end": 616,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 589,
											"end": 616,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 589,
											"end": 616,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 589,
											"end": 616,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 589,
											"end": 616,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 589,
											"end": 616,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1529,
											"end": 3457,
											"name": "tag",
											"source": 14,
											"value": "49"
										},
										{
											"begin": 1529,
											"end": 3457,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1940,
											"end": 1946,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2429,
											"end": 2440,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 2429,
											"end": 2440,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2429,
											"end": 2440,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2429,
											"end": 2440,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 2429,
											"end": 2440,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2429,
											"end": 2440,
											"name": "PUSH",
											"source": 14,
											"value": "100"
										},
										{
											"begin": 2429,
											"end": 2440,
											"name": "EXP",
											"source": 14
										},
										{
											"begin": 2429,
											"end": 2440,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2429,
											"end": 2440,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 2429,
											"end": 2440,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2429,
											"end": 2440,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 2407,
											"end": 2441,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2407,
											"end": 2441,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 2407,
											"end": 2417,
											"name": "CALLER",
											"source": 14
										},
										{
											"begin": 2407,
											"end": 2441,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2407,
											"end": 2441,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 2407,
											"end": 2441,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 2399,
											"end": 2462,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "72"
										},
										{
											"begin": 2399,
											"end": 2462,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 2399,
											"end": 2462,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 2399,
											"end": 2462,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 2399,
											"end": 2462,
											"name": "PUSH",
											"source": 14,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2399,
											"end": 2462,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2399,
											"end": 2462,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 2399,
											"end": 2462,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 2399,
											"end": 2462,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2399,
											"end": 2462,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "73"
										},
										{
											"begin": 2399,
											"end": 2462,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2399,
											"end": 2462,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "74"
										},
										{
											"begin": 2399,
											"end": 2462,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2399,
											"end": 2462,
											"name": "tag",
											"source": 14,
											"value": "73"
										},
										{
											"begin": 2399,
											"end": 2462,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2399,
											"end": 2462,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 2399,
											"end": 2462,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 2399,
											"end": 2462,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2399,
											"end": 2462,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2399,
											"end": 2462,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 2399,
											"end": 2462,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2399,
											"end": 2462,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 2399,
											"end": 2462,
											"name": "tag",
											"source": 14,
											"value": "72"
										},
										{
											"begin": 2399,
											"end": 2462,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2703,
											"end": 2704,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2694,
											"end": 2699,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 2694,
											"end": 2704,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 2686,
											"end": 2725,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "75"
										},
										{
											"begin": 2686,
											"end": 2725,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 2686,
											"end": 2725,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 2686,
											"end": 2725,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 2686,
											"end": 2725,
											"name": "PUSH",
											"source": 14,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2686,
											"end": 2725,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2686,
											"end": 2725,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 2686,
											"end": 2725,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 2686,
											"end": 2725,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2686,
											"end": 2725,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "76"
										},
										{
											"begin": 2686,
											"end": 2725,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2686,
											"end": 2725,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "77"
										},
										{
											"begin": 2686,
											"end": 2725,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2686,
											"end": 2725,
											"name": "tag",
											"source": 14,
											"value": "76"
										},
										{
											"begin": 2686,
											"end": 2725,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2686,
											"end": 2725,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 2686,
											"end": 2725,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 2686,
											"end": 2725,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2686,
											"end": 2725,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2686,
											"end": 2725,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 2686,
											"end": 2725,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2686,
											"end": 2725,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 2686,
											"end": 2725,
											"name": "tag",
											"source": 14,
											"value": "75"
										},
										{
											"begin": 2686,
											"end": 2725,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2840,
											"end": 2892,
											"name": "PUSH",
											"source": 14,
											"value": "1650D49BAC940346E34BAC1DDE642598B57BA618D7A0C005A91257851CAE2C24"
										},
										{
											"begin": 2866,
											"end": 2874,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 2876,
											"end": 2880,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 2882,
											"end": 2884,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 2886,
											"end": 2891,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 2840,
											"end": 2892,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 2840,
											"end": 2892,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 2840,
											"end": 2892,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "78"
										},
										{
											"begin": 2840,
											"end": 2892,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 2840,
											"end": 2892,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 2840,
											"end": 2892,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 2840,
											"end": 2892,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2840,
											"end": 2892,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2840,
											"end": 2892,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "79"
										},
										{
											"begin": 2840,
											"end": 2892,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2840,
											"end": 2892,
											"name": "tag",
											"source": 14,
											"value": "78"
										},
										{
											"begin": 2840,
											"end": 2892,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2840,
											"end": 2892,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 2840,
											"end": 2892,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 2840,
											"end": 2892,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2840,
											"end": 2892,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2840,
											"end": 2892,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 2840,
											"end": 2892,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2840,
											"end": 2892,
											"name": "LOG1",
											"source": 14
										},
										{
											"begin": 3128,
											"end": 3159,
											"name": "PUSH",
											"source": 14,
											"value": "F23A6E61"
										},
										{
											"begin": 3128,
											"end": 3159,
											"name": "PUSH",
											"source": 14,
											"value": "E0"
										},
										{
											"begin": 3128,
											"end": 3159,
											"name": "SHL",
											"source": 14
										},
										{
											"begin": 3121,
											"end": 3159,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3121,
											"end": 3159,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1529,
											"end": 3457,
											"name": "SWAP6",
											"source": 14
										},
										{
											"begin": 1529,
											"end": 3457,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 1529,
											"end": 3457,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1529,
											"end": 3457,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1529,
											"end": 3457,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1529,
											"end": 3457,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1529,
											"end": 3457,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1529,
											"end": 3457,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3465,
											"end": 3780,
											"name": "tag",
											"source": 14,
											"value": "58"
										},
										{
											"begin": 3465,
											"end": 3780,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3563,
											"end": 3564,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3552,
											"end": 3559,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 3552,
											"end": 3564,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 3544,
											"end": 3584,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "89"
										},
										{
											"begin": 3544,
											"end": 3584,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 3544,
											"end": 3584,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 3544,
											"end": 3584,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 3544,
											"end": 3584,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3544,
											"end": 3584,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3544,
											"end": 3584,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 3544,
											"end": 3584,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 3544,
											"end": 3584,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3544,
											"end": 3584,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "90"
										},
										{
											"begin": 3544,
											"end": 3584,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3544,
											"end": 3584,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "91"
										},
										{
											"begin": 3544,
											"end": 3584,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3544,
											"end": 3584,
											"modifierDepth": 1,
											"name": "tag",
											"source": 14,
											"value": "90"
										},
										{
											"begin": 3544,
											"end": 3584,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3544,
											"end": 3584,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 3544,
											"end": 3584,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 3544,
											"end": 3584,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3544,
											"end": 3584,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3544,
											"end": 3584,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 3544,
											"end": 3584,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3544,
											"end": 3584,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 3544,
											"end": 3584,
											"modifierDepth": 1,
											"name": "tag",
											"source": 14,
											"value": "89"
										},
										{
											"begin": 3544,
											"end": 3584,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3612,
											"end": 3613,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3603,
											"end": 3608,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3603,
											"end": 3613,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 3595,
											"end": 3631,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "92"
										},
										{
											"begin": 3595,
											"end": 3631,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 3595,
											"end": 3631,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 3595,
											"end": 3631,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 3595,
											"end": 3631,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3595,
											"end": 3631,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3595,
											"end": 3631,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 3595,
											"end": 3631,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 3595,
											"end": 3631,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3595,
											"end": 3631,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "93"
										},
										{
											"begin": 3595,
											"end": 3631,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3595,
											"end": 3631,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "94"
										},
										{
											"begin": 3595,
											"end": 3631,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3595,
											"end": 3631,
											"modifierDepth": 1,
											"name": "tag",
											"source": 14,
											"value": "93"
										},
										{
											"begin": 3595,
											"end": 3631,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3595,
											"end": 3631,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 3595,
											"end": 3631,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 3595,
											"end": 3631,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3595,
											"end": 3631,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3595,
											"end": 3631,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 3595,
											"end": 3631,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3595,
											"end": 3631,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 3595,
											"end": 3631,
											"modifierDepth": 1,
											"name": "tag",
											"source": 14,
											"value": "92"
										},
										{
											"begin": 3595,
											"end": 3631,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3664,
											"end": 3669,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3642,
											"end": 3652,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "3"
										},
										{
											"begin": 3642,
											"end": 3661,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3653,
											"end": 3660,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 3642,
											"end": 3661,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3642,
											"end": 3661,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 3642,
											"end": 3661,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 3642,
											"end": 3661,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3642,
											"end": 3661,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3642,
											"end": 3661,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3642,
											"end": 3661,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 3642,
											"end": 3661,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 3642,
											"end": 3661,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3642,
											"end": 3661,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3642,
											"end": 3661,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 3642,
											"end": 3669,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3642,
											"end": 3669,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3642,
											"end": 3669,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": 3642,
											"end": 3669,
											"modifierDepth": 1,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3685,
											"end": 3726,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "18E75BB8C091A6448C12A2023F055B2714C151B941A91DF8B9938788769FFE13"
										},
										{
											"begin": 3694,
											"end": 3701,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 3703,
											"end": 3708,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 3710,
											"end": 3725,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 14
										},
										{
											"begin": 3685,
											"end": 3726,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 3685,
											"end": 3726,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 3685,
											"end": 3726,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "95"
										},
										{
											"begin": 3685,
											"end": 3726,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 3685,
											"end": 3726,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 3685,
											"end": 3726,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3685,
											"end": 3726,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3685,
											"end": 3726,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "96"
										},
										{
											"begin": 3685,
											"end": 3726,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3685,
											"end": 3726,
											"modifierDepth": 1,
											"name": "tag",
											"source": 14,
											"value": "95"
										},
										{
											"begin": 3685,
											"end": 3726,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3685,
											"end": 3726,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 3685,
											"end": 3726,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 3685,
											"end": 3726,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3685,
											"end": 3726,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3685,
											"end": 3726,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 3685,
											"end": 3726,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3685,
											"end": 3726,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 14
										},
										{
											"begin": 3465,
											"end": 3780,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3465,
											"end": 3780,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3465,
											"end": 3780,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 763,
											"end": 909,
											"name": "tag",
											"source": 12,
											"value": "62"
										},
										{
											"begin": 763,
											"end": 909,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 839,
											"end": 843,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 877,
											"end": 902,
											"name": "PUSH",
											"source": 12,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 862,
											"end": 902,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 862,
											"end": 902,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 862,
											"end": 902,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 862,
											"end": 873,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 862,
											"end": 902,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 862,
											"end": 902,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 862,
											"end": 902,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 862,
											"end": 902,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 855,
											"end": 902,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 855,
											"end": 902,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 763,
											"end": 909,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 763,
											"end": 909,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 763,
											"end": 909,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 763,
											"end": 909,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7,
											"end": 82,
											"name": "tag",
											"source": 15,
											"value": "107"
										},
										{
											"begin": 7,
											"end": 82,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 40,
											"end": 46,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 75,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 67,
											"end": 76,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 57,
											"end": 76,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 57,
											"end": 76,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7,
											"end": 82,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 7,
											"end": 82,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 15,
											"value": "108"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 15,
											"value": "109"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 334,
											"end": 483,
											"name": "tag",
											"source": 15,
											"value": "110"
										},
										{
											"begin": 334,
											"end": 483,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 370,
											"end": 377,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 410,
											"end": 476,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 403,
											"end": 408,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 399,
											"end": 477,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 388,
											"end": 477,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 388,
											"end": 477,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 334,
											"end": 483,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 334,
											"end": 483,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 489,
											"end": 609,
											"name": "tag",
											"source": 15,
											"value": "111"
										},
										{
											"begin": 489,
											"end": 609,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "161"
										},
										{
											"begin": 578,
											"end": 583,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "110"
										},
										{
											"begin": 561,
											"end": 584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 561,
											"end": 584,
											"name": "tag",
											"source": 15,
											"value": "161"
										},
										{
											"begin": 561,
											"end": 584,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 554,
											"end": 559,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 551,
											"end": 585,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 541,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "162"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 599,
											"end": 600,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 596,
											"end": 597,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 589,
											"end": 601,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 541,
											"end": 603,
											"name": "tag",
											"source": 15,
											"value": "162"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 489,
											"end": 609,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 489,
											"end": 609,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 615,
											"end": 752,
											"name": "tag",
											"source": 15,
											"value": "112"
										},
										{
											"begin": 615,
											"end": 752,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 660,
											"end": 665,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 704,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 685,
											"end": 705,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 676,
											"end": 705,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 676,
											"end": 705,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "164"
										},
										{
											"begin": 740,
											"end": 745,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "111"
										},
										{
											"begin": 714,
											"end": 746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 714,
											"end": 746,
											"name": "tag",
											"source": 15,
											"value": "164"
										},
										{
											"begin": 714,
											"end": 746,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 615,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "tag",
											"source": 15,
											"value": "16"
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 816,
											"end": 822,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 865,
											"end": 867,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 853,
											"end": 862,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 844,
											"end": 851,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 840,
											"end": 863,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 836,
											"end": 868,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 833,
											"end": 952,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 833,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "166"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "167"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "108"
										},
										{
											"begin": 871,
											"end": 950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 871,
											"end": 950,
											"name": "tag",
											"source": 15,
											"value": "167"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 833,
											"end": 952,
											"name": "tag",
											"source": 15,
											"value": "166"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 991,
											"end": 992,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "168"
										},
										{
											"begin": 1060,
											"end": 1067,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 1051,
											"end": 1057,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1040,
											"end": 1049,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 1036,
											"end": 1058,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "112"
										},
										{
											"begin": 1016,
											"end": 1068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "tag",
											"source": 15,
											"value": "168"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 962,
											"end": 1078,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 758,
											"end": 1085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "tag",
											"source": 15,
											"value": "113"
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1125,
											"end": 1132,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1168,
											"end": 1173,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1161,
											"end": 1174,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 1154,
											"end": 1175,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1091,
											"end": 1181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "tag",
											"source": 15,
											"value": "114"
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "171"
										},
										{
											"begin": 1283,
											"end": 1288,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "113"
										},
										{
											"begin": 1268,
											"end": 1289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "tag",
											"source": 15,
											"value": "171"
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1263,
											"end": 1266,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1256,
											"end": 1290,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1187,
											"end": 1296,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "tag",
											"source": 15,
											"value": "19"
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1389,
											"end": 1393,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1427,
											"end": 1429,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1416,
											"end": 1425,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1412,
											"end": 1430,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "173"
										},
										{
											"begin": 1502,
											"end": 1503,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1491,
											"end": 1500,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 1487,
											"end": 1504,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1478,
											"end": 1484,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "114"
										},
										{
											"begin": 1440,
											"end": 1505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "tag",
											"source": 15,
											"value": "173"
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1302,
											"end": 1512,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1518,
											"end": 1644,
											"name": "tag",
											"source": 15,
											"value": "115"
										},
										{
											"begin": 1518,
											"end": 1644,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1555,
											"end": 1562,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1595,
											"end": 1637,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1588,
											"end": 1593,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1584,
											"end": 1638,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 1573,
											"end": 1638,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1573,
											"end": 1638,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1518,
											"end": 1644,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1518,
											"end": 1644,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1518,
											"end": 1644,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1518,
											"end": 1644,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1650,
											"end": 1710,
											"name": "tag",
											"source": 15,
											"value": "116"
										},
										{
											"begin": 1650,
											"end": 1710,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1678,
											"end": 1681,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1699,
											"end": 1704,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1692,
											"end": 1704,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1692,
											"end": 1704,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1650,
											"end": 1710,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1650,
											"end": 1710,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1650,
											"end": 1710,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1650,
											"end": 1710,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1716,
											"end": 1858,
											"name": "tag",
											"source": 15,
											"value": "117"
										},
										{
											"begin": 1716,
											"end": 1858,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1766,
											"end": 1775,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1799,
											"end": 1852,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "177"
										},
										{
											"begin": 1817,
											"end": 1851,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "178"
										},
										{
											"begin": 1826,
											"end": 1850,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "179"
										},
										{
											"begin": 1844,
											"end": 1849,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 1826,
											"end": 1850,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "115"
										},
										{
											"begin": 1826,
											"end": 1850,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1826,
											"end": 1850,
											"name": "tag",
											"source": 15,
											"value": "179"
										},
										{
											"begin": 1826,
											"end": 1850,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1817,
											"end": 1851,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "116"
										},
										{
											"begin": 1817,
											"end": 1851,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1817,
											"end": 1851,
											"name": "tag",
											"source": 15,
											"value": "178"
										},
										{
											"begin": 1817,
											"end": 1851,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1799,
											"end": 1852,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "115"
										},
										{
											"begin": 1799,
											"end": 1852,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1799,
											"end": 1852,
											"name": "tag",
											"source": 15,
											"value": "177"
										},
										{
											"begin": 1799,
											"end": 1852,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1786,
											"end": 1852,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1786,
											"end": 1852,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1716,
											"end": 1858,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1716,
											"end": 1858,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1716,
											"end": 1858,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1716,
											"end": 1858,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1864,
											"end": 1990,
											"name": "tag",
											"source": 15,
											"value": "118"
										},
										{
											"begin": 1864,
											"end": 1990,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1914,
											"end": 1923,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1947,
											"end": 1984,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "181"
										},
										{
											"begin": 1978,
											"end": 1983,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1947,
											"end": 1984,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "117"
										},
										{
											"begin": 1947,
											"end": 1984,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1947,
											"end": 1984,
											"name": "tag",
											"source": 15,
											"value": "181"
										},
										{
											"begin": 1947,
											"end": 1984,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1934,
											"end": 1984,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1934,
											"end": 1984,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1864,
											"end": 1990,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1864,
											"end": 1990,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1864,
											"end": 1990,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1864,
											"end": 1990,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1996,
											"end": 2136,
											"name": "tag",
											"source": 15,
											"value": "119"
										},
										{
											"begin": 1996,
											"end": 2136,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2060,
											"end": 2069,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2093,
											"end": 2130,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "183"
										},
										{
											"begin": 2124,
											"end": 2129,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 2093,
											"end": 2130,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "118"
										},
										{
											"begin": 2093,
											"end": 2130,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2093,
											"end": 2130,
											"name": "tag",
											"source": 15,
											"value": "183"
										},
										{
											"begin": 2093,
											"end": 2130,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2080,
											"end": 2130,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2080,
											"end": 2130,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1996,
											"end": 2136,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1996,
											"end": 2136,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1996,
											"end": 2136,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1996,
											"end": 2136,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2142,
											"end": 2301,
											"name": "tag",
											"source": 15,
											"value": "120"
										},
										{
											"begin": 2142,
											"end": 2301,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2243,
											"end": 2294,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "185"
										},
										{
											"begin": 2288,
											"end": 2293,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2243,
											"end": 2294,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "119"
										},
										{
											"begin": 2243,
											"end": 2294,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2243,
											"end": 2294,
											"name": "tag",
											"source": 15,
											"value": "185"
										},
										{
											"begin": 2243,
											"end": 2294,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2238,
											"end": 2241,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 2231,
											"end": 2295,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 2142,
											"end": 2301,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2142,
											"end": 2301,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2142,
											"end": 2301,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2307,
											"end": 2557,
											"name": "tag",
											"source": 15,
											"value": "23"
										},
										{
											"begin": 2307,
											"end": 2557,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2414,
											"end": 2418,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2452,
											"end": 2454,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 2441,
											"end": 2450,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 2437,
											"end": 2455,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2429,
											"end": 2455,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2429,
											"end": 2455,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2465,
											"end": 2550,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "187"
										},
										{
											"begin": 2547,
											"end": 2548,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2536,
											"end": 2545,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 2532,
											"end": 2549,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2523,
											"end": 2529,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 2465,
											"end": 2550,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "120"
										},
										{
											"begin": 2465,
											"end": 2550,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2465,
											"end": 2550,
											"name": "tag",
											"source": 15,
											"value": "187"
										},
										{
											"begin": 2465,
											"end": 2550,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2307,
											"end": 2557,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 2307,
											"end": 2557,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2307,
											"end": 2557,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2307,
											"end": 2557,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2307,
											"end": 2557,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2563,
											"end": 2659,
											"name": "tag",
											"source": 15,
											"value": "121"
										},
										{
											"begin": 2563,
											"end": 2659,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2600,
											"end": 2607,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2629,
											"end": 2653,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "189"
										},
										{
											"begin": 2647,
											"end": 2652,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 2629,
											"end": 2653,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "115"
										},
										{
											"begin": 2629,
											"end": 2653,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2629,
											"end": 2653,
											"name": "tag",
											"source": 15,
											"value": "189"
										},
										{
											"begin": 2629,
											"end": 2653,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2618,
											"end": 2653,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2618,
											"end": 2653,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2563,
											"end": 2659,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2563,
											"end": 2659,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2563,
											"end": 2659,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2563,
											"end": 2659,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2665,
											"end": 2783,
											"name": "tag",
											"source": 15,
											"value": "122"
										},
										{
											"begin": 2665,
											"end": 2783,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2752,
											"end": 2776,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "191"
										},
										{
											"begin": 2770,
											"end": 2775,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2752,
											"end": 2776,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "121"
										},
										{
											"begin": 2752,
											"end": 2776,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2752,
											"end": 2776,
											"name": "tag",
											"source": 15,
											"value": "191"
										},
										{
											"begin": 2752,
											"end": 2776,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2747,
											"end": 2750,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 2740,
											"end": 2777,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 2665,
											"end": 2783,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2665,
											"end": 2783,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2665,
											"end": 2783,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2789,
											"end": 3011,
											"name": "tag",
											"source": 15,
											"value": "29"
										},
										{
											"begin": 2789,
											"end": 3011,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2882,
											"end": 2886,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2920,
											"end": 2922,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 2909,
											"end": 2918,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 2905,
											"end": 2923,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2897,
											"end": 2923,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2897,
											"end": 2923,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2933,
											"end": 3004,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "193"
										},
										{
											"begin": 3001,
											"end": 3002,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2990,
											"end": 2999,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 2986,
											"end": 3003,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2977,
											"end": 2983,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 2933,
											"end": 3004,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "122"
										},
										{
											"begin": 2933,
											"end": 3004,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2933,
											"end": 3004,
											"name": "tag",
											"source": 15,
											"value": "193"
										},
										{
											"begin": 2933,
											"end": 3004,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2789,
											"end": 3011,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 2789,
											"end": 3011,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2789,
											"end": 3011,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2789,
											"end": 3011,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2789,
											"end": 3011,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3017,
											"end": 3139,
											"name": "tag",
											"source": 15,
											"value": "123"
										},
										{
											"begin": 3017,
											"end": 3139,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3090,
											"end": 3114,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "195"
										},
										{
											"begin": 3108,
											"end": 3113,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3090,
											"end": 3114,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "121"
										},
										{
											"begin": 3090,
											"end": 3114,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3090,
											"end": 3114,
											"name": "tag",
											"source": 15,
											"value": "195"
										},
										{
											"begin": 3090,
											"end": 3114,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3083,
											"end": 3088,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3080,
											"end": 3115,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 3070,
											"end": 3133,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "196"
										},
										{
											"begin": 3070,
											"end": 3133,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 3129,
											"end": 3130,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3126,
											"end": 3127,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 3119,
											"end": 3131,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 3070,
											"end": 3133,
											"name": "tag",
											"source": 15,
											"value": "196"
										},
										{
											"begin": 3070,
											"end": 3133,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3017,
											"end": 3139,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3017,
											"end": 3139,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3145,
											"end": 3284,
											"name": "tag",
											"source": 15,
											"value": "124"
										},
										{
											"begin": 3145,
											"end": 3284,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3191,
											"end": 3196,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3229,
											"end": 3235,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3216,
											"end": 3236,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 3207,
											"end": 3236,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3207,
											"end": 3236,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3245,
											"end": 3278,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "198"
										},
										{
											"begin": 3272,
											"end": 3277,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3245,
											"end": 3278,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "123"
										},
										{
											"begin": 3245,
											"end": 3278,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3245,
											"end": 3278,
											"name": "tag",
											"source": 15,
											"value": "198"
										},
										{
											"begin": 3245,
											"end": 3278,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3145,
											"end": 3284,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 3145,
											"end": 3284,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 3145,
											"end": 3284,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3145,
											"end": 3284,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3145,
											"end": 3284,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3290,
											"end": 3407,
											"name": "tag",
											"source": 15,
											"value": "125"
										},
										{
											"begin": 3290,
											"end": 3407,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3399,
											"end": 3400,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3396,
											"end": 3397,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 3389,
											"end": 3401,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 3413,
											"end": 3515,
											"name": "tag",
											"source": 15,
											"value": "126"
										},
										{
											"begin": 3413,
											"end": 3515,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3454,
											"end": 3460,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3505,
											"end": 3507,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 3501,
											"end": 3508,
											"name": "NOT",
											"source": 15
										},
										{
											"begin": 3496,
											"end": 3498,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 3489,
											"end": 3494,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 3485,
											"end": 3499,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3481,
											"end": 3509,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 3471,
											"end": 3509,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3471,
											"end": 3509,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3413,
											"end": 3515,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 3413,
											"end": 3515,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3413,
											"end": 3515,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3413,
											"end": 3515,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3521,
											"end": 3701,
											"name": "tag",
											"source": 15,
											"value": "127"
										},
										{
											"begin": 3521,
											"end": 3701,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3569,
											"end": 3646,
											"name": "PUSH",
											"source": 15,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3566,
											"end": 3567,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3559,
											"end": 3647,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 3666,
											"end": 3670,
											"name": "PUSH",
											"source": 15,
											"value": "41"
										},
										{
											"begin": 3663,
											"end": 3664,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 3656,
											"end": 3671,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 3690,
											"end": 3694,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 3687,
											"end": 3688,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3680,
											"end": 3695,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 3707,
											"end": 3988,
											"name": "tag",
											"source": 15,
											"value": "128"
										},
										{
											"begin": 3707,
											"end": 3988,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3790,
											"end": 3817,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "203"
										},
										{
											"begin": 3812,
											"end": 3816,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 3790,
											"end": 3817,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "126"
										},
										{
											"begin": 3790,
											"end": 3817,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3790,
											"end": 3817,
											"name": "tag",
											"source": 15,
											"value": "203"
										},
										{
											"begin": 3790,
											"end": 3817,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3782,
											"end": 3788,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3778,
											"end": 3818,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3920,
											"end": 3926,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3908,
											"end": 3918,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3905,
											"end": 3927,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 3884,
											"end": 3902,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3872,
											"end": 3882,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 3869,
											"end": 3903,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 3866,
											"end": 3928,
											"name": "OR",
											"source": 15
										},
										{
											"begin": 3863,
											"end": 3951,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 3863,
											"end": 3951,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "204"
										},
										{
											"begin": 3863,
											"end": 3951,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 3931,
											"end": 3949,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "205"
										},
										{
											"begin": 3931,
											"end": 3949,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "127"
										},
										{
											"begin": 3931,
											"end": 3949,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3931,
											"end": 3949,
											"name": "tag",
											"source": 15,
											"value": "205"
										},
										{
											"begin": 3931,
											"end": 3949,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3863,
											"end": 3951,
											"name": "tag",
											"source": 15,
											"value": "204"
										},
										{
											"begin": 3863,
											"end": 3951,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3971,
											"end": 3981,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 3967,
											"end": 3969,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 3960,
											"end": 3982,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 3750,
											"end": 3988,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3707,
											"end": 3988,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3707,
											"end": 3988,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3707,
											"end": 3988,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3994,
											"end": 4123,
											"name": "tag",
											"source": 15,
											"value": "129"
										},
										{
											"begin": 3994,
											"end": 4123,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4028,
											"end": 4034,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4055,
											"end": 4075,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "207"
										},
										{
											"begin": 4055,
											"end": 4075,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "107"
										},
										{
											"begin": 4055,
											"end": 4075,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4055,
											"end": 4075,
											"name": "tag",
											"source": 15,
											"value": "207"
										},
										{
											"begin": 4055,
											"end": 4075,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4045,
											"end": 4075,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4045,
											"end": 4075,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4084,
											"end": 4117,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "208"
										},
										{
											"begin": 4112,
											"end": 4116,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 4104,
											"end": 4110,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 4084,
											"end": 4117,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "128"
										},
										{
											"begin": 4084,
											"end": 4117,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4084,
											"end": 4117,
											"name": "tag",
											"source": 15,
											"value": "208"
										},
										{
											"begin": 4084,
											"end": 4117,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3994,
											"end": 4123,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 3994,
											"end": 4123,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3994,
											"end": 4123,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3994,
											"end": 4123,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4129,
											"end": 4440,
											"name": "tag",
											"source": 15,
											"value": "130"
										},
										{
											"begin": 4129,
											"end": 4440,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4206,
											"end": 4210,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4296,
											"end": 4314,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4288,
											"end": 4294,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 4285,
											"end": 4315,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 4282,
											"end": 4338,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 4282,
											"end": 4338,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "210"
										},
										{
											"begin": 4282,
											"end": 4338,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 4318,
											"end": 4336,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "211"
										},
										{
											"begin": 4318,
											"end": 4336,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "127"
										},
										{
											"begin": 4318,
											"end": 4336,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4318,
											"end": 4336,
											"name": "tag",
											"source": 15,
											"value": "211"
										},
										{
											"begin": 4318,
											"end": 4336,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4282,
											"end": 4338,
											"name": "tag",
											"source": 15,
											"value": "210"
										},
										{
											"begin": 4282,
											"end": 4338,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4368,
											"end": 4372,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 4360,
											"end": 4366,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 4356,
											"end": 4373,
											"name": "MUL",
											"source": 15
										},
										{
											"begin": 4348,
											"end": 4373,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4348,
											"end": 4373,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4428,
											"end": 4432,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 4422,
											"end": 4426,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4418,
											"end": 4433,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4410,
											"end": 4433,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4410,
											"end": 4433,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4129,
											"end": 4440,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 4129,
											"end": 4440,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4129,
											"end": 4440,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4129,
											"end": 4440,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4446,
											"end": 4563,
											"name": "tag",
											"source": 15,
											"value": "131"
										},
										{
											"begin": 4446,
											"end": 4563,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4555,
											"end": 4556,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4552,
											"end": 4553,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 4545,
											"end": 4557,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 4569,
											"end": 4646,
											"name": "tag",
											"source": 15,
											"value": "132"
										},
										{
											"begin": 4569,
											"end": 4646,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4606,
											"end": 4613,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4635,
											"end": 4640,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4624,
											"end": 4640,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4624,
											"end": 4640,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4569,
											"end": 4646,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 4569,
											"end": 4646,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4569,
											"end": 4646,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4569,
											"end": 4646,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4652,
											"end": 4774,
											"name": "tag",
											"source": 15,
											"value": "133"
										},
										{
											"begin": 4652,
											"end": 4774,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4725,
											"end": 4749,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "215"
										},
										{
											"begin": 4743,
											"end": 4748,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4725,
											"end": 4749,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "132"
										},
										{
											"begin": 4725,
											"end": 4749,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4725,
											"end": 4749,
											"name": "tag",
											"source": 15,
											"value": "215"
										},
										{
											"begin": 4725,
											"end": 4749,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4718,
											"end": 4723,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4715,
											"end": 4750,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 4705,
											"end": 4768,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "216"
										},
										{
											"begin": 4705,
											"end": 4768,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 4764,
											"end": 4765,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4761,
											"end": 4762,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 4754,
											"end": 4766,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 4705,
											"end": 4768,
											"name": "tag",
											"source": 15,
											"value": "216"
										},
										{
											"begin": 4705,
											"end": 4768,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4652,
											"end": 4774,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4652,
											"end": 4774,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4780,
											"end": 4919,
											"name": "tag",
											"source": 15,
											"value": "134"
										},
										{
											"begin": 4780,
											"end": 4919,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4826,
											"end": 4831,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4864,
											"end": 4870,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4851,
											"end": 4871,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 4842,
											"end": 4871,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4842,
											"end": 4871,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4880,
											"end": 4913,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "218"
										},
										{
											"begin": 4907,
											"end": 4912,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4880,
											"end": 4913,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "133"
										},
										{
											"begin": 4880,
											"end": 4913,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4880,
											"end": 4913,
											"name": "tag",
											"source": 15,
											"value": "218"
										},
										{
											"begin": 4880,
											"end": 4913,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4780,
											"end": 4919,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 4780,
											"end": 4919,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 4780,
											"end": 4919,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4780,
											"end": 4919,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4780,
											"end": 4919,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4942,
											"end": 5652,
											"name": "tag",
											"source": 15,
											"value": "135"
										},
										{
											"begin": 4942,
											"end": 5652,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5038,
											"end": 5043,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 5063,
											"end": 5144,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "220"
										},
										{
											"begin": 5079,
											"end": 5143,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "221"
										},
										{
											"begin": 5136,
											"end": 5142,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 5079,
											"end": 5143,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "130"
										},
										{
											"begin": 5079,
											"end": 5143,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5079,
											"end": 5143,
											"name": "tag",
											"source": 15,
											"value": "221"
										},
										{
											"begin": 5079,
											"end": 5143,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5063,
											"end": 5144,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "129"
										},
										{
											"begin": 5063,
											"end": 5144,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5063,
											"end": 5144,
											"name": "tag",
											"source": 15,
											"value": "220"
										},
										{
											"begin": 5063,
											"end": 5144,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5054,
											"end": 5144,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 5054,
											"end": 5144,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5164,
											"end": 5169,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 5193,
											"end": 5199,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 5186,
											"end": 5191,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5179,
											"end": 5200,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 5227,
											"end": 5231,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 5220,
											"end": 5225,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5216,
											"end": 5232,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5209,
											"end": 5232,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 5209,
											"end": 5232,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5280,
											"end": 5284,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 5272,
											"end": 5278,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 5268,
											"end": 5285,
											"name": "MUL",
											"source": 15
										},
										{
											"begin": 5260,
											"end": 5266,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 5256,
											"end": 5286,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5309,
											"end": 5312,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 5301,
											"end": 5307,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 5298,
											"end": 5313,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 5295,
											"end": 5417,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 5295,
											"end": 5417,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "222"
										},
										{
											"begin": 5295,
											"end": 5417,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 5328,
											"end": 5407,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "223"
										},
										{
											"begin": 5328,
											"end": 5407,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "131"
										},
										{
											"begin": 5328,
											"end": 5407,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5328,
											"end": 5407,
											"name": "tag",
											"source": 15,
											"value": "223"
										},
										{
											"begin": 5328,
											"end": 5407,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5295,
											"end": 5417,
											"name": "tag",
											"source": 15,
											"value": "222"
										},
										{
											"begin": 5295,
											"end": 5417,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5443,
											"end": 5449,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 5426,
											"end": 5646,
											"name": "tag",
											"source": 15,
											"value": "224"
										},
										{
											"begin": 5426,
											"end": 5646,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5460,
											"end": 5466,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 5455,
											"end": 5458,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 5452,
											"end": 5467,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 5426,
											"end": 5646,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 5426,
											"end": 5646,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "226"
										},
										{
											"begin": 5426,
											"end": 5646,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 5535,
											"end": 5538,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 5564,
											"end": 5601,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "227"
										},
										{
											"begin": 5597,
											"end": 5600,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 5585,
											"end": 5595,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5564,
											"end": 5601,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "134"
										},
										{
											"begin": 5564,
											"end": 5601,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5564,
											"end": 5601,
											"name": "tag",
											"source": 15,
											"value": "227"
										},
										{
											"begin": 5564,
											"end": 5601,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5559,
											"end": 5562,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 5552,
											"end": 5602,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 5631,
											"end": 5635,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 5626,
											"end": 5629,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 5622,
											"end": 5636,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5615,
											"end": 5636,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 5615,
											"end": 5636,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5502,
											"end": 5646,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5486,
											"end": 5490,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 5481,
											"end": 5484,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 5477,
											"end": 5491,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5470,
											"end": 5491,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 5470,
											"end": 5491,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5426,
											"end": 5646,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "224"
										},
										{
											"begin": 5426,
											"end": 5646,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5426,
											"end": 5646,
											"name": "tag",
											"source": 15,
											"value": "226"
										},
										{
											"begin": 5426,
											"end": 5646,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5430,
											"end": 5451,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5044,
											"end": 5652,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5044,
											"end": 5652,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4942,
											"end": 5652,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 4942,
											"end": 5652,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 4942,
											"end": 5652,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4942,
											"end": 5652,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4942,
											"end": 5652,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4942,
											"end": 5652,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5675,
											"end": 6045,
											"name": "tag",
											"source": 15,
											"value": "136"
										},
										{
											"begin": 5675,
											"end": 6045,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5746,
											"end": 5751,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 5795,
											"end": 5798,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5788,
											"end": 5792,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 5780,
											"end": 5786,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 5776,
											"end": 5793,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5772,
											"end": 5799,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 5762,
											"end": 5884,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "229"
										},
										{
											"begin": 5762,
											"end": 5884,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 5803,
											"end": 5882,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "230"
										},
										{
											"begin": 5803,
											"end": 5882,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "125"
										},
										{
											"begin": 5803,
											"end": 5882,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5803,
											"end": 5882,
											"name": "tag",
											"source": 15,
											"value": "230"
										},
										{
											"begin": 5803,
											"end": 5882,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5762,
											"end": 5884,
											"name": "tag",
											"source": 15,
											"value": "229"
										},
										{
											"begin": 5762,
											"end": 5884,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5920,
											"end": 5926,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 5907,
											"end": 5927,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 5945,
											"end": 6039,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "231"
										},
										{
											"begin": 6035,
											"end": 6038,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 6027,
											"end": 6033,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6020,
											"end": 6024,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 6012,
											"end": 6018,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 6008,
											"end": 6025,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5945,
											"end": 6039,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "135"
										},
										{
											"begin": 5945,
											"end": 6039,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5945,
											"end": 6039,
											"name": "tag",
											"source": 15,
											"value": "231"
										},
										{
											"begin": 5945,
											"end": 6039,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5936,
											"end": 6039,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 5936,
											"end": 6039,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5752,
											"end": 6045,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5675,
											"end": 6045,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 5675,
											"end": 6045,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 5675,
											"end": 6045,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5675,
											"end": 6045,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5675,
											"end": 6045,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6051,
											"end": 6168,
											"name": "tag",
											"source": 15,
											"value": "137"
										},
										{
											"begin": 6051,
											"end": 6168,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6160,
											"end": 6161,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 6157,
											"end": 6158,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 6150,
											"end": 6162,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 6174,
											"end": 6481,
											"name": "tag",
											"source": 15,
											"value": "138"
										},
										{
											"begin": 6174,
											"end": 6481,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6235,
											"end": 6239,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 6325,
											"end": 6343,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6317,
											"end": 6323,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6314,
											"end": 6344,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 6311,
											"end": 6367,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 6311,
											"end": 6367,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "234"
										},
										{
											"begin": 6311,
											"end": 6367,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 6347,
											"end": 6365,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "235"
										},
										{
											"begin": 6347,
											"end": 6365,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "127"
										},
										{
											"begin": 6347,
											"end": 6365,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6347,
											"end": 6365,
											"name": "tag",
											"source": 15,
											"value": "235"
										},
										{
											"begin": 6347,
											"end": 6365,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6311,
											"end": 6367,
											"name": "tag",
											"source": 15,
											"value": "234"
										},
										{
											"begin": 6311,
											"end": 6367,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6385,
											"end": 6414,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "236"
										},
										{
											"begin": 6407,
											"end": 6413,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6385,
											"end": 6414,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "126"
										},
										{
											"begin": 6385,
											"end": 6414,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6385,
											"end": 6414,
											"name": "tag",
											"source": 15,
											"value": "236"
										},
										{
											"begin": 6385,
											"end": 6414,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6377,
											"end": 6414,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 6377,
											"end": 6414,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6469,
											"end": 6473,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 6463,
											"end": 6467,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 6459,
											"end": 6474,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6451,
											"end": 6474,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 6451,
											"end": 6474,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6174,
											"end": 6481,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 6174,
											"end": 6481,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 6174,
											"end": 6481,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6174,
											"end": 6481,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6487,
											"end": 6635,
											"name": "tag",
											"source": 15,
											"value": "139"
										},
										{
											"begin": 6487,
											"end": 6635,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6585,
											"end": 6591,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6580,
											"end": 6583,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 6575,
											"end": 6578,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 6562,
											"end": 6592,
											"name": "CALLDATACOPY",
											"source": 15
										},
										{
											"begin": 6626,
											"end": 6627,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 6617,
											"end": 6623,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 6612,
											"end": 6615,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 6608,
											"end": 6624,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6601,
											"end": 6628,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 6487,
											"end": 6635,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6487,
											"end": 6635,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6487,
											"end": 6635,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6487,
											"end": 6635,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6641,
											"end": 7064,
											"name": "tag",
											"source": 15,
											"value": "140"
										},
										{
											"begin": 6641,
											"end": 7064,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6718,
											"end": 6723,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 6743,
											"end": 6808,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "239"
										},
										{
											"begin": 6759,
											"end": 6807,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "240"
										},
										{
											"begin": 6800,
											"end": 6806,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 6759,
											"end": 6807,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "138"
										},
										{
											"begin": 6759,
											"end": 6807,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6759,
											"end": 6807,
											"name": "tag",
											"source": 15,
											"value": "240"
										},
										{
											"begin": 6759,
											"end": 6807,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6743,
											"end": 6808,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "129"
										},
										{
											"begin": 6743,
											"end": 6808,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6743,
											"end": 6808,
											"name": "tag",
											"source": 15,
											"value": "239"
										},
										{
											"begin": 6743,
											"end": 6808,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6734,
											"end": 6808,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 6734,
											"end": 6808,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6831,
											"end": 6837,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6824,
											"end": 6829,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 6817,
											"end": 6838,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 6869,
											"end": 6873,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 6862,
											"end": 6867,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 6858,
											"end": 6874,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6907,
											"end": 6910,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 6898,
											"end": 6904,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 6893,
											"end": 6896,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 6889,
											"end": 6905,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6886,
											"end": 6911,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 6883,
											"end": 6995,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 6883,
											"end": 6995,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "241"
										},
										{
											"begin": 6883,
											"end": 6995,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 6914,
											"end": 6993,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "242"
										},
										{
											"begin": 6914,
											"end": 6993,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "137"
										},
										{
											"begin": 6914,
											"end": 6993,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6914,
											"end": 6993,
											"name": "tag",
											"source": 15,
											"value": "242"
										},
										{
											"begin": 6914,
											"end": 6993,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6883,
											"end": 6995,
											"name": "tag",
											"source": 15,
											"value": "241"
										},
										{
											"begin": 6883,
											"end": 6995,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7004,
											"end": 7058,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "243"
										},
										{
											"begin": 7051,
											"end": 7057,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 7046,
											"end": 7049,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 7041,
											"end": 7044,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 7004,
											"end": 7058,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "139"
										},
										{
											"begin": 7004,
											"end": 7058,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7004,
											"end": 7058,
											"name": "tag",
											"source": 15,
											"value": "243"
										},
										{
											"begin": 7004,
											"end": 7058,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6724,
											"end": 7064,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6641,
											"end": 7064,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 6641,
											"end": 7064,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 6641,
											"end": 7064,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6641,
											"end": 7064,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6641,
											"end": 7064,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6641,
											"end": 7064,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7083,
											"end": 7421,
											"name": "tag",
											"source": 15,
											"value": "141"
										},
										{
											"begin": 7083,
											"end": 7421,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7138,
											"end": 7143,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 7187,
											"end": 7190,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 7180,
											"end": 7184,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 7172,
											"end": 7178,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 7168,
											"end": 7185,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 7164,
											"end": 7191,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 7154,
											"end": 7276,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "245"
										},
										{
											"begin": 7154,
											"end": 7276,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 7195,
											"end": 7274,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "246"
										},
										{
											"begin": 7195,
											"end": 7274,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "125"
										},
										{
											"begin": 7195,
											"end": 7274,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7195,
											"end": 7274,
											"name": "tag",
											"source": 15,
											"value": "246"
										},
										{
											"begin": 7195,
											"end": 7274,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7154,
											"end": 7276,
											"name": "tag",
											"source": 15,
											"value": "245"
										},
										{
											"begin": 7154,
											"end": 7276,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7312,
											"end": 7318,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 7299,
											"end": 7319,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 7337,
											"end": 7415,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "247"
										},
										{
											"begin": 7411,
											"end": 7414,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 7403,
											"end": 7409,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 7396,
											"end": 7400,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 7388,
											"end": 7394,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 7384,
											"end": 7401,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 7337,
											"end": 7415,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "140"
										},
										{
											"begin": 7337,
											"end": 7415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7337,
											"end": 7415,
											"name": "tag",
											"source": 15,
											"value": "247"
										},
										{
											"begin": 7337,
											"end": 7415,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7328,
											"end": 7415,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 7328,
											"end": 7415,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7144,
											"end": 7421,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7083,
											"end": 7421,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 7083,
											"end": 7421,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 7083,
											"end": 7421,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7083,
											"end": 7421,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7083,
											"end": 7421,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7427,
											"end": 8936,
											"name": "tag",
											"source": 15,
											"value": "32"
										},
										{
											"begin": 7427,
											"end": 8936,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7581,
											"end": 7587,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 7589,
											"end": 7595,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 7597,
											"end": 7603,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 7605,
											"end": 7611,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 7613,
											"end": 7619,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 7662,
											"end": 7665,
											"name": "PUSH",
											"source": 15,
											"value": "A0"
										},
										{
											"begin": 7650,
											"end": 7659,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 7641,
											"end": 7648,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 7637,
											"end": 7660,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 7633,
											"end": 7666,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 7630,
											"end": 7750,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 7630,
											"end": 7750,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "249"
										},
										{
											"begin": 7630,
											"end": 7750,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 7669,
											"end": 7748,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "250"
										},
										{
											"begin": 7669,
											"end": 7748,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "108"
										},
										{
											"begin": 7669,
											"end": 7748,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7669,
											"end": 7748,
											"name": "tag",
											"source": 15,
											"value": "250"
										},
										{
											"begin": 7669,
											"end": 7748,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7630,
											"end": 7750,
											"name": "tag",
											"source": 15,
											"value": "249"
										},
										{
											"begin": 7630,
											"end": 7750,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7789,
											"end": 7790,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 7814,
											"end": 7867,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "251"
										},
										{
											"begin": 7859,
											"end": 7866,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 7850,
											"end": 7856,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 7839,
											"end": 7848,
											"name": "DUP10",
											"source": 15
										},
										{
											"begin": 7835,
											"end": 7857,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 7814,
											"end": 7867,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "124"
										},
										{
											"begin": 7814,
											"end": 7867,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7814,
											"end": 7867,
											"name": "tag",
											"source": 15,
											"value": "251"
										},
										{
											"begin": 7814,
											"end": 7867,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7804,
											"end": 7867,
											"name": "SWAP6",
											"source": 15
										},
										{
											"begin": 7804,
											"end": 7867,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7760,
											"end": 7877,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7916,
											"end": 7918,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 7942,
											"end": 7995,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "252"
										},
										{
											"begin": 7987,
											"end": 7994,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 7978,
											"end": 7984,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 7967,
											"end": 7976,
											"name": "DUP10",
											"source": 15
										},
										{
											"begin": 7963,
											"end": 7985,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 7942,
											"end": 7995,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "124"
										},
										{
											"begin": 7942,
											"end": 7995,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7942,
											"end": 7995,
											"name": "tag",
											"source": 15,
											"value": "252"
										},
										{
											"begin": 7942,
											"end": 7995,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7932,
											"end": 7995,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 7932,
											"end": 7995,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7887,
											"end": 8005,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8072,
											"end": 8074,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 8061,
											"end": 8070,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 8057,
											"end": 8075,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8044,
											"end": 8076,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 8103,
											"end": 8121,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8095,
											"end": 8101,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 8092,
											"end": 8122,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 8089,
											"end": 8206,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 8089,
											"end": 8206,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "253"
										},
										{
											"begin": 8089,
											"end": 8206,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 8125,
											"end": 8204,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "254"
										},
										{
											"begin": 8125,
											"end": 8204,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "109"
										},
										{
											"begin": 8125,
											"end": 8204,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8125,
											"end": 8204,
											"name": "tag",
											"source": 15,
											"value": "254"
										},
										{
											"begin": 8125,
											"end": 8204,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8089,
											"end": 8206,
											"name": "tag",
											"source": 15,
											"value": "253"
										},
										{
											"begin": 8089,
											"end": 8206,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8230,
											"end": 8308,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "255"
										},
										{
											"begin": 8300,
											"end": 8307,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 8291,
											"end": 8297,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 8280,
											"end": 8289,
											"name": "DUP10",
											"source": 15
										},
										{
											"begin": 8276,
											"end": 8298,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8230,
											"end": 8308,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "136"
										},
										{
											"begin": 8230,
											"end": 8308,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8230,
											"end": 8308,
											"name": "tag",
											"source": 15,
											"value": "255"
										},
										{
											"begin": 8230,
											"end": 8308,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8220,
											"end": 8308,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 8220,
											"end": 8308,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8015,
											"end": 8318,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8385,
											"end": 8387,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 8374,
											"end": 8383,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 8370,
											"end": 8388,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8357,
											"end": 8389,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 8416,
											"end": 8434,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8408,
											"end": 8414,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 8405,
											"end": 8435,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 8402,
											"end": 8519,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 8402,
											"end": 8519,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "256"
										},
										{
											"begin": 8402,
											"end": 8519,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 8438,
											"end": 8517,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "257"
										},
										{
											"begin": 8438,
											"end": 8517,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "109"
										},
										{
											"begin": 8438,
											"end": 8517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8438,
											"end": 8517,
											"name": "tag",
											"source": 15,
											"value": "257"
										},
										{
											"begin": 8438,
											"end": 8517,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8402,
											"end": 8519,
											"name": "tag",
											"source": 15,
											"value": "256"
										},
										{
											"begin": 8402,
											"end": 8519,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8543,
											"end": 8621,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "258"
										},
										{
											"begin": 8613,
											"end": 8620,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 8604,
											"end": 8610,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 8593,
											"end": 8602,
											"name": "DUP10",
											"source": 15
										},
										{
											"begin": 8589,
											"end": 8611,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8543,
											"end": 8621,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "136"
										},
										{
											"begin": 8543,
											"end": 8621,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8543,
											"end": 8621,
											"name": "tag",
											"source": 15,
											"value": "258"
										},
										{
											"begin": 8543,
											"end": 8621,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8533,
											"end": 8621,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 8533,
											"end": 8621,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8328,
											"end": 8631,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8698,
											"end": 8701,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 8687,
											"end": 8696,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 8683,
											"end": 8702,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8670,
											"end": 8703,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 8730,
											"end": 8748,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8722,
											"end": 8728,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 8719,
											"end": 8749,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 8716,
											"end": 8833,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 8716,
											"end": 8833,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "259"
										},
										{
											"begin": 8716,
											"end": 8833,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 8752,
											"end": 8831,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "260"
										},
										{
											"begin": 8752,
											"end": 8831,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "109"
										},
										{
											"begin": 8752,
											"end": 8831,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8752,
											"end": 8831,
											"name": "tag",
											"source": 15,
											"value": "260"
										},
										{
											"begin": 8752,
											"end": 8831,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8716,
											"end": 8833,
											"name": "tag",
											"source": 15,
											"value": "259"
										},
										{
											"begin": 8716,
											"end": 8833,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8857,
											"end": 8919,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "261"
										},
										{
											"begin": 8911,
											"end": 8918,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 8902,
											"end": 8908,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 8891,
											"end": 8900,
											"name": "DUP10",
											"source": 15
										},
										{
											"begin": 8887,
											"end": 8909,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8857,
											"end": 8919,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "141"
										},
										{
											"begin": 8857,
											"end": 8919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8857,
											"end": 8919,
											"name": "tag",
											"source": 15,
											"value": "261"
										},
										{
											"begin": 8857,
											"end": 8919,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8847,
											"end": 8919,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 8847,
											"end": 8919,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8641,
											"end": 8929,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7427,
											"end": 8936,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 7427,
											"end": 8936,
											"name": "SWAP6",
											"source": 15
										},
										{
											"begin": 7427,
											"end": 8936,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7427,
											"end": 8936,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 7427,
											"end": 8936,
											"name": "SWAP6",
											"source": 15
										},
										{
											"begin": 7427,
											"end": 8936,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 7427,
											"end": 8936,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 7427,
											"end": 8936,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7427,
											"end": 8936,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8942,
											"end": 9057,
											"name": "tag",
											"source": 15,
											"value": "142"
										},
										{
											"begin": 8942,
											"end": 9057,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9027,
											"end": 9050,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "263"
										},
										{
											"begin": 9044,
											"end": 9049,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 9027,
											"end": 9050,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "110"
										},
										{
											"begin": 9027,
											"end": 9050,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 9027,
											"end": 9050,
											"name": "tag",
											"source": 15,
											"value": "263"
										},
										{
											"begin": 9027,
											"end": 9050,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9022,
											"end": 9025,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 9015,
											"end": 9051,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 8942,
											"end": 9057,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8942,
											"end": 9057,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8942,
											"end": 9057,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 9063,
											"end": 9281,
											"name": "tag",
											"source": 15,
											"value": "35"
										},
										{
											"begin": 9063,
											"end": 9281,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9154,
											"end": 9158,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 9192,
											"end": 9194,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 9181,
											"end": 9190,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 9177,
											"end": 9195,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 9169,
											"end": 9195,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 9169,
											"end": 9195,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9205,
											"end": 9274,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "265"
										},
										{
											"begin": 9271,
											"end": 9272,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 9260,
											"end": 9269,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 9256,
											"end": 9273,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 9247,
											"end": 9253,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 9205,
											"end": 9274,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "142"
										},
										{
											"begin": 9205,
											"end": 9274,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 9205,
											"end": 9274,
											"name": "tag",
											"source": 15,
											"value": "265"
										},
										{
											"begin": 9205,
											"end": 9274,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9063,
											"end": 9281,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 9063,
											"end": 9281,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 9063,
											"end": 9281,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9063,
											"end": 9281,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9063,
											"end": 9281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 9287,
											"end": 9616,
											"name": "tag",
											"source": 15,
											"value": "38"
										},
										{
											"begin": 9287,
											"end": 9616,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9346,
											"end": 9352,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 9395,
											"end": 9397,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 9383,
											"end": 9392,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 9374,
											"end": 9381,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 9370,
											"end": 9393,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 9366,
											"end": 9398,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 9363,
											"end": 9482,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 9363,
											"end": 9482,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "267"
										},
										{
											"begin": 9363,
											"end": 9482,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 9401,
											"end": 9480,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "268"
										},
										{
											"begin": 9401,
											"end": 9480,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "108"
										},
										{
											"begin": 9401,
											"end": 9480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 9401,
											"end": 9480,
											"name": "tag",
											"source": 15,
											"value": "268"
										},
										{
											"begin": 9401,
											"end": 9480,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9363,
											"end": 9482,
											"name": "tag",
											"source": 15,
											"value": "267"
										},
										{
											"begin": 9363,
											"end": 9482,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9521,
											"end": 9522,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 9546,
											"end": 9599,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "269"
										},
										{
											"begin": 9591,
											"end": 9598,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 9582,
											"end": 9588,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 9571,
											"end": 9580,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 9567,
											"end": 9589,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 9546,
											"end": 9599,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "134"
										},
										{
											"begin": 9546,
											"end": 9599,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 9546,
											"end": 9599,
											"name": "tag",
											"source": 15,
											"value": "269"
										},
										{
											"begin": 9546,
											"end": 9599,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9536,
											"end": 9599,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 9536,
											"end": 9599,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9492,
											"end": 9609,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9287,
											"end": 9616,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 9287,
											"end": 9616,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 9287,
											"end": 9616,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9287,
											"end": 9616,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9287,
											"end": 9616,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 9622,
											"end": 9740,
											"name": "tag",
											"source": 15,
											"value": "143"
										},
										{
											"begin": 9622,
											"end": 9740,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9709,
											"end": 9733,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "271"
										},
										{
											"begin": 9727,
											"end": 9732,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 9709,
											"end": 9733,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "132"
										},
										{
											"begin": 9709,
											"end": 9733,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 9709,
											"end": 9733,
											"name": "tag",
											"source": 15,
											"value": "271"
										},
										{
											"begin": 9709,
											"end": 9733,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9704,
											"end": 9707,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 9697,
											"end": 9734,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 9622,
											"end": 9740,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9622,
											"end": 9740,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9622,
											"end": 9740,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 9746,
											"end": 9968,
											"name": "tag",
											"source": 15,
											"value": "41"
										},
										{
											"begin": 9746,
											"end": 9968,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9839,
											"end": 9843,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 9877,
											"end": 9879,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 9866,
											"end": 9875,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 9862,
											"end": 9880,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 9854,
											"end": 9880,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 9854,
											"end": 9880,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9890,
											"end": 9961,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "273"
										},
										{
											"begin": 9958,
											"end": 9959,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 9947,
											"end": 9956,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 9943,
											"end": 9960,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 9934,
											"end": 9940,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 9890,
											"end": 9961,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "143"
										},
										{
											"begin": 9890,
											"end": 9961,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 9890,
											"end": 9961,
											"name": "tag",
											"source": 15,
											"value": "273"
										},
										{
											"begin": 9890,
											"end": 9961,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9746,
											"end": 9968,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 9746,
											"end": 9968,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 9746,
											"end": 9968,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9746,
											"end": 9968,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9746,
											"end": 9968,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 9974,
											"end": 10116,
											"name": "tag",
											"source": 15,
											"value": "144"
										},
										{
											"begin": 9974,
											"end": 10116,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10040,
											"end": 10049,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 10073,
											"end": 10110,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "275"
										},
										{
											"begin": 10104,
											"end": 10109,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 10073,
											"end": 10110,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "118"
										},
										{
											"begin": 10073,
											"end": 10110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 10073,
											"end": 10110,
											"name": "tag",
											"source": 15,
											"value": "275"
										},
										{
											"begin": 10073,
											"end": 10110,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10060,
											"end": 10110,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 10060,
											"end": 10110,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9974,
											"end": 10116,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 9974,
											"end": 10116,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 9974,
											"end": 10116,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9974,
											"end": 10116,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 10122,
											"end": 10285,
											"name": "tag",
											"source": 15,
											"value": "145"
										},
										{
											"begin": 10122,
											"end": 10285,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10225,
											"end": 10278,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "277"
										},
										{
											"begin": 10272,
											"end": 10277,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 10225,
											"end": 10278,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "144"
										},
										{
											"begin": 10225,
											"end": 10278,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 10225,
											"end": 10278,
											"name": "tag",
											"source": 15,
											"value": "277"
										},
										{
											"begin": 10225,
											"end": 10278,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10220,
											"end": 10223,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 10213,
											"end": 10279,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 10122,
											"end": 10285,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10122,
											"end": 10285,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10122,
											"end": 10285,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 10291,
											"end": 10545,
											"name": "tag",
											"source": 15,
											"value": "45"
										},
										{
											"begin": 10291,
											"end": 10545,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10400,
											"end": 10404,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 10438,
											"end": 10440,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 10427,
											"end": 10436,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 10423,
											"end": 10441,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 10415,
											"end": 10441,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 10415,
											"end": 10441,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10451,
											"end": 10538,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "279"
										},
										{
											"begin": 10535,
											"end": 10536,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 10524,
											"end": 10533,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 10520,
											"end": 10537,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 10511,
											"end": 10517,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 10451,
											"end": 10538,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "145"
										},
										{
											"begin": 10451,
											"end": 10538,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 10451,
											"end": 10538,
											"name": "tag",
											"source": 15,
											"value": "279"
										},
										{
											"begin": 10451,
											"end": 10538,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10291,
											"end": 10545,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 10291,
											"end": 10545,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 10291,
											"end": 10545,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10291,
											"end": 10545,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10291,
											"end": 10545,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 10551,
											"end": 11640,
											"name": "tag",
											"source": 15,
											"value": "48"
										},
										{
											"begin": 10551,
											"end": 11640,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10655,
											"end": 10661,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 10663,
											"end": 10669,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 10671,
											"end": 10677,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 10679,
											"end": 10685,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 10687,
											"end": 10693,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 10736,
											"end": 10739,
											"name": "PUSH",
											"source": 15,
											"value": "A0"
										},
										{
											"begin": 10724,
											"end": 10733,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 10715,
											"end": 10722,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 10711,
											"end": 10734,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 10707,
											"end": 10740,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 10704,
											"end": 10824,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 10704,
											"end": 10824,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "281"
										},
										{
											"begin": 10704,
											"end": 10824,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 10743,
											"end": 10822,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "282"
										},
										{
											"begin": 10743,
											"end": 10822,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "108"
										},
										{
											"begin": 10743,
											"end": 10822,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 10743,
											"end": 10822,
											"name": "tag",
											"source": 15,
											"value": "282"
										},
										{
											"begin": 10743,
											"end": 10822,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10704,
											"end": 10824,
											"name": "tag",
											"source": 15,
											"value": "281"
										},
										{
											"begin": 10704,
											"end": 10824,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10863,
											"end": 10864,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 10888,
											"end": 10941,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "283"
										},
										{
											"begin": 10933,
											"end": 10940,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 10924,
											"end": 10930,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 10913,
											"end": 10922,
											"name": "DUP10",
											"source": 15
										},
										{
											"begin": 10909,
											"end": 10931,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 10888,
											"end": 10941,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "124"
										},
										{
											"begin": 10888,
											"end": 10941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 10888,
											"end": 10941,
											"name": "tag",
											"source": 15,
											"value": "283"
										},
										{
											"begin": 10888,
											"end": 10941,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10878,
											"end": 10941,
											"name": "SWAP6",
											"source": 15
										},
										{
											"begin": 10878,
											"end": 10941,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10834,
											"end": 10951,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10990,
											"end": 10992,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 11016,
											"end": 11069,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "284"
										},
										{
											"begin": 11061,
											"end": 11068,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 11052,
											"end": 11058,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 11041,
											"end": 11050,
											"name": "DUP10",
											"source": 15
										},
										{
											"begin": 11037,
											"end": 11059,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 11016,
											"end": 11069,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "124"
										},
										{
											"begin": 11016,
											"end": 11069,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 11016,
											"end": 11069,
											"name": "tag",
											"source": 15,
											"value": "284"
										},
										{
											"begin": 11016,
											"end": 11069,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11006,
											"end": 11069,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 11006,
											"end": 11069,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10961,
											"end": 11079,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11118,
											"end": 11120,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 11144,
											"end": 11197,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "285"
										},
										{
											"begin": 11189,
											"end": 11196,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 11180,
											"end": 11186,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 11169,
											"end": 11178,
											"name": "DUP10",
											"source": 15
										},
										{
											"begin": 11165,
											"end": 11187,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 11144,
											"end": 11197,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "134"
										},
										{
											"begin": 11144,
											"end": 11197,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 11144,
											"end": 11197,
											"name": "tag",
											"source": 15,
											"value": "285"
										},
										{
											"begin": 11144,
											"end": 11197,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11134,
											"end": 11197,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 11134,
											"end": 11197,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11089,
											"end": 11207,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11246,
											"end": 11248,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 11272,
											"end": 11325,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "286"
										},
										{
											"begin": 11317,
											"end": 11324,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 11308,
											"end": 11314,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 11297,
											"end": 11306,
											"name": "DUP10",
											"source": 15
										},
										{
											"begin": 11293,
											"end": 11315,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 11272,
											"end": 11325,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "134"
										},
										{
											"begin": 11272,
											"end": 11325,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 11272,
											"end": 11325,
											"name": "tag",
											"source": 15,
											"value": "286"
										},
										{
											"begin": 11272,
											"end": 11325,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11262,
											"end": 11325,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 11262,
											"end": 11325,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11217,
											"end": 11335,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11402,
											"end": 11405,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 11391,
											"end": 11400,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 11387,
											"end": 11406,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 11374,
											"end": 11407,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 11434,
											"end": 11452,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11426,
											"end": 11432,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 11423,
											"end": 11453,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 11420,
											"end": 11537,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 11420,
											"end": 11537,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "287"
										},
										{
											"begin": 11420,
											"end": 11537,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 11456,
											"end": 11535,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "288"
										},
										{
											"begin": 11456,
											"end": 11535,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "109"
										},
										{
											"begin": 11456,
											"end": 11535,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 11456,
											"end": 11535,
											"name": "tag",
											"source": 15,
											"value": "288"
										},
										{
											"begin": 11456,
											"end": 11535,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11420,
											"end": 11537,
											"name": "tag",
											"source": 15,
											"value": "287"
										},
										{
											"begin": 11420,
											"end": 11537,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11561,
											"end": 11623,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "289"
										},
										{
											"begin": 11615,
											"end": 11622,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 11606,
											"end": 11612,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 11595,
											"end": 11604,
											"name": "DUP10",
											"source": 15
										},
										{
											"begin": 11591,
											"end": 11613,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 11561,
											"end": 11623,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "141"
										},
										{
											"begin": 11561,
											"end": 11623,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 11561,
											"end": 11623,
											"name": "tag",
											"source": 15,
											"value": "289"
										},
										{
											"begin": 11561,
											"end": 11623,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11551,
											"end": 11623,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 11551,
											"end": 11623,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11345,
											"end": 11633,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10551,
											"end": 11640,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 10551,
											"end": 11640,
											"name": "SWAP6",
											"source": 15
										},
										{
											"begin": 10551,
											"end": 11640,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10551,
											"end": 11640,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 10551,
											"end": 11640,
											"name": "SWAP6",
											"source": 15
										},
										{
											"begin": 10551,
											"end": 11640,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 10551,
											"end": 11640,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 10551,
											"end": 11640,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10551,
											"end": 11640,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 11646,
											"end": 11975,
											"name": "tag",
											"source": 15,
											"value": "53"
										},
										{
											"begin": 11646,
											"end": 11975,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11705,
											"end": 11711,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 11754,
											"end": 11756,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 11742,
											"end": 11751,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 11733,
											"end": 11740,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 11729,
											"end": 11752,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 11725,
											"end": 11757,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 11722,
											"end": 11841,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 11722,
											"end": 11841,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "291"
										},
										{
											"begin": 11722,
											"end": 11841,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 11760,
											"end": 11839,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "292"
										},
										{
											"begin": 11760,
											"end": 11839,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "108"
										},
										{
											"begin": 11760,
											"end": 11839,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 11760,
											"end": 11839,
											"name": "tag",
											"source": 15,
											"value": "292"
										},
										{
											"begin": 11760,
											"end": 11839,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11722,
											"end": 11841,
											"name": "tag",
											"source": 15,
											"value": "291"
										},
										{
											"begin": 11722,
											"end": 11841,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11880,
											"end": 11881,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 11905,
											"end": 11958,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "293"
										},
										{
											"begin": 11950,
											"end": 11957,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 11941,
											"end": 11947,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 11930,
											"end": 11939,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 11926,
											"end": 11948,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 11905,
											"end": 11958,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "124"
										},
										{
											"begin": 11905,
											"end": 11958,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 11905,
											"end": 11958,
											"name": "tag",
											"source": 15,
											"value": "293"
										},
										{
											"begin": 11905,
											"end": 11958,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11895,
											"end": 11958,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 11895,
											"end": 11958,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11851,
											"end": 11968,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11646,
											"end": 11975,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 11646,
											"end": 11975,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 11646,
											"end": 11975,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11646,
											"end": 11975,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11646,
											"end": 11975,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 11981,
											"end": 12455,
											"name": "tag",
											"source": 15,
											"value": "57"
										},
										{
											"begin": 11981,
											"end": 12455,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12049,
											"end": 12055,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 12057,
											"end": 12063,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 12106,
											"end": 12108,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 12094,
											"end": 12103,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 12085,
											"end": 12092,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 12081,
											"end": 12104,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 12077,
											"end": 12109,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 12074,
											"end": 12193,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 12074,
											"end": 12193,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "295"
										},
										{
											"begin": 12074,
											"end": 12193,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 12112,
											"end": 12191,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "296"
										},
										{
											"begin": 12112,
											"end": 12191,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "108"
										},
										{
											"begin": 12112,
											"end": 12191,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 12112,
											"end": 12191,
											"name": "tag",
											"source": 15,
											"value": "296"
										},
										{
											"begin": 12112,
											"end": 12191,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12074,
											"end": 12193,
											"name": "tag",
											"source": 15,
											"value": "295"
										},
										{
											"begin": 12074,
											"end": 12193,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12232,
											"end": 12233,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 12257,
											"end": 12310,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "297"
										},
										{
											"begin": 12302,
											"end": 12309,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 12293,
											"end": 12299,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 12282,
											"end": 12291,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 12278,
											"end": 12300,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 12257,
											"end": 12310,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "134"
										},
										{
											"begin": 12257,
											"end": 12310,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 12257,
											"end": 12310,
											"name": "tag",
											"source": 15,
											"value": "297"
										},
										{
											"begin": 12257,
											"end": 12310,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12247,
											"end": 12310,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 12247,
											"end": 12310,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12203,
											"end": 12320,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12359,
											"end": 12361,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 12385,
											"end": 12438,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "298"
										},
										{
											"begin": 12430,
											"end": 12437,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 12421,
											"end": 12427,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 12410,
											"end": 12419,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 12406,
											"end": 12428,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 12385,
											"end": 12438,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "134"
										},
										{
											"begin": 12385,
											"end": 12438,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 12385,
											"end": 12438,
											"name": "tag",
											"source": 15,
											"value": "298"
										},
										{
											"begin": 12385,
											"end": 12438,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12375,
											"end": 12438,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 12375,
											"end": 12438,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12330,
											"end": 12448,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11981,
											"end": 12455,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 11981,
											"end": 12455,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11981,
											"end": 12455,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 11981,
											"end": 12455,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 11981,
											"end": 12455,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11981,
											"end": 12455,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 12461,
											"end": 12630,
											"name": "tag",
											"source": 15,
											"value": "146"
										},
										{
											"begin": 12461,
											"end": 12630,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12545,
											"end": 12556,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 12579,
											"end": 12585,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 12574,
											"end": 12577,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 12567,
											"end": 12586,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 12619,
											"end": 12623,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 12614,
											"end": 12617,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 12610,
											"end": 12624,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 12595,
											"end": 12624,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 12595,
											"end": 12624,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12461,
											"end": 12630,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 12461,
											"end": 12630,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 12461,
											"end": 12630,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12461,
											"end": 12630,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12461,
											"end": 12630,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 12636,
											"end": 12802,
											"name": "tag",
											"source": 15,
											"value": "147"
										},
										{
											"begin": 12636,
											"end": 12802,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12776,
											"end": 12794,
											"name": "PUSH",
											"source": 15,
											"value": "696E636F72726563742073656E64657200000000000000000000000000000000"
										},
										{
											"begin": 12772,
											"end": 12773,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 12764,
											"end": 12770,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 12760,
											"end": 12774,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 12753,
											"end": 12795,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 12636,
											"end": 12802,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12636,
											"end": 12802,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 12808,
											"end": 13174,
											"name": "tag",
											"source": 15,
											"value": "148"
										},
										{
											"begin": 12808,
											"end": 13174,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12950,
											"end": 12953,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 12971,
											"end": 13038,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "302"
										},
										{
											"begin": 13035,
											"end": 13037,
											"name": "PUSH",
											"source": 15,
											"value": "10"
										},
										{
											"begin": 13030,
											"end": 13033,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 12971,
											"end": 13038,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "146"
										},
										{
											"begin": 12971,
											"end": 13038,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 12971,
											"end": 13038,
											"name": "tag",
											"source": 15,
											"value": "302"
										},
										{
											"begin": 12971,
											"end": 13038,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12964,
											"end": 13038,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 12964,
											"end": 13038,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13047,
											"end": 13140,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "303"
										},
										{
											"begin": 13136,
											"end": 13139,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 13047,
											"end": 13140,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "147"
										},
										{
											"begin": 13047,
											"end": 13140,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 13047,
											"end": 13140,
											"name": "tag",
											"source": 15,
											"value": "303"
										},
										{
											"begin": 13047,
											"end": 13140,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 13165,
											"end": 13167,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 13160,
											"end": 13163,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 13156,
											"end": 13168,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 13149,
											"end": 13168,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 13149,
											"end": 13168,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12808,
											"end": 13174,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 12808,
											"end": 13174,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 12808,
											"end": 13174,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12808,
											"end": 13174,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 13180,
											"end": 13599,
											"name": "tag",
											"source": 15,
											"value": "74"
										},
										{
											"begin": 13180,
											"end": 13599,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 13346,
											"end": 13350,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 13384,
											"end": 13386,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 13373,
											"end": 13382,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 13369,
											"end": 13387,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 13361,
											"end": 13387,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 13361,
											"end": 13387,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13433,
											"end": 13442,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 13427,
											"end": 13431,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 13423,
											"end": 13443,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 13419,
											"end": 13420,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 13408,
											"end": 13417,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 13404,
											"end": 13421,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 13397,
											"end": 13444,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 13461,
											"end": 13592,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "305"
										},
										{
											"begin": 13587,
											"end": 13591,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 13461,
											"end": 13592,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "148"
										},
										{
											"begin": 13461,
											"end": 13592,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 13461,
											"end": 13592,
											"name": "tag",
											"source": 15,
											"value": "305"
										},
										{
											"begin": 13461,
											"end": 13592,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 13453,
											"end": 13592,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 13453,
											"end": 13592,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13180,
											"end": 13599,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 13180,
											"end": 13599,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 13180,
											"end": 13599,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13180,
											"end": 13599,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 13605,
											"end": 13771,
											"name": "tag",
											"source": 15,
											"value": "149"
										},
										{
											"begin": 13605,
											"end": 13771,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 13745,
											"end": 13763,
											"name": "PUSH",
											"source": 15,
											"value": "7175616E74697479206973207A65726F00000000000000000000000000000000"
										},
										{
											"begin": 13741,
											"end": 13742,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 13733,
											"end": 13739,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 13729,
											"end": 13743,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 13722,
											"end": 13764,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 13605,
											"end": 13771,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13605,
											"end": 13771,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 13777,
											"end": 14143,
											"name": "tag",
											"source": 15,
											"value": "150"
										},
										{
											"begin": 13777,
											"end": 14143,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 13919,
											"end": 13922,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 13940,
											"end": 14007,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "308"
										},
										{
											"begin": 14004,
											"end": 14006,
											"name": "PUSH",
											"source": 15,
											"value": "10"
										},
										{
											"begin": 13999,
											"end": 14002,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 13940,
											"end": 14007,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "146"
										},
										{
											"begin": 13940,
											"end": 14007,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 13940,
											"end": 14007,
											"name": "tag",
											"source": 15,
											"value": "308"
										},
										{
											"begin": 13940,
											"end": 14007,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 13933,
											"end": 14007,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 13933,
											"end": 14007,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 14016,
											"end": 14109,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "309"
										},
										{
											"begin": 14105,
											"end": 14108,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 14016,
											"end": 14109,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "149"
										},
										{
											"begin": 14016,
											"end": 14109,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 14016,
											"end": 14109,
											"name": "tag",
											"source": 15,
											"value": "309"
										},
										{
											"begin": 14016,
											"end": 14109,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 14134,
											"end": 14136,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 14129,
											"end": 14132,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 14125,
											"end": 14137,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 14118,
											"end": 14137,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 14118,
											"end": 14137,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13777,
											"end": 14143,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 13777,
											"end": 14143,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 13777,
											"end": 14143,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13777,
											"end": 14143,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 14149,
											"end": 14568,
											"name": "tag",
											"source": 15,
											"value": "77"
										},
										{
											"begin": 14149,
											"end": 14568,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 14315,
											"end": 14319,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 14353,
											"end": 14355,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 14342,
											"end": 14351,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 14338,
											"end": 14356,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 14330,
											"end": 14356,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 14330,
											"end": 14356,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 14402,
											"end": 14411,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 14396,
											"end": 14400,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 14392,
											"end": 14412,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 14388,
											"end": 14389,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 14377,
											"end": 14386,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 14373,
											"end": 14390,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 14366,
											"end": 14413,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 14430,
											"end": 14561,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "311"
										},
										{
											"begin": 14556,
											"end": 14560,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 14430,
											"end": 14561,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "150"
										},
										{
											"begin": 14430,
											"end": 14561,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 14430,
											"end": 14561,
											"name": "tag",
											"source": 15,
											"value": "311"
										},
										{
											"begin": 14430,
											"end": 14561,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 14422,
											"end": 14561,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 14422,
											"end": 14561,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 14149,
											"end": 14568,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 14149,
											"end": 14568,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 14149,
											"end": 14568,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 14149,
											"end": 14568,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 14574,
											"end": 15127,
											"name": "tag",
											"source": 15,
											"value": "79"
										},
										{
											"begin": 14574,
											"end": 15127,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 14751,
											"end": 14755,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 14789,
											"end": 14792,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 14778,
											"end": 14787,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 14774,
											"end": 14793,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 14766,
											"end": 14793,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 14766,
											"end": 14793,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 14803,
											"end": 14874,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "313"
										},
										{
											"begin": 14871,
											"end": 14872,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 14860,
											"end": 14869,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 14856,
											"end": 14873,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 14847,
											"end": 14853,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 14803,
											"end": 14874,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "122"
										},
										{
											"begin": 14803,
											"end": 14874,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 14803,
											"end": 14874,
											"name": "tag",
											"source": 15,
											"value": "313"
										},
										{
											"begin": 14803,
											"end": 14874,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 14884,
											"end": 14956,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "314"
										},
										{
											"begin": 14952,
											"end": 14954,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 14941,
											"end": 14950,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 14937,
											"end": 14955,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 14928,
											"end": 14934,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 14884,
											"end": 14956,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "122"
										},
										{
											"begin": 14884,
											"end": 14956,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 14884,
											"end": 14956,
											"name": "tag",
											"source": 15,
											"value": "314"
										},
										{
											"begin": 14884,
											"end": 14956,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 14966,
											"end": 15038,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "315"
										},
										{
											"begin": 15034,
											"end": 15036,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 15023,
											"end": 15032,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 15019,
											"end": 15037,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 15010,
											"end": 15016,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 14966,
											"end": 15038,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "143"
										},
										{
											"begin": 14966,
											"end": 15038,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 14966,
											"end": 15038,
											"name": "tag",
											"source": 15,
											"value": "315"
										},
										{
											"begin": 14966,
											"end": 15038,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 15048,
											"end": 15120,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "316"
										},
										{
											"begin": 15116,
											"end": 15118,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 15105,
											"end": 15114,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 15101,
											"end": 15119,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 15092,
											"end": 15098,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 15048,
											"end": 15120,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "143"
										},
										{
											"begin": 15048,
											"end": 15120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 15048,
											"end": 15120,
											"name": "tag",
											"source": 15,
											"value": "316"
										},
										{
											"begin": 15048,
											"end": 15120,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 14574,
											"end": 15127,
											"name": "SWAP6",
											"source": 15
										},
										{
											"begin": 14574,
											"end": 15127,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 14574,
											"end": 15127,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 14574,
											"end": 15127,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 14574,
											"end": 15127,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 14574,
											"end": 15127,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 14574,
											"end": 15127,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 14574,
											"end": 15127,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 15133,
											"end": 15298,
											"name": "tag",
											"source": 15,
											"value": "151"
										},
										{
											"begin": 15133,
											"end": 15298,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 15273,
											"end": 15290,
											"name": "PUSH",
											"source": 15,
											"value": "746F6B656E4964206973207A65726F0000000000000000000000000000000000"
										},
										{
											"begin": 15269,
											"end": 15270,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 15261,
											"end": 15267,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 15257,
											"end": 15271,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 15250,
											"end": 15291,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 15133,
											"end": 15298,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 15133,
											"end": 15298,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 15304,
											"end": 15670,
											"name": "tag",
											"source": 15,
											"value": "152"
										},
										{
											"begin": 15304,
											"end": 15670,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 15446,
											"end": 15449,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 15467,
											"end": 15534,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "319"
										},
										{
											"begin": 15531,
											"end": 15533,
											"name": "PUSH",
											"source": 15,
											"value": "F"
										},
										{
											"begin": 15526,
											"end": 15529,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 15467,
											"end": 15534,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "146"
										},
										{
											"begin": 15467,
											"end": 15534,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 15467,
											"end": 15534,
											"name": "tag",
											"source": 15,
											"value": "319"
										},
										{
											"begin": 15467,
											"end": 15534,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 15460,
											"end": 15534,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 15460,
											"end": 15534,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 15543,
											"end": 15636,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "320"
										},
										{
											"begin": 15632,
											"end": 15635,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 15543,
											"end": 15636,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "151"
										},
										{
											"begin": 15543,
											"end": 15636,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 15543,
											"end": 15636,
											"name": "tag",
											"source": 15,
											"value": "320"
										},
										{
											"begin": 15543,
											"end": 15636,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 15661,
											"end": 15663,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 15656,
											"end": 15659,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 15652,
											"end": 15664,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 15645,
											"end": 15664,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 15645,
											"end": 15664,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 15304,
											"end": 15670,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 15304,
											"end": 15670,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 15304,
											"end": 15670,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 15304,
											"end": 15670,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 15676,
											"end": 16095,
											"name": "tag",
											"source": 15,
											"value": "91"
										},
										{
											"begin": 15676,
											"end": 16095,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 15842,
											"end": 15846,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 15880,
											"end": 15882,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 15869,
											"end": 15878,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 15865,
											"end": 15883,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 15857,
											"end": 15883,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 15857,
											"end": 15883,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 15929,
											"end": 15938,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 15923,
											"end": 15927,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 15919,
											"end": 15939,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 15915,
											"end": 15916,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 15904,
											"end": 15913,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 15900,
											"end": 15917,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 15893,
											"end": 15940,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 15957,
											"end": 16088,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "322"
										},
										{
											"begin": 16083,
											"end": 16087,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 15957,
											"end": 16088,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "152"
										},
										{
											"begin": 15957,
											"end": 16088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 15957,
											"end": 16088,
											"name": "tag",
											"source": 15,
											"value": "322"
										},
										{
											"begin": 15957,
											"end": 16088,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 15949,
											"end": 16088,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 15949,
											"end": 16088,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 15676,
											"end": 16095,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 15676,
											"end": 16095,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 15676,
											"end": 16095,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 15676,
											"end": 16095,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 16101,
											"end": 16264,
											"name": "tag",
											"source": 15,
											"value": "153"
										},
										{
											"begin": 16101,
											"end": 16264,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 16241,
											"end": 16256,
											"name": "PUSH",
											"source": 15,
											"value": "7072696365206973207A65726F00000000000000000000000000000000000000"
										},
										{
											"begin": 16237,
											"end": 16238,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 16229,
											"end": 16235,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 16225,
											"end": 16239,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 16218,
											"end": 16257,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 16101,
											"end": 16264,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 16101,
											"end": 16264,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 16270,
											"end": 16636,
											"name": "tag",
											"source": 15,
											"value": "154"
										},
										{
											"begin": 16270,
											"end": 16636,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 16412,
											"end": 16415,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 16433,
											"end": 16500,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "325"
										},
										{
											"begin": 16497,
											"end": 16499,
											"name": "PUSH",
											"source": 15,
											"value": "D"
										},
										{
											"begin": 16492,
											"end": 16495,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 16433,
											"end": 16500,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "146"
										},
										{
											"begin": 16433,
											"end": 16500,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 16433,
											"end": 16500,
											"name": "tag",
											"source": 15,
											"value": "325"
										},
										{
											"begin": 16433,
											"end": 16500,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 16426,
											"end": 16500,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 16426,
											"end": 16500,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 16509,
											"end": 16602,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "326"
										},
										{
											"begin": 16598,
											"end": 16601,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 16509,
											"end": 16602,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "153"
										},
										{
											"begin": 16509,
											"end": 16602,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 16509,
											"end": 16602,
											"name": "tag",
											"source": 15,
											"value": "326"
										},
										{
											"begin": 16509,
											"end": 16602,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 16627,
											"end": 16629,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 16622,
											"end": 16625,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 16618,
											"end": 16630,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 16611,
											"end": 16630,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 16611,
											"end": 16630,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 16270,
											"end": 16636,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 16270,
											"end": 16636,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 16270,
											"end": 16636,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 16270,
											"end": 16636,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 16642,
											"end": 17061,
											"name": "tag",
											"source": 15,
											"value": "94"
										},
										{
											"begin": 16642,
											"end": 17061,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 16808,
											"end": 16812,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 16846,
											"end": 16848,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 16835,
											"end": 16844,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 16831,
											"end": 16849,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 16823,
											"end": 16849,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 16823,
											"end": 16849,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 16895,
											"end": 16904,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 16889,
											"end": 16893,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 16885,
											"end": 16905,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 16881,
											"end": 16882,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 16870,
											"end": 16879,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 16866,
											"end": 16883,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 16859,
											"end": 16906,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 16923,
											"end": 17054,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "328"
										},
										{
											"begin": 17049,
											"end": 17053,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 16923,
											"end": 17054,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "154"
										},
										{
											"begin": 16923,
											"end": 17054,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 16923,
											"end": 17054,
											"name": "tag",
											"source": 15,
											"value": "328"
										},
										{
											"begin": 16923,
											"end": 17054,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 16915,
											"end": 17054,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 16915,
											"end": 17054,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 16642,
											"end": 17061,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 16642,
											"end": 17061,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 16642,
											"end": 17061,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 16642,
											"end": 17061,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 17067,
											"end": 17509,
											"name": "tag",
											"source": 15,
											"value": "96"
										},
										{
											"begin": 17067,
											"end": 17509,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 17216,
											"end": 17220,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 17254,
											"end": 17256,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 17243,
											"end": 17252,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 17239,
											"end": 17257,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 17231,
											"end": 17257,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 17231,
											"end": 17257,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 17267,
											"end": 17338,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "330"
										},
										{
											"begin": 17335,
											"end": 17336,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 17324,
											"end": 17333,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 17320,
											"end": 17337,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 17311,
											"end": 17317,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 17267,
											"end": 17338,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "143"
										},
										{
											"begin": 17267,
											"end": 17338,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 17267,
											"end": 17338,
											"name": "tag",
											"source": 15,
											"value": "330"
										},
										{
											"begin": 17267,
											"end": 17338,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 17348,
											"end": 17420,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "331"
										},
										{
											"begin": 17416,
											"end": 17418,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 17405,
											"end": 17414,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 17401,
											"end": 17419,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 17392,
											"end": 17398,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 17348,
											"end": 17420,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "143"
										},
										{
											"begin": 17348,
											"end": 17420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 17348,
											"end": 17420,
											"name": "tag",
											"source": 15,
											"value": "331"
										},
										{
											"begin": 17348,
											"end": 17420,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 17430,
											"end": 17502,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "332"
										},
										{
											"begin": 17498,
											"end": 17500,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 17487,
											"end": 17496,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 17483,
											"end": 17501,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 17474,
											"end": 17480,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 17430,
											"end": 17502,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "143"
										},
										{
											"begin": 17430,
											"end": 17502,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 17430,
											"end": 17502,
											"name": "tag",
											"source": 15,
											"value": "332"
										},
										{
											"begin": 17430,
											"end": 17502,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 17067,
											"end": 17509,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 17067,
											"end": 17509,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 17067,
											"end": 17509,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 17067,
											"end": 17509,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 17067,
											"end": 17509,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 17067,
											"end": 17509,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 17067,
											"end": 17509,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
								"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
								"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"SnowmenSales.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": "bc197c81",
							"onERC1155Received(address,address,uint256,uint256,bytes)": "f23a6e61",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"setPrice(uint256,uint256)": "f7d97577",
							"snowmenGame()": "ea75aa8f",
							"snowmenToken()": "2c1449e1",
							"supportsInterface(bytes4)": "01ffc9a7",
							"tokenPrice(uint256)": "d4ddce8a",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"snowmenErc1155\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"snowmenErc20\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"SetPrice\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"onERC1155ReceivedExecuted\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"setPrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"snowmenGame\",\"outputs\":[{\"internalType\":\"contract IERC1155\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"snowmenToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"tokenPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"SnowmenSales.sol\":\"SnowmenSales\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x68d6fdbeb467192c3627a46aa7bf5cbb73267363b740abc511f521a5a41a446e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7ce608c19d5e917c60f9c8aa3e5f0eb05b326280ac0a235e8bb9a848a3a64a91\",\"dweb:/ipfs/QmdLPsWQJj7JvRae8MM13GEo4PBXaEFmD4b4heqcyMJNPG\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0x61a23d601c2ab69dd726ac55058604cbda98e1d728ba31a51c379a3f9eeea715\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d8cbb06152d82ebdd5ba1d33454e5759492040f309a82637c7e99c948a04fa20\",\"dweb:/ipfs/QmQQuLr6WSfLu97pMEh6XLefk99TSj9k5Qu1zXGPepwGiK\"]},\"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":{\"keccak256\":\"0xe103e95f854ef0cd1bba5f469175f67cd332f5c2561941f165e3dd65cee94d6d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6cf8cc5d07cf8003255f9d766fe8188b9f6e33b6240e126a605f0d061566b23e\",\"dweb:/ipfs/Qmd7okDCSoUt1L4G9hmb5c4W8kWUnfpAa2jyBKUp4xKErd\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xca2ae13e0610f6a99238dd00b97bd786bc92732dae6d6b9d61f573ec51018310\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75f8c71ce0c91c40dd5f249ace0b7d8270f8f1767231bcf71490f7157d6ba862\",\"dweb:/ipfs/QmYXgxeDyFHvz3JsXxLEYN6GNUR44ThHeFj5XkpkgMoG4w\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x9d8da059267bac779a2dbbb9a26c2acf00ca83085e105d62d5d4ef96054a47f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c78e2aa4313323cecd1ef12a8d6265b96beee1a199923abf55d9a2a9e291ad23\",\"dweb:/ipfs/QmUTs2KStXucZezzFo3EYeqYu47utu56qrF7jj1Gue65vb\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"SnowmenSales.sol\":{\"keccak256\":\"0xcc55e33d213494b57af1328e72c03f1fde92c8f46655762e16af57b8ed525241\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0dac0b2e2b2715e070beff49ef97ef08baaeb19d9d3c939ddf5d62675db8c0d7\",\"dweb:/ipfs/QmcyRqi92NQYudoCZZqCboXTePfLoZtcWaMNe5yxP6nPhQ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "SnowmenSales.sol:SnowmenSales",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 1336,
								"contract": "SnowmenSales.sol:SnowmenSales",
								"label": "snowmenToken",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(IERC20)561"
							},
							{
								"astId": 1339,
								"contract": "SnowmenSales.sol:SnowmenSales",
								"label": "snowmenGame",
								"offset": 0,
								"slot": "2",
								"type": "t_contract(IERC1155)360"
							},
							{
								"astId": 1343,
								"contract": "SnowmenSales.sol:SnowmenSales",
								"label": "tokenPrice",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_uint256,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_contract(IERC1155)360": {
								"encoding": "inplace",
								"label": "contract IERC1155",
								"numberOfBytes": "20"
							},
							"t_contract(IERC20)561": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_mapping(t_uint256,t_uint256)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							1261
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 1262,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1261,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1261,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								1261
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1243,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1243,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC1363.sol",
					"exportedSymbols": {
						"IERC1363": [
							229
						],
						"IERC165": [
							1319
						],
						"IERC20": [
							561
						]
					},
					"id": 230,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 151,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 230,
							"sourceUnit": 238,
							"src": "133:36:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 150,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 561,
										"src": "141:6:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 153,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 230,
							"sourceUnit": 234,
							"src": "170:38:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 152,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1319,
										"src": "178:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 155,
										"name": "IERC20",
										"nameLocations": [
											"590:6:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 561,
										"src": "590:6:1"
									},
									"id": 156,
									"nodeType": "InheritanceSpecifier",
									"src": "590:6:1"
								},
								{
									"baseName": {
										"id": 157,
										"name": "IERC165",
										"nameLocations": [
											"598:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1319,
										"src": "598:7:1"
									},
									"id": 158,
									"nodeType": "InheritanceSpecifier",
									"src": "598:7:1"
								}
							],
							"canonicalName": "IERC1363",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 154,
								"nodeType": "StructuredDocumentation",
								"src": "210:357:1",
								"text": " @title IERC1363\n @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction."
							},
							"fullyImplemented": false,
							"id": 229,
							"linearizedBaseContracts": [
								229,
								1319,
								561
							],
							"name": "IERC1363",
							"nameLocation": "578:8:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 159,
										"nodeType": "StructuredDocumentation",
										"src": "1148:370:1",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "1296ee62",
									"id": 168,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCall",
									"nameLocation": "1532:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 161,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1556:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "1548:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 160,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1548:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 163,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1568:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "1560:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 162,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1560:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1547:27:1"
									},
									"returnParameters": {
										"id": 167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 166,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "1593:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 165,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1593:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1592:6:1"
									},
									"scope": 229,
									"src": "1523:76:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 169,
										"nodeType": "StructuredDocumentation",
										"src": "1605:453:1",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "4000aea0",
									"id": 180,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCall",
									"nameLocation": "2072:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2096:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2088:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 170,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2088:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 173,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2108:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2100:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 172,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2100:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 175,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2130:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2115:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 174,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2115:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2087:48:1"
									},
									"returnParameters": {
										"id": 179,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 178,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2154:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 177,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2154:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2153:6:1"
									},
									"scope": 229,
									"src": "2063:97:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 181,
										"nodeType": "StructuredDocumentation",
										"src": "2166:453:1",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "d8fbe994",
									"id": 192,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCall",
									"nameLocation": "2633:19:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 183,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2661:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "2653:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 182,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2653:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2675:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "2667:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 184,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2667:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2687:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "2679:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 186,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2679:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2652:41:1"
									},
									"returnParameters": {
										"id": 191,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 190,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "2712:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 189,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2712:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:6:1"
									},
									"scope": 229,
									"src": "2624:94:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 193,
										"nodeType": "StructuredDocumentation",
										"src": "2724:536:1",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "c1d34b89",
									"id": 206,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCall",
									"nameLocation": "3274:19:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3302:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3294:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 194,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3294:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 197,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3316:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3308:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 196,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3308:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 199,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3328:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3320:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 198,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3320:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3350:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3335:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 200,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3335:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3293:62:1"
									},
									"returnParameters": {
										"id": 205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3374:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 203,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3374:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3373:6:1"
									},
									"scope": 229,
									"src": "3265:115:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 207,
										"nodeType": "StructuredDocumentation",
										"src": "3386:390:1",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "3177029f",
									"id": 216,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCall",
									"nameLocation": "3790:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 212,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 209,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3813:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "3805:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 208,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3805:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 211,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3830:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "3822:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 210,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3822:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3804:32:1"
									},
									"returnParameters": {
										"id": 215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 214,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "3855:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 213,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3855:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3854:6:1"
									},
									"scope": 229,
									"src": "3781:80:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 217,
										"nodeType": "StructuredDocumentation",
										"src": "3867:478:1",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @param data Additional data with no specified format, sent in call to `spender`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "cae9ca51",
									"id": 228,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCall",
									"nameLocation": "4359:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 224,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4382:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "4374:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 218,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4374:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 221,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4399:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "4391:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 220,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4391:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 223,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4421:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "4406:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 222,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4406:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4373:53:1"
									},
									"returnParameters": {
										"id": 227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "4445:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 225,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4445:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4444:6:1"
									},
									"scope": 229,
									"src": "4350:101:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 230,
							"src": "568:3885:1",
							"usedErrors": [],
							"usedEvents": [
								495,
								504
							]
						}
					],
					"src": "107:4347:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1319
						]
					},
					"id": 234,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 231,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../utils/introspection/IERC165.sol",
							"id": 233,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 234,
							"sourceUnit": 1320,
							"src": "132:59:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 232,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1319,
										"src": "140:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "106:86:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/interfaces/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							561
						]
					},
					"id": 238,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 235,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../token/ERC20/IERC20.sol",
							"id": 237,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 238,
							"sourceUnit": 562,
							"src": "131:49:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 236,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 561,
										"src": "139:6:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "105:76:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC1155/IERC1155.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
					"exportedSymbols": {
						"IERC1155": [
							360
						],
						"IERC165": [
							1319
						]
					},
					"id": 361,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 239,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "110:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 241,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 361,
							"sourceUnit": 1320,
							"src": "136:62:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 240,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1319,
										"src": "144:7:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 243,
										"name": "IERC165",
										"nameLocations": [
											"359:7:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1319,
										"src": "359:7:4"
									},
									"id": 244,
									"nodeType": "InheritanceSpecifier",
									"src": "359:7:4"
								}
							],
							"canonicalName": "IERC1155",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 242,
								"nodeType": "StructuredDocumentation",
								"src": "200:136:4",
								"text": " @dev Required interface of an ERC-1155 compliant contract, as defined in the\n https://eips.ethereum.org/EIPS/eip-1155[ERC]."
							},
							"fullyImplemented": false,
							"id": 360,
							"linearizedBaseContracts": [
								360,
								1319
							],
							"name": "IERC1155",
							"nameLocation": "347:8:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 245,
										"nodeType": "StructuredDocumentation",
										"src": "373:125:4",
										"text": " @dev Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`."
									},
									"eventSelector": "c3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62",
									"id": 257,
									"name": "TransferSingle",
									"nameLocation": "509:14:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 256,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 247,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "540:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 257,
												"src": "524:24:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 246,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "524:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 249,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "566:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 257,
												"src": "550:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 248,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "550:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 251,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "588:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 257,
												"src": "572:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 250,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "572:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 253,
												"indexed": false,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "600:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 257,
												"src": "592:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 252,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "592:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 255,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "612:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 257,
												"src": "604:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 254,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "604:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "523:95:4"
									},
									"src": "503:116:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 258,
										"nodeType": "StructuredDocumentation",
										"src": "625:144:4",
										"text": " @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n transfers."
									},
									"eventSelector": "4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb",
									"id": 272,
									"name": "TransferBatch",
									"nameLocation": "780:13:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 271,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 260,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "819:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 272,
												"src": "803:24:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 259,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "803:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 262,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "853:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 272,
												"src": "837:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "837:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 264,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "883:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 272,
												"src": "867:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "867:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 267,
												"indexed": false,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "905:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 272,
												"src": "895:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 265,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "895:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 266,
													"nodeType": "ArrayTypeName",
													"src": "895:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 270,
												"indexed": false,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "928:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 272,
												"src": "918:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 268,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "918:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 269,
													"nodeType": "ArrayTypeName",
													"src": "918:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "793:147:4"
									},
									"src": "774:167:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 273,
										"nodeType": "StructuredDocumentation",
										"src": "947:147:4",
										"text": " @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n `approved`."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 281,
									"name": "ApprovalForAll",
									"nameLocation": "1105:14:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 280,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 275,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1136:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 281,
												"src": "1120:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 274,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1120:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 277,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "1161:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 281,
												"src": "1145:24:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 276,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1145:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 279,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "1176:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 281,
												"src": "1171:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 278,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1171:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1119:66:4"
									},
									"src": "1099:87:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 282,
										"nodeType": "StructuredDocumentation",
										"src": "1192:343:4",
										"text": " @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n If an {URI} event was emitted for `id`, the standard\n https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n returned by {IERC1155MetadataURI-uri}."
									},
									"eventSelector": "6bb7ff708619ba0610cba295a58592e0451dee2622938c8755667688daf3529b",
									"id": 288,
									"name": "URI",
									"nameLocation": "1546:3:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 287,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 284,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1557:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 288,
												"src": "1550:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 283,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1550:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 286,
												"indexed": true,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1580:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 288,
												"src": "1564:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 285,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1564:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1549:34:4"
									},
									"src": "1540:44:4"
								},
								{
									"documentation": {
										"id": 289,
										"nodeType": "StructuredDocumentation",
										"src": "1590:90:4",
										"text": " @dev Returns the value of tokens of token type `id` owned by `account`."
									},
									"functionSelector": "00fdd58e",
									"id": 298,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1694:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 294,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 291,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1712:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 298,
												"src": "1704:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 290,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1704:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 293,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1729:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 298,
												"src": "1721:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 292,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1721:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1703:29:4"
									},
									"returnParameters": {
										"id": 297,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 296,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 298,
												"src": "1756:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 295,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1756:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1755:9:4"
									},
									"scope": 360,
									"src": "1685:80:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 299,
										"nodeType": "StructuredDocumentation",
										"src": "1771:188:4",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n Requirements:\n - `accounts` and `ids` must have the same length."
									},
									"functionSelector": "4e1273f4",
									"id": 311,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOfBatch",
									"nameLocation": "1973:14:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 306,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 302,
												"mutability": "mutable",
												"name": "accounts",
												"nameLocation": "2016:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 311,
												"src": "1997:27:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 300,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1997:7:4",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 301,
													"nodeType": "ArrayTypeName",
													"src": "1997:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "2053:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 311,
												"src": "2034:22:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 303,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2034:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 304,
													"nodeType": "ArrayTypeName",
													"src": "2034:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1987:75:4"
									},
									"returnParameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 309,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 311,
												"src": "2086:16:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 307,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2086:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 308,
													"nodeType": "ArrayTypeName",
													"src": "2086:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2085:18:4"
									},
									"scope": 360,
									"src": "1964:140:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 312,
										"nodeType": "StructuredDocumentation",
										"src": "2110:254:4",
										"text": " @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n Emits an {ApprovalForAll} event.\n Requirements:\n - `operator` cannot be the zero address."
									},
									"functionSelector": "a22cb465",
									"id": 319,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "2378:17:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 317,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 314,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2404:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 319,
												"src": "2396:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 313,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2396:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 316,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "2419:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 319,
												"src": "2414:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 315,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2414:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2395:33:4"
									},
									"returnParameters": {
										"id": 318,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2437:0:4"
									},
									"scope": 360,
									"src": "2369:69:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 320,
										"nodeType": "StructuredDocumentation",
										"src": "2444:135:4",
										"text": " @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n See {setApprovalForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 329,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "2593:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 322,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2618:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 329,
												"src": "2610:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 321,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2610:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 324,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2635:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 329,
												"src": "2627:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 323,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2627:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2609:35:4"
									},
									"returnParameters": {
										"id": 328,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 327,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 329,
												"src": "2668:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 326,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2668:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2667:6:4"
									},
									"scope": 360,
									"src": "2584:90:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 330,
										"nodeType": "StructuredDocumentation",
										"src": "2680:910:4",
										"text": " @dev Transfers a `value` amount of tokens of type `id` from `from` to `to`.\n WARNING: This function can potentially allow a reentrancy attack when transferring tokens\n to an untrusted contract, when invoking {onERC1155Received} on the receiver.\n Ensure to follow the checks-effects-interactions pattern and consider employing\n reentrancy guards when interacting with untrusted contracts.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n - `from` must have a balance of tokens of type `id` of at least `value` amount.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."
									},
									"functionSelector": "f242432a",
									"id": 343,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "3604:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 332,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3629:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 343,
												"src": "3621:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 331,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3621:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 334,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3643:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 343,
												"src": "3635:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 333,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3635:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 336,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "3655:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 343,
												"src": "3647:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 335,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3647:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 338,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3667:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 343,
												"src": "3659:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 337,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3659:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3689:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 343,
												"src": "3674:19:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 339,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3674:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3620:74:4"
									},
									"returnParameters": {
										"id": 342,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3703:0:4"
									},
									"scope": 360,
									"src": "3595:109:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 344,
										"nodeType": "StructuredDocumentation",
										"src": "3710:814:4",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n WARNING: This function can potentially allow a reentrancy attack when transferring tokens\n to an untrusted contract, when invoking {onERC1155BatchReceived} on the receiver.\n Ensure to follow the checks-effects-interactions pattern and consider employing\n reentrancy guards when interacting with untrusted contracts.\n Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments.\n Requirements:\n - `ids` and `values` must have the same length.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."
									},
									"functionSelector": "2eb2c2d6",
									"id": 359,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeBatchTransferFrom",
									"nameLocation": "4538:21:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 357,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 346,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4577:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 359,
												"src": "4569:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 345,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4569:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 348,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4599:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 359,
												"src": "4591:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 347,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4591:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 351,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "4630:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 359,
												"src": "4611:22:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 349,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4611:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 350,
													"nodeType": "ArrayTypeName",
													"src": "4611:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 354,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "4662:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 359,
												"src": "4643:25:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 352,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4643:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 353,
													"nodeType": "ArrayTypeName",
													"src": "4643:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 356,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4693:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 359,
												"src": "4678:19:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 355,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4678:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4559:144:4"
									},
									"returnParameters": {
										"id": 358,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4712:0:4"
									},
									"scope": 360,
									"src": "4529:184:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 361,
							"src": "337:4378:4",
							"usedErrors": [],
							"usedEvents": [
								257,
								272,
								281,
								288
							]
						}
					],
					"src": "110:4606:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
					"exportedSymbols": {
						"IERC1155Receiver": [
							402
						],
						"IERC165": [
							1319
						]
					},
					"id": 403,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 362,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "118:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 364,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 403,
							"sourceUnit": 1320,
							"src": "144:62:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 363,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1319,
										"src": "152:7:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 366,
										"name": "IERC165",
										"nameLocations": [
											"357:7:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1319,
										"src": "357:7:5"
									},
									"id": 367,
									"nodeType": "InheritanceSpecifier",
									"src": "357:7:5"
								}
							],
							"canonicalName": "IERC1155Receiver",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 365,
								"nodeType": "StructuredDocumentation",
								"src": "208:118:5",
								"text": " @dev Interface that must be implemented by smart contracts in order to receive\n ERC-1155 token transfers."
							},
							"fullyImplemented": false,
							"id": 402,
							"linearizedBaseContracts": [
								402,
								1319
							],
							"name": "IERC1155Receiver",
							"nameLocation": "337:16:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 368,
										"nodeType": "StructuredDocumentation",
										"src": "371:827:5",
										"text": " @dev Handles the receipt of a single ERC-1155 token type. This function is\n called at the end of a `safeTransferFrom` after the balance has been updated.\n NOTE: To accept the transfer, this must return\n `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n (i.e. 0xf23a6e61, or its own function selector).\n @param operator The address which initiated the transfer (i.e. msg.sender)\n @param from The address which previously owned the token\n @param id The ID of the token being transferred\n @param value The amount of tokens being transferred\n @param data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"
									},
									"functionSelector": "f23a6e61",
									"id": 383,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC1155Received",
									"nameLocation": "1212:17:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 370,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "1247:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 383,
												"src": "1239:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 369,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1239:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 372,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1273:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 383,
												"src": "1265:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 371,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1265:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 374,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1295:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 383,
												"src": "1287:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 373,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1287:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 376,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1315:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 383,
												"src": "1307:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 375,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1307:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 378,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1345:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 383,
												"src": "1330:19:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 377,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1330:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1229:126:5"
									},
									"returnParameters": {
										"id": 382,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 381,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 383,
												"src": "1374:6:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 380,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1374:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1373:8:5"
									},
									"scope": 402,
									"src": "1203:179:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 384,
										"nodeType": "StructuredDocumentation",
										"src": "1388:995:5",
										"text": " @dev Handles the receipt of a multiple ERC-1155 token types. This function\n is called at the end of a `safeBatchTransferFrom` after the balances have\n been updated.\n NOTE: To accept the transfer(s), this must return\n `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n (i.e. 0xbc197c81, or its own function selector).\n @param operator The address which initiated the batch transfer (i.e. msg.sender)\n @param from The address which previously owned the token\n @param ids An array containing ids of each token being transferred (order and length must match values array)\n @param values An array containing amounts of each token being transferred (order and length must match ids array)\n @param data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"
									},
									"functionSelector": "bc197c81",
									"id": 401,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC1155BatchReceived",
									"nameLocation": "2397:22:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 397,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 386,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2437:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 401,
												"src": "2429:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 385,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2429:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2463:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 401,
												"src": "2455:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 387,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2455:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 391,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "2496:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 401,
												"src": "2477:22:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 389,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2477:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 390,
													"nodeType": "ArrayTypeName",
													"src": "2477:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 394,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "2528:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 401,
												"src": "2509:25:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 392,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2509:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 393,
													"nodeType": "ArrayTypeName",
													"src": "2509:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 396,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2559:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 401,
												"src": "2544:19:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 395,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2544:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2419:150:5"
									},
									"returnParameters": {
										"id": 400,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 399,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 401,
												"src": "2588:6:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 398,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2588:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2587:8:5"
									},
									"scope": 402,
									"src": "2388:208:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 403,
							"src": "327:2271:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "118:2481:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol",
					"exportedSymbols": {
						"ERC1155Holder": [
							483
						],
						"ERC165": [
							1307
						],
						"IERC1155Receiver": [
							402
						],
						"IERC165": [
							1319
						]
					},
					"id": 484,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 404,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "121:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
							"file": "../../../utils/introspection/ERC165.sol",
							"id": 407,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 484,
							"sourceUnit": 1308,
							"src": "147:72:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 405,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1319,
										"src": "155:7:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								},
								{
									"foreign": {
										"id": 406,
										"name": "ERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1307,
										"src": "164:6:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
							"file": "../IERC1155Receiver.sol",
							"id": 409,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 484,
							"sourceUnit": 403,
							"src": "220:57:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 408,
										"name": "IERC1155Receiver",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 402,
										"src": "228:16:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 411,
										"name": "ERC165",
										"nameLocations": [
											"558:6:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1307,
										"src": "558:6:6"
									},
									"id": 412,
									"nodeType": "InheritanceSpecifier",
									"src": "558:6:6"
								},
								{
									"baseName": {
										"id": 413,
										"name": "IERC1155Receiver",
										"nameLocations": [
											"566:16:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 402,
										"src": "566:16:6"
									},
									"id": 414,
									"nodeType": "InheritanceSpecifier",
									"src": "566:16:6"
								}
							],
							"canonicalName": "ERC1155Holder",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 410,
								"nodeType": "StructuredDocumentation",
								"src": "279:243:6",
								"text": " @dev Simple implementation of `IERC1155Receiver` that will allow a contract to hold ERC-1155 tokens.\n IMPORTANT: When inheriting this contract, you must include a way to use the received tokens, otherwise they will be\n stuck."
							},
							"fullyImplemented": true,
							"id": 483,
							"linearizedBaseContracts": [
								483,
								402,
								1307,
								1319
							],
							"name": "ERC1155Holder",
							"nameLocation": "541:13:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										1306,
										1318
									],
									"body": {
										"id": 437,
										"nodeType": "Block",
										"src": "758:113:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 435,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 430,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 425,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 417,
															"src": "775:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 427,
																		"name": "IERC1155Receiver",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 402,
																		"src": "795:16:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$402_$",
																			"typeString": "type(contract IERC1155Receiver)"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$402_$",
																			"typeString": "type(contract IERC1155Receiver)"
																		}
																	],
																	"id": 426,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "790:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 428,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "790:22:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_contract$_IERC1155Receiver_$402",
																	"typeString": "type(contract IERC1155Receiver)"
																}
															},
															"id": 429,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "813:11:6",
															"memberName": "interfaceId",
															"nodeType": "MemberAccess",
															"src": "790:34:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"src": "775:49:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 433,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 417,
																"src": "852:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 431,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "828:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_ERC1155Holder_$483_$",
																	"typeString": "type(contract super ERC1155Holder)"
																}
															},
															"id": 432,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "834:17:6",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1306,
															"src": "828:23:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 434,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "828:36:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "775:89:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 424,
												"id": 436,
												"nodeType": "Return",
												"src": "768:96:6"
											}
										]
									},
									"documentation": {
										"id": 415,
										"nodeType": "StructuredDocumentation",
										"src": "589:56:6",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 438,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "659:17:6",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 421,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 419,
												"name": "ERC165",
												"nameLocations": [
													"726:6:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1307,
												"src": "726:6:6"
											},
											{
												"id": 420,
												"name": "IERC165",
												"nameLocations": [
													"734:7:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1319,
												"src": "734:7:6"
											}
										],
										"src": "717:25:6"
									},
									"parameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "684:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 438,
												"src": "677:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 416,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "677:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "676:20:6"
									},
									"returnParameters": {
										"id": 424,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 423,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 438,
												"src": "752:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 422,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "752:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "751:6:6"
									},
									"scope": 483,
									"src": "650:221:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										383
									],
									"body": {
										"id": 458,
										"nodeType": "Block",
										"src": "1041:55:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"expression": {
															"id": 454,
															"name": "this",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967268,
															"src": "1058:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC1155Holder_$483",
																"typeString": "contract ERC1155Holder"
															}
														},
														"id": 455,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1063:17:6",
														"memberName": "onERC1155Received",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 459,
														"src": "1058:22:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
															"typeString": "function (address,address,uint256,uint256,bytes memory) external returns (bytes4)"
														}
													},
													"id": 456,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberLocation": "1081:8:6",
													"memberName": "selector",
													"nodeType": "MemberAccess",
													"src": "1058:31:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"functionReturnParameters": 453,
												"id": 457,
												"nodeType": "Return",
												"src": "1051:38:6"
											}
										]
									},
									"functionSelector": "f23a6e61",
									"id": 459,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "onERC1155Received",
									"nameLocation": "886:17:6",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 450,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1015:8:6"
									},
									"parameters": {
										"id": 449,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 440,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "913:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 439,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "913:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 442,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "930:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 441,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 444,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "947:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 443,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "947:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 446,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "964:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 445,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "964:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 448,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "981:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 447,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "981:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "903:96:6"
									},
									"returnParameters": {
										"id": 453,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 452,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "1033:6:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 451,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1033:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1032:8:6"
									},
									"scope": 483,
									"src": "877:219:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										401
									],
									"body": {
										"id": 481,
										"nodeType": "Block",
										"src": "1289:60:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"expression": {
															"id": 477,
															"name": "this",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967268,
															"src": "1306:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC1155Holder_$483",
																"typeString": "contract ERC1155Holder"
															}
														},
														"id": 478,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1311:22:6",
														"memberName": "onERC1155BatchReceived",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 482,
														"src": "1306:27:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
															"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory) external returns (bytes4)"
														}
													},
													"id": 479,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberLocation": "1334:8:6",
													"memberName": "selector",
													"nodeType": "MemberAccess",
													"src": "1306:36:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"functionReturnParameters": 476,
												"id": 480,
												"nodeType": "Return",
												"src": "1299:43:6"
											}
										]
									},
									"functionSelector": "bc197c81",
									"id": 482,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "onERC1155BatchReceived",
									"nameLocation": "1111:22:6",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 473,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1263:8:6"
									},
									"parameters": {
										"id": 472,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 461,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "1143:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 460,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1143:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 463,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "1160:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 462,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1160:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 466,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "1177:16:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 464,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1177:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 465,
													"nodeType": "ArrayTypeName",
													"src": "1177:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 469,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "1203:16:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 467,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1203:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 468,
													"nodeType": "ArrayTypeName",
													"src": "1203:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 471,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "1229:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 470,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1229:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1133:114:6"
									},
									"returnParameters": {
										"id": 476,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 475,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "1281:6:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 474,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1281:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1280:8:6"
									},
									"scope": 483,
									"src": "1102:247:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 484,
							"src": "523:828:6",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "121:1231:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							561
						]
					},
					"id": 562,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 485,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 486,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:7",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 561,
							"linearizedBaseContracts": [
								561
							],
							"name": "IERC20",
							"nameLocation": "214:6:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 487,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:7",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 495,
									"name": "Transfer",
									"nameLocation": "396:8:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 494,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 489,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 495,
												"src": "405:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 488,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 491,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 495,
												"src": "427:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 490,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 493,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 495,
												"src": "447:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 492,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:7"
									},
									"src": "390:72:7"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 496,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:7",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 504,
									"name": "Approval",
									"nameLocation": "627:8:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 503,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 498,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 504,
												"src": "636:21:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 497,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 500,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 504,
												"src": "659:23:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 499,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 502,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 504,
												"src": "684:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 501,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:7"
									},
									"src": "621:78:7"
								},
								{
									"documentation": {
										"id": 505,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:7",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 510,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 506,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:7"
									},
									"returnParameters": {
										"id": 509,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 508,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 510,
												"src": "821:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 507,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:7"
									},
									"scope": 561,
									"src": "775:55:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 511,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:7",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 518,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 514,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 513,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 518,
												"src": "931:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 512,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:7"
									},
									"returnParameters": {
										"id": 517,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 516,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 518,
												"src": "971:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 515,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:7"
									},
									"scope": 561,
									"src": "912:68:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 519,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:7",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 528,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 524,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 521,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 528,
												"src": "1222:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 520,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 523,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 528,
												"src": "1234:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 522,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:7"
									},
									"returnParameters": {
										"id": 527,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 526,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 528,
												"src": "1267:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 525,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:7"
									},
									"scope": 561,
									"src": "1204:69:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 529,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:7",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 538,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 534,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 531,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 538,
												"src": "1567:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 530,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 533,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 538,
												"src": "1582:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 532,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:7"
									},
									"returnParameters": {
										"id": 537,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 536,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 538,
												"src": "1622:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 535,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:7"
									},
									"scope": 561,
									"src": "1548:83:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 539,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:7",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 548,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 544,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 541,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 548,
												"src": "2326:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 540,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 543,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 548,
												"src": "2343:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 542,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:7"
									},
									"returnParameters": {
										"id": 547,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 546,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 548,
												"src": "2376:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 545,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:7"
									},
									"scope": 561,
									"src": "2309:73:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 549,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:7",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 560,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 556,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 551,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 560,
												"src": "2712:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 550,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 553,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 560,
												"src": "2726:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 552,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 555,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 560,
												"src": "2738:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 554,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:7"
									},
									"returnParameters": {
										"id": 559,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 558,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 560,
												"src": "2771:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 557,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:7"
									},
									"scope": 561,
									"src": "2690:87:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 562,
							"src": "204:2575:7",
							"usedErrors": [],
							"usedEvents": [
								495,
								504
							]
						}
					],
					"src": "106:2674:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
					"exportedSymbols": {
						"Address": [
							1231
						],
						"IERC1363": [
							229
						],
						"IERC20": [
							561
						],
						"SafeERC20": [
							972
						]
					},
					"id": 973,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 563,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:8"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 565,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 973,
							"sourceUnit": 562,
							"src": "141:37:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 564,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 561,
										"src": "149:6:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC1363.sol",
							"file": "../../../interfaces/IERC1363.sol",
							"id": 567,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 973,
							"sourceUnit": 230,
							"src": "179:58:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 566,
										"name": "IERC1363",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 229,
										"src": "187:8:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "../../../utils/Address.sol",
							"id": 569,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 973,
							"sourceUnit": 1232,
							"src": "238:51:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 568,
										"name": "Address",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1231,
										"src": "246:7:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 570,
								"nodeType": "StructuredDocumentation",
								"src": "291:458:8",
								"text": " @title SafeERC20\n @dev Wrappers around ERC-20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 972,
							"linearizedBaseContracts": [
								972
							],
							"name": "SafeERC20",
							"nameLocation": "758:9:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 571,
										"nodeType": "StructuredDocumentation",
										"src": "774:65:8",
										"text": " @dev An operation with an ERC-20 token failed."
									},
									"errorSelector": "5274afe7",
									"id": 575,
									"name": "SafeERC20FailedOperation",
									"nameLocation": "850:24:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 574,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 573,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "883:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 575,
												"src": "875:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 572,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "875:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "874:15:8"
									},
									"src": "844:46:8"
								},
								{
									"documentation": {
										"id": 576,
										"nodeType": "StructuredDocumentation",
										"src": "896:71:8",
										"text": " @dev Indicates a failed `decreaseAllowance` request."
									},
									"errorSelector": "e570110f",
									"id": 584,
									"name": "SafeERC20FailedDecreaseAllowance",
									"nameLocation": "978:32:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 583,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 578,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1019:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 584,
												"src": "1011:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 577,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1011:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 580,
												"mutability": "mutable",
												"name": "currentAllowance",
												"nameLocation": "1036:16:8",
												"nodeType": "VariableDeclaration",
												"scope": 584,
												"src": "1028:24:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 579,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1028:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 582,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "1062:17:8",
												"nodeType": "VariableDeclaration",
												"scope": 584,
												"src": "1054:25:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 581,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1054:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1010:70:8"
									},
									"src": "972:109:8"
								},
								{
									"body": {
										"id": 607,
										"nodeType": "Block",
										"src": "1343:88:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 596,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 588,
															"src": "1373:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$561",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 599,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 588,
																		"src": "1395:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$561",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 600,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1401:8:8",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 528,
																	"src": "1395:14:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 601,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 590,
																			"src": "1412:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 602,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 592,
																			"src": "1416:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 603,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1411:11:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																],
																"expression": {
																	"id": 597,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1380:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 598,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1384:10:8",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1380:14:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 604,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1380:43:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$561",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 595,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 930,
														"src": "1353:19:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$561_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 605,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1353:71:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 606,
												"nodeType": "ExpressionStatement",
												"src": "1353:71:8"
											}
										]
									},
									"documentation": {
										"id": 585,
										"nodeType": "StructuredDocumentation",
										"src": "1087:179:8",
										"text": " @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 608,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "1280:12:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 593,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 588,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1300:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 608,
												"src": "1293:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$561",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 587,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 586,
														"name": "IERC20",
														"nameLocations": [
															"1293:6:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 561,
														"src": "1293:6:8"
													},
													"referencedDeclaration": 561,
													"src": "1293:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$561",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 590,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1315:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 608,
												"src": "1307:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 589,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1307:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 592,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1327:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 608,
												"src": "1319:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 591,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1319:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1292:41:8"
									},
									"returnParameters": {
										"id": 594,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1343:0:8"
									},
									"scope": 972,
									"src": "1271:160:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 634,
										"nodeType": "Block",
										"src": "1760:98:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 622,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 612,
															"src": "1790:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$561",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 625,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 612,
																		"src": "1812:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$561",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 626,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1818:12:8",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 560,
																	"src": "1812:18:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 627,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 614,
																			"src": "1833:4:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 628,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 616,
																			"src": "1839:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 629,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 618,
																			"src": "1843:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 630,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1832:17:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																],
																"expression": {
																	"id": 623,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1797:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 624,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1801:10:8",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1797:14:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 631,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1797:53:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$561",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 621,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 930,
														"src": "1770:19:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$561_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 632,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1770:81:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 633,
												"nodeType": "ExpressionStatement",
												"src": "1770:81:8"
											}
										]
									},
									"documentation": {
										"id": 609,
										"nodeType": "StructuredDocumentation",
										"src": "1437:228:8",
										"text": " @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."
									},
									"id": 635,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1679:16:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 619,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 612,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1703:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 635,
												"src": "1696:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$561",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 611,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 610,
														"name": "IERC20",
														"nameLocations": [
															"1696:6:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 561,
														"src": "1696:6:8"
													},
													"referencedDeclaration": 561,
													"src": "1696:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$561",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 614,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1718:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 635,
												"src": "1710:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 613,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1710:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 616,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1732:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 635,
												"src": "1724:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 615,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1724:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 618,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1744:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 635,
												"src": "1736:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 617,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1736:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1695:55:8"
									},
									"returnParameters": {
										"id": 620,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1760:0:8"
									},
									"scope": 972,
									"src": "1670:188:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 665,
										"nodeType": "Block",
										"src": "2600:139:8",
										"statements": [
											{
												"assignments": [
													647
												],
												"declarations": [
													{
														"constant": false,
														"id": 647,
														"mutability": "mutable",
														"name": "oldAllowance",
														"nameLocation": "2618:12:8",
														"nodeType": "VariableDeclaration",
														"scope": 665,
														"src": "2610:20:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 646,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2610:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 656,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 652,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2657:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SafeERC20_$972",
																		"typeString": "library SafeERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SafeERC20_$972",
																		"typeString": "library SafeERC20"
																	}
																],
																"id": 651,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2649:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 650,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2649:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 653,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2649:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 654,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 641,
															"src": "2664:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 648,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 639,
															"src": "2633:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$561",
																"typeString": "contract IERC20"
															}
														},
														"id": 649,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2639:9:8",
														"memberName": "allowance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 538,
														"src": "2633:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view external returns (uint256)"
														}
													},
													"id": 655,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2633:39:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2610:62:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 658,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 639,
															"src": "2695:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$561",
																"typeString": "contract IERC20"
															}
														},
														{
															"id": 659,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 641,
															"src": "2702:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 662,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 660,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 647,
																"src": "2711:12:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 661,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 643,
																"src": "2726:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2711:20:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$561",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 657,
														"name": "forceApprove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 756,
														"src": "2682:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$561_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 663,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2682:50:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 664,
												"nodeType": "ExpressionStatement",
												"src": "2682:50:8"
											}
										]
									},
									"documentation": {
										"id": 636,
										"nodeType": "StructuredDocumentation",
										"src": "1864:645:8",
										"text": " @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."
									},
									"id": 666,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "2523:21:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 644,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 639,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2552:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 666,
												"src": "2545:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$561",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 638,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 637,
														"name": "IERC20",
														"nameLocations": [
															"2545:6:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 561,
														"src": "2545:6:8"
													},
													"referencedDeclaration": 561,
													"src": "2545:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$561",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 641,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2567:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 666,
												"src": "2559:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 640,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2559:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 643,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2584:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 666,
												"src": "2576:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 642,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2576:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2544:46:8"
									},
									"returnParameters": {
										"id": 645,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2600:0:8"
									},
									"scope": 972,
									"src": "2514:225:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 708,
										"nodeType": "Block",
										"src": "3505:370:8",
										"statements": [
											{
												"id": 707,
												"nodeType": "UncheckedBlock",
												"src": "3515:354:8",
												"statements": [
													{
														"assignments": [
															678
														],
														"declarations": [
															{
																"constant": false,
																"id": 678,
																"mutability": "mutable",
																"name": "currentAllowance",
																"nameLocation": "3547:16:8",
																"nodeType": "VariableDeclaration",
																"scope": 707,
																"src": "3539:24:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 677,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "3539:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 687,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 683,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "3590:4:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$972",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$972",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 682,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3582:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 681,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "3582:7:8",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 684,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3582:13:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 685,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 672,
																	"src": "3597:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 679,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 670,
																	"src": "3566:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$561",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 680,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3572:9:8",
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 538,
																"src": "3566:15:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 686,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3566:39:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "3539:66:8"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 690,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 688,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 678,
																"src": "3623:16:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 689,
																"name": "requestedDecrease",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 674,
																"src": "3642:17:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3623:36:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 698,
														"nodeType": "IfStatement",
														"src": "3619:160:8",
														"trueBody": {
															"id": 697,
															"nodeType": "Block",
															"src": "3661:118:8",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"id": 692,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 672,
																				"src": "3719:7:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 693,
																				"name": "currentAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 678,
																				"src": "3728:16:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 694,
																				"name": "requestedDecrease",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 674,
																				"src": "3746:17:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 691,
																			"name": "SafeERC20FailedDecreaseAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 584,
																			"src": "3686:32:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																				"typeString": "function (address,uint256,uint256) pure returns (error)"
																			}
																		},
																		"id": 695,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3686:78:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_error",
																			"typeString": "error"
																		}
																	},
																	"id": 696,
																	"nodeType": "RevertStatement",
																	"src": "3679:85:8"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 700,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 670,
																	"src": "3805:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$561",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"id": 701,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 672,
																	"src": "3812:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 704,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 702,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 678,
																		"src": "3821:16:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 703,
																		"name": "requestedDecrease",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 674,
																		"src": "3840:17:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3821:36:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$561",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 699,
																"name": "forceApprove",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 756,
																"src": "3792:12:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$561_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (contract IERC20,address,uint256)"
																}
															},
															"id": 705,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3792:66:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 706,
														"nodeType": "ExpressionStatement",
														"src": "3792:66:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 667,
										"nodeType": "StructuredDocumentation",
										"src": "2745:657:8",
										"text": " @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n value, non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."
									},
									"id": 709,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "3416:21:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 675,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 670,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3445:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 709,
												"src": "3438:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$561",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 669,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 668,
														"name": "IERC20",
														"nameLocations": [
															"3438:6:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 561,
														"src": "3438:6:8"
													},
													"referencedDeclaration": 561,
													"src": "3438:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$561",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 672,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3460:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 709,
												"src": "3452:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 671,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3452:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 674,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "3477:17:8",
												"nodeType": "VariableDeclaration",
												"scope": 709,
												"src": "3469:25:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 673,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3469:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3437:58:8"
									},
									"returnParameters": {
										"id": 676,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3505:0:8"
									},
									"scope": 972,
									"src": "3407:468:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 755,
										"nodeType": "Block",
										"src": "4529:303:8",
										"statements": [
											{
												"assignments": [
													721
												],
												"declarations": [
													{
														"constant": false,
														"id": 721,
														"mutability": "mutable",
														"name": "approvalCall",
														"nameLocation": "4552:12:8",
														"nodeType": "VariableDeclaration",
														"scope": 755,
														"src": "4539:25:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 720,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4539:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 730,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 724,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 713,
																"src": "4582:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$561",
																	"typeString": "contract IERC20"
																}
															},
															"id": 725,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4588:7:8",
															"memberName": "approve",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 548,
															"src": "4582:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															}
														},
														{
															"components": [
																{
																	"id": 726,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 715,
																	"src": "4598:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 727,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 717,
																	"src": "4607:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 728,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "4597:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															},
															{
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														],
														"expression": {
															"id": 722,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "4567:3:8",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 723,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "4571:10:8",
														"memberName": "encodeCall",
														"nodeType": "MemberAccess",
														"src": "4567:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
															"typeString": "function () pure returns (bytes memory)"
														}
													},
													"id": 729,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4567:47:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4539:75:8"
											},
											{
												"condition": {
													"id": 735,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4629:45:8",
													"subExpression": {
														"arguments": [
															{
																"id": 732,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 713,
																"src": "4654:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$561",
																	"typeString": "contract IERC20"
																}
															},
															{
																"id": 733,
																"name": "approvalCall",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 721,
																"src": "4661:12:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IERC20_$561",
																	"typeString": "contract IERC20"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 731,
															"name": "_callOptionalReturnBool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 971,
															"src": "4630:23:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$561_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																"typeString": "function (contract IERC20,bytes memory) returns (bool)"
															}
														},
														"id": 734,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4630:44:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 754,
												"nodeType": "IfStatement",
												"src": "4625:201:8",
												"trueBody": {
													"id": 753,
													"nodeType": "Block",
													"src": "4676:150:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 737,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 713,
																		"src": "4710:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$561",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 740,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 713,
																					"src": "4732:5:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$561",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 741,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "4738:7:8",
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 548,
																				"src": "4732:13:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 742,
																						"name": "spender",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 715,
																						"src": "4748:7:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					{
																						"hexValue": "30",
																						"id": 743,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "4757:1:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					}
																				],
																				"id": 744,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "4747:12:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				},
																				{
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			],
																			"expression": {
																				"id": 738,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "4717:3:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 739,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "4721:10:8",
																			"memberName": "encodeCall",
																			"nodeType": "MemberAccess",
																			"src": "4717:14:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function () pure returns (bytes memory)"
																			}
																		},
																		"id": 745,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4717:43:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$561",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 736,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 930,
																	"src": "4690:19:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$561_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 746,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4690:71:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 747,
															"nodeType": "ExpressionStatement",
															"src": "4690:71:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 749,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 713,
																		"src": "4795:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$561",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"id": 750,
																		"name": "approvalCall",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 721,
																		"src": "4802:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$561",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 748,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 930,
																	"src": "4775:19:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$561_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 751,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4775:40:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 752,
															"nodeType": "ExpressionStatement",
															"src": "4775:40:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 710,
										"nodeType": "StructuredDocumentation",
										"src": "3881:566:8",
										"text": " @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT.\n NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n set here."
									},
									"id": 756,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "forceApprove",
									"nameLocation": "4461:12:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 718,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 713,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4481:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 756,
												"src": "4474:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$561",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 712,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 711,
														"name": "IERC20",
														"nameLocations": [
															"4474:6:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 561,
														"src": "4474:6:8"
													},
													"referencedDeclaration": 561,
													"src": "4474:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$561",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 715,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4496:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 756,
												"src": "4488:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 714,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4488:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 717,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4513:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 756,
												"src": "4505:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 716,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4505:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4473:46:8"
									},
									"returnParameters": {
										"id": 719,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4529:0:8"
									},
									"scope": 972,
									"src": "4452:380:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 798,
										"nodeType": "Block",
										"src": "5279:219:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 769,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 762,
																"src": "5293:2:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 770,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5296:4:8",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "5293:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 771,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5301:6:8",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5293:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 772,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5311:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5293:19:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 787,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "5379:39:8",
														"subExpression": {
															"arguments": [
																{
																	"id": 783,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 762,
																	"src": "5402:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 784,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 764,
																	"src": "5406:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 785,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 766,
																	"src": "5413:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 781,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 760,
																	"src": "5380:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$229",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 782,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5386:15:8",
																"memberName": "transferAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 180,
																"src": "5380:21:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 786,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5380:38:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 796,
													"nodeType": "IfStatement",
													"src": "5375:117:8",
													"trueBody": {
														"id": 795,
														"nodeType": "Block",
														"src": "5420:72:8",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 791,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 760,
																					"src": "5474:5:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 790,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "5466:7:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 789,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "5466:7:8",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 792,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5466:14:8",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 788,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 575,
																		"src": "5441:24:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 793,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5441:40:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 794,
																"nodeType": "RevertStatement",
																"src": "5434:47:8"
															}
														]
													}
												},
												"id": 797,
												"nodeType": "IfStatement",
												"src": "5289:203:8",
												"trueBody": {
													"id": 780,
													"nodeType": "Block",
													"src": "5314:55:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 775,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 760,
																		"src": "5341:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 776,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 762,
																		"src": "5348:2:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 777,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 764,
																		"src": "5352:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 774,
																	"name": "safeTransfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 608,
																	"src": "5328:12:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$561_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 778,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5328:30:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 779,
															"nodeType": "ExpressionStatement",
															"src": "5328:30:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 757,
										"nodeType": "StructuredDocumentation",
										"src": "4838:333:8",
										"text": " @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."
									},
									"id": 799,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCallRelaxed",
									"nameLocation": "5185:22:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 767,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 760,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5217:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 799,
												"src": "5208:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$229",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 759,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 758,
														"name": "IERC1363",
														"nameLocations": [
															"5208:8:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 229,
														"src": "5208:8:8"
													},
													"referencedDeclaration": 229,
													"src": "5208:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$229",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 762,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5232:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 799,
												"src": "5224:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 761,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5224:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 764,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5244:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 799,
												"src": "5236:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 763,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5236:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 766,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5264:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 799,
												"src": "5251:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 765,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5251:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5207:62:8"
									},
									"returnParameters": {
										"id": 768,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5279:0:8"
									},
									"scope": 972,
									"src": "5176:322:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 845,
										"nodeType": "Block",
										"src": "6017:239:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 818,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 814,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 807,
																"src": "6031:2:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 815,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6034:4:8",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "6031:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 816,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6039:6:8",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "6031:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 817,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6049:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6031:19:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 834,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "6127:49:8",
														"subExpression": {
															"arguments": [
																{
																	"id": 829,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 805,
																	"src": "6154:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 830,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 807,
																	"src": "6160:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 831,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 809,
																	"src": "6164:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 832,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 811,
																	"src": "6171:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 827,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 803,
																	"src": "6128:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$229",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 828,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6134:19:8",
																"memberName": "transferFromAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 206,
																"src": "6128:25:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 833,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6128:48:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 843,
													"nodeType": "IfStatement",
													"src": "6123:127:8",
													"trueBody": {
														"id": 842,
														"nodeType": "Block",
														"src": "6178:72:8",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 838,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 803,
																					"src": "6232:5:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 837,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6224:7:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 836,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "6224:7:8",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 839,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6224:14:8",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 835,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 575,
																		"src": "6199:24:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 840,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6199:40:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 841,
																"nodeType": "RevertStatement",
																"src": "6192:47:8"
															}
														]
													}
												},
												"id": 844,
												"nodeType": "IfStatement",
												"src": "6027:223:8",
												"trueBody": {
													"id": 826,
													"nodeType": "Block",
													"src": "6052:65:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 820,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 803,
																		"src": "6083:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 821,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 805,
																		"src": "6090:4:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 822,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 807,
																		"src": "6096:2:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 823,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 809,
																		"src": "6100:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 819,
																	"name": "safeTransferFrom",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 635,
																	"src": "6066:16:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$561_$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,address,uint256)"
																	}
																},
																"id": 824,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6066:40:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 825,
															"nodeType": "ExpressionStatement",
															"src": "6066:40:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 800,
										"nodeType": "StructuredDocumentation",
										"src": "5504:341:8",
										"text": " @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."
									},
									"id": 846,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCallRelaxed",
									"nameLocation": "5859:26:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 812,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 803,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5904:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 846,
												"src": "5895:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$229",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 802,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 801,
														"name": "IERC1363",
														"nameLocations": [
															"5895:8:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 229,
														"src": "5895:8:8"
													},
													"referencedDeclaration": 229,
													"src": "5895:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$229",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 805,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5927:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 846,
												"src": "5919:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 804,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5919:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 807,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5949:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 846,
												"src": "5941:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 806,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5941:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 809,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5969:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 846,
												"src": "5961:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 808,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5961:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 811,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5997:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 846,
												"src": "5984:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 810,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5984:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5885:122:8"
									},
									"returnParameters": {
										"id": 813,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6017:0:8"
									},
									"scope": 972,
									"src": "5850:406:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 888,
										"nodeType": "Block",
										"src": "7023:218:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 863,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 859,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 852,
																"src": "7037:2:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 860,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7040:4:8",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "7037:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 861,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7045:6:8",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "7037:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 862,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7055:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7037:19:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 877,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "7123:38:8",
														"subExpression": {
															"arguments": [
																{
																	"id": 873,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 852,
																	"src": "7145:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 874,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 854,
																	"src": "7149:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 875,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 856,
																	"src": "7156:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 871,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 850,
																	"src": "7124:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$229",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 872,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7130:14:8",
																"memberName": "approveAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 228,
																"src": "7124:20:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 876,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7124:37:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 886,
													"nodeType": "IfStatement",
													"src": "7119:116:8",
													"trueBody": {
														"id": 885,
														"nodeType": "Block",
														"src": "7163:72:8",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 881,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 850,
																					"src": "7217:5:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 880,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "7209:7:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 879,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "7209:7:8",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 882,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7209:14:8",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 878,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 575,
																		"src": "7184:24:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 883,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7184:40:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 884,
																"nodeType": "RevertStatement",
																"src": "7177:47:8"
															}
														]
													}
												},
												"id": 887,
												"nodeType": "IfStatement",
												"src": "7033:202:8",
												"trueBody": {
													"id": 870,
													"nodeType": "Block",
													"src": "7058:55:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 865,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 850,
																		"src": "7085:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 866,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 852,
																		"src": "7092:2:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 867,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 854,
																		"src": "7096:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 864,
																	"name": "forceApprove",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 756,
																	"src": "7072:12:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$561_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 868,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7072:30:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 869,
															"nodeType": "ExpressionStatement",
															"src": "7072:30:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 847,
										"nodeType": "StructuredDocumentation",
										"src": "6262:654:8",
										"text": " @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n once without retrying, and relies on the returned value to be true.\n Reverts if the returned value is other than `true`."
									},
									"id": 889,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCallRelaxed",
									"nameLocation": "6930:21:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 857,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 850,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "6961:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 889,
												"src": "6952:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$229",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 849,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 848,
														"name": "IERC1363",
														"nameLocations": [
															"6952:8:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 229,
														"src": "6952:8:8"
													},
													"referencedDeclaration": 229,
													"src": "6952:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$229",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 852,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6976:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 889,
												"src": "6968:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 851,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6968:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 854,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6988:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 889,
												"src": "6980:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 853,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6980:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 856,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7008:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 889,
												"src": "6995:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 855,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6995:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6951:62:8"
									},
									"returnParameters": {
										"id": 858,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7023:0:8"
									},
									"scope": 972,
									"src": "6921:320:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 929,
										"nodeType": "Block",
										"src": "7808:650:8",
										"statements": [
											{
												"assignments": [
													899
												],
												"declarations": [
													{
														"constant": false,
														"id": 899,
														"mutability": "mutable",
														"name": "returnSize",
														"nameLocation": "7826:10:8",
														"nodeType": "VariableDeclaration",
														"scope": 929,
														"src": "7818:18:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 898,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7818:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 900,
												"nodeType": "VariableDeclarationStatement",
												"src": "7818:18:8"
											},
											{
												"assignments": [
													902
												],
												"declarations": [
													{
														"constant": false,
														"id": 902,
														"mutability": "mutable",
														"name": "returnValue",
														"nameLocation": "7854:11:8",
														"nodeType": "VariableDeclaration",
														"scope": 929,
														"src": "7846:19:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 901,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7846:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 903,
												"nodeType": "VariableDeclarationStatement",
												"src": "7846:19:8"
											},
											{
												"AST": {
													"nativeSrc": "7900:396:8",
													"nodeType": "YulBlock",
													"src": "7900:396:8",
													"statements": [
														{
															"nativeSrc": "7914:75:8",
															"nodeType": "YulVariableDeclaration",
															"src": "7914:75:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "7934:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "7934:3:8"
																		},
																		"nativeSrc": "7934:5:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7934:5:8"
																	},
																	{
																		"name": "token",
																		"nativeSrc": "7941:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "7941:5:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7948:1:8",
																		"nodeType": "YulLiteral",
																		"src": "7948:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "7955:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "7955:4:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7961:4:8",
																				"nodeType": "YulLiteral",
																				"src": "7961:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7951:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "7951:3:8"
																		},
																		"nativeSrc": "7951:15:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7951:15:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "7974:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "7974:4:8"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "7968:5:8",
																			"nodeType": "YulIdentifier",
																			"src": "7968:5:8"
																		},
																		"nativeSrc": "7968:11:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7968:11:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7981:1:8",
																		"nodeType": "YulLiteral",
																		"src": "7981:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7984:4:8",
																		"nodeType": "YulLiteral",
																		"src": "7984:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nativeSrc": "7929:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "7929:4:8"
																},
																"nativeSrc": "7929:60:8",
																"nodeType": "YulFunctionCall",
																"src": "7929:60:8"
															},
															"variables": [
																{
																	"name": "success",
																	"nativeSrc": "7918:7:8",
																	"nodeType": "YulTypedName",
																	"src": "7918:7:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8050:157:8",
																"nodeType": "YulBlock",
																"src": "8050:157:8",
																"statements": [
																	{
																		"nativeSrc": "8068:22:8",
																		"nodeType": "YulVariableDeclaration",
																		"src": "8068:22:8",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8085:4:8",
																					"nodeType": "YulLiteral",
																					"src": "8085:4:8",
																					"type": "",
																					"value": "0x40"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "8079:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "8079:5:8"
																			},
																			"nativeSrc": "8079:11:8",
																			"nodeType": "YulFunctionCall",
																			"src": "8079:11:8"
																		},
																		"variables": [
																			{
																				"name": "ptr",
																				"nativeSrc": "8072:3:8",
																				"nodeType": "YulTypedName",
																				"src": "8072:3:8",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nativeSrc": "8122:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "8122:3:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8127:1:8",
																					"nodeType": "YulLiteral",
																					"src": "8127:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nativeSrc": "8130:14:8",
																						"nodeType": "YulIdentifier",
																						"src": "8130:14:8"
																					},
																					"nativeSrc": "8130:16:8",
																					"nodeType": "YulFunctionCall",
																					"src": "8130:16:8"
																				}
																			],
																			"functionName": {
																				"name": "returndatacopy",
																				"nativeSrc": "8107:14:8",
																				"nodeType": "YulIdentifier",
																				"src": "8107:14:8"
																			},
																			"nativeSrc": "8107:40:8",
																			"nodeType": "YulFunctionCall",
																			"src": "8107:40:8"
																		},
																		"nativeSrc": "8107:40:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "8107:40:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nativeSrc": "8171:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "8171:3:8"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nativeSrc": "8176:14:8",
																						"nodeType": "YulIdentifier",
																						"src": "8176:14:8"
																					},
																					"nativeSrc": "8176:16:8",
																					"nodeType": "YulFunctionCall",
																					"src": "8176:16:8"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "8164:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "8164:6:8"
																			},
																			"nativeSrc": "8164:29:8",
																			"nodeType": "YulFunctionCall",
																			"src": "8164:29:8"
																		},
																		"nativeSrc": "8164:29:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "8164:29:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "success",
																		"nativeSrc": "8041:7:8",
																		"nodeType": "YulIdentifier",
																		"src": "8041:7:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8034:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "8034:6:8"
																},
																"nativeSrc": "8034:15:8",
																"nodeType": "YulFunctionCall",
																"src": "8034:15:8"
															},
															"nativeSrc": "8031:176:8",
															"nodeType": "YulIf",
															"src": "8031:176:8"
														},
														{
															"nativeSrc": "8220:30:8",
															"nodeType": "YulAssignment",
															"src": "8220:30:8",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nativeSrc": "8234:14:8",
																	"nodeType": "YulIdentifier",
																	"src": "8234:14:8"
																},
																"nativeSrc": "8234:16:8",
																"nodeType": "YulFunctionCall",
																"src": "8234:16:8"
															},
															"variableNames": [
																{
																	"name": "returnSize",
																	"nativeSrc": "8220:10:8",
																	"nodeType": "YulIdentifier",
																	"src": "8220:10:8"
																}
															]
														},
														{
															"nativeSrc": "8263:23:8",
															"nodeType": "YulAssignment",
															"src": "8263:23:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8284:1:8",
																		"nodeType": "YulLiteral",
																		"src": "8284:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "8278:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "8278:5:8"
																},
																"nativeSrc": "8278:8:8",
																"nodeType": "YulFunctionCall",
																"src": "8278:8:8"
															},
															"variableNames": [
																{
																	"name": "returnValue",
																	"nativeSrc": "8263:11:8",
																	"nodeType": "YulIdentifier",
																	"src": "8263:11:8"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 895,
														"isOffset": false,
														"isSlot": false,
														"src": "7955:4:8",
														"valueSize": 1
													},
													{
														"declaration": 895,
														"isOffset": false,
														"isSlot": false,
														"src": "7974:4:8",
														"valueSize": 1
													},
													{
														"declaration": 899,
														"isOffset": false,
														"isSlot": false,
														"src": "8220:10:8",
														"valueSize": 1
													},
													{
														"declaration": 902,
														"isOffset": false,
														"isSlot": false,
														"src": "8263:11:8",
														"valueSize": 1
													},
													{
														"declaration": 893,
														"isOffset": false,
														"isSlot": false,
														"src": "7941:5:8",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 904,
												"nodeType": "InlineAssembly",
												"src": "7875:421:8"
											},
											{
												"condition": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 907,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 905,
															"name": "returnSize",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 899,
															"src": "8310:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 906,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8324:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8310:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 918,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 916,
															"name": "returnValue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 902,
															"src": "8362:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "31",
															"id": 917,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8377:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "8362:16:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 919,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "8310:68:8",
													"trueExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 915,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 910,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 893,
																			"src": "8336:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$561",
																				"typeString": "contract IERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IERC20_$561",
																				"typeString": "contract IERC20"
																			}
																		],
																		"id": 909,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8328:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 908,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "8328:7:8",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 911,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8328:14:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 912,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "8343:4:8",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "8328:19:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 913,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8348:6:8",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "8328:26:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 914,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8358:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8328:31:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 928,
												"nodeType": "IfStatement",
												"src": "8306:146:8",
												"trueBody": {
													"id": 927,
													"nodeType": "Block",
													"src": "8380:72:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 923,
																				"name": "token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 893,
																				"src": "8434:5:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC20_$561",
																					"typeString": "contract IERC20"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_IERC20_$561",
																					"typeString": "contract IERC20"
																				}
																			],
																			"id": 922,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8426:7:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 921,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8426:7:8",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 924,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8426:14:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 920,
																	"name": "SafeERC20FailedOperation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 575,
																	"src": "8401:24:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 925,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8401:40:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 926,
															"nodeType": "RevertStatement",
															"src": "8394:47:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 890,
										"nodeType": "StructuredDocumentation",
										"src": "7247:486:8",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements."
									},
									"id": 930,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "7747:19:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 896,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 893,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "7774:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 930,
												"src": "7767:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$561",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 892,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 891,
														"name": "IERC20",
														"nameLocations": [
															"7767:6:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 561,
														"src": "7767:6:8"
													},
													"referencedDeclaration": 561,
													"src": "7767:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$561",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 895,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7794:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 930,
												"src": "7781:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 894,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7781:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7766:33:8"
									},
									"returnParameters": {
										"id": 897,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7808:0:8"
									},
									"scope": 972,
									"src": "7738:720:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 970,
										"nodeType": "Block",
										"src": "9049:391:8",
										"statements": [
											{
												"assignments": [
													942
												],
												"declarations": [
													{
														"constant": false,
														"id": 942,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "9064:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 970,
														"src": "9059:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 941,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "9059:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 943,
												"nodeType": "VariableDeclarationStatement",
												"src": "9059:12:8"
											},
											{
												"assignments": [
													945
												],
												"declarations": [
													{
														"constant": false,
														"id": 945,
														"mutability": "mutable",
														"name": "returnSize",
														"nameLocation": "9089:10:8",
														"nodeType": "VariableDeclaration",
														"scope": 970,
														"src": "9081:18:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 944,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9081:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 946,
												"nodeType": "VariableDeclarationStatement",
												"src": "9081:18:8"
											},
											{
												"assignments": [
													948
												],
												"declarations": [
													{
														"constant": false,
														"id": 948,
														"mutability": "mutable",
														"name": "returnValue",
														"nameLocation": "9117:11:8",
														"nodeType": "VariableDeclaration",
														"scope": 970,
														"src": "9109:19:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 947,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9109:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 949,
												"nodeType": "VariableDeclarationStatement",
												"src": "9109:19:8"
											},
											{
												"AST": {
													"nativeSrc": "9163:174:8",
													"nodeType": "YulBlock",
													"src": "9163:174:8",
													"statements": [
														{
															"nativeSrc": "9177:71:8",
															"nodeType": "YulAssignment",
															"src": "9177:71:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "9193:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "9193:3:8"
																		},
																		"nativeSrc": "9193:5:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9193:5:8"
																	},
																	{
																		"name": "token",
																		"nativeSrc": "9200:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "9200:5:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9207:1:8",
																		"nodeType": "YulLiteral",
																		"src": "9207:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "9214:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "9214:4:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9220:4:8",
																				"nodeType": "YulLiteral",
																				"src": "9220:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9210:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "9210:3:8"
																		},
																		"nativeSrc": "9210:15:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9210:15:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "9233:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "9233:4:8"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "9227:5:8",
																			"nodeType": "YulIdentifier",
																			"src": "9227:5:8"
																		},
																		"nativeSrc": "9227:11:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9227:11:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9240:1:8",
																		"nodeType": "YulLiteral",
																		"src": "9240:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9243:4:8",
																		"nodeType": "YulLiteral",
																		"src": "9243:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nativeSrc": "9188:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "9188:4:8"
																},
																"nativeSrc": "9188:60:8",
																"nodeType": "YulFunctionCall",
																"src": "9188:60:8"
															},
															"variableNames": [
																{
																	"name": "success",
																	"nativeSrc": "9177:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "9177:7:8"
																}
															]
														},
														{
															"nativeSrc": "9261:30:8",
															"nodeType": "YulAssignment",
															"src": "9261:30:8",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nativeSrc": "9275:14:8",
																	"nodeType": "YulIdentifier",
																	"src": "9275:14:8"
																},
																"nativeSrc": "9275:16:8",
																"nodeType": "YulFunctionCall",
																"src": "9275:16:8"
															},
															"variableNames": [
																{
																	"name": "returnSize",
																	"nativeSrc": "9261:10:8",
																	"nodeType": "YulIdentifier",
																	"src": "9261:10:8"
																}
															]
														},
														{
															"nativeSrc": "9304:23:8",
															"nodeType": "YulAssignment",
															"src": "9304:23:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9325:1:8",
																		"nodeType": "YulLiteral",
																		"src": "9325:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "9319:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "9319:5:8"
																},
																"nativeSrc": "9319:8:8",
																"nodeType": "YulFunctionCall",
																"src": "9319:8:8"
															},
															"variableNames": [
																{
																	"name": "returnValue",
																	"nativeSrc": "9304:11:8",
																	"nodeType": "YulIdentifier",
																	"src": "9304:11:8"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 936,
														"isOffset": false,
														"isSlot": false,
														"src": "9214:4:8",
														"valueSize": 1
													},
													{
														"declaration": 936,
														"isOffset": false,
														"isSlot": false,
														"src": "9233:4:8",
														"valueSize": 1
													},
													{
														"declaration": 945,
														"isOffset": false,
														"isSlot": false,
														"src": "9261:10:8",
														"valueSize": 1
													},
													{
														"declaration": 948,
														"isOffset": false,
														"isSlot": false,
														"src": "9304:11:8",
														"valueSize": 1
													},
													{
														"declaration": 942,
														"isOffset": false,
														"isSlot": false,
														"src": "9177:7:8",
														"valueSize": 1
													},
													{
														"declaration": 934,
														"isOffset": false,
														"isSlot": false,
														"src": "9200:5:8",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 950,
												"nodeType": "InlineAssembly",
												"src": "9138:199:8"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 968,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 951,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 942,
														"src": "9353:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"components": [
															{
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 954,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 952,
																		"name": "returnSize",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 945,
																		"src": "9365:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 953,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9379:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "9365:15:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 965,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 963,
																		"name": "returnValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 948,
																		"src": "9416:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 964,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9431:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "9416:16:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"id": 966,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "Conditional",
																"src": "9365:67:8",
																"trueExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 962,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"arguments": [
																					{
																						"id": 957,
																						"name": "token",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 934,
																						"src": "9391:5:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_IERC20_$561",
																							"typeString": "contract IERC20"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_contract$_IERC20_$561",
																							"typeString": "contract IERC20"
																						}
																					],
																					"id": 956,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "9383:7:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_address_$",
																						"typeString": "type(address)"
																					},
																					"typeName": {
																						"id": 955,
																						"name": "address",
																						"nodeType": "ElementaryTypeName",
																						"src": "9383:7:8",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 958,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "9383:14:8",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 959,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "9398:4:8",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "9383:19:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 960,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "9403:6:8",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "9383:26:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 961,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9412:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "9383:30:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 967,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9364:69:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "9353:80:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 940,
												"id": 969,
												"nodeType": "Return",
												"src": "9346:87:8"
											}
										]
									},
									"documentation": {
										"id": 931,
										"nodeType": "StructuredDocumentation",
										"src": "8464:491:8",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead."
									},
									"id": 971,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturnBool",
									"nameLocation": "8969:23:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 937,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 934,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "9000:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 971,
												"src": "8993:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$561",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 933,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 932,
														"name": "IERC20",
														"nameLocations": [
															"8993:6:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 561,
														"src": "8993:6:8"
													},
													"referencedDeclaration": 561,
													"src": "8993:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$561",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 936,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "9020:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 971,
												"src": "9007:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 935,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9007:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8992:33:8"
									},
									"returnParameters": {
										"id": 940,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 939,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 971,
												"src": "9043:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 938,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9043:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9042:6:8"
									},
									"scope": 972,
									"src": "8960:480:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 973,
							"src": "750:8692:8",
							"usedErrors": [
								575,
								584
							],
							"usedEvents": []
						}
					],
					"src": "115:9328:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							1231
						],
						"Errors": [
							1283
						]
					},
					"id": 1232,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 974,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:9"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Errors.sol",
							"file": "./Errors.sol",
							"id": 976,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1232,
							"sourceUnit": 1284,
							"src": "127:36:9",
							"symbolAliases": [
								{
									"foreign": {
										"id": 975,
										"name": "Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1283,
										"src": "135:6:9",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 977,
								"nodeType": "StructuredDocumentation",
								"src": "165:67:9",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 1231,
							"linearizedBaseContracts": [
								1231
							],
							"name": "Address",
							"nameLocation": "241:7:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 978,
										"nodeType": "StructuredDocumentation",
										"src": "255:75:9",
										"text": " @dev There's no code at `target` (it is not a contract)."
									},
									"errorSelector": "9996b315",
									"id": 982,
									"name": "AddressEmptyCode",
									"nameLocation": "341:16:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 981,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 980,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "366:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 982,
												"src": "358:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 979,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "358:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "357:16:9"
									},
									"src": "335:39:9"
								},
								{
									"body": {
										"id": 1028,
										"nodeType": "Block",
										"src": "1361:278:9",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 996,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 992,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1383:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$1231",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$1231",
																		"typeString": "library Address"
																	}
																],
																"id": 991,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1375:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 990,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1375:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 993,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1375:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 994,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1389:7:9",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "1375:21:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 995,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 987,
														"src": "1399:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1375:30:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1009,
												"nodeType": "IfStatement",
												"src": "1371:125:9",
												"trueBody": {
													"id": 1008,
													"nodeType": "Block",
													"src": "1407:89:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 1002,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967268,
																					"src": "1463:4:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_Address_$1231",
																						"typeString": "library Address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_Address_$1231",
																						"typeString": "library Address"
																					}
																				],
																				"id": 1001,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "1455:7:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 1000,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "1455:7:9",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1003,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1455:13:9",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 1004,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1469:7:9",
																		"memberName": "balance",
																		"nodeType": "MemberAccess",
																		"src": "1455:21:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1005,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 987,
																		"src": "1478:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 997,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1283,
																		"src": "1428:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$1283_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 999,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1435:19:9",
																	"memberName": "InsufficientBalance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1271,
																	"src": "1428:26:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256,uint256) pure returns (error)"
																	}
																},
																"id": 1006,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1428:57:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1007,
															"nodeType": "RevertStatement",
															"src": "1421:64:9"
														}
													]
												}
											},
											{
												"assignments": [
													1011,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1011,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1512:7:9",
														"nodeType": "VariableDeclaration",
														"scope": 1028,
														"src": "1507:12:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1010,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1507:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1018,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 1016,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1555:2:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 1012,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 985,
																"src": "1525:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 1013,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1535:4:9",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "1525:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1015,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1014,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 987,
																"src": "1547:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "1525:29:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1017,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1525:33:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1506:52:9"
											},
											{
												"condition": {
													"id": 1020,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "1572:8:9",
													"subExpression": {
														"id": 1019,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1011,
														"src": "1573:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1027,
												"nodeType": "IfStatement",
												"src": "1568:65:9",
												"trueBody": {
													"id": 1026,
													"nodeType": "Block",
													"src": "1582:51:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 1021,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1283,
																		"src": "1603:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$1283_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 1023,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1610:10:9",
																	"memberName": "FailedCall",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1274,
																	"src": "1603:17:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1024,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1603:19:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1025,
															"nodeType": "RevertStatement",
															"src": "1596:26:9"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 983,
										"nodeType": "StructuredDocumentation",
										"src": "380:905:9",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 1029,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "1299:9:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 988,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 985,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1325:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 1029,
												"src": "1309:25:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 984,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1309:15:9",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 987,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1344:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1029,
												"src": "1336:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 986,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1336:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1308:43:9"
									},
									"returnParameters": {
										"id": 989,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1361:0:9"
									},
									"scope": 1231,
									"src": "1290:349:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1045,
										"nodeType": "Block",
										"src": "2573:62:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1040,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1032,
															"src": "2612:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1041,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1034,
															"src": "2620:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 1042,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2626:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 1039,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1096,
														"src": "2590:21:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256) returns (bytes memory)"
														}
													},
													"id": 1043,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2590:38:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1038,
												"id": 1044,
												"nodeType": "Return",
												"src": "2583:45:9"
											}
										]
									},
									"documentation": {
										"id": 1030,
										"nodeType": "StructuredDocumentation",
										"src": "1645:834:9",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason or custom error, it is bubbled\n up by this function (like regular Solidity function calls). However, if\n the call reverted with no returned reason, this function reverts with a\n {Errors.FailedCall} error.\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert."
									},
									"id": 1046,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "2493:12:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1035,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1032,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "2514:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1046,
												"src": "2506:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1031,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2506:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1034,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2535:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1046,
												"src": "2522:17:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1033,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2522:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2505:35:9"
									},
									"returnParameters": {
										"id": 1038,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1037,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1046,
												"src": "2559:12:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1036,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2559:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2558:14:9"
									},
									"scope": 1231,
									"src": "2484:151:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1095,
										"nodeType": "Block",
										"src": "3072:294:9",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1064,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1060,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3094:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$1231",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$1231",
																		"typeString": "library Address"
																	}
																],
																"id": 1059,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3086:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1058,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3086:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 1061,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3086:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1062,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3100:7:9",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "3086:21:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1063,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1053,
														"src": "3110:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3086:29:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1077,
												"nodeType": "IfStatement",
												"src": "3082:123:9",
												"trueBody": {
													"id": 1076,
													"nodeType": "Block",
													"src": "3117:88:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 1070,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967268,
																					"src": "3173:4:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_Address_$1231",
																						"typeString": "library Address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_Address_$1231",
																						"typeString": "library Address"
																					}
																				],
																				"id": 1069,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "3165:7:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 1068,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "3165:7:9",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1071,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3165:13:9",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 1072,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3179:7:9",
																		"memberName": "balance",
																		"nodeType": "MemberAccess",
																		"src": "3165:21:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1073,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1053,
																		"src": "3188:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1065,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1283,
																		"src": "3138:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$1283_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 1067,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3145:19:9",
																	"memberName": "InsufficientBalance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1271,
																	"src": "3138:26:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256,uint256) pure returns (error)"
																	}
																},
																"id": 1074,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3138:56:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1075,
															"nodeType": "RevertStatement",
															"src": "3131:63:9"
														}
													]
												}
											},
											{
												"assignments": [
													1079,
													1081
												],
												"declarations": [
													{
														"constant": false,
														"id": 1079,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3220:7:9",
														"nodeType": "VariableDeclaration",
														"scope": 1095,
														"src": "3215:12:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1078,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3215:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1081,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3242:10:9",
														"nodeType": "VariableDeclaration",
														"scope": 1095,
														"src": "3229:23:9",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1080,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3229:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1088,
												"initialValue": {
													"arguments": [
														{
															"id": 1086,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1051,
															"src": "3282:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 1082,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1049,
																"src": "3256:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1083,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3263:4:9",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "3256:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1085,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1084,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1053,
																"src": "3275:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "3256:25:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1087,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3256:31:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3214:73:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1090,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1049,
															"src": "3331:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1091,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1079,
															"src": "3339:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1092,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1081,
															"src": "3348:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1089,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1188,
														"src": "3304:26:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 1093,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3304:55:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1057,
												"id": 1094,
												"nodeType": "Return",
												"src": "3297:62:9"
											}
										]
									},
									"documentation": {
										"id": 1047,
										"nodeType": "StructuredDocumentation",
										"src": "2641:313:9",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`."
									},
									"id": 1096,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "2968:21:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1054,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1049,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "2998:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1096,
												"src": "2990:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1048,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2990:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1051,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3019:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1096,
												"src": "3006:17:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1050,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3006:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1053,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3033:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1096,
												"src": "3025:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1052,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3025:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2989:50:9"
									},
									"returnParameters": {
										"id": 1057,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1056,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1096,
												"src": "3058:12:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1055,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3058:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3057:14:9"
									},
									"scope": 1231,
									"src": "2959:407:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1121,
										"nodeType": "Block",
										"src": "3605:154:9",
										"statements": [
											{
												"assignments": [
													1107,
													1109
												],
												"declarations": [
													{
														"constant": false,
														"id": 1107,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3621:7:9",
														"nodeType": "VariableDeclaration",
														"scope": 1121,
														"src": "3616:12:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1106,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3616:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1109,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3643:10:9",
														"nodeType": "VariableDeclaration",
														"scope": 1121,
														"src": "3630:23:9",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1108,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3630:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1114,
												"initialValue": {
													"arguments": [
														{
															"id": 1112,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1101,
															"src": "3675:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1110,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1099,
															"src": "3657:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1111,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3664:10:9",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "3657:17:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 1113,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3657:23:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3615:65:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1116,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1099,
															"src": "3724:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1117,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1107,
															"src": "3732:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1118,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1109,
															"src": "3741:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1115,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1188,
														"src": "3697:26:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 1119,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3697:55:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1105,
												"id": 1120,
												"nodeType": "Return",
												"src": "3690:62:9"
											}
										]
									},
									"documentation": {
										"id": 1097,
										"nodeType": "StructuredDocumentation",
										"src": "3372:128:9",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call."
									},
									"id": 1122,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "3514:18:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1099,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3541:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1122,
												"src": "3533:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1098,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3533:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1101,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3562:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1122,
												"src": "3549:17:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1100,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3549:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3532:35:9"
									},
									"returnParameters": {
										"id": 1105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1104,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1122,
												"src": "3591:12:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1103,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3591:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3590:14:9"
									},
									"scope": 1231,
									"src": "3505:254:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1147,
										"nodeType": "Block",
										"src": "3997:156:9",
										"statements": [
											{
												"assignments": [
													1133,
													1135
												],
												"declarations": [
													{
														"constant": false,
														"id": 1133,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "4013:7:9",
														"nodeType": "VariableDeclaration",
														"scope": 1147,
														"src": "4008:12:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1132,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4008:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1135,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4035:10:9",
														"nodeType": "VariableDeclaration",
														"scope": 1147,
														"src": "4022:23:9",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1134,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4022:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1140,
												"initialValue": {
													"arguments": [
														{
															"id": 1138,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1127,
															"src": "4069:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1136,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1125,
															"src": "4049:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1137,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4056:12:9",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "4049:19:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 1139,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4049:25:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4007:67:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1142,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1125,
															"src": "4118:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1143,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1133,
															"src": "4126:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1144,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1135,
															"src": "4135:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1141,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1188,
														"src": "4091:26:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 1145,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4091:55:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1131,
												"id": 1146,
												"nodeType": "Return",
												"src": "4084:62:9"
											}
										]
									},
									"documentation": {
										"id": 1123,
										"nodeType": "StructuredDocumentation",
										"src": "3765:130:9",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call."
									},
									"id": 1148,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "3909:20:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1128,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1125,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3938:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1148,
												"src": "3930:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1124,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3930:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1127,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3959:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1148,
												"src": "3946:17:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1126,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3946:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3929:35:9"
									},
									"returnParameters": {
										"id": 1131,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1130,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1148,
												"src": "3983:12:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1129,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3983:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3982:14:9"
									},
									"scope": 1231,
									"src": "3900:253:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1187,
										"nodeType": "Block",
										"src": "4579:424:9",
										"statements": [
											{
												"condition": {
													"id": 1161,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4593:8:9",
													"subExpression": {
														"id": 1160,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1153,
														"src": "4594:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1185,
													"nodeType": "Block",
													"src": "4653:344:9",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1176,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1170,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 1167,
																			"name": "returndata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1155,
																			"src": "4841:10:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 1168,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4852:6:9",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "4841:17:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1169,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4862:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "4841:22:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1175,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"id": 1171,
																				"name": "target",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1151,
																				"src": "4867:6:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 1172,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "4874:4:9",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "4867:11:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 1173,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4879:6:9",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "4867:18:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1174,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4889:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "4867:23:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "4841:49:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1182,
															"nodeType": "IfStatement",
															"src": "4837:119:9",
															"trueBody": {
																"id": 1181,
																"nodeType": "Block",
																"src": "4892:64:9",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1178,
																					"name": "target",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1151,
																					"src": "4934:6:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1177,
																				"name": "AddressEmptyCode",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 982,
																				"src": "4917:16:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																					"typeString": "function (address) pure returns (error)"
																				}
																			},
																			"id": 1179,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4917:24:9",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 1180,
																		"nodeType": "RevertStatement",
																		"src": "4910:31:9"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 1183,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1155,
																"src": "4976:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1159,
															"id": 1184,
															"nodeType": "Return",
															"src": "4969:17:9"
														}
													]
												},
												"id": 1186,
												"nodeType": "IfStatement",
												"src": "4589:408:9",
												"trueBody": {
													"id": 1166,
													"nodeType": "Block",
													"src": "4603:44:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1163,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1155,
																		"src": "4625:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 1162,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1230,
																	"src": "4617:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 1164,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4617:19:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1165,
															"nodeType": "ExpressionStatement",
															"src": "4617:19:9"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1149,
										"nodeType": "StructuredDocumentation",
										"src": "4159:257:9",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n was not a contract or bubbling up the revert reason (falling back to {Errors.FailedCall}) in case\n of an unsuccessful call."
									},
									"id": 1188,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "4430:26:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1156,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1151,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4474:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1188,
												"src": "4466:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1150,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4466:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1153,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "4495:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1188,
												"src": "4490:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1152,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4490:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1155,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "4525:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 1188,
												"src": "4512:23:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1154,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4512:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4456:85:9"
									},
									"returnParameters": {
										"id": 1159,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1158,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1188,
												"src": "4565:12:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1157,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4565:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4564:14:9"
									},
									"scope": 1231,
									"src": "4421:582:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1209,
										"nodeType": "Block",
										"src": "5307:122:9",
										"statements": [
											{
												"condition": {
													"id": 1199,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "5321:8:9",
													"subExpression": {
														"id": 1198,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1191,
														"src": "5322:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1207,
													"nodeType": "Block",
													"src": "5381:42:9",
													"statements": [
														{
															"expression": {
																"id": 1205,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1193,
																"src": "5402:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1197,
															"id": 1206,
															"nodeType": "Return",
															"src": "5395:17:9"
														}
													]
												},
												"id": 1208,
												"nodeType": "IfStatement",
												"src": "5317:106:9",
												"trueBody": {
													"id": 1204,
													"nodeType": "Block",
													"src": "5331:44:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1201,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1193,
																		"src": "5353:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 1200,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1230,
																	"src": "5345:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 1202,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5345:19:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1203,
															"nodeType": "ExpressionStatement",
															"src": "5345:19:9"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1189,
										"nodeType": "StructuredDocumentation",
										"src": "5009:191:9",
										"text": " @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n revert reason or with a default {Errors.FailedCall} error."
									},
									"id": 1210,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "5214:16:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1191,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "5236:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1210,
												"src": "5231:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1190,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5231:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1193,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5258:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 1210,
												"src": "5245:23:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1192,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5245:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5230:39:9"
									},
									"returnParameters": {
										"id": 1197,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1196,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1210,
												"src": "5293:12:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1195,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5293:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5292:14:9"
									},
									"scope": 1231,
									"src": "5205:224:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1229,
										"nodeType": "Block",
										"src": "5598:432:9",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1219,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1216,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1213,
															"src": "5674:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1217,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5685:6:9",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5674:17:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1218,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5694:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5674:21:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1227,
													"nodeType": "Block",
													"src": "5973:51:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 1222,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1283,
																		"src": "5994:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$1283_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 1224,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6001:10:9",
																	"memberName": "FailedCall",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1274,
																	"src": "5994:17:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1225,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5994:19:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1226,
															"nodeType": "RevertStatement",
															"src": "5987:26:9"
														}
													]
												},
												"id": 1228,
												"nodeType": "IfStatement",
												"src": "5670:354:9",
												"trueBody": {
													"id": 1221,
													"nodeType": "Block",
													"src": "5697:270:9",
													"statements": [
														{
															"AST": {
																"nativeSrc": "5824:133:9",
																"nodeType": "YulBlock",
																"src": "5824:133:9",
																"statements": [
																	{
																		"nativeSrc": "5842:40:9",
																		"nodeType": "YulVariableDeclaration",
																		"src": "5842:40:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nativeSrc": "5871:10:9",
																					"nodeType": "YulIdentifier",
																					"src": "5871:10:9"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "5865:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "5865:5:9"
																			},
																			"nativeSrc": "5865:17:9",
																			"nodeType": "YulFunctionCall",
																			"src": "5865:17:9"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nativeSrc": "5846:15:9",
																				"nodeType": "YulTypedName",
																				"src": "5846:15:9",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "5910:2:9",
																							"nodeType": "YulLiteral",
																							"src": "5910:2:9",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nativeSrc": "5914:10:9",
																							"nodeType": "YulIdentifier",
																							"src": "5914:10:9"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "5906:3:9",
																						"nodeType": "YulIdentifier",
																						"src": "5906:3:9"
																					},
																					"nativeSrc": "5906:19:9",
																					"nodeType": "YulFunctionCall",
																					"src": "5906:19:9"
																				},
																				{
																					"name": "returndata_size",
																					"nativeSrc": "5927:15:9",
																					"nodeType": "YulIdentifier",
																					"src": "5927:15:9"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5899:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "5899:6:9"
																			},
																			"nativeSrc": "5899:44:9",
																			"nodeType": "YulFunctionCall",
																			"src": "5899:44:9"
																		},
																		"nativeSrc": "5899:44:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "5899:44:9"
																	}
																]
															},
															"evmVersion": "cancun",
															"externalReferences": [
																{
																	"declaration": 1213,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "5871:10:9",
																	"valueSize": 1
																},
																{
																	"declaration": 1213,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "5914:10:9",
																	"valueSize": 1
																}
															],
															"flags": [
																"memory-safe"
															],
															"id": 1220,
															"nodeType": "InlineAssembly",
															"src": "5799:158:9"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1211,
										"nodeType": "StructuredDocumentation",
										"src": "5435:103:9",
										"text": " @dev Reverts with returndata if present. Otherwise reverts with {Errors.FailedCall}."
									},
									"id": 1230,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "5552:7:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1213,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5573:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 1230,
												"src": "5560:23:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1212,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5560:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5559:25:9"
									},
									"returnParameters": {
										"id": 1215,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5598:0:9"
									},
									"scope": 1231,
									"src": "5543:487:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1232,
							"src": "233:5799:9",
							"usedErrors": [
								982
							],
							"usedEvents": []
						}
					],
					"src": "101:5932:9"
				},
				"id": 9
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1261
						]
					},
					"id": 1262,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1233,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:10"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1234,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:10",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1261,
							"linearizedBaseContracts": [
								1261
							],
							"name": "Context",
							"nameLocation": "642:7:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1242,
										"nodeType": "Block",
										"src": "718:34:10",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1239,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:10",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1240,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:10",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:10",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1238,
												"id": 1241,
												"nodeType": "Return",
												"src": "728:17:10"
											}
										]
									},
									"id": 1243,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1235,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:10"
									},
									"returnParameters": {
										"id": 1238,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1237,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1243,
												"src": "709:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1236,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:10"
									},
									"scope": 1261,
									"src": "656:96:10",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1251,
										"nodeType": "Block",
										"src": "825:32:10",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1248,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:10",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1249,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:10",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1247,
												"id": 1250,
												"nodeType": "Return",
												"src": "835:15:10"
											}
										]
									},
									"id": 1252,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1244,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:10"
									},
									"returnParameters": {
										"id": 1247,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1246,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1252,
												"src": "809:14:10",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1245,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:10"
									},
									"scope": 1261,
									"src": "758:99:10",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1259,
										"nodeType": "Block",
										"src": "935:25:10",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 1257,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:10",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1256,
												"id": 1258,
												"nodeType": "Return",
												"src": "945:8:10"
											}
										]
									},
									"id": 1260,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1253,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:10"
									},
									"returnParameters": {
										"id": 1256,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1255,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1260,
												"src": "926:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1254,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:10"
									},
									"scope": 1261,
									"src": "863:97:10",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1262,
							"src": "624:338:10",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:10"
				},
				"id": 10
			},
			"@openzeppelin/contracts/utils/Errors.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Errors.sol",
					"exportedSymbols": {
						"Errors": [
							1283
						]
					},
					"id": 1284,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1263,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "100:24:11"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Errors",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1264,
								"nodeType": "StructuredDocumentation",
								"src": "126:284:11",
								"text": " @dev Collection of common custom errors used in multiple contracts\n IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library.\n It is recommended to avoid relying on the error API for critical functionality.\n _Available since v5.1._"
							},
							"fullyImplemented": true,
							"id": 1283,
							"linearizedBaseContracts": [
								1283
							],
							"name": "Errors",
							"nameLocation": "419:6:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1265,
										"nodeType": "StructuredDocumentation",
										"src": "432:94:11",
										"text": " @dev The ETH balance of the account is not enough to perform the operation."
									},
									"errorSelector": "cf479181",
									"id": 1271,
									"name": "InsufficientBalance",
									"nameLocation": "537:19:11",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1267,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "565:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1271,
												"src": "557:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1266,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "557:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1269,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "582:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1271,
												"src": "574:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1268,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "574:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "556:33:11"
									},
									"src": "531:59:11"
								},
								{
									"documentation": {
										"id": 1272,
										"nodeType": "StructuredDocumentation",
										"src": "596:89:11",
										"text": " @dev A call to an address target failed. The target may have reverted."
									},
									"errorSelector": "d6bda275",
									"id": 1274,
									"name": "FailedCall",
									"nameLocation": "696:10:11",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1273,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "706:2:11"
									},
									"src": "690:19:11"
								},
								{
									"documentation": {
										"id": 1275,
										"nodeType": "StructuredDocumentation",
										"src": "715:46:11",
										"text": " @dev The deployment failed."
									},
									"errorSelector": "b06ebf3d",
									"id": 1277,
									"name": "FailedDeployment",
									"nameLocation": "772:16:11",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1276,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "788:2:11"
									},
									"src": "766:25:11"
								},
								{
									"documentation": {
										"id": 1278,
										"nodeType": "StructuredDocumentation",
										"src": "797:58:11",
										"text": " @dev A necessary precompile is missing."
									},
									"errorSelector": "42b01bce",
									"id": 1282,
									"name": "MissingPrecompile",
									"nameLocation": "866:17:11",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1281,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1280,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1282,
												"src": "884:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1279,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "884:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "883:9:11"
									},
									"src": "860:33:11"
								}
							],
							"scope": 1284,
							"src": "411:484:11",
							"usedErrors": [
								1271,
								1274,
								1277,
								1282
							],
							"usedEvents": []
						}
					],
					"src": "100:796:11"
				},
				"id": 11
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							1307
						],
						"IERC165": [
							1319
						]
					},
					"id": 1308,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1285,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "114:24:12"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 1287,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1308,
							"sourceUnit": 1320,
							"src": "140:38:12",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1286,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1319,
										"src": "148:7:12",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1289,
										"name": "IERC165",
										"nameLocations": [
											"688:7:12"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1319,
										"src": "688:7:12"
									},
									"id": 1290,
									"nodeType": "InheritanceSpecifier",
									"src": "688:7:12"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1288,
								"nodeType": "StructuredDocumentation",
								"src": "180:479:12",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 1307,
							"linearizedBaseContracts": [
								1307,
								1319
							],
							"name": "ERC165",
							"nameLocation": "678:6:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										1318
									],
									"body": {
										"id": 1305,
										"nodeType": "Block",
										"src": "845:64:12",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 1303,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1298,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1293,
														"src": "862:11:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1300,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1319,
																	"src": "882:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1319_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1319_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 1299,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "877:4:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1301,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "877:13:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$1319",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 1302,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "891:11:12",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "877:25:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "862:40:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1297,
												"id": 1304,
												"nodeType": "Return",
												"src": "855:47:12"
											}
										]
									},
									"documentation": {
										"id": 1291,
										"nodeType": "StructuredDocumentation",
										"src": "702:56:12",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 1306,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "772:17:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1294,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1293,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "797:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 1306,
												"src": "790:18:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1292,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "790:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "789:20:12"
									},
									"returnParameters": {
										"id": 1297,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1296,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1306,
												"src": "839:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1295,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "839:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "838:6:12"
									},
									"scope": 1307,
									"src": "763:146:12",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1308,
							"src": "660:251:12",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "114:798:12"
				},
				"id": 12
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1319
						]
					},
					"id": 1320,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1309,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:13"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1310,
								"nodeType": "StructuredDocumentation",
								"src": "141:280:13",
								"text": " @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 1319,
							"linearizedBaseContracts": [
								1319
							],
							"name": "IERC165",
							"nameLocation": "432:7:13",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1311,
										"nodeType": "StructuredDocumentation",
										"src": "446:340:13",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1318,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "800:17:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1314,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1313,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "825:11:13",
												"nodeType": "VariableDeclaration",
												"scope": 1318,
												"src": "818:18:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1312,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "818:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "817:20:13"
									},
									"returnParameters": {
										"id": 1317,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1316,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1318,
												"src": "861:4:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1315,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "861:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "860:6:13"
									},
									"scope": 1319,
									"src": "791:76:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1320,
							"src": "422:447:13",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:755:13"
				},
				"id": 13
			},
			"SnowmenSales.sol": {
				"ast": {
					"absolutePath": "SnowmenSales.sol",
					"exportedSymbols": {
						"Address": [
							1231
						],
						"Context": [
							1261
						],
						"ERC1155Holder": [
							483
						],
						"ERC165": [
							1307
						],
						"IERC1155": [
							360
						],
						"IERC1155Receiver": [
							402
						],
						"IERC1363": [
							229
						],
						"IERC165": [
							1319
						],
						"IERC20": [
							561
						],
						"Ownable": [
							147
						],
						"SafeERC20": [
							972
						],
						"SnowmenSales": [
							1469
						]
					},
					"id": 1470,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1321,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:14"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 1322,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1470,
							"sourceUnit": 148,
							"src": "61:52:14",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
							"file": "@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
							"id": 1323,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1470,
							"sourceUnit": 361,
							"src": "115:60:14",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol",
							"file": "@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol",
							"id": 1324,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1470,
							"sourceUnit": 484,
							"src": "177:71:14",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"id": 1325,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1470,
							"sourceUnit": 973,
							"src": "250:65:14",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1326,
										"name": "Ownable",
										"nameLocations": [
											"344:7:14"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "344:7:14"
									},
									"id": 1327,
									"nodeType": "InheritanceSpecifier",
									"src": "344:7:14"
								},
								{
									"baseName": {
										"id": 1328,
										"name": "ERC1155Holder",
										"nameLocations": [
											"353:13:14"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 483,
										"src": "353:13:14"
									},
									"id": 1329,
									"nodeType": "InheritanceSpecifier",
									"src": "353:13:14"
								}
							],
							"canonicalName": "SnowmenSales",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1469,
							"linearizedBaseContracts": [
								1469,
								483,
								402,
								1307,
								1319,
								147,
								1261
							],
							"name": "SnowmenSales",
							"nameLocation": "328:12:14",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1333,
									"libraryName": {
										"id": 1330,
										"name": "SafeERC20",
										"nameLocations": [
											"380:9:14"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 972,
										"src": "380:9:14"
									},
									"nodeType": "UsingForDirective",
									"src": "374:27:14",
									"typeName": {
										"id": 1332,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1331,
											"name": "IERC20",
											"nameLocations": [
												"394:6:14"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 561,
											"src": "394:6:14"
										},
										"referencedDeclaration": 561,
										"src": "394:6:14",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$561",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "2c1449e1",
									"id": 1336,
									"mutability": "mutable",
									"name": "snowmenToken",
									"nameLocation": "527:12:14",
									"nodeType": "VariableDeclaration",
									"scope": 1469,
									"src": "513:26:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$561",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 1335,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1334,
											"name": "IERC20",
											"nameLocations": [
												"513:6:14"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 561,
											"src": "513:6:14"
										},
										"referencedDeclaration": 561,
										"src": "513:6:14",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$561",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "ea75aa8f",
									"id": 1339,
									"mutability": "mutable",
									"name": "snowmenGame",
									"nameLocation": "605:11:14",
									"nodeType": "VariableDeclaration",
									"scope": 1469,
									"src": "589:27:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC1155_$360",
										"typeString": "contract IERC1155"
									},
									"typeName": {
										"id": 1338,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1337,
											"name": "IERC1155",
											"nameLocations": [
												"589:8:14"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 360,
											"src": "589:8:14"
										},
										"referencedDeclaration": 360,
										"src": "589:8:14",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC1155_$360",
											"typeString": "contract IERC1155"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "d4ddce8a",
									"id": 1343,
									"mutability": "mutable",
									"name": "tokenPrice",
									"nameLocation": "734:10:14",
									"nodeType": "VariableDeclaration",
									"scope": 1469,
									"src": "699:45:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
										"typeString": "mapping(uint256 => uint256)"
									},
									"typeName": {
										"id": 1342,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1340,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "707:7:14",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "699:27:14",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
											"typeString": "mapping(uint256 => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1341,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "718:7:14",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "18e75bb8c091a6448c12a2023f055b2714c151b941a91df8b9938788769ffe13",
									"id": 1351,
									"name": "SetPrice",
									"nameLocation": "888:8:14",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1345,
												"indexed": false,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "905:7:14",
												"nodeType": "VariableDeclaration",
												"scope": 1351,
												"src": "897:15:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1344,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "897:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1347,
												"indexed": false,
												"mutability": "mutable",
												"name": "price",
												"nameLocation": "922:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 1351,
												"src": "914:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1346,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "914:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1349,
												"indexed": false,
												"mutability": "mutable",
												"name": "timestamp",
												"nameLocation": "937:9:14",
												"nodeType": "VariableDeclaration",
												"scope": 1351,
												"src": "929:17:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1348,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "929:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "896:51:14"
									},
									"src": "882:66:14"
								},
								{
									"anonymous": false,
									"eventSelector": "1650d49bac940346e34bac1dde642598b57ba618d7a0c005a91257851cae2c24",
									"id": 1361,
									"name": "onERC1155ReceivedExecuted",
									"nameLocation": "966:25:14",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1360,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1353,
												"indexed": false,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "1010:8:14",
												"nodeType": "VariableDeclaration",
												"scope": 1361,
												"src": "1002:16:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1352,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1002:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1355,
												"indexed": false,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1037:4:14",
												"nodeType": "VariableDeclaration",
												"scope": 1361,
												"src": "1029:12:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1354,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1029:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1357,
												"indexed": false,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1060:2:14",
												"nodeType": "VariableDeclaration",
												"scope": 1361,
												"src": "1052:10:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1356,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1052:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1359,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1081:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 1361,
												"src": "1073:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1358,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "991:102:14"
									},
									"src": "960:134:14"
								},
								{
									"body": {
										"id": 1384,
										"nodeType": "Block",
										"src": "1181:340:14",
										"statements": [
											{
												"expression": {
													"id": 1376,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1372,
														"name": "snowmenGame",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1339,
														"src": "1429:11:14",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC1155_$360",
															"typeString": "contract IERC1155"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1374,
																"name": "snowmenErc1155",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1363,
																"src": "1452:14:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1373,
															"name": "IERC1155",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 360,
															"src": "1443:8:14",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC1155_$360_$",
																"typeString": "type(contract IERC1155)"
															}
														},
														"id": 1375,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1443:24:14",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC1155_$360",
															"typeString": "contract IERC1155"
														}
													},
													"src": "1429:38:14",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1155_$360",
														"typeString": "contract IERC1155"
													}
												},
												"id": 1377,
												"nodeType": "ExpressionStatement",
												"src": "1429:38:14"
											},
											{
												"expression": {
													"id": 1382,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1378,
														"name": "snowmenToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1336,
														"src": "1478:12:14",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$561",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1380,
																"name": "snowmenErc20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1365,
																"src": "1500:12:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1379,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 561,
															"src": "1493:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$561_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 1381,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1493:20:14",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$561",
															"typeString": "contract IERC20"
														}
													},
													"src": "1478:35:14",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$561",
														"typeString": "contract IERC20"
													}
												},
												"id": 1383,
												"nodeType": "ExpressionStatement",
												"src": "1478:35:14"
											}
										]
									},
									"id": 1385,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1368,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1243,
														"src": "1168:10:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 1369,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1168:12:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1370,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1367,
												"name": "Ownable",
												"nameLocations": [
													"1160:7:14"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "1160:7:14"
											},
											"nodeType": "ModifierInvocation",
											"src": "1160:21:14"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1366,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1363,
												"mutability": "mutable",
												"name": "snowmenErc1155",
												"nameLocation": "1122:14:14",
												"nodeType": "VariableDeclaration",
												"scope": 1385,
												"src": "1114:22:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1362,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1114:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1365,
												"mutability": "mutable",
												"name": "snowmenErc20",
												"nameLocation": "1146:12:14",
												"nodeType": "VariableDeclaration",
												"scope": 1385,
												"src": "1138:20:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1364,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1138:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1113:46:14"
									},
									"returnParameters": {
										"id": 1371,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1181:0:14"
									},
									"scope": 1469,
									"src": "1102:419:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										459
									],
									"body": {
										"id": 1430,
										"nodeType": "Block",
										"src": "1948:1509:14",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1408,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1402,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2407:3:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1403,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2411:6:14",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2407:10:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 1406,
																		"name": "snowmenGame",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1339,
																		"src": "2429:11:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1155_$360",
																			"typeString": "contract IERC1155"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1155_$360",
																			"typeString": "contract IERC1155"
																		}
																	],
																	"id": 1405,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2421:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1404,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2421:7:14",
																		"typeDescriptions": {}
																	}
																},
																"id": 1407,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2421:20:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2407:34:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "696e636f72726563742073656e646572",
															"id": 1409,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2443:18:14",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_58b0c597f29dac8001964c5c8f94457e37567080fbc7198aa316b42b6379f65b",
																"typeString": "literal_string \"incorrect sender\""
															},
															"value": "incorrect sender"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_58b0c597f29dac8001964c5c8f94457e37567080fbc7198aa316b42b6379f65b",
																"typeString": "literal_string \"incorrect sender\""
															}
														],
														"id": 1401,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2399:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1410,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2399:63:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1411,
												"nodeType": "ExpressionStatement",
												"src": "2399:63:14"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1415,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1413,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1393,
																"src": "2694:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 1414,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2703:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2694:10:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "7175616e74697479206973207a65726f",
															"id": 1416,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2706:18:14",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4c1122224259dd0b02fff95af769f256a8450d91cf0444f02e6c136dce106f44",
																"typeString": "literal_string \"quantity is zero\""
															},
															"value": "quantity is zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4c1122224259dd0b02fff95af769f256a8450d91cf0444f02e6c136dce106f44",
																"typeString": "literal_string \"quantity is zero\""
															}
														],
														"id": 1412,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2686:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1417,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2686:39:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1418,
												"nodeType": "ExpressionStatement",
												"src": "2686:39:14"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1420,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1387,
															"src": "2866:8:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1421,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1389,
															"src": "2876:4:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1422,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1391,
															"src": "2882:2:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1423,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1393,
															"src": "2886:5:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1419,
														"name": "onERC1155ReceivedExecuted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1361,
														"src": "2840:25:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1424,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2840:52:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1425,
												"nodeType": "EmitStatement",
												"src": "2835:57:14"
											},
											{
												"expression": {
													"expression": {
														"expression": {
															"id": 1426,
															"name": "this",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967268,
															"src": "3128:4:14",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_SnowmenSales_$1469",
																"typeString": "contract SnowmenSales"
															}
														},
														"id": 1427,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3133:17:14",
														"memberName": "onERC1155Received",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1431,
														"src": "3128:22:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
															"typeString": "function (address,address,uint256,uint256,bytes memory) external returns (bytes4)"
														}
													},
													"id": 1428,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberLocation": "3151:8:14",
													"memberName": "selector",
													"nodeType": "MemberAccess",
													"src": "3128:31:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"functionReturnParameters": 1400,
												"id": 1429,
												"nodeType": "Return",
												"src": "3121:38:14"
											}
										]
									},
									"functionSelector": "f23a6e61",
									"id": 1431,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "onERC1155Received",
									"nameLocation": "1538:17:14",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1397,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1922:8:14"
									},
									"parameters": {
										"id": 1396,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1387,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "1574:8:14",
												"nodeType": "VariableDeclaration",
												"scope": 1431,
												"src": "1566:16:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1386,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1566:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1389,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1683:4:14",
												"nodeType": "VariableDeclaration",
												"scope": 1431,
												"src": "1675:12:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1388,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1675:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1391,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1746:2:14",
												"nodeType": "VariableDeclaration",
												"scope": 1431,
												"src": "1738:10:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1390,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1738:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1393,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1802:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 1431,
												"src": "1794:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1392,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1794:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1395,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1431,
												"src": "1848:12:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1394,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1848:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1555:359:14"
									},
									"returnParameters": {
										"id": 1400,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1399,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1431,
												"src": "1940:6:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1398,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1940:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1939:8:14"
									},
									"scope": 1469,
									"src": "1529:1928:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1467,
										"nodeType": "Block",
										"src": "3533:247:14",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1443,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1441,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1433,
																"src": "3552:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 1442,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3563:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3552:12:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "746f6b656e4964206973207a65726f",
															"id": 1444,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3566:17:14",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_240c2a2420364d9260a9d9de5c0bdeaef40ae9271ae29d4c186edd83349afc50",
																"typeString": "literal_string \"tokenId is zero\""
															},
															"value": "tokenId is zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_240c2a2420364d9260a9d9de5c0bdeaef40ae9271ae29d4c186edd83349afc50",
																"typeString": "literal_string \"tokenId is zero\""
															}
														],
														"id": 1440,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3544:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1445,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3544:40:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1446,
												"nodeType": "ExpressionStatement",
												"src": "3544:40:14"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1450,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1448,
																"name": "price",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1435,
																"src": "3603:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 1449,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3612:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3603:10:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "7072696365206973207a65726f",
															"id": 1451,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3615:15:14",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ee8b0754ac04b271c493c71118fe013f51611851aeb777bded224dc19d7cd48c",
																"typeString": "literal_string \"price is zero\""
															},
															"value": "price is zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ee8b0754ac04b271c493c71118fe013f51611851aeb777bded224dc19d7cd48c",
																"typeString": "literal_string \"price is zero\""
															}
														],
														"id": 1447,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3595:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1452,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3595:36:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1453,
												"nodeType": "ExpressionStatement",
												"src": "3595:36:14"
											},
											{
												"expression": {
													"id": 1458,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1454,
															"name": "tokenPrice",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1343,
															"src": "3642:10:14",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 1456,
														"indexExpression": {
															"id": 1455,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1433,
															"src": "3653:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3642:19:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1457,
														"name": "price",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1435,
														"src": "3664:5:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3642:27:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1459,
												"nodeType": "ExpressionStatement",
												"src": "3642:27:14"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1461,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1433,
															"src": "3694:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1462,
															"name": "price",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1435,
															"src": "3703:5:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1463,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "3710:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1464,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3716:9:14",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "3710:15:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1460,
														"name": "SetPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1351,
														"src": "3685:8:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256,uint256)"
														}
													},
													"id": 1465,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3685:41:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1466,
												"nodeType": "EmitStatement",
												"src": "3680:46:14"
											}
										]
									},
									"functionSelector": "f7d97577",
									"id": 1468,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1438,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1437,
												"name": "onlyOwner",
												"nameLocations": [
													"3524:9:14"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "3524:9:14"
											},
											"nodeType": "ModifierInvocation",
											"src": "3524:9:14"
										}
									],
									"name": "setPrice",
									"nameLocation": "3474:8:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1436,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1433,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3491:7:14",
												"nodeType": "VariableDeclaration",
												"scope": 1468,
												"src": "3483:15:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1432,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3483:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1435,
												"mutability": "mutable",
												"name": "price",
												"nameLocation": "3508:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 1468,
												"src": "3500:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1434,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3500:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3482:32:14"
									},
									"returnParameters": {
										"id": 1439,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3533:0:14"
									},
									"scope": 1469,
									"src": "3465:315:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1470,
							"src": "319:3465:14",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24,
								1351,
								1361
							]
						}
					],
					"src": "33:3751:14"
				},
				"id": 14
			}
		}
	}
}