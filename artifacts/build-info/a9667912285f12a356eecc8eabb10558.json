{
	"id": "a9667912285f12a356eecc8eabb10558",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"SnowmenSales.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.20;\r\n\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\r\n\r\ncontract SnowmenSales is Ownable, ERC1155Holder {\r\n    using SafeERC20 for IERC20; // SafeERC20 라이브러리를 IERC20 타입에 연결해 안전한 토큰 전송 함수 사용 가능\r\n\r\n    IERC20 public snowmenToken; // Snowmen ERC20 토큰의 인터페이스\r\n    IERC1155 public snowmenGame; // Snowmen ERC1155 토큰(게임 아이템 등의 자산) 인터페이스\r\n\r\n    uint256 private constant TICKET_PRICE = 0.01 ether;\r\n    uint256 private constant TICKET_QUANTITY = 1;\r\n    uint256 private constant TICKET_ID = 340282366920938463463374607431768211456;\r\n\r\n    mapping(uint256 => uint256) public tokenPrice;\r\n    //이벤트: 블록체인 상에서 발생하는 특정 상황을 로그로 기록해 감지하도록 하는 \"신호\" 역\r\n    event SetPrice(uint256 tokenId, uint256 price, uint256 timestamp);\r\n\r\n    event BuyItem(\r\n        address indexed buyer, // 나중에 인덱스를 통해 원하는 buyer를 빨리 찾기 위함\r\n        uint256 tokenId,\r\n        uint256 amount,\r\n        uint8 quantity,\r\n        uint256 timestamp\r\n    );\r\n\r\n    event BuyTicket(address indexed buyer, uint256 timestamp);\r\n    event Withdraw(address owner, uint256 amount);\r\n    \r\n    event onERC1155ReceivedExecuted(\r\n        address operator,\r\n        address from,\r\n        uint256 id,\r\n        uint256 value\r\n    );\r\n\r\n    constructor(address snowmenErc1155, address snowmenErc20) Ownable(_msgSender()){\r\n        // 생성자: 컨트랙트를 배포할 때 특정한 ERC1155 토큰과 ERC20 토큰의 주소를 받아 초기화\r\n        // Ownable(_msgSender())를 호출함으로써, 컨트랙트 소유자를 배포한 계정으로 설정\r\n        snowmenGame = IERC1155(snowmenErc1155);\r\n        snowmenToken = IERC20(snowmenErc20);\r\n    }\r\n\r\n    function onERC1155Received(\r\n        address operator, // 해당 함수(토큰 전송)를 실행한 계정(주로 ERC1155 토큰 계약)\r\n        address from, // 토큰을 전송한 사용자 주소\r\n        uint256 id,  // 전송된 ERC1155 토큰의 ID\r\n        uint256 value, // 전송된 토큰의 개수\r\n        bytes memory // 추가적인 데이터(사용되지 않음)\r\n    ) public override returns (bytes4) {\r\n        // onERC1155Received는 ERC1155 표준에서 요구하는 훅(Hook)으로,\r\n        // 본 컨트랙트가 ERC1155 토큰을 안전하게 받았음을 알리는 콜백 함수입니다.\r\n        \r\n        // 이 함수는 ERC1155 토큰이 현재 컨트랙트로 전송될 때 자동으로 호출됩니다.\r\n        // msg.sender는 이 함수가 호출될 때, 토큰을 전송한 ERC1155 컨트랙트 주소를 나타냅니다.\r\n\r\n        require(msg.sender == address(snowmenGame), \"incorrect sender\");\r\n        // 전송한 토큰의 출처가 우리가 지정한 snowmenGame 컨트랙트인지 검사합니다.\r\n        // 잘못된 컨트랙트(등록되지 않은 ERC1155)에서 온 요청은 거부합니다.\r\n\r\n        require(value != 0, \"quantity is zero\");\r\n        // 전송된 토큰 수량이 0개인 경우는 의미가 없으므로 거부합니다.\r\n\r\n        emit onERC1155ReceivedExecuted(operator, from, id, value);\r\n        // 토큰 수령이 성공적으로 처리되었음을 이벤트로 알립니다.\r\n        // 이벤트는 블록체인 상에 로그로 남으며, 외부에서 트랜잭션 모니터링이 가능합니다.\r\n\r\n        return this.onERC1155Received.selector;\r\n        // ERC1155 표준에 따라, 이 함수는 ERC1155 컨트랙트에게 정상 수신을 의미하는 함수 셀렉터를 반환해야 합니다.\r\n        // 이 반환값으로 인해 ERC1155 컨트랙트는 토큰 전달이 성공적으로 처리되었음을 알 수 있습니다.\r\n    }\r\n\r\n    function buyItem(\r\n        uint256 tokenId,\r\n        uint256 amount,\r\n        uint8 quantity\r\n    ) external {\r\n        address buyer = msg.sender;\r\n        require(tokenPrice[tokenId] != 0, \"price is not set yet\");\r\n        require(amount >= tokenPrice[tokenId] * quantity, \"amount not enough\");\r\n        require(\r\n            snowmenGame.balanceOf(address(this), tokenId) >= quantity,\r\n            \"balance is not enough\"\r\n        );\r\n        require(snowmenToken.balanceOf(buyer) >= amount, \"insufficient token\");\r\n        require(\r\n            snowmenToken.allowance(buyer, address(this)) >= amount,\r\n            \"insufficient token approval\"\r\n        );\r\n        snowmenToken.safeTransferFrom(buyer, owner(), amount); //buyer가 owner()에게 amount만큼 토큰을 지불하겠다.\r\n        snowmenGame.safeTransferFrom(\r\n            address(this),\r\n            buyer,\r\n            tokenId,\r\n            quantity,\r\n            \"\"\r\n        );\r\n        emit BuyItem(buyer, tokenId, amount, quantity, block.timestamp);\r\n    }\r\n\r\n    function buyTicket() external payable {\r\n        require(msg.value >= TICKET_PRICE, \"price not enough\"); //msg.value = 유저가 함수에 보낸 matic 개수\r\n\r\n        // Ticker의 제한을 두고 싶지 않아서 새로 유저가 올 때마다 티켓을 민팅하도록 하겠다.\r\n        // 외부 컨트랙트 함수를 사용하는 것중 하나가 로우레벨 함수 콜인데 가스비 아낄 수 있는 장점\r\n\r\n        (bool success,) = address(snowmenGame).call(\r\n            abi.encodeWithSignature( // bytes type로 묶기\r\n                \"mint(address,uint256,uint256)\",\r\n                msg.sender,\r\n                TICKET_ID,\r\n                TICKET_QUANTITY\r\n            )\r\n        );\r\n        require(success, \"mint failed\");\r\n        emit BuyTicket(msg.sender, block.timestamp);\r\n    }\r\n\r\n    function getBalance() public view returns (uint256) {\r\n        return address(this).balance;\r\n    }\r\n\r\n    function withdraw() external onlyOwner() {\r\n        uint256 amount = getBalance();\r\n        require(amount != 0, \"insuffcient amount\");\r\n        (bool success,) = msg.sender.call{value: amount}(\"\");\r\n        require(success, \"unable to withdraw matic\");\r\n        emit Withdraw(msg.sender, amount);\r\n    }\r\n\r\n    function setPrice(uint256 tokenId, uint256 price) external onlyOwner{\r\n        require(tokenId != 0, \"tokenId is zero\");\r\n        require(price != 0, \"price is zero\");\r\n        tokenPrice[tokenId] = price;\r\n        emit SetPrice(tokenId, price, block.timestamp); // 성공적으로 처리되었음을 알림.\r\n    }\r\n }"
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\nimport {IERC1363} from \"../../../interfaces/IERC1363.sol\";\nimport {Address} from \"../../../utils/Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC-20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    /**\n     * @dev An operation with an ERC-20 token failed.\n     */\n    error SafeERC20FailedOperation(address token);\n\n    /**\n     * @dev Indicates a failed `decreaseAllowance` request.\n     */\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        forceApprove(token, spender, oldAllowance + value);\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n     * value, non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\n        unchecked {\n            uint256 currentAllowance = token.allowance(address(this), spender);\n            if (currentAllowance < requestedDecrease) {\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\n            }\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     *\n     * NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n     * only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n     * set here.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            safeTransfer(token, to, value);\n        } else if (!token.transferAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n     * has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferFromAndCallRelaxed(\n        IERC1363 token,\n        address from,\n        address to,\n        uint256 value,\n        bytes memory data\n    ) internal {\n        if (to.code.length == 0) {\n            safeTransferFrom(token, from, to, value);\n        } else if (!token.transferFromAndCall(from, to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n     * Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n     * once without retrying, and relies on the returned value to be true.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function approveAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            forceApprove(token, to, value);\n        } else if (!token.approveAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements.\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            let success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            // bubble errors\n            if iszero(success) {\n                let ptr := mload(0x40)\n                returndatacopy(ptr, 0, returndatasize())\n                revert(ptr, returndatasize())\n            }\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n\n        if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        bool success;\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n        return success && (returnSize == 0 ? address(token).code.length > 0 : returnValue == 1);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC1155/utils/ERC1155Holder.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165, ERC165} from \"../../../utils/introspection/ERC165.sol\";\nimport {IERC1155Receiver} from \"../IERC1155Receiver.sol\";\n\n/**\n * @dev Simple implementation of `IERC1155Receiver` that will allow a contract to hold ERC-1155 tokens.\n *\n * IMPORTANT: When inheriting this contract, you must include a way to use the received tokens, otherwise they will be\n * stuck.\n */\nabstract contract ERC1155Holder is ERC165, IERC1155Receiver {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return interfaceId == type(IERC1155Receiver).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    function onERC1155Received(\n        address,\n        address,\n        uint256,\n        uint256,\n        bytes memory\n    ) public virtual override returns (bytes4) {\n        return this.onERC1155Received.selector;\n    }\n\n    function onERC1155BatchReceived(\n        address,\n        address,\n        uint256[] memory,\n        uint256[] memory,\n        bytes memory\n    ) public virtual override returns (bytes4) {\n        return this.onERC1155BatchReceived.selector;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC1155/IERC1155.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC1155/IERC1155.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC-1155 compliant contract, as defined in the\n * https://eips.ethereum.org/EIPS/eip-1155[ERC].\n */\ninterface IERC1155 is IERC165 {\n    /**\n     * @dev Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\n     */\n    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);\n\n    /**\n     * @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n     * transfers.\n     */\n    event TransferBatch(\n        address indexed operator,\n        address indexed from,\n        address indexed to,\n        uint256[] ids,\n        uint256[] values\n    );\n\n    /**\n     * @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n     * `approved`.\n     */\n    event ApprovalForAll(address indexed account, address indexed operator, bool approved);\n\n    /**\n     * @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n     *\n     * If an {URI} event was emitted for `id`, the standard\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n     * returned by {IERC1155MetadataURI-uri}.\n     */\n    event URI(string value, uint256 indexed id);\n\n    /**\n     * @dev Returns the value of tokens of token type `id` owned by `account`.\n     */\n    function balanceOf(address account, uint256 id) external view returns (uint256);\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n     *\n     * Requirements:\n     *\n     * - `accounts` and `ids` must have the same length.\n     */\n    function balanceOfBatch(\n        address[] calldata accounts,\n        uint256[] calldata ids\n    ) external view returns (uint256[] memory);\n\n    /**\n     * @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n     *\n     * Emits an {ApprovalForAll} event.\n     *\n     * Requirements:\n     *\n     * - `operator` cannot be the zero address.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n     *\n     * See {setApprovalForAll}.\n     */\n    function isApprovedForAll(address account, address operator) external view returns (bool);\n\n    /**\n     * @dev Transfers a `value` amount of tokens of type `id` from `from` to `to`.\n     *\n     * WARNING: This function can potentially allow a reentrancy attack when transferring tokens\n     * to an untrusted contract, when invoking {onERC1155Received} on the receiver.\n     * Ensure to follow the checks-effects-interactions pattern and consider employing\n     * reentrancy guards when interacting with untrusted contracts.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n     * - `from` must have a balance of tokens of type `id` of at least `value` amount.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes calldata data) external;\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n     *\n     * WARNING: This function can potentially allow a reentrancy attack when transferring tokens\n     * to an untrusted contract, when invoking {onERC1155BatchReceived} on the receiver.\n     * Ensure to follow the checks-effects-interactions pattern and consider employing\n     * reentrancy guards when interacting with untrusted contracts.\n     *\n     * Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments.\n     *\n     * Requirements:\n     *\n     * - `ids` and `values` must have the same length.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] calldata ids,\n        uint256[] calldata values,\n        bytes calldata data\n    ) external;\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Address.sol)\n\npragma solidity ^0.8.20;\n\nimport {Errors} from \"./Errors.sol\";\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev There's no code at `target` (it is not a contract).\n     */\n    error AddressEmptyCode(address target);\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        if (address(this).balance < amount) {\n            revert Errors.InsufficientBalance(address(this).balance, amount);\n        }\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        if (!success) {\n            revert Errors.FailedCall();\n        }\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason or custom error, it is bubbled\n     * up by this function (like regular Solidity function calls). However, if\n     * the call reverted with no returned reason, this function reverts with a\n     * {Errors.FailedCall} error.\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        if (address(this).balance < value) {\n            revert Errors.InsufficientBalance(address(this).balance, value);\n        }\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n     * was not a contract or bubbling up the revert reason (falling back to {Errors.FailedCall}) in case\n     * of an unsuccessful call.\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata\n    ) internal view returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            // only check if target is a contract if the call was successful and the return data is empty\n            // otherwise we already know that it was a contract\n            if (returndata.length == 0 && target.code.length == 0) {\n                revert AddressEmptyCode(target);\n            }\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n     * revert reason or with a default {Errors.FailedCall} error.\n     */\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Reverts with returndata if present. Otherwise reverts with {Errors.FailedCall}.\n     */\n    function _revert(bytes memory returndata) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            assembly (\"memory-safe\") {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert Errors.FailedCall();\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/IERC1363.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @title IERC1363\n * @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n *\n * Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n * after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\n */\ninterface IERC1363 is IERC20, IERC165 {\n    /*\n     * Note: the ERC-165 identifier for this interface is 0xb0202a11.\n     * 0xb0202a11 ===\n     *   bytes4(keccak256('transferAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('transferAndCall(address,uint256,bytes)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256,bytes)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256,bytes)'))\n     */\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @param data Additional data with no specified format, sent in call to `spender`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value, bytes calldata data) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC1155/IERC1155Receiver.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Interface that must be implemented by smart contracts in order to receive\n * ERC-1155 token transfers.\n */\ninterface IERC1155Receiver is IERC165 {\n    /**\n     * @dev Handles the receipt of a single ERC-1155 token type. This function is\n     * called at the end of a `safeTransferFrom` after the balance has been updated.\n     *\n     * NOTE: To accept the transfer, this must return\n     * `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n     * (i.e. 0xf23a6e61, or its own function selector).\n     *\n     * @param operator The address which initiated the transfer (i.e. msg.sender)\n     * @param from The address which previously owned the token\n     * @param id The ID of the token being transferred\n     * @param value The amount of tokens being transferred\n     * @param data Additional data with no specified format\n     * @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed\n     */\n    function onERC1155Received(\n        address operator,\n        address from,\n        uint256 id,\n        uint256 value,\n        bytes calldata data\n    ) external returns (bytes4);\n\n    /**\n     * @dev Handles the receipt of a multiple ERC-1155 token types. This function\n     * is called at the end of a `safeBatchTransferFrom` after the balances have\n     * been updated.\n     *\n     * NOTE: To accept the transfer(s), this must return\n     * `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n     * (i.e. 0xbc197c81, or its own function selector).\n     *\n     * @param operator The address which initiated the batch transfer (i.e. msg.sender)\n     * @param from The address which previously owned the token\n     * @param ids An array containing ids of each token being transferred (order and length must match values array)\n     * @param values An array containing amounts of each token being transferred (order and length must match ids array)\n     * @param data Additional data with no specified format\n     * @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed\n     */\n    function onERC1155BatchReceived(\n        address operator,\n        address from,\n        uint256[] calldata ids,\n        uint256[] calldata values,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Errors.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Errors.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Collection of common custom errors used in multiple contracts\n *\n * IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library.\n * It is recommended to avoid relying on the error API for critical functionality.\n *\n * _Available since v5.1._\n */\nlibrary Errors {\n    /**\n     * @dev The ETH balance of the account is not enough to perform the operation.\n     */\n    error InsufficientBalance(uint256 balance, uint256 needed);\n\n    /**\n     * @dev A call to an address target failed. The target may have reverted.\n     */\n    error FailedCall();\n\n    /**\n     * @dev The deployment failed.\n     */\n    error FailedDeployment();\n\n    /**\n     * @dev A necessary precompile is missing.\n     */\n    error MissingPrecompile(address);\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../utils/introspection/IERC165.sol\";\n"
			},
			"@openzeppelin/contracts/interfaces/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../token/ERC20/IERC20.sol\";\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"IERC1363": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approveAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "approveAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transferAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transferFromAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFromAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"approveAndCall(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.",
								"params": {
									"spender": "The address which will spend the funds.",
									"value": "The amount of tokens to be spent."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"approveAndCall(address,uint256,bytes)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `spender`.",
									"spender": "The address which will spend the funds.",
									"value": "The amount of tokens to be spent."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferAndCall(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferAndCall(address,uint256,bytes)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `to`.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFromAndCall(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"from": "The address which you want to send tokens from.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferFromAndCall(address,address,uint256,bytes)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `to`.",
									"from": "The address which you want to send tokens from.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							}
						},
						"title": "IERC1363",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"approveAndCall(address,uint256)": "3177029f",
							"approveAndCall(address,uint256,bytes)": "cae9ca51",
							"balanceOf(address)": "70a08231",
							"supportsInterface(bytes4)": "01ffc9a7",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferAndCall(address,uint256)": "1296ee62",
							"transferAndCall(address,uint256,bytes)": "4000aea0",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferFromAndCall(address,address,uint256)": "d8fbe994",
							"transferFromAndCall(address,address,uint256,bytes)": "c1d34b89"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"approveAndCall(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"approveAndCall(address,uint256,bytes)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `spender`.\",\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferAndCall(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferAndCall(address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFromAndCall(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFromAndCall(address,address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}}},\"title\":\"IERC1363\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":\"IERC1363\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC1155/IERC1155.sol": {
				"IERC1155": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC-1155 compliant contract, as defined in the https://eips.ethereum.org/EIPS/eip-1155[ERC].",
						"events": {
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`."
							},
							"TransferBatch(address,address,address,uint256[],uint256[])": {
								"details": "Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers."
							},
							"TransferSingle(address,address,address,uint256,uint256)": {
								"details": "Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`."
							},
							"URI(string,uint256)": {
								"details": "Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}."
							}
						},
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "Returns the value of tokens of token type `id` owned by `account`."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155BatchReceived} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments. Requirements: - `ids` and `values` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "Transfers a `value` amount of tokens of type `id` from `from` to `to`. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155Received} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `value` amount. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the zero address."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC-1155 compliant contract, as defined in the https://eips.ethereum.org/EIPS/eip-1155[ERC].\",\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the value of tokens of token type `id` owned by `account`.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155BatchReceived} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments. Requirements: - `ids` and `values` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers a `value` amount of tokens of type `id` from `from` to `to`. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155Received} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `value` amount. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the zero address.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":\"IERC1155\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x68d6fdbeb467192c3627a46aa7bf5cbb73267363b740abc511f521a5a41a446e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7ce608c19d5e917c60f9c8aa3e5f0eb05b326280ac0a235e8bb9a848a3a64a91\",\"dweb:/ipfs/QmdLPsWQJj7JvRae8MM13GEo4PBXaEFmD4b4heqcyMJNPG\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol": {
				"IERC1155Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC1155BatchReceived",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC1155Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface that must be implemented by smart contracts in order to receive ERC-1155 token transfers.",
						"kind": "dev",
						"methods": {
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": {
								"details": "Handles the receipt of a multiple ERC-1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. NOTE: To accept the transfer(s), this must return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` (i.e. 0xbc197c81, or its own function selector).",
								"params": {
									"data": "Additional data with no specified format",
									"from": "The address which previously owned the token",
									"ids": "An array containing ids of each token being transferred (order and length must match values array)",
									"operator": "The address which initiated the batch transfer (i.e. msg.sender)",
									"values": "An array containing amounts of each token being transferred (order and length must match ids array)"
								},
								"returns": {
									"_0": "`bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"
								}
							},
							"onERC1155Received(address,address,uint256,uint256,bytes)": {
								"details": "Handles the receipt of a single ERC-1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. NOTE: To accept the transfer, this must return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` (i.e. 0xf23a6e61, or its own function selector).",
								"params": {
									"data": "Additional data with no specified format",
									"from": "The address which previously owned the token",
									"id": "The ID of the token being transferred",
									"operator": "The address which initiated the transfer (i.e. msg.sender)",
									"value": "The amount of tokens being transferred"
								},
								"returns": {
									"_0": "`bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"
								}
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": "bc197c81",
							"onERC1155Received(address,address,uint256,uint256,bytes)": "f23a6e61",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface that must be implemented by smart contracts in order to receive ERC-1155 token transfers.\",\"kind\":\"dev\",\"methods\":{\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\":{\"details\":\"Handles the receipt of a multiple ERC-1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. NOTE: To accept the transfer(s), this must return `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` (i.e. 0xbc197c81, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"ids\":\"An array containing ids of each token being transferred (order and length must match values array)\",\"operator\":\"The address which initiated the batch transfer (i.e. msg.sender)\",\"values\":\"An array containing amounts of each token being transferred (order and length must match ids array)\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` if transfer is allowed\"}},\"onERC1155Received(address,address,uint256,uint256,bytes)\":{\"details\":\"Handles the receipt of a single ERC-1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. NOTE: To accept the transfer, this must return `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` (i.e. 0xf23a6e61, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"id\":\"The ID of the token being transferred\",\"operator\":\"The address which initiated the transfer (i.e. msg.sender)\",\"value\":\"The amount of tokens being transferred\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` if transfer is allowed\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":\"IERC1155Receiver\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0x61a23d601c2ab69dd726ac55058604cbda98e1d728ba31a51c379a3f9eeea715\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d8cbb06152d82ebdd5ba1d33454e5759492040f309a82637c7e99c948a04fa20\",\"dweb:/ipfs/QmQQuLr6WSfLu97pMEh6XLefk99TSj9k5Qu1zXGPepwGiK\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol": {
				"ERC1155Holder": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"name": "onERC1155BatchReceived",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"name": "onERC1155Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Simple implementation of `IERC1155Receiver` that will allow a contract to hold ERC-1155 tokens. IMPORTANT: When inheriting this contract, you must include a way to use the received tokens, otherwise they will be stuck.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": "bc197c81",
							"onERC1155Received(address,address,uint256,uint256,bytes)": "f23a6e61",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Simple implementation of `IERC1155Receiver` that will allow a contract to hold ERC-1155 tokens. IMPORTANT: When inheriting this contract, you must include a way to use the received tokens, otherwise they will be stuck.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":\"ERC1155Holder\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0x61a23d601c2ab69dd726ac55058604cbda98e1d728ba31a51c379a3f9eeea715\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d8cbb06152d82ebdd5ba1d33454e5759492040f309a82637c7e99c948a04fa20\",\"dweb:/ipfs/QmQQuLr6WSfLu97pMEh6XLefk99TSj9k5Qu1zXGPepwGiK\"]},\"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":{\"keccak256\":\"0xe103e95f854ef0cd1bba5f469175f67cd332f5c2561941f165e3dd65cee94d6d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6cf8cc5d07cf8003255f9d766fe8188b9f6e33b6240e126a605f0d061566b23e\",\"dweb:/ipfs/Qmd7okDCSoUt1L4G9hmb5c4W8kWUnfpAa2jyBKUp4xKErd\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "currentAllowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "requestedDecrease",
									"type": "uint256"
								}
							],
							"name": "SafeERC20FailedDecreaseAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"errors": {
							"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failed `decreaseAllowance` request."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC-20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":750:9442  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":750:9442  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220698b1a5c5c4c52fb56daba38cd9385e2d99c56dbcf42fe723feeab237d81c6f864736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220698b1a5c5c4c52fb56daba38cd9385e2d99c56dbcf42fe723feeab237d81c6f864736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH10 0x8B1A5C5C4C52FB56DABA CODESIZE 0xCD SWAP4 DUP6 0xE2 0xD9 SWAP13 JUMP 0xDB 0xCF TIMESTAMP INVALID PUSH19 0x3FEEAB237D81C6F864736F6C634300081A0033 ",
							"sourceMap": "750:8692:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220698b1a5c5c4c52fb56daba38cd9385e2d99c56dbcf42fe723feeab237d81c6f864736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH10 0x8B1A5C5C4C52FB56DABA CODESIZE 0xCD SWAP4 DUP6 0xE2 0xD9 SWAP13 JUMP 0xDB 0xCF TIMESTAMP INVALID PUSH19 0x3FEEAB237D81C6F864736F6C634300081A0033 ",
							"sourceMap": "750:8692:8:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"_callOptionalReturnBool(contract IERC20,bytes memory)": "infinite",
								"approveAndCallRelaxed(contract IERC1363,address,uint256,bytes memory)": "infinite",
								"forceApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite",
								"transferAndCallRelaxed(contract IERC1363,address,uint256,bytes memory)": "infinite",
								"transferFromAndCallRelaxed(contract IERC1363,address,address,uint256,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 8,
									"value": "B"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "BYTE",
									"source": 8
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "ADDRESS",
									"source": 8
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "MSTORE8",
									"source": 8
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220698b1a5c5c4c52fb56daba38cd9385e2d99c56dbcf42fe723feeab237d81c6f864736f6c634300081a0033",
									".code": [
										{
											"begin": 750,
											"end": 9442,
											"name": "PUSHDEPLOYADDRESS",
											"source": 8
										},
										{
											"begin": 750,
											"end": 9442,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 750,
											"end": 9442,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 750,
											"end": 9442,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 750,
											"end": 9442,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 750,
											"end": 9442,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 750,
											"end": 9442,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 750,
											"end": 9442,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 750,
											"end": 9442,
											"name": "REVERT",
											"source": 8
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
								"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
								"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"SnowmenSales.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentAllowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"SafeERC20FailedDecreaseAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"errors\":{\"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failed `decreaseAllowance` request.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xca2ae13e0610f6a99238dd00b97bd786bc92732dae6d6b9d61f573ec51018310\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75f8c71ce0c91c40dd5f249ace0b7d8270f8f1767231bcf71490f7157d6ba862\",\"dweb:/ipfs/QmYXgxeDyFHvz3JsXxLEYN6GNUR44ThHeFj5XkpkgMoG4w\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x9d8da059267bac779a2dbbb9a26c2acf00ca83085e105d62d5d4ef96054a47f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c78e2aa4313323cecd1ef12a8d6265b96beee1a199923abf55d9a2a9e291ad23\",\"dweb:/ipfs/QmUTs2KStXucZezzFo3EYeqYu47utu56qrF7jj1Gue65vb\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":233:6032  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":233:6032  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220c34a83696988bc629d9eefb813a7172acc401752bdae64952801479bece8cbde64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220c34a83696988bc629d9eefb813a7172acc401752bdae64952801479bece8cbde64736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC3 BLOBBASEFEE DUP4 PUSH10 0x6988BC629D9EEFB813A7 OR 0x2A 0xCC BLOCKHASH OR MSTORE 0xBD 0xAE PUSH5 0x952801479B 0xEC 0xE8 0xCB 0xDE PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "233:5799:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220c34a83696988bc629d9eefb813a7172acc401752bdae64952801479bece8cbde64736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC3 BLOBBASEFEE DUP4 PUSH10 0x6988BC629D9EEFB813A7 OR 0x2A 0xCC BLOCKHASH OR MSTORE 0xBD 0xAE PUSH5 0x952801479B 0xEC 0xE8 0xCB 0xDE PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "233:5799:9:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_revert(bytes memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 9,
									"value": "B"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "BYTE",
									"source": 9
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 9,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "ADDRESS",
									"source": 9
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "MSTORE8",
									"source": 9
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c34a83696988bc629d9eefb813a7172acc401752bdae64952801479bece8cbde64736f6c634300081a0033",
									".code": [
										{
											"begin": 233,
											"end": 6032,
											"name": "PUSHDEPLOYADDRESS",
											"source": 9
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "REVERT",
											"source": 9
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
								"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
								"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"SnowmenSales.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x9d8da059267bac779a2dbbb9a26c2acf00ca83085e105d62d5d4ef96054a47f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c78e2aa4313323cecd1ef12a8d6265b96beee1a199923abf55d9a2a9e291ad23\",\"dweb:/ipfs/QmUTs2KStXucZezzFo3EYeqYu47utu56qrF7jj1Gue65vb\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Errors.sol": {
				"Errors": {
					"abi": [
						{
							"inputs": [],
							"name": "FailedCall",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedDeployment",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "MissingPrecompile",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Collection of common custom errors used in multiple contracts IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library. It is recommended to avoid relying on the error API for critical functionality. _Available since v5.1._",
						"errors": {
							"FailedCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							],
							"FailedDeployment()": [
								{
									"details": "The deployment failed."
								}
							],
							"InsufficientBalance(uint256,uint256)": [
								{
									"details": "The ETH balance of the account is not enough to perform the operation."
								}
							],
							"MissingPrecompile(address)": [
								{
									"details": "A necessary precompile is missing."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Errors.sol\":411:895  library Errors {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Errors.sol\":411:895  library Errors {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122013a5258e24d367801dd045c6c6b0e36249fc2ab27ec3e3f8e07ce95d2dbdb61d64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122013a5258e24d367801dd045c6c6b0e36249fc2ab27ec3e3f8e07ce95d2dbdb61d64736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SGT 0xA5 0x25 DUP15 0x24 0xD3 PUSH8 0x801DD045C6C6B0E3 PUSH3 0x49FC2A 0xB2 PUSH31 0xC3E3F8E07CE95D2DBDB61D64736F6C634300081A0033000000000000000000 ",
							"sourceMap": "411:484:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122013a5258e24d367801dd045c6c6b0e36249fc2ab27ec3e3f8e07ce95d2dbdb61d64736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SGT 0xA5 0x25 DUP15 0x24 0xD3 PUSH8 0x801DD045C6C6B0E3 PUSH3 0x49FC2A 0xB2 PUSH31 0xC3E3F8E07CE95D2DBDB61D64736F6C634300081A0033000000000000000000 ",
							"sourceMap": "411:484:11:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH #[$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH [$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 11,
									"value": "B"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 411,
									"end": 895,
									"name": "CODECOPY",
									"source": 11
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "BYTE",
									"source": 11
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "EQ",
									"source": 11
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 11,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 411,
									"end": 895,
									"name": "tag",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 411,
									"end": 895,
									"name": "ADDRESS",
									"source": 11
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE8",
									"source": 11
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 411,
									"end": 895,
									"name": "RETURN",
									"source": 11
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122013a5258e24d367801dd045c6c6b0e36249fc2ab27ec3e3f8e07ce95d2dbdb61d64736f6c634300081a0033",
									".code": [
										{
											"begin": 411,
											"end": 895,
											"name": "PUSHDEPLOYADDRESS",
											"source": 11
										},
										{
											"begin": 411,
											"end": 895,
											"name": "ADDRESS",
											"source": 11
										},
										{
											"begin": 411,
											"end": 895,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 411,
											"end": 895,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 411,
											"end": 895,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 411,
											"end": 895,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 411,
											"end": 895,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 895,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 411,
											"end": 895,
											"name": "REVERT",
											"source": 11
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
								"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
								"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"SnowmenSales.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"FailedCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedDeployment\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"MissingPrecompile\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of common custom errors used in multiple contracts IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library. It is recommended to avoid relying on the error API for critical functionality. _Available since v5.1._\",\"errors\":{\"FailedCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"FailedDeployment()\":[{\"details\":\"The deployment failed.\"}],\"InsufficientBalance(uint256,uint256)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"MissingPrecompile(address)\":[{\"details\":\"A necessary precompile is missing.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Errors.sol\":\"Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"SnowmenSales.sol": {
				"SnowmenSales": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "snowmenErc1155",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "snowmenErc20",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "buyer",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "quantity",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								}
							],
							"name": "BuyItem",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "buyer",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								}
							],
							"name": "BuyTicket",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "price",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								}
							],
							"name": "SetPrice",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Withdraw",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "onERC1155ReceivedExecuted",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "quantity",
									"type": "uint8"
								}
							],
							"name": "buyItem",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "buyTicket",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"name": "onERC1155BatchReceived",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"name": "onERC1155Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "price",
									"type": "uint256"
								}
							],
							"name": "setPrice",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "snowmenGame",
							"outputs": [
								{
									"internalType": "contract IERC1155",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "snowmenToken",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "tokenPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC-20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"SnowmenSales.sol\":319:6601  contract SnowmenSales is Ownable, ERC1155Holder {... */\n  mstore(0x40, 0x80)\n    /* \"SnowmenSales.sol\":1647:2066  constructor(address snowmenErc1155, address snowmenErc20) Ownable(_msgSender()){... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"SnowmenSales.sol\":1713:1725  _msgSender() */\n  tag_5\n    /* \"SnowmenSales.sol\":1713:1723  _msgSender */\n  shl(0x20, tag_6)\n    /* \"SnowmenSales.sol\":1713:1725  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_5:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_9\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_10\n  swap2\n  swap1\n  tag_11\n  jump\t// in\ntag_10:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_9:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_12\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_13)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_12:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"SnowmenSales.sol\":1997:2011  snowmenErc1155 */\n  dup2\n    /* \"SnowmenSales.sol\":1974:1985  snowmenGame */\n  0x02\n  0x00\n    /* \"SnowmenSales.sol\":1974:2012  snowmenGame = IERC1155(snowmenErc1155) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"SnowmenSales.sol\":2045:2057  snowmenErc20 */\n  dup1\n    /* \"SnowmenSales.sol\":2023:2035  snowmenToken */\n  0x01\n  0x00\n    /* \"SnowmenSales.sol\":2023:2058  snowmenToken = IERC20(snowmenErc20) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"SnowmenSales.sol\":1647:2066  constructor(address snowmenErc1155, address snowmenErc20) Ownable(_msgSender()){... */\n  pop\n  pop\n    /* \"SnowmenSales.sol\":319:6601  contract SnowmenSales is Ownable, ERC1155Holder {... */\n  jump(tag_15)\n    /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\ntag_6:\n    /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n  0x00\n    /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_13:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  dup1\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x00\n  dup1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_19:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_21:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_22:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_32\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_21\n  jump\t// in\ntag_32:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_23:\n    /* \"#utility.yul\":641:665   */\n  tag_34\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_22\n  jump\t// in\ntag_34:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_35\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_35:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_24:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_37\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_23\n  jump\t// in\ntag_37:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1352   */\ntag_3:\n    /* \"#utility.yul\":924:930   */\n  0x00\n    /* \"#utility.yul\":932:938   */\n  dup1\n    /* \"#utility.yul\":981:983   */\n  0x40\n    /* \"#utility.yul\":969:978   */\n  dup4\n    /* \"#utility.yul\":960:967   */\n  dup6\n    /* \"#utility.yul\":956:979   */\n  sub\n    /* \"#utility.yul\":952:984   */\n  slt\n    /* \"#utility.yul\":949:1068   */\n  iszero\n  tag_39\n  jumpi\n    /* \"#utility.yul\":987:1066   */\n  tag_40\n  tag_19\n  jump\t// in\ntag_40:\n    /* \"#utility.yul\":949:1068   */\ntag_39:\n    /* \"#utility.yul\":1107:1108   */\n  0x00\n    /* \"#utility.yul\":1132:1196   */\n  tag_41\n    /* \"#utility.yul\":1188:1195   */\n  dup6\n    /* \"#utility.yul\":1179:1185   */\n  dup3\n    /* \"#utility.yul\":1168:1177   */\n  dup7\n    /* \"#utility.yul\":1164:1186   */\n  add\n    /* \"#utility.yul\":1132:1196   */\n  tag_24\n  jump\t// in\ntag_41:\n    /* \"#utility.yul\":1122:1196   */\n  swap3\n  pop\n    /* \"#utility.yul\":1078:1206   */\n  pop\n    /* \"#utility.yul\":1245:1247   */\n  0x20\n    /* \"#utility.yul\":1271:1335   */\n  tag_42\n    /* \"#utility.yul\":1327:1334   */\n  dup6\n    /* \"#utility.yul\":1318:1324   */\n  dup3\n    /* \"#utility.yul\":1307:1316   */\n  dup7\n    /* \"#utility.yul\":1303:1325   */\n  add\n    /* \"#utility.yul\":1271:1335   */\n  tag_24\n  jump\t// in\ntag_42:\n    /* \"#utility.yul\":1261:1335   */\n  swap2\n  pop\n    /* \"#utility.yul\":1216:1345   */\n  pop\n    /* \"#utility.yul\":845:1352   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1358:1476   */\ntag_25:\n    /* \"#utility.yul\":1445:1469   */\n  tag_44\n    /* \"#utility.yul\":1463:1468   */\n  dup2\n    /* \"#utility.yul\":1445:1469   */\n  tag_22\n  jump\t// in\ntag_44:\n    /* \"#utility.yul\":1440:1443   */\n  dup3\n    /* \"#utility.yul\":1433:1470   */\n  mstore\n    /* \"#utility.yul\":1358:1476   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1482:1704   */\ntag_11:\n    /* \"#utility.yul\":1575:1579   */\n  0x00\n    /* \"#utility.yul\":1613:1615   */\n  0x20\n    /* \"#utility.yul\":1602:1611   */\n  dup3\n    /* \"#utility.yul\":1598:1616   */\n  add\n    /* \"#utility.yul\":1590:1616   */\n  swap1\n  pop\n    /* \"#utility.yul\":1626:1697   */\n  tag_46\n    /* \"#utility.yul\":1694:1695   */\n  0x00\n    /* \"#utility.yul\":1683:1692   */\n  dup4\n    /* \"#utility.yul\":1679:1696   */\n  add\n    /* \"#utility.yul\":1670:1676   */\n  dup5\n    /* \"#utility.yul\":1626:1697   */\n  tag_25\n  jump\t// in\ntag_46:\n    /* \"#utility.yul\":1482:1704   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"SnowmenSales.sol\":319:6601  contract SnowmenSales is Ownable, ERC1155Holder {... */\ntag_15:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"SnowmenSales.sol\":319:6601  contract SnowmenSales is Ownable, ERC1155Holder {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xd407cee7\n      gt\n      tag_16\n      jumpi\n      dup1\n      0xedca914c\n      gt\n      tag_17\n      jumpi\n      dup1\n      0xedca914c\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xf23a6e61\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xf7d97577\n      eq\n      tag_15\n      jumpi\n      jump(tag_1)\n    tag_17:\n      dup1\n      0xd407cee7\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xd4ddce8a\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xea75aa8f\n      eq\n      tag_11\n      jumpi\n      jump(tag_1)\n    tag_16:\n      dup1\n      0x3ccfd60b\n      gt\n      tag_18\n      jumpi\n      dup1\n      0x3ccfd60b\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xbc197c81\n      eq\n      tag_8\n      jumpi\n      jump(tag_1)\n    tag_18:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x12065fe0\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x2c1449e1\n      eq\n      tag_4\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":650:871  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_19\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_19:\n      pop\n      tag_20\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_21\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_21:\n      tag_23\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      tag_24\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"SnowmenSales.sol\":5863:5962  function getBalance() public view returns (uint256) {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_26\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_26:\n      pop\n      tag_27\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      tag_29\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"SnowmenSales.sol\":513:539  IERC20 public snowmenToken */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_31\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_31:\n      pop\n      tag_32\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      tag_34\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"SnowmenSales.sol\":5970:6274  function withdraw() external onlyOwner() {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_36\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_36:\n      pop\n      tag_37\n      tag_38\n      jump\t// in\n    tag_37:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_39\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_39:\n      pop\n      tag_40\n      tag_41\n      jump\t// in\n    tag_40:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_42\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_42:\n      pop\n      tag_43\n      tag_44\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      tag_45\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":1102:1349  function onERC1155BatchReceived(... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_47\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_47:\n      pop\n      tag_48\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_49\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_49:\n      tag_51\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      tag_52\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"SnowmenSales.sol\":4010:5038  function buyItem(... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_54\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_54:\n      pop\n      tag_55\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_56\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_56:\n      tag_58\n      jump\t// in\n    tag_55:\n      stop\n        /* \"SnowmenSales.sol\":892:937  mapping(uint256 => uint256) public tokenPrice */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_59\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_59:\n      pop\n      tag_60\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_61\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_61:\n      tag_63\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      tag_64\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_64:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"SnowmenSales.sol\":589:616  IERC1155 public snowmenGame */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_65\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_65:\n      pop\n      tag_66\n      tag_67\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      tag_68\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"SnowmenSales.sol\":5046:5855  function buyTicket() external payable {... */\n    tag_12:\n      tag_70\n      tag_71\n      jump\t// in\n    tag_70:\n      stop\n        /* \"SnowmenSales.sol\":2074:4002  function onERC1155Received(... */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_72\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_72:\n      pop\n      tag_73\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_74\n      swap2\n      swap1\n      tag_75\n      jump\t// in\n    tag_74:\n      tag_76\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      tag_77\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_77:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_78\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_78:\n      pop\n      tag_79\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_80\n      swap2\n      swap1\n      tag_81\n      jump\t// in\n    tag_80:\n      tag_82\n      jump\t// in\n    tag_79:\n      stop\n        /* \"SnowmenSales.sol\":6282:6597  function setPrice(uint256 tokenId, uint256 price) external onlyOwner{... */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_83\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_83:\n      pop\n      tag_84\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_85\n      swap2\n      swap1\n      tag_86\n      jump\t// in\n    tag_85:\n      tag_87\n      jump\t// in\n    tag_84:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":650:871  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_23:\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":752:756  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":790:824  type(IERC1155Receiver).interfaceId */\n      0x4e2312e000000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":775:824  interfaceId == type(IERC1155Receiver).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":775:786  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":775:824  interfaceId == type(IERC1155Receiver).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":775:864  interfaceId == type(IERC1155Receiver).interfaceId || super.supportsInterface(interfaceId) */\n      dup1\n      tag_89\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":828:864  super.supportsInterface(interfaceId) */\n      tag_90\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":852:863  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":828:851  super.supportsInterface */\n      tag_91\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":828:864  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_90:\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":775:864  interfaceId == type(IERC1155Receiver).interfaceId || super.supportsInterface(interfaceId) */\n    tag_89:\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":768:864  return interfaceId == type(IERC1155Receiver).interfaceId || super.supportsInterface(interfaceId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":650:871  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"SnowmenSales.sol\":5863:5962  function getBalance() public view returns (uint256) {... */\n    tag_28:\n        /* \"SnowmenSales.sol\":5906:5913  uint256 */\n      0x00\n        /* \"SnowmenSales.sol\":5933:5954  address(this).balance */\n      selfbalance\n        /* \"SnowmenSales.sol\":5926:5954  return address(this).balance */\n      swap1\n      pop\n        /* \"SnowmenSales.sol\":5863:5962  function getBalance() public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"SnowmenSales.sol\":513:539  IERC20 public snowmenToken */\n    tag_33:\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"SnowmenSales.sol\":5970:6274  function withdraw() external onlyOwner() {... */\n    tag_38:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_94\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_95\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_94:\n        /* \"SnowmenSales.sol\":6022:6036  uint256 amount */\n      0x00\n        /* \"SnowmenSales.sol\":6039:6051  getBalance() */\n      tag_97\n        /* \"SnowmenSales.sol\":6039:6049  getBalance */\n      tag_28\n        /* \"SnowmenSales.sol\":6039:6051  getBalance() */\n      jump\t// in\n    tag_97:\n        /* \"SnowmenSales.sol\":6022:6051  uint256 amount = getBalance() */\n      swap1\n      pop\n        /* \"SnowmenSales.sol\":6080:6081  0 */\n      0x00\n        /* \"SnowmenSales.sol\":6070:6076  amount */\n      dup2\n        /* \"SnowmenSales.sol\":6070:6081  amount != 0 */\n      sub\n        /* \"SnowmenSales.sol\":6062:6104  require(amount != 0, \"insuffcient amount\") */\n      tag_98\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_99\n      swap1\n      tag_100\n      jump\t// in\n    tag_99:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_98:\n        /* \"SnowmenSales.sol\":6116:6128  bool success */\n      0x00\n        /* \"SnowmenSales.sol\":6133:6143  msg.sender */\n      caller\n        /* \"SnowmenSales.sol\":6133:6148  msg.sender.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"SnowmenSales.sol\":6156:6162  amount */\n      dup3\n        /* \"SnowmenSales.sol\":6133:6167  msg.sender.call{value: amount}(\"\") */\n      mload(0x40)\n      tag_101\n      swap1\n      tag_102\n      jump\t// in\n    tag_101:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_105\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_104)\n    tag_105:\n      0x60\n      swap2\n      pop\n    tag_104:\n      pop\n        /* \"SnowmenSales.sol\":6115:6167  (bool success,) = msg.sender.call{value: amount}(\"\") */\n      pop\n      swap1\n      pop\n        /* \"SnowmenSales.sol\":6186:6193  success */\n      dup1\n        /* \"SnowmenSales.sol\":6178:6222  require(success, \"unable to withdraw matic\") */\n      tag_106\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_107\n      swap1\n      tag_108\n      jump\t// in\n    tag_107:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_106:\n        /* \"SnowmenSales.sol\":6238:6266  Withdraw(msg.sender, amount) */\n      0x884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a9424364\n        /* \"SnowmenSales.sol\":6247:6257  msg.sender */\n      caller\n        /* \"SnowmenSales.sol\":6259:6265  amount */\n      dup4\n        /* \"SnowmenSales.sol\":6238:6266  Withdraw(msg.sender, amount) */\n      mload(0x40)\n      tag_109\n      swap3\n      swap2\n      swap1\n      tag_110\n      jump\t// in\n    tag_109:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"SnowmenSales.sol\":6011:6274  {... */\n      pop\n      pop\n        /* \"SnowmenSales.sol\":5970:6274  function withdraw() external onlyOwner() {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_41:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_112\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_95\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_112:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_114\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_115\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_114:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_44:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":1102:1349  function onERC1155BatchReceived(... */\n    tag_51:\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":1281:1287  bytes4 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":1306:1342  this.onERC1155BatchReceived.selector */\n      shl(0xe0, 0xbc197c81)\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":1299:1342  return this.onERC1155BatchReceived.selector */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":1102:1349  function onERC1155BatchReceived(... */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"SnowmenSales.sol\":4010:5038  function buyItem(... */\n    tag_58:\n        /* \"SnowmenSales.sol\":4130:4143  address buyer */\n      0x00\n        /* \"SnowmenSales.sol\":4146:4156  msg.sender */\n      caller\n        /* \"SnowmenSales.sol\":4130:4156  address buyer = msg.sender */\n      swap1\n      pop\n        /* \"SnowmenSales.sol\":4198:4199  0 */\n      0x00\n        /* \"SnowmenSales.sol\":4175:4185  tokenPrice */\n      0x03\n        /* \"SnowmenSales.sol\":4175:4194  tokenPrice[tokenId] */\n      0x00\n        /* \"SnowmenSales.sol\":4186:4193  tokenId */\n      dup7\n        /* \"SnowmenSales.sol\":4175:4194  tokenPrice[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"SnowmenSales.sol\":4175:4199  tokenPrice[tokenId] != 0 */\n      sub\n        /* \"SnowmenSales.sol\":4167:4224  require(tokenPrice[tokenId] != 0, \"price is not set yet\") */\n      tag_119\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_120\n      swap1\n      tag_121\n      jump\t// in\n    tag_120:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_119:\n        /* \"SnowmenSales.sol\":4275:4283  quantity */\n      dup2\n        /* \"SnowmenSales.sol\":4253:4283  tokenPrice[tokenId] * quantity */\n      0xff\n      and\n        /* \"SnowmenSales.sol\":4253:4263  tokenPrice */\n      0x03\n        /* \"SnowmenSales.sol\":4253:4272  tokenPrice[tokenId] */\n      0x00\n        /* \"SnowmenSales.sol\":4264:4271  tokenId */\n      dup7\n        /* \"SnowmenSales.sol\":4253:4272  tokenPrice[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"SnowmenSales.sol\":4253:4283  tokenPrice[tokenId] * quantity */\n      tag_122\n      swap2\n      swap1\n      tag_123\n      jump\t// in\n    tag_122:\n        /* \"SnowmenSales.sol\":4243:4249  amount */\n      dup4\n        /* \"SnowmenSales.sol\":4243:4283  amount >= tokenPrice[tokenId] * quantity */\n      lt\n      iszero\n        /* \"SnowmenSales.sol\":4235:4305  require(amount >= tokenPrice[tokenId] * quantity, \"amount not enough\") */\n      tag_124\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_125\n      swap1\n      tag_126\n      jump\t// in\n    tag_125:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_124:\n        /* \"SnowmenSales.sol\":4387:4395  quantity */\n      dup2\n        /* \"SnowmenSales.sol\":4338:4395  snowmenGame.balanceOf(address(this), tokenId) >= quantity */\n      0xff\n      and\n        /* \"SnowmenSales.sol\":4338:4349  snowmenGame */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"SnowmenSales.sol\":4338:4359  snowmenGame.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xfdd58e\n        /* \"SnowmenSales.sol\":4368:4372  this */\n      address\n        /* \"SnowmenSales.sol\":4375:4382  tokenId */\n      dup8\n        /* \"SnowmenSales.sol\":4338:4383  snowmenGame.balanceOf(address(this), tokenId) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_127\n      swap3\n      swap2\n      swap1\n      tag_110\n      jump\t// in\n    tag_127:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_129\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_129:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_130\n      swap2\n      swap1\n      tag_131\n      jump\t// in\n    tag_130:\n        /* \"SnowmenSales.sol\":4338:4395  snowmenGame.balanceOf(address(this), tokenId) >= quantity */\n      lt\n      iszero\n        /* \"SnowmenSales.sol\":4316:4444  require(... */\n      tag_132\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_133\n      swap1\n      tag_134\n      jump\t// in\n    tag_133:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_132:\n        /* \"SnowmenSales.sol\":4496:4502  amount */\n      dup3\n        /* \"SnowmenSales.sol\":4463:4475  snowmenToken */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"SnowmenSales.sol\":4463:4485  snowmenToken.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"SnowmenSales.sol\":4486:4491  buyer */\n      dup4\n        /* \"SnowmenSales.sol\":4463:4492  snowmenToken.balanceOf(buyer) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_135\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_135:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_137\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_137:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_138\n      swap2\n      swap1\n      tag_131\n      jump\t// in\n    tag_138:\n        /* \"SnowmenSales.sol\":4463:4502  snowmenToken.balanceOf(buyer) >= amount */\n      lt\n      iszero\n        /* \"SnowmenSales.sol\":4455:4525  require(snowmenToken.balanceOf(buyer) >= amount, \"insufficient token\") */\n      tag_139\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_140\n      swap1\n      tag_141\n      jump\t// in\n    tag_140:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_139:\n        /* \"SnowmenSales.sol\":4606:4612  amount */\n      dup3\n        /* \"SnowmenSales.sol\":4558:4570  snowmenToken */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"SnowmenSales.sol\":4558:4580  snowmenToken.allowance */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xdd62ed3e\n        /* \"SnowmenSales.sol\":4581:4586  buyer */\n      dup4\n        /* \"SnowmenSales.sol\":4596:4600  this */\n      address\n        /* \"SnowmenSales.sol\":4558:4602  snowmenToken.allowance(buyer, address(this)) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_142\n      swap3\n      swap2\n      swap1\n      tag_143\n      jump\t// in\n    tag_142:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_145\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_145:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_146\n      swap2\n      swap1\n      tag_131\n      jump\t// in\n    tag_146:\n        /* \"SnowmenSales.sol\":4558:4612  snowmenToken.allowance(buyer, address(this)) >= amount */\n      lt\n      iszero\n        /* \"SnowmenSales.sol\":4536:4667  require(... */\n      tag_147\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_148\n      swap1\n      tag_149\n      jump\t// in\n    tag_148:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_147:\n        /* \"SnowmenSales.sol\":4678:4731  snowmenToken.safeTransferFrom(buyer, owner(), amount) */\n      tag_150\n        /* \"SnowmenSales.sol\":4708:4713  buyer */\n      dup2\n        /* \"SnowmenSales.sol\":4715:4722  owner() */\n      tag_151\n        /* \"SnowmenSales.sol\":4715:4720  owner */\n      tag_44\n        /* \"SnowmenSales.sol\":4715:4722  owner() */\n      jump\t// in\n    tag_151:\n        /* \"SnowmenSales.sol\":4724:4730  amount */\n      dup6\n        /* \"SnowmenSales.sol\":4678:4690  snowmenToken */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"SnowmenSales.sol\":4678:4707  snowmenToken.safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_152\n      swap1\n        /* \"SnowmenSales.sol\":4678:4731  snowmenToken.safeTransferFrom(buyer, owner(), amount) */\n      swap4\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_150:\n        /* \"SnowmenSales.sol\":4807:4818  snowmenGame */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"SnowmenSales.sol\":4807:4835  snowmenGame.safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xf242432a\n        /* \"SnowmenSales.sol\":4858:4862  this */\n      address\n        /* \"SnowmenSales.sol\":4878:4883  buyer */\n      dup4\n        /* \"SnowmenSales.sol\":4898:4905  tokenId */\n      dup8\n        /* \"SnowmenSales.sol\":4920:4928  quantity */\n      dup7\n        /* \"SnowmenSales.sol\":4807:4956  snowmenGame.safeTransferFrom(... */\n      mload(0x40)\n      dup6\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_153\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_154\n      jump\t// in\n    tag_153:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_155\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_155:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_157\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_157:\n      pop\n      pop\n      pop\n      pop\n        /* \"SnowmenSales.sol\":4980:4985  buyer */\n      dup1\n        /* \"SnowmenSales.sol\":4972:5030  BuyItem(buyer, tokenId, amount, quantity, block.timestamp) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xb911d7e2ec7c85dd17dc5dbf9c086e0ade9a12a268015519a2a5f93ce5754fea\n        /* \"SnowmenSales.sol\":4987:4994  tokenId */\n      dup6\n        /* \"SnowmenSales.sol\":4996:5002  amount */\n      dup6\n        /* \"SnowmenSales.sol\":5004:5012  quantity */\n      dup6\n        /* \"SnowmenSales.sol\":5014:5029  block.timestamp */\n      timestamp\n        /* \"SnowmenSales.sol\":4972:5030  BuyItem(buyer, tokenId, amount, quantity, block.timestamp) */\n      mload(0x40)\n      tag_158\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_159\n      jump\t// in\n    tag_158:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"SnowmenSales.sol\":4119:5038  {... */\n      pop\n        /* \"SnowmenSales.sol\":4010:5038  function buyItem(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"SnowmenSales.sol\":892:937  mapping(uint256 => uint256) public tokenPrice */\n    tag_63:\n      mstore(0x20, 0x03)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"SnowmenSales.sol\":589:616  IERC1155 public snowmenGame */\n    tag_67:\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"SnowmenSales.sol\":5046:5855  function buyTicket() external payable {... */\n    tag_71:\n        /* \"SnowmenSales.sol\":739:749  0.01 ether */\n      0x2386f26fc10000\n        /* \"SnowmenSales.sol\":5103:5112  msg.value */\n      callvalue\n        /* \"SnowmenSales.sol\":5103:5128  msg.value >= TICKET_PRICE */\n      lt\n      iszero\n        /* \"SnowmenSales.sol\":5095:5149  require(msg.value >= TICKET_PRICE, \"price not enough\") */\n      tag_161\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_162\n      swap1\n      tag_163\n      jump\t// in\n    tag_162:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_161:\n        /* \"SnowmenSales.sol\":5480:5492  bool success */\n      0x00\n        /* \"SnowmenSales.sol\":5505:5516  snowmenGame */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"SnowmenSales.sol\":5497:5522  address(snowmenGame).call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"SnowmenSales.sol\":5653:5663  msg.sender */\n      caller\n        /* \"SnowmenSales.sol\":844:883  340282366920938463463374607431768211456 */\n      0x0100000000000000000000000000000000\n        /* \"SnowmenSales.sol\":799:800  1 */\n      0x01\n        /* \"SnowmenSales.sol\":5537:5740  abi.encodeWithSignature( // bytes type로 묶기... */\n      add(0x24, mload(0x40))\n      tag_164\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_165\n      jump\t// in\n    tag_164:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      and(not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff), 0x156e29f600000000000000000000000000000000000000000000000000000000)\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"SnowmenSales.sol\":5497:5751  address(snowmenGame).call(... */\n      mload(0x40)\n      tag_166\n      swap2\n      swap1\n      tag_167\n      jump\t// in\n    tag_166:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup7\n      gas\n      call\n      swap2\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_170\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_169)\n    tag_170:\n      0x60\n      swap2\n      pop\n    tag_169:\n      pop\n        /* \"SnowmenSales.sol\":5479:5751  (bool success,) = address(snowmenGame).call(... */\n      pop\n      swap1\n      pop\n        /* \"SnowmenSales.sol\":5770:5777  success */\n      dup1\n        /* \"SnowmenSales.sol\":5762:5793  require(success, \"mint failed\") */\n      tag_171\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_172\n      swap1\n      tag_173\n      jump\t// in\n    tag_172:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_171:\n        /* \"SnowmenSales.sol\":5819:5829  msg.sender */\n      caller\n        /* \"SnowmenSales.sol\":5809:5847  BuyTicket(msg.sender, block.timestamp) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x2a3164428cba5dad15f5ffe47e10cbefdcbbe9e269fd482753982ee8b2648c3e\n        /* \"SnowmenSales.sol\":5831:5846  block.timestamp */\n      timestamp\n        /* \"SnowmenSales.sol\":5809:5847  BuyTicket(msg.sender, block.timestamp) */\n      mload(0x40)\n      tag_174\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_174:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"SnowmenSales.sol\":5084:5855  {... */\n      pop\n        /* \"SnowmenSales.sol\":5046:5855  function buyTicket() external payable {... */\n      jump\t// out\n        /* \"SnowmenSales.sol\":2074:4002  function onERC1155Received(... */\n    tag_76:\n        /* \"SnowmenSales.sol\":2485:2491  bytes4 */\n      0x00\n        /* \"SnowmenSales.sol\":2974:2985  snowmenGame */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"SnowmenSales.sol\":2952:2986  msg.sender == address(snowmenGame) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"SnowmenSales.sol\":2952:2962  msg.sender */\n      caller\n        /* \"SnowmenSales.sol\":2952:2986  msg.sender == address(snowmenGame) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"SnowmenSales.sol\":2944:3007  require(msg.sender == address(snowmenGame), \"incorrect sender\") */\n      tag_176\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_177\n      swap1\n      tag_178\n      jump\t// in\n    tag_177:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_176:\n        /* \"SnowmenSales.sol\":3248:3249  0 */\n      0x00\n        /* \"SnowmenSales.sol\":3239:3244  value */\n      dup4\n        /* \"SnowmenSales.sol\":3239:3249  value != 0 */\n      sub\n        /* \"SnowmenSales.sol\":3231:3270  require(value != 0, \"quantity is zero\") */\n      tag_179\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_180\n      swap1\n      tag_181\n      jump\t// in\n    tag_180:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_179:\n        /* \"SnowmenSales.sol\":3385:3437  onERC1155ReceivedExecuted(operator, from, id, value) */\n      0x1650d49bac940346e34bac1dde642598b57ba618d7a0c005a91257851cae2c24\n        /* \"SnowmenSales.sol\":3411:3419  operator */\n      dup7\n        /* \"SnowmenSales.sol\":3421:3425  from */\n      dup7\n        /* \"SnowmenSales.sol\":3427:3429  id */\n      dup7\n        /* \"SnowmenSales.sol\":3431:3436  value */\n      dup7\n        /* \"SnowmenSales.sol\":3385:3437  onERC1155ReceivedExecuted(operator, from, id, value) */\n      mload(0x40)\n      tag_182\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_183\n      jump\t// in\n    tag_182:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"SnowmenSales.sol\":3673:3704  this.onERC1155Received.selector */\n      shl(0xe0, 0xf23a6e61)\n        /* \"SnowmenSales.sol\":3666:3704  return this.onERC1155Received.selector */\n      swap1\n      pop\n        /* \"SnowmenSales.sol\":2074:4002  function onERC1155Received(... */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_82:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_185\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_95\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_185:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_187\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_188\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_188:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_187:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_189\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_115\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_189:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"SnowmenSales.sol\":6282:6597  function setPrice(uint256 tokenId, uint256 price) external onlyOwner{... */\n    tag_87:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_191\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_95\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_191:\n        /* \"SnowmenSales.sol\":6380:6381  0 */\n      0x00\n        /* \"SnowmenSales.sol\":6369:6376  tokenId */\n      dup3\n        /* \"SnowmenSales.sol\":6369:6381  tokenId != 0 */\n      sub\n        /* \"SnowmenSales.sol\":6361:6401  require(tokenId != 0, \"tokenId is zero\") */\n      tag_193\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_194\n      swap1\n      tag_195\n      jump\t// in\n    tag_194:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_193:\n        /* \"SnowmenSales.sol\":6429:6430  0 */\n      0x00\n        /* \"SnowmenSales.sol\":6420:6425  price */\n      dup2\n        /* \"SnowmenSales.sol\":6420:6430  price != 0 */\n      sub\n        /* \"SnowmenSales.sol\":6412:6448  require(price != 0, \"price is zero\") */\n      tag_196\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_197\n      swap1\n      tag_198\n      jump\t// in\n    tag_197:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_196:\n        /* \"SnowmenSales.sol\":6481:6486  price */\n      dup1\n        /* \"SnowmenSales.sol\":6459:6469  tokenPrice */\n      0x03\n        /* \"SnowmenSales.sol\":6459:6478  tokenPrice[tokenId] */\n      0x00\n        /* \"SnowmenSales.sol\":6470:6477  tokenId */\n      dup5\n        /* \"SnowmenSales.sol\":6459:6478  tokenPrice[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"SnowmenSales.sol\":6459:6486  tokenPrice[tokenId] = price */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"SnowmenSales.sol\":6502:6543  SetPrice(tokenId, price, block.timestamp) */\n      0x18e75bb8c091a6448c12a2023f055b2714c151b941a91df8b9938788769ffe13\n        /* \"SnowmenSales.sol\":6511:6518  tokenId */\n      dup3\n        /* \"SnowmenSales.sol\":6520:6525  price */\n      dup3\n        /* \"SnowmenSales.sol\":6527:6542  block.timestamp */\n      timestamp\n        /* \"SnowmenSales.sol\":6502:6543  SetPrice(tokenId, price, block.timestamp) */\n      mload(0x40)\n      tag_199\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_200\n      jump\t// in\n    tag_199:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"SnowmenSales.sol\":6282:6597  function setPrice(uint256 tokenId, uint256 price) external onlyOwner{... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":763:909  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n    tag_91:\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":839:843  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":877:902  type(IERC165).interfaceId */\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":862:902  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":862:873  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":862:902  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":855:902  return interfaceId == type(IERC165).interfaceId */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":763:909  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_95:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_203\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_204\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_203:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_205\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_44\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_205:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_206\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_207\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_204\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_207:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_208\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_208:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_206:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_115:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x00\n      dup1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1670:1858  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n    tag_152:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1770:1851  _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value))) */\n      tag_211\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1790:1795  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1812:1817  token */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1812:1830  token.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1833:1837  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1839:1841  to */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1843:1848  value */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1797:1850  abi.encodeCall(token.transferFrom, (from, to, value)) */\n      add(0x24, mload(0x40))\n      tag_212\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_213\n      jump\t// in\n    tag_212:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap2\n      pop\n      0xe0\n      shl\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1770:1789  _callOptionalReturn */\n      tag_214\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1770:1851  _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value))) */\n      jump\t// in\n    tag_211:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1670:1858  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_204:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7738:8458  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_214:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7818:7836  uint256 returnSize */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7846:7865  uint256 returnValue */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7984:7988  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7981:7982  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7974:7978  data */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7968:7979  mload(data) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7961:7965  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7955:7959  data */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7951:7966  add(data, 0x20) */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7948:7949  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7941:7946  token */\n      dup9\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7934:7939  gas() */\n      gas\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7929:7989  call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20) */\n      call\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8041:8048  success */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8031:8207  if iszero(success) {... */\n      tag_217\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8085:8089  0x40 */\n      0x40\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8079:8090  mload(0x40) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8130:8146  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8127:8128  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8122:8125  ptr */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8107:8147  returndatacopy(ptr, 0, returndatasize()) */\n      returndatacopy\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8176:8192  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8171:8174  ptr */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8164:8193  revert(ptr, returndatasize()) */\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8031:8207  if iszero(success) {... */\n    tag_217:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8234:8250  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8220:8250  returnSize := returndatasize() */\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8284:8285  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8278:8286  mload(0) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8263:8286  returnValue := mload(0) */\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7900:8296  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8324:8325  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8310:8320  returnSize */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8310:8325  returnSize == 0 */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8310:8378  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n      tag_218\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8377:8378  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8362:8373  returnValue */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8362:8378  returnValue != 1 */\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8310:8378  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n      jump(tag_219)\n    tag_218:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8358:8359  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8336:8341  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8328:8354  address(token).code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8328:8359  address(token).code.length == 0 */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8310:8378  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n    tag_219:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8306:8452  if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {... */\n      iszero\n      tag_220\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8434:8439  token */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8401:8441  SafeERC20FailedOperation(address(token)) */\n      mload(0x40)\n      0x5274afe700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_221\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_221:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8306:8452  if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {... */\n    tag_220:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7808:8458  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7738:8458  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:82   */\n    tag_222:\n        /* \"#utility.yul\":40:46   */\n      0x00\n        /* \"#utility.yul\":73:75   */\n      0x40\n        /* \"#utility.yul\":67:76   */\n      mload\n        /* \"#utility.yul\":57:76   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:82   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_223:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_224:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:483   */\n    tag_225:\n        /* \"#utility.yul\":370:377   */\n      0x00\n        /* \"#utility.yul\":410:476   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":403:408   */\n      dup3\n        /* \"#utility.yul\":399:477   */\n      and\n        /* \"#utility.yul\":388:477   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:483   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":489:609   */\n    tag_226:\n        /* \"#utility.yul\":561:584   */\n      tag_310\n        /* \"#utility.yul\":578:583   */\n      dup2\n        /* \"#utility.yul\":561:584   */\n      tag_225\n      jump\t// in\n    tag_310:\n        /* \"#utility.yul\":554:559   */\n      dup2\n        /* \"#utility.yul\":551:585   */\n      eq\n        /* \"#utility.yul\":541:603   */\n      tag_311\n      jumpi\n        /* \"#utility.yul\":599:600   */\n      0x00\n        /* \"#utility.yul\":596:597   */\n      dup1\n        /* \"#utility.yul\":589:601   */\n      revert\n        /* \"#utility.yul\":541:603   */\n    tag_311:\n        /* \"#utility.yul\":489:609   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":615:752   */\n    tag_227:\n        /* \"#utility.yul\":660:665   */\n      0x00\n        /* \"#utility.yul\":698:704   */\n      dup2\n        /* \"#utility.yul\":685:705   */\n      calldataload\n        /* \"#utility.yul\":676:705   */\n      swap1\n      pop\n        /* \"#utility.yul\":714:746   */\n      tag_313\n        /* \"#utility.yul\":740:745   */\n      dup2\n        /* \"#utility.yul\":714:746   */\n      tag_226\n      jump\t// in\n    tag_313:\n        /* \"#utility.yul\":615:752   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":758:1085   */\n    tag_22:\n        /* \"#utility.yul\":816:822   */\n      0x00\n        /* \"#utility.yul\":865:867   */\n      0x20\n        /* \"#utility.yul\":853:862   */\n      dup3\n        /* \"#utility.yul\":844:851   */\n      dup5\n        /* \"#utility.yul\":840:863   */\n      sub\n        /* \"#utility.yul\":836:868   */\n      slt\n        /* \"#utility.yul\":833:952   */\n      iszero\n      tag_315\n      jumpi\n        /* \"#utility.yul\":871:950   */\n      tag_316\n      tag_223\n      jump\t// in\n    tag_316:\n        /* \"#utility.yul\":833:952   */\n    tag_315:\n        /* \"#utility.yul\":991:992   */\n      0x00\n        /* \"#utility.yul\":1016:1068   */\n      tag_317\n        /* \"#utility.yul\":1060:1067   */\n      dup5\n        /* \"#utility.yul\":1051:1057   */\n      dup3\n        /* \"#utility.yul\":1040:1049   */\n      dup6\n        /* \"#utility.yul\":1036:1058   */\n      add\n        /* \"#utility.yul\":1016:1068   */\n      tag_227\n      jump\t// in\n    tag_317:\n        /* \"#utility.yul\":1006:1068   */\n      swap2\n      pop\n        /* \"#utility.yul\":962:1078   */\n      pop\n        /* \"#utility.yul\":758:1085   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1091:1181   */\n    tag_228:\n        /* \"#utility.yul\":1125:1132   */\n      0x00\n        /* \"#utility.yul\":1168:1173   */\n      dup2\n        /* \"#utility.yul\":1161:1174   */\n      iszero\n        /* \"#utility.yul\":1154:1175   */\n      iszero\n        /* \"#utility.yul\":1143:1175   */\n      swap1\n      pop\n        /* \"#utility.yul\":1091:1181   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1187:1296   */\n    tag_229:\n        /* \"#utility.yul\":1268:1289   */\n      tag_320\n        /* \"#utility.yul\":1283:1288   */\n      dup2\n        /* \"#utility.yul\":1268:1289   */\n      tag_228\n      jump\t// in\n    tag_320:\n        /* \"#utility.yul\":1263:1266   */\n      dup3\n        /* \"#utility.yul\":1256:1290   */\n      mstore\n        /* \"#utility.yul\":1187:1296   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1302:1512   */\n    tag_25:\n        /* \"#utility.yul\":1389:1393   */\n      0x00\n        /* \"#utility.yul\":1427:1429   */\n      0x20\n        /* \"#utility.yul\":1416:1425   */\n      dup3\n        /* \"#utility.yul\":1412:1430   */\n      add\n        /* \"#utility.yul\":1404:1430   */\n      swap1\n      pop\n        /* \"#utility.yul\":1440:1505   */\n      tag_322\n        /* \"#utility.yul\":1502:1503   */\n      0x00\n        /* \"#utility.yul\":1491:1500   */\n      dup4\n        /* \"#utility.yul\":1487:1504   */\n      add\n        /* \"#utility.yul\":1478:1484   */\n      dup5\n        /* \"#utility.yul\":1440:1505   */\n      tag_229\n      jump\t// in\n    tag_322:\n        /* \"#utility.yul\":1302:1512   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1518:1595   */\n    tag_230:\n        /* \"#utility.yul\":1555:1562   */\n      0x00\n        /* \"#utility.yul\":1584:1589   */\n      dup2\n        /* \"#utility.yul\":1573:1589   */\n      swap1\n      pop\n        /* \"#utility.yul\":1518:1595   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1601:1719   */\n    tag_231:\n        /* \"#utility.yul\":1688:1712   */\n      tag_325\n        /* \"#utility.yul\":1706:1711   */\n      dup2\n        /* \"#utility.yul\":1688:1712   */\n      tag_230\n      jump\t// in\n    tag_325:\n        /* \"#utility.yul\":1683:1686   */\n      dup3\n        /* \"#utility.yul\":1676:1713   */\n      mstore\n        /* \"#utility.yul\":1601:1719   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1725:1947   */\n    tag_30:\n        /* \"#utility.yul\":1818:1822   */\n      0x00\n        /* \"#utility.yul\":1856:1858   */\n      0x20\n        /* \"#utility.yul\":1845:1854   */\n      dup3\n        /* \"#utility.yul\":1841:1859   */\n      add\n        /* \"#utility.yul\":1833:1859   */\n      swap1\n      pop\n        /* \"#utility.yul\":1869:1940   */\n      tag_327\n        /* \"#utility.yul\":1937:1938   */\n      0x00\n        /* \"#utility.yul\":1926:1935   */\n      dup4\n        /* \"#utility.yul\":1922:1939   */\n      add\n        /* \"#utility.yul\":1913:1919   */\n      dup5\n        /* \"#utility.yul\":1869:1940   */\n      tag_231\n      jump\t// in\n    tag_327:\n        /* \"#utility.yul\":1725:1947   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1953:2079   */\n    tag_232:\n        /* \"#utility.yul\":1990:1997   */\n      0x00\n        /* \"#utility.yul\":2030:2072   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":2023:2028   */\n      dup3\n        /* \"#utility.yul\":2019:2073   */\n      and\n        /* \"#utility.yul\":2008:2073   */\n      swap1\n      pop\n        /* \"#utility.yul\":1953:2079   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2085:2145   */\n    tag_233:\n        /* \"#utility.yul\":2113:2116   */\n      0x00\n        /* \"#utility.yul\":2134:2139   */\n      dup2\n        /* \"#utility.yul\":2127:2139   */\n      swap1\n      pop\n        /* \"#utility.yul\":2085:2145   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2151:2293   */\n    tag_234:\n        /* \"#utility.yul\":2201:2210   */\n      0x00\n        /* \"#utility.yul\":2234:2287   */\n      tag_331\n        /* \"#utility.yul\":2252:2286   */\n      tag_332\n        /* \"#utility.yul\":2261:2285   */\n      tag_333\n        /* \"#utility.yul\":2279:2284   */\n      dup5\n        /* \"#utility.yul\":2261:2285   */\n      tag_232\n      jump\t// in\n    tag_333:\n        /* \"#utility.yul\":2252:2286   */\n      tag_233\n      jump\t// in\n    tag_332:\n        /* \"#utility.yul\":2234:2287   */\n      tag_232\n      jump\t// in\n    tag_331:\n        /* \"#utility.yul\":2221:2287   */\n      swap1\n      pop\n        /* \"#utility.yul\":2151:2293   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2299:2425   */\n    tag_235:\n        /* \"#utility.yul\":2349:2358   */\n      0x00\n        /* \"#utility.yul\":2382:2419   */\n      tag_335\n        /* \"#utility.yul\":2413:2418   */\n      dup3\n        /* \"#utility.yul\":2382:2419   */\n      tag_234\n      jump\t// in\n    tag_335:\n        /* \"#utility.yul\":2369:2419   */\n      swap1\n      pop\n        /* \"#utility.yul\":2299:2425   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2431:2571   */\n    tag_236:\n        /* \"#utility.yul\":2495:2504   */\n      0x00\n        /* \"#utility.yul\":2528:2565   */\n      tag_337\n        /* \"#utility.yul\":2559:2564   */\n      dup3\n        /* \"#utility.yul\":2528:2565   */\n      tag_235\n      jump\t// in\n    tag_337:\n        /* \"#utility.yul\":2515:2565   */\n      swap1\n      pop\n        /* \"#utility.yul\":2431:2571   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2577:2736   */\n    tag_237:\n        /* \"#utility.yul\":2678:2729   */\n      tag_339\n        /* \"#utility.yul\":2723:2728   */\n      dup2\n        /* \"#utility.yul\":2678:2729   */\n      tag_236\n      jump\t// in\n    tag_339:\n        /* \"#utility.yul\":2673:2676   */\n      dup3\n        /* \"#utility.yul\":2666:2730   */\n      mstore\n        /* \"#utility.yul\":2577:2736   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2742:2992   */\n    tag_35:\n        /* \"#utility.yul\":2849:2853   */\n      0x00\n        /* \"#utility.yul\":2887:2889   */\n      0x20\n        /* \"#utility.yul\":2876:2885   */\n      dup3\n        /* \"#utility.yul\":2872:2890   */\n      add\n        /* \"#utility.yul\":2864:2890   */\n      swap1\n      pop\n        /* \"#utility.yul\":2900:2985   */\n      tag_341\n        /* \"#utility.yul\":2982:2983   */\n      0x00\n        /* \"#utility.yul\":2971:2980   */\n      dup4\n        /* \"#utility.yul\":2967:2984   */\n      add\n        /* \"#utility.yul\":2958:2964   */\n      dup5\n        /* \"#utility.yul\":2900:2985   */\n      tag_237\n      jump\t// in\n    tag_341:\n        /* \"#utility.yul\":2742:2992   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2998:3094   */\n    tag_238:\n        /* \"#utility.yul\":3035:3042   */\n      0x00\n        /* \"#utility.yul\":3064:3088   */\n      tag_343\n        /* \"#utility.yul\":3082:3087   */\n      dup3\n        /* \"#utility.yul\":3064:3088   */\n      tag_232\n      jump\t// in\n    tag_343:\n        /* \"#utility.yul\":3053:3088   */\n      swap1\n      pop\n        /* \"#utility.yul\":2998:3094   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3100:3218   */\n    tag_239:\n        /* \"#utility.yul\":3187:3211   */\n      tag_345\n        /* \"#utility.yul\":3205:3210   */\n      dup2\n        /* \"#utility.yul\":3187:3211   */\n      tag_238\n      jump\t// in\n    tag_345:\n        /* \"#utility.yul\":3182:3185   */\n      dup3\n        /* \"#utility.yul\":3175:3212   */\n      mstore\n        /* \"#utility.yul\":3100:3218   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3224:3446   */\n    tag_46:\n        /* \"#utility.yul\":3317:3321   */\n      0x00\n        /* \"#utility.yul\":3355:3357   */\n      0x20\n        /* \"#utility.yul\":3344:3353   */\n      dup3\n        /* \"#utility.yul\":3340:3358   */\n      add\n        /* \"#utility.yul\":3332:3358   */\n      swap1\n      pop\n        /* \"#utility.yul\":3368:3439   */\n      tag_347\n        /* \"#utility.yul\":3436:3437   */\n      0x00\n        /* \"#utility.yul\":3425:3434   */\n      dup4\n        /* \"#utility.yul\":3421:3438   */\n      add\n        /* \"#utility.yul\":3412:3418   */\n      dup5\n        /* \"#utility.yul\":3368:3439   */\n      tag_239\n      jump\t// in\n    tag_347:\n        /* \"#utility.yul\":3224:3446   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3452:3574   */\n    tag_240:\n        /* \"#utility.yul\":3525:3549   */\n      tag_349\n        /* \"#utility.yul\":3543:3548   */\n      dup2\n        /* \"#utility.yul\":3525:3549   */\n      tag_238\n      jump\t// in\n    tag_349:\n        /* \"#utility.yul\":3518:3523   */\n      dup2\n        /* \"#utility.yul\":3515:3550   */\n      eq\n        /* \"#utility.yul\":3505:3568   */\n      tag_350\n      jumpi\n        /* \"#utility.yul\":3564:3565   */\n      0x00\n        /* \"#utility.yul\":3561:3562   */\n      dup1\n        /* \"#utility.yul\":3554:3566   */\n      revert\n        /* \"#utility.yul\":3505:3568   */\n    tag_350:\n        /* \"#utility.yul\":3452:3574   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3580:3719   */\n    tag_241:\n        /* \"#utility.yul\":3626:3631   */\n      0x00\n        /* \"#utility.yul\":3664:3670   */\n      dup2\n        /* \"#utility.yul\":3651:3671   */\n      calldataload\n        /* \"#utility.yul\":3642:3671   */\n      swap1\n      pop\n        /* \"#utility.yul\":3680:3713   */\n      tag_352\n        /* \"#utility.yul\":3707:3712   */\n      dup2\n        /* \"#utility.yul\":3680:3713   */\n      tag_240\n      jump\t// in\n    tag_352:\n        /* \"#utility.yul\":3580:3719   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3725:3842   */\n    tag_242:\n        /* \"#utility.yul\":3834:3835   */\n      0x00\n        /* \"#utility.yul\":3831:3832   */\n      dup1\n        /* \"#utility.yul\":3824:3836   */\n      revert\n        /* \"#utility.yul\":3848:3950   */\n    tag_243:\n        /* \"#utility.yul\":3889:3895   */\n      0x00\n        /* \"#utility.yul\":3940:3942   */\n      0x1f\n        /* \"#utility.yul\":3936:3943   */\n      not\n        /* \"#utility.yul\":3931:3933   */\n      0x1f\n        /* \"#utility.yul\":3924:3929   */\n      dup4\n        /* \"#utility.yul\":3920:3934   */\n      add\n        /* \"#utility.yul\":3916:3944   */\n      and\n        /* \"#utility.yul\":3906:3944   */\n      swap1\n      pop\n        /* \"#utility.yul\":3848:3950   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3956:4136   */\n    tag_244:\n        /* \"#utility.yul\":4004:4081   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4001:4002   */\n      0x00\n        /* \"#utility.yul\":3994:4082   */\n      mstore\n        /* \"#utility.yul\":4101:4105   */\n      0x41\n        /* \"#utility.yul\":4098:4099   */\n      0x04\n        /* \"#utility.yul\":4091:4106   */\n      mstore\n        /* \"#utility.yul\":4125:4129   */\n      0x24\n        /* \"#utility.yul\":4122:4123   */\n      0x00\n        /* \"#utility.yul\":4115:4130   */\n      revert\n        /* \"#utility.yul\":4142:4423   */\n    tag_245:\n        /* \"#utility.yul\":4225:4252   */\n      tag_357\n        /* \"#utility.yul\":4247:4251   */\n      dup3\n        /* \"#utility.yul\":4225:4252   */\n      tag_243\n      jump\t// in\n    tag_357:\n        /* \"#utility.yul\":4217:4223   */\n      dup2\n        /* \"#utility.yul\":4213:4253   */\n      add\n        /* \"#utility.yul\":4355:4361   */\n      dup2\n        /* \"#utility.yul\":4343:4353   */\n      dup2\n        /* \"#utility.yul\":4340:4362   */\n      lt\n        /* \"#utility.yul\":4319:4337   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4307:4317   */\n      dup3\n        /* \"#utility.yul\":4304:4338   */\n      gt\n        /* \"#utility.yul\":4301:4363   */\n      or\n        /* \"#utility.yul\":4298:4386   */\n      iszero\n      tag_358\n      jumpi\n        /* \"#utility.yul\":4366:4384   */\n      tag_359\n      tag_244\n      jump\t// in\n    tag_359:\n        /* \"#utility.yul\":4298:4386   */\n    tag_358:\n        /* \"#utility.yul\":4406:4416   */\n      dup1\n        /* \"#utility.yul\":4402:4404   */\n      0x40\n        /* \"#utility.yul\":4395:4417   */\n      mstore\n        /* \"#utility.yul\":4185:4423   */\n      pop\n        /* \"#utility.yul\":4142:4423   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4429:4558   */\n    tag_246:\n        /* \"#utility.yul\":4463:4469   */\n      0x00\n        /* \"#utility.yul\":4490:4510   */\n      tag_361\n      tag_222\n      jump\t// in\n    tag_361:\n        /* \"#utility.yul\":4480:4510   */\n      swap1\n      pop\n        /* \"#utility.yul\":4519:4552   */\n      tag_362\n        /* \"#utility.yul\":4547:4551   */\n      dup3\n        /* \"#utility.yul\":4539:4545   */\n      dup3\n        /* \"#utility.yul\":4519:4552   */\n      tag_245\n      jump\t// in\n    tag_362:\n        /* \"#utility.yul\":4429:4558   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4564:4875   */\n    tag_247:\n        /* \"#utility.yul\":4641:4645   */\n      0x00\n        /* \"#utility.yul\":4731:4749   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4723:4729   */\n      dup3\n        /* \"#utility.yul\":4720:4750   */\n      gt\n        /* \"#utility.yul\":4717:4773   */\n      iszero\n      tag_364\n      jumpi\n        /* \"#utility.yul\":4753:4771   */\n      tag_365\n      tag_244\n      jump\t// in\n    tag_365:\n        /* \"#utility.yul\":4717:4773   */\n    tag_364:\n        /* \"#utility.yul\":4803:4807   */\n      0x20\n        /* \"#utility.yul\":4795:4801   */\n      dup3\n        /* \"#utility.yul\":4791:4808   */\n      mul\n        /* \"#utility.yul\":4783:4808   */\n      swap1\n      pop\n        /* \"#utility.yul\":4863:4867   */\n      0x20\n        /* \"#utility.yul\":4857:4861   */\n      dup2\n        /* \"#utility.yul\":4853:4868   */\n      add\n        /* \"#utility.yul\":4845:4868   */\n      swap1\n      pop\n        /* \"#utility.yul\":4564:4875   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4881:4998   */\n    tag_248:\n        /* \"#utility.yul\":4990:4991   */\n      0x00\n        /* \"#utility.yul\":4987:4988   */\n      dup1\n        /* \"#utility.yul\":4980:4992   */\n      revert\n        /* \"#utility.yul\":5004:5126   */\n    tag_249:\n        /* \"#utility.yul\":5077:5101   */\n      tag_368\n        /* \"#utility.yul\":5095:5100   */\n      dup2\n        /* \"#utility.yul\":5077:5101   */\n      tag_230\n      jump\t// in\n    tag_368:\n        /* \"#utility.yul\":5070:5075   */\n      dup2\n        /* \"#utility.yul\":5067:5102   */\n      eq\n        /* \"#utility.yul\":5057:5120   */\n      tag_369\n      jumpi\n        /* \"#utility.yul\":5116:5117   */\n      0x00\n        /* \"#utility.yul\":5113:5114   */\n      dup1\n        /* \"#utility.yul\":5106:5118   */\n      revert\n        /* \"#utility.yul\":5057:5120   */\n    tag_369:\n        /* \"#utility.yul\":5004:5126   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5132:5271   */\n    tag_250:\n        /* \"#utility.yul\":5178:5183   */\n      0x00\n        /* \"#utility.yul\":5216:5222   */\n      dup2\n        /* \"#utility.yul\":5203:5223   */\n      calldataload\n        /* \"#utility.yul\":5194:5223   */\n      swap1\n      pop\n        /* \"#utility.yul\":5232:5265   */\n      tag_371\n        /* \"#utility.yul\":5259:5264   */\n      dup2\n        /* \"#utility.yul\":5232:5265   */\n      tag_249\n      jump\t// in\n    tag_371:\n        /* \"#utility.yul\":5132:5271   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5294:6004   */\n    tag_251:\n        /* \"#utility.yul\":5390:5395   */\n      0x00\n        /* \"#utility.yul\":5415:5496   */\n      tag_373\n        /* \"#utility.yul\":5431:5495   */\n      tag_374\n        /* \"#utility.yul\":5488:5494   */\n      dup5\n        /* \"#utility.yul\":5431:5495   */\n      tag_247\n      jump\t// in\n    tag_374:\n        /* \"#utility.yul\":5415:5496   */\n      tag_246\n      jump\t// in\n    tag_373:\n        /* \"#utility.yul\":5406:5496   */\n      swap1\n      pop\n        /* \"#utility.yul\":5516:5521   */\n      dup1\n        /* \"#utility.yul\":5545:5551   */\n      dup4\n        /* \"#utility.yul\":5538:5543   */\n      dup3\n        /* \"#utility.yul\":5531:5552   */\n      mstore\n        /* \"#utility.yul\":5579:5583   */\n      0x20\n        /* \"#utility.yul\":5572:5577   */\n      dup3\n        /* \"#utility.yul\":5568:5584   */\n      add\n        /* \"#utility.yul\":5561:5584   */\n      swap1\n      pop\n        /* \"#utility.yul\":5632:5636   */\n      0x20\n        /* \"#utility.yul\":5624:5630   */\n      dup5\n        /* \"#utility.yul\":5620:5637   */\n      mul\n        /* \"#utility.yul\":5612:5618   */\n      dup4\n        /* \"#utility.yul\":5608:5638   */\n      add\n        /* \"#utility.yul\":5661:5664   */\n      dup6\n        /* \"#utility.yul\":5653:5659   */\n      dup2\n        /* \"#utility.yul\":5650:5665   */\n      gt\n        /* \"#utility.yul\":5647:5769   */\n      iszero\n      tag_375\n      jumpi\n        /* \"#utility.yul\":5680:5759   */\n      tag_376\n      tag_248\n      jump\t// in\n    tag_376:\n        /* \"#utility.yul\":5647:5769   */\n    tag_375:\n        /* \"#utility.yul\":5795:5801   */\n      dup4\n        /* \"#utility.yul\":5778:5998   */\n    tag_377:\n        /* \"#utility.yul\":5812:5818   */\n      dup2\n        /* \"#utility.yul\":5807:5810   */\n      dup2\n        /* \"#utility.yul\":5804:5819   */\n      lt\n        /* \"#utility.yul\":5778:5998   */\n      iszero\n      tag_379\n      jumpi\n        /* \"#utility.yul\":5887:5890   */\n      dup1\n        /* \"#utility.yul\":5916:5953   */\n      tag_380\n        /* \"#utility.yul\":5949:5952   */\n      dup9\n        /* \"#utility.yul\":5937:5947   */\n      dup3\n        /* \"#utility.yul\":5916:5953   */\n      tag_250\n      jump\t// in\n    tag_380:\n        /* \"#utility.yul\":5911:5914   */\n      dup5\n        /* \"#utility.yul\":5904:5954   */\n      mstore\n        /* \"#utility.yul\":5983:5987   */\n      0x20\n        /* \"#utility.yul\":5978:5981   */\n      dup5\n        /* \"#utility.yul\":5974:5988   */\n      add\n        /* \"#utility.yul\":5967:5988   */\n      swap4\n      pop\n        /* \"#utility.yul\":5854:5998   */\n      pop\n        /* \"#utility.yul\":5838:5842   */\n      0x20\n        /* \"#utility.yul\":5833:5836   */\n      dup2\n        /* \"#utility.yul\":5829:5843   */\n      add\n        /* \"#utility.yul\":5822:5843   */\n      swap1\n      pop\n        /* \"#utility.yul\":5778:5998   */\n      jump(tag_377)\n    tag_379:\n        /* \"#utility.yul\":5782:5803   */\n      pop\n        /* \"#utility.yul\":5396:6004   */\n      pop\n      pop\n        /* \"#utility.yul\":5294:6004   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6027:6397   */\n    tag_252:\n        /* \"#utility.yul\":6098:6103   */\n      0x00\n        /* \"#utility.yul\":6147:6150   */\n      dup3\n        /* \"#utility.yul\":6140:6144   */\n      0x1f\n        /* \"#utility.yul\":6132:6138   */\n      dup4\n        /* \"#utility.yul\":6128:6145   */\n      add\n        /* \"#utility.yul\":6124:6151   */\n      slt\n        /* \"#utility.yul\":6114:6236   */\n      tag_382\n      jumpi\n        /* \"#utility.yul\":6155:6234   */\n      tag_383\n      tag_242\n      jump\t// in\n    tag_383:\n        /* \"#utility.yul\":6114:6236   */\n    tag_382:\n        /* \"#utility.yul\":6272:6278   */\n      dup2\n        /* \"#utility.yul\":6259:6279   */\n      calldataload\n        /* \"#utility.yul\":6297:6391   */\n      tag_384\n        /* \"#utility.yul\":6387:6390   */\n      dup5\n        /* \"#utility.yul\":6379:6385   */\n      dup3\n        /* \"#utility.yul\":6372:6376   */\n      0x20\n        /* \"#utility.yul\":6364:6370   */\n      dup7\n        /* \"#utility.yul\":6360:6377   */\n      add\n        /* \"#utility.yul\":6297:6391   */\n      tag_251\n      jump\t// in\n    tag_384:\n        /* \"#utility.yul\":6288:6391   */\n      swap2\n      pop\n        /* \"#utility.yul\":6104:6397   */\n      pop\n        /* \"#utility.yul\":6027:6397   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6403:6520   */\n    tag_253:\n        /* \"#utility.yul\":6512:6513   */\n      0x00\n        /* \"#utility.yul\":6509:6510   */\n      dup1\n        /* \"#utility.yul\":6502:6514   */\n      revert\n        /* \"#utility.yul\":6526:6833   */\n    tag_254:\n        /* \"#utility.yul\":6587:6591   */\n      0x00\n        /* \"#utility.yul\":6677:6695   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":6669:6675   */\n      dup3\n        /* \"#utility.yul\":6666:6696   */\n      gt\n        /* \"#utility.yul\":6663:6719   */\n      iszero\n      tag_387\n      jumpi\n        /* \"#utility.yul\":6699:6717   */\n      tag_388\n      tag_244\n      jump\t// in\n    tag_388:\n        /* \"#utility.yul\":6663:6719   */\n    tag_387:\n        /* \"#utility.yul\":6737:6766   */\n      tag_389\n        /* \"#utility.yul\":6759:6765   */\n      dup3\n        /* \"#utility.yul\":6737:6766   */\n      tag_243\n      jump\t// in\n    tag_389:\n        /* \"#utility.yul\":6729:6766   */\n      swap1\n      pop\n        /* \"#utility.yul\":6821:6825   */\n      0x20\n        /* \"#utility.yul\":6815:6819   */\n      dup2\n        /* \"#utility.yul\":6811:6826   */\n      add\n        /* \"#utility.yul\":6803:6826   */\n      swap1\n      pop\n        /* \"#utility.yul\":6526:6833   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6839:6987   */\n    tag_255:\n        /* \"#utility.yul\":6937:6943   */\n      dup3\n        /* \"#utility.yul\":6932:6935   */\n      dup2\n        /* \"#utility.yul\":6927:6930   */\n      dup4\n        /* \"#utility.yul\":6914:6944   */\n      calldatacopy\n        /* \"#utility.yul\":6978:6979   */\n      0x00\n        /* \"#utility.yul\":6969:6975   */\n      dup4\n        /* \"#utility.yul\":6964:6967   */\n      dup4\n        /* \"#utility.yul\":6960:6976   */\n      add\n        /* \"#utility.yul\":6953:6980   */\n      mstore\n        /* \"#utility.yul\":6839:6987   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6993:7416   */\n    tag_256:\n        /* \"#utility.yul\":7070:7075   */\n      0x00\n        /* \"#utility.yul\":7095:7160   */\n      tag_392\n        /* \"#utility.yul\":7111:7159   */\n      tag_393\n        /* \"#utility.yul\":7152:7158   */\n      dup5\n        /* \"#utility.yul\":7111:7159   */\n      tag_254\n      jump\t// in\n    tag_393:\n        /* \"#utility.yul\":7095:7160   */\n      tag_246\n      jump\t// in\n    tag_392:\n        /* \"#utility.yul\":7086:7160   */\n      swap1\n      pop\n        /* \"#utility.yul\":7183:7189   */\n      dup3\n        /* \"#utility.yul\":7176:7181   */\n      dup2\n        /* \"#utility.yul\":7169:7190   */\n      mstore\n        /* \"#utility.yul\":7221:7225   */\n      0x20\n        /* \"#utility.yul\":7214:7219   */\n      dup2\n        /* \"#utility.yul\":7210:7226   */\n      add\n        /* \"#utility.yul\":7259:7262   */\n      dup5\n        /* \"#utility.yul\":7250:7256   */\n      dup5\n        /* \"#utility.yul\":7245:7248   */\n      dup5\n        /* \"#utility.yul\":7241:7257   */\n      add\n        /* \"#utility.yul\":7238:7263   */\n      gt\n        /* \"#utility.yul\":7235:7347   */\n      iszero\n      tag_394\n      jumpi\n        /* \"#utility.yul\":7266:7345   */\n      tag_395\n      tag_253\n      jump\t// in\n    tag_395:\n        /* \"#utility.yul\":7235:7347   */\n    tag_394:\n        /* \"#utility.yul\":7356:7410   */\n      tag_396\n        /* \"#utility.yul\":7403:7409   */\n      dup5\n        /* \"#utility.yul\":7398:7401   */\n      dup3\n        /* \"#utility.yul\":7393:7396   */\n      dup6\n        /* \"#utility.yul\":7356:7410   */\n      tag_255\n      jump\t// in\n    tag_396:\n        /* \"#utility.yul\":7076:7416   */\n      pop\n        /* \"#utility.yul\":6993:7416   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7435:7773   */\n    tag_257:\n        /* \"#utility.yul\":7490:7495   */\n      0x00\n        /* \"#utility.yul\":7539:7542   */\n      dup3\n        /* \"#utility.yul\":7532:7536   */\n      0x1f\n        /* \"#utility.yul\":7524:7530   */\n      dup4\n        /* \"#utility.yul\":7520:7537   */\n      add\n        /* \"#utility.yul\":7516:7543   */\n      slt\n        /* \"#utility.yul\":7506:7628   */\n      tag_398\n      jumpi\n        /* \"#utility.yul\":7547:7626   */\n      tag_399\n      tag_242\n      jump\t// in\n    tag_399:\n        /* \"#utility.yul\":7506:7628   */\n    tag_398:\n        /* \"#utility.yul\":7664:7670   */\n      dup2\n        /* \"#utility.yul\":7651:7671   */\n      calldataload\n        /* \"#utility.yul\":7689:7767   */\n      tag_400\n        /* \"#utility.yul\":7763:7766   */\n      dup5\n        /* \"#utility.yul\":7755:7761   */\n      dup3\n        /* \"#utility.yul\":7748:7752   */\n      0x20\n        /* \"#utility.yul\":7740:7746   */\n      dup7\n        /* \"#utility.yul\":7736:7753   */\n      add\n        /* \"#utility.yul\":7689:7767   */\n      tag_256\n      jump\t// in\n    tag_400:\n        /* \"#utility.yul\":7680:7767   */\n      swap2\n      pop\n        /* \"#utility.yul\":7496:7773   */\n      pop\n        /* \"#utility.yul\":7435:7773   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7779:9288   */\n    tag_50:\n        /* \"#utility.yul\":7933:7939   */\n      0x00\n        /* \"#utility.yul\":7941:7947   */\n      dup1\n        /* \"#utility.yul\":7949:7955   */\n      0x00\n        /* \"#utility.yul\":7957:7963   */\n      dup1\n        /* \"#utility.yul\":7965:7971   */\n      0x00\n        /* \"#utility.yul\":8014:8017   */\n      0xa0\n        /* \"#utility.yul\":8002:8011   */\n      dup7\n        /* \"#utility.yul\":7993:8000   */\n      dup9\n        /* \"#utility.yul\":7989:8012   */\n      sub\n        /* \"#utility.yul\":7985:8018   */\n      slt\n        /* \"#utility.yul\":7982:8102   */\n      iszero\n      tag_402\n      jumpi\n        /* \"#utility.yul\":8021:8100   */\n      tag_403\n      tag_223\n      jump\t// in\n    tag_403:\n        /* \"#utility.yul\":7982:8102   */\n    tag_402:\n        /* \"#utility.yul\":8141:8142   */\n      0x00\n        /* \"#utility.yul\":8166:8219   */\n      tag_404\n        /* \"#utility.yul\":8211:8218   */\n      dup9\n        /* \"#utility.yul\":8202:8208   */\n      dup3\n        /* \"#utility.yul\":8191:8200   */\n      dup10\n        /* \"#utility.yul\":8187:8209   */\n      add\n        /* \"#utility.yul\":8166:8219   */\n      tag_241\n      jump\t// in\n    tag_404:\n        /* \"#utility.yul\":8156:8219   */\n      swap6\n      pop\n        /* \"#utility.yul\":8112:8229   */\n      pop\n        /* \"#utility.yul\":8268:8270   */\n      0x20\n        /* \"#utility.yul\":8294:8347   */\n      tag_405\n        /* \"#utility.yul\":8339:8346   */\n      dup9\n        /* \"#utility.yul\":8330:8336   */\n      dup3\n        /* \"#utility.yul\":8319:8328   */\n      dup10\n        /* \"#utility.yul\":8315:8337   */\n      add\n        /* \"#utility.yul\":8294:8347   */\n      tag_241\n      jump\t// in\n    tag_405:\n        /* \"#utility.yul\":8284:8347   */\n      swap5\n      pop\n        /* \"#utility.yul\":8239:8357   */\n      pop\n        /* \"#utility.yul\":8424:8426   */\n      0x40\n        /* \"#utility.yul\":8413:8422   */\n      dup7\n        /* \"#utility.yul\":8409:8427   */\n      add\n        /* \"#utility.yul\":8396:8428   */\n      calldataload\n        /* \"#utility.yul\":8455:8473   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":8447:8453   */\n      dup2\n        /* \"#utility.yul\":8444:8474   */\n      gt\n        /* \"#utility.yul\":8441:8558   */\n      iszero\n      tag_406\n      jumpi\n        /* \"#utility.yul\":8477:8556   */\n      tag_407\n      tag_224\n      jump\t// in\n    tag_407:\n        /* \"#utility.yul\":8441:8558   */\n    tag_406:\n        /* \"#utility.yul\":8582:8660   */\n      tag_408\n        /* \"#utility.yul\":8652:8659   */\n      dup9\n        /* \"#utility.yul\":8643:8649   */\n      dup3\n        /* \"#utility.yul\":8632:8641   */\n      dup10\n        /* \"#utility.yul\":8628:8650   */\n      add\n        /* \"#utility.yul\":8582:8660   */\n      tag_252\n      jump\t// in\n    tag_408:\n        /* \"#utility.yul\":8572:8660   */\n      swap4\n      pop\n        /* \"#utility.yul\":8367:8670   */\n      pop\n        /* \"#utility.yul\":8737:8739   */\n      0x60\n        /* \"#utility.yul\":8726:8735   */\n      dup7\n        /* \"#utility.yul\":8722:8740   */\n      add\n        /* \"#utility.yul\":8709:8741   */\n      calldataload\n        /* \"#utility.yul\":8768:8786   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":8760:8766   */\n      dup2\n        /* \"#utility.yul\":8757:8787   */\n      gt\n        /* \"#utility.yul\":8754:8871   */\n      iszero\n      tag_409\n      jumpi\n        /* \"#utility.yul\":8790:8869   */\n      tag_410\n      tag_224\n      jump\t// in\n    tag_410:\n        /* \"#utility.yul\":8754:8871   */\n    tag_409:\n        /* \"#utility.yul\":8895:8973   */\n      tag_411\n        /* \"#utility.yul\":8965:8972   */\n      dup9\n        /* \"#utility.yul\":8956:8962   */\n      dup3\n        /* \"#utility.yul\":8945:8954   */\n      dup10\n        /* \"#utility.yul\":8941:8963   */\n      add\n        /* \"#utility.yul\":8895:8973   */\n      tag_252\n      jump\t// in\n    tag_411:\n        /* \"#utility.yul\":8885:8973   */\n      swap3\n      pop\n        /* \"#utility.yul\":8680:8983   */\n      pop\n        /* \"#utility.yul\":9050:9053   */\n      0x80\n        /* \"#utility.yul\":9039:9048   */\n      dup7\n        /* \"#utility.yul\":9035:9054   */\n      add\n        /* \"#utility.yul\":9022:9055   */\n      calldataload\n        /* \"#utility.yul\":9082:9100   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":9074:9080   */\n      dup2\n        /* \"#utility.yul\":9071:9101   */\n      gt\n        /* \"#utility.yul\":9068:9185   */\n      iszero\n      tag_412\n      jumpi\n        /* \"#utility.yul\":9104:9183   */\n      tag_413\n      tag_224\n      jump\t// in\n    tag_413:\n        /* \"#utility.yul\":9068:9185   */\n    tag_412:\n        /* \"#utility.yul\":9209:9271   */\n      tag_414\n        /* \"#utility.yul\":9263:9270   */\n      dup9\n        /* \"#utility.yul\":9254:9260   */\n      dup3\n        /* \"#utility.yul\":9243:9252   */\n      dup10\n        /* \"#utility.yul\":9239:9261   */\n      add\n        /* \"#utility.yul\":9209:9271   */\n      tag_257\n      jump\t// in\n    tag_414:\n        /* \"#utility.yul\":9199:9271   */\n      swap2\n      pop\n        /* \"#utility.yul\":8993:9281   */\n      pop\n        /* \"#utility.yul\":7779:9288   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9294:9409   */\n    tag_258:\n        /* \"#utility.yul\":9379:9402   */\n      tag_416\n        /* \"#utility.yul\":9396:9401   */\n      dup2\n        /* \"#utility.yul\":9379:9402   */\n      tag_225\n      jump\t// in\n    tag_416:\n        /* \"#utility.yul\":9374:9377   */\n      dup3\n        /* \"#utility.yul\":9367:9403   */\n      mstore\n        /* \"#utility.yul\":9294:9409   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9415:9633   */\n    tag_53:\n        /* \"#utility.yul\":9506:9510   */\n      0x00\n        /* \"#utility.yul\":9544:9546   */\n      0x20\n        /* \"#utility.yul\":9533:9542   */\n      dup3\n        /* \"#utility.yul\":9529:9547   */\n      add\n        /* \"#utility.yul\":9521:9547   */\n      swap1\n      pop\n        /* \"#utility.yul\":9557:9626   */\n      tag_418\n        /* \"#utility.yul\":9623:9624   */\n      0x00\n        /* \"#utility.yul\":9612:9621   */\n      dup4\n        /* \"#utility.yul\":9608:9625   */\n      add\n        /* \"#utility.yul\":9599:9605   */\n      dup5\n        /* \"#utility.yul\":9557:9626   */\n      tag_258\n      jump\t// in\n    tag_418:\n        /* \"#utility.yul\":9415:9633   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9639:9725   */\n    tag_259:\n        /* \"#utility.yul\":9674:9681   */\n      0x00\n        /* \"#utility.yul\":9714:9718   */\n      0xff\n        /* \"#utility.yul\":9707:9712   */\n      dup3\n        /* \"#utility.yul\":9703:9719   */\n      and\n        /* \"#utility.yul\":9692:9719   */\n      swap1\n      pop\n        /* \"#utility.yul\":9639:9725   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9731:9849   */\n    tag_260:\n        /* \"#utility.yul\":9802:9824   */\n      tag_421\n        /* \"#utility.yul\":9818:9823   */\n      dup2\n        /* \"#utility.yul\":9802:9824   */\n      tag_259\n      jump\t// in\n    tag_421:\n        /* \"#utility.yul\":9795:9800   */\n      dup2\n        /* \"#utility.yul\":9792:9825   */\n      eq\n        /* \"#utility.yul\":9782:9843   */\n      tag_422\n      jumpi\n        /* \"#utility.yul\":9839:9840   */\n      0x00\n        /* \"#utility.yul\":9836:9837   */\n      dup1\n        /* \"#utility.yul\":9829:9841   */\n      revert\n        /* \"#utility.yul\":9782:9843   */\n    tag_422:\n        /* \"#utility.yul\":9731:9849   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9855:9990   */\n    tag_261:\n        /* \"#utility.yul\":9899:9904   */\n      0x00\n        /* \"#utility.yul\":9937:9943   */\n      dup2\n        /* \"#utility.yul\":9924:9944   */\n      calldataload\n        /* \"#utility.yul\":9915:9944   */\n      swap1\n      pop\n        /* \"#utility.yul\":9953:9984   */\n      tag_424\n        /* \"#utility.yul\":9978:9983   */\n      dup2\n        /* \"#utility.yul\":9953:9984   */\n      tag_260\n      jump\t// in\n    tag_424:\n        /* \"#utility.yul\":9855:9990   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9996:10611   */\n    tag_57:\n        /* \"#utility.yul\":10071:10077   */\n      0x00\n        /* \"#utility.yul\":10079:10085   */\n      dup1\n        /* \"#utility.yul\":10087:10093   */\n      0x00\n        /* \"#utility.yul\":10136:10138   */\n      0x60\n        /* \"#utility.yul\":10124:10133   */\n      dup5\n        /* \"#utility.yul\":10115:10122   */\n      dup7\n        /* \"#utility.yul\":10111:10134   */\n      sub\n        /* \"#utility.yul\":10107:10139   */\n      slt\n        /* \"#utility.yul\":10104:10223   */\n      iszero\n      tag_426\n      jumpi\n        /* \"#utility.yul\":10142:10221   */\n      tag_427\n      tag_223\n      jump\t// in\n    tag_427:\n        /* \"#utility.yul\":10104:10223   */\n    tag_426:\n        /* \"#utility.yul\":10262:10263   */\n      0x00\n        /* \"#utility.yul\":10287:10340   */\n      tag_428\n        /* \"#utility.yul\":10332:10339   */\n      dup7\n        /* \"#utility.yul\":10323:10329   */\n      dup3\n        /* \"#utility.yul\":10312:10321   */\n      dup8\n        /* \"#utility.yul\":10308:10330   */\n      add\n        /* \"#utility.yul\":10287:10340   */\n      tag_250\n      jump\t// in\n    tag_428:\n        /* \"#utility.yul\":10277:10340   */\n      swap4\n      pop\n        /* \"#utility.yul\":10233:10350   */\n      pop\n        /* \"#utility.yul\":10389:10391   */\n      0x20\n        /* \"#utility.yul\":10415:10468   */\n      tag_429\n        /* \"#utility.yul\":10460:10467   */\n      dup7\n        /* \"#utility.yul\":10451:10457   */\n      dup3\n        /* \"#utility.yul\":10440:10449   */\n      dup8\n        /* \"#utility.yul\":10436:10458   */\n      add\n        /* \"#utility.yul\":10415:10468   */\n      tag_250\n      jump\t// in\n    tag_429:\n        /* \"#utility.yul\":10405:10468   */\n      swap3\n      pop\n        /* \"#utility.yul\":10360:10478   */\n      pop\n        /* \"#utility.yul\":10517:10519   */\n      0x40\n        /* \"#utility.yul\":10543:10594   */\n      tag_430\n        /* \"#utility.yul\":10586:10593   */\n      dup7\n        /* \"#utility.yul\":10577:10583   */\n      dup3\n        /* \"#utility.yul\":10566:10575   */\n      dup8\n        /* \"#utility.yul\":10562:10584   */\n      add\n        /* \"#utility.yul\":10543:10594   */\n      tag_261\n      jump\t// in\n    tag_430:\n        /* \"#utility.yul\":10533:10594   */\n      swap2\n      pop\n        /* \"#utility.yul\":10488:10604   */\n      pop\n        /* \"#utility.yul\":9996:10611   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":10617:10946   */\n    tag_62:\n        /* \"#utility.yul\":10676:10682   */\n      0x00\n        /* \"#utility.yul\":10725:10727   */\n      0x20\n        /* \"#utility.yul\":10713:10722   */\n      dup3\n        /* \"#utility.yul\":10704:10711   */\n      dup5\n        /* \"#utility.yul\":10700:10723   */\n      sub\n        /* \"#utility.yul\":10696:10728   */\n      slt\n        /* \"#utility.yul\":10693:10812   */\n      iszero\n      tag_432\n      jumpi\n        /* \"#utility.yul\":10731:10810   */\n      tag_433\n      tag_223\n      jump\t// in\n    tag_433:\n        /* \"#utility.yul\":10693:10812   */\n    tag_432:\n        /* \"#utility.yul\":10851:10852   */\n      0x00\n        /* \"#utility.yul\":10876:10929   */\n      tag_434\n        /* \"#utility.yul\":10921:10928   */\n      dup5\n        /* \"#utility.yul\":10912:10918   */\n      dup3\n        /* \"#utility.yul\":10901:10910   */\n      dup6\n        /* \"#utility.yul\":10897:10919   */\n      add\n        /* \"#utility.yul\":10876:10929   */\n      tag_250\n      jump\t// in\n    tag_434:\n        /* \"#utility.yul\":10866:10929   */\n      swap2\n      pop\n        /* \"#utility.yul\":10822:10939   */\n      pop\n        /* \"#utility.yul\":10617:10946   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10952:11094   */\n    tag_262:\n        /* \"#utility.yul\":11018:11027   */\n      0x00\n        /* \"#utility.yul\":11051:11088   */\n      tag_436\n        /* \"#utility.yul\":11082:11087   */\n      dup3\n        /* \"#utility.yul\":11051:11088   */\n      tag_235\n      jump\t// in\n    tag_436:\n        /* \"#utility.yul\":11038:11088   */\n      swap1\n      pop\n        /* \"#utility.yul\":10952:11094   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11100:11263   */\n    tag_263:\n        /* \"#utility.yul\":11203:11256   */\n      tag_438\n        /* \"#utility.yul\":11250:11255   */\n      dup2\n        /* \"#utility.yul\":11203:11256   */\n      tag_262\n      jump\t// in\n    tag_438:\n        /* \"#utility.yul\":11198:11201   */\n      dup3\n        /* \"#utility.yul\":11191:11257   */\n      mstore\n        /* \"#utility.yul\":11100:11263   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11269:11523   */\n    tag_69:\n        /* \"#utility.yul\":11378:11382   */\n      0x00\n        /* \"#utility.yul\":11416:11418   */\n      0x20\n        /* \"#utility.yul\":11405:11414   */\n      dup3\n        /* \"#utility.yul\":11401:11419   */\n      add\n        /* \"#utility.yul\":11393:11419   */\n      swap1\n      pop\n        /* \"#utility.yul\":11429:11516   */\n      tag_440\n        /* \"#utility.yul\":11513:11514   */\n      0x00\n        /* \"#utility.yul\":11502:11511   */\n      dup4\n        /* \"#utility.yul\":11498:11515   */\n      add\n        /* \"#utility.yul\":11489:11495   */\n      dup5\n        /* \"#utility.yul\":11429:11516   */\n      tag_263\n      jump\t// in\n    tag_440:\n        /* \"#utility.yul\":11269:11523   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11529:12618   */\n    tag_75:\n        /* \"#utility.yul\":11633:11639   */\n      0x00\n        /* \"#utility.yul\":11641:11647   */\n      dup1\n        /* \"#utility.yul\":11649:11655   */\n      0x00\n        /* \"#utility.yul\":11657:11663   */\n      dup1\n        /* \"#utility.yul\":11665:11671   */\n      0x00\n        /* \"#utility.yul\":11714:11717   */\n      0xa0\n        /* \"#utility.yul\":11702:11711   */\n      dup7\n        /* \"#utility.yul\":11693:11700   */\n      dup9\n        /* \"#utility.yul\":11689:11712   */\n      sub\n        /* \"#utility.yul\":11685:11718   */\n      slt\n        /* \"#utility.yul\":11682:11802   */\n      iszero\n      tag_442\n      jumpi\n        /* \"#utility.yul\":11721:11800   */\n      tag_443\n      tag_223\n      jump\t// in\n    tag_443:\n        /* \"#utility.yul\":11682:11802   */\n    tag_442:\n        /* \"#utility.yul\":11841:11842   */\n      0x00\n        /* \"#utility.yul\":11866:11919   */\n      tag_444\n        /* \"#utility.yul\":11911:11918   */\n      dup9\n        /* \"#utility.yul\":11902:11908   */\n      dup3\n        /* \"#utility.yul\":11891:11900   */\n      dup10\n        /* \"#utility.yul\":11887:11909   */\n      add\n        /* \"#utility.yul\":11866:11919   */\n      tag_241\n      jump\t// in\n    tag_444:\n        /* \"#utility.yul\":11856:11919   */\n      swap6\n      pop\n        /* \"#utility.yul\":11812:11929   */\n      pop\n        /* \"#utility.yul\":11968:11970   */\n      0x20\n        /* \"#utility.yul\":11994:12047   */\n      tag_445\n        /* \"#utility.yul\":12039:12046   */\n      dup9\n        /* \"#utility.yul\":12030:12036   */\n      dup3\n        /* \"#utility.yul\":12019:12028   */\n      dup10\n        /* \"#utility.yul\":12015:12037   */\n      add\n        /* \"#utility.yul\":11994:12047   */\n      tag_241\n      jump\t// in\n    tag_445:\n        /* \"#utility.yul\":11984:12047   */\n      swap5\n      pop\n        /* \"#utility.yul\":11939:12057   */\n      pop\n        /* \"#utility.yul\":12096:12098   */\n      0x40\n        /* \"#utility.yul\":12122:12175   */\n      tag_446\n        /* \"#utility.yul\":12167:12174   */\n      dup9\n        /* \"#utility.yul\":12158:12164   */\n      dup3\n        /* \"#utility.yul\":12147:12156   */\n      dup10\n        /* \"#utility.yul\":12143:12165   */\n      add\n        /* \"#utility.yul\":12122:12175   */\n      tag_250\n      jump\t// in\n    tag_446:\n        /* \"#utility.yul\":12112:12175   */\n      swap4\n      pop\n        /* \"#utility.yul\":12067:12185   */\n      pop\n        /* \"#utility.yul\":12224:12226   */\n      0x60\n        /* \"#utility.yul\":12250:12303   */\n      tag_447\n        /* \"#utility.yul\":12295:12302   */\n      dup9\n        /* \"#utility.yul\":12286:12292   */\n      dup3\n        /* \"#utility.yul\":12275:12284   */\n      dup10\n        /* \"#utility.yul\":12271:12293   */\n      add\n        /* \"#utility.yul\":12250:12303   */\n      tag_250\n      jump\t// in\n    tag_447:\n        /* \"#utility.yul\":12240:12303   */\n      swap3\n      pop\n        /* \"#utility.yul\":12195:12313   */\n      pop\n        /* \"#utility.yul\":12380:12383   */\n      0x80\n        /* \"#utility.yul\":12369:12378   */\n      dup7\n        /* \"#utility.yul\":12365:12384   */\n      add\n        /* \"#utility.yul\":12352:12385   */\n      calldataload\n        /* \"#utility.yul\":12412:12430   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":12404:12410   */\n      dup2\n        /* \"#utility.yul\":12401:12431   */\n      gt\n        /* \"#utility.yul\":12398:12515   */\n      iszero\n      tag_448\n      jumpi\n        /* \"#utility.yul\":12434:12513   */\n      tag_449\n      tag_224\n      jump\t// in\n    tag_449:\n        /* \"#utility.yul\":12398:12515   */\n    tag_448:\n        /* \"#utility.yul\":12539:12601   */\n      tag_450\n        /* \"#utility.yul\":12593:12600   */\n      dup9\n        /* \"#utility.yul\":12584:12590   */\n      dup3\n        /* \"#utility.yul\":12573:12582   */\n      dup10\n        /* \"#utility.yul\":12569:12591   */\n      add\n        /* \"#utility.yul\":12539:12601   */\n      tag_257\n      jump\t// in\n    tag_450:\n        /* \"#utility.yul\":12529:12601   */\n      swap2\n      pop\n        /* \"#utility.yul\":12323:12611   */\n      pop\n        /* \"#utility.yul\":11529:12618   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12624:12953   */\n    tag_81:\n        /* \"#utility.yul\":12683:12689   */\n      0x00\n        /* \"#utility.yul\":12732:12734   */\n      0x20\n        /* \"#utility.yul\":12720:12729   */\n      dup3\n        /* \"#utility.yul\":12711:12718   */\n      dup5\n        /* \"#utility.yul\":12707:12730   */\n      sub\n        /* \"#utility.yul\":12703:12735   */\n      slt\n        /* \"#utility.yul\":12700:12819   */\n      iszero\n      tag_452\n      jumpi\n        /* \"#utility.yul\":12738:12817   */\n      tag_453\n      tag_223\n      jump\t// in\n    tag_453:\n        /* \"#utility.yul\":12700:12819   */\n    tag_452:\n        /* \"#utility.yul\":12858:12859   */\n      0x00\n        /* \"#utility.yul\":12883:12936   */\n      tag_454\n        /* \"#utility.yul\":12928:12935   */\n      dup5\n        /* \"#utility.yul\":12919:12925   */\n      dup3\n        /* \"#utility.yul\":12908:12917   */\n      dup6\n        /* \"#utility.yul\":12904:12926   */\n      add\n        /* \"#utility.yul\":12883:12936   */\n      tag_241\n      jump\t// in\n    tag_454:\n        /* \"#utility.yul\":12873:12936   */\n      swap2\n      pop\n        /* \"#utility.yul\":12829:12946   */\n      pop\n        /* \"#utility.yul\":12624:12953   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12959:13433   */\n    tag_86:\n        /* \"#utility.yul\":13027:13033   */\n      0x00\n        /* \"#utility.yul\":13035:13041   */\n      dup1\n        /* \"#utility.yul\":13084:13086   */\n      0x40\n        /* \"#utility.yul\":13072:13081   */\n      dup4\n        /* \"#utility.yul\":13063:13070   */\n      dup6\n        /* \"#utility.yul\":13059:13082   */\n      sub\n        /* \"#utility.yul\":13055:13087   */\n      slt\n        /* \"#utility.yul\":13052:13171   */\n      iszero\n      tag_456\n      jumpi\n        /* \"#utility.yul\":13090:13169   */\n      tag_457\n      tag_223\n      jump\t// in\n    tag_457:\n        /* \"#utility.yul\":13052:13171   */\n    tag_456:\n        /* \"#utility.yul\":13210:13211   */\n      0x00\n        /* \"#utility.yul\":13235:13288   */\n      tag_458\n        /* \"#utility.yul\":13280:13287   */\n      dup6\n        /* \"#utility.yul\":13271:13277   */\n      dup3\n        /* \"#utility.yul\":13260:13269   */\n      dup7\n        /* \"#utility.yul\":13256:13278   */\n      add\n        /* \"#utility.yul\":13235:13288   */\n      tag_250\n      jump\t// in\n    tag_458:\n        /* \"#utility.yul\":13225:13288   */\n      swap3\n      pop\n        /* \"#utility.yul\":13181:13298   */\n      pop\n        /* \"#utility.yul\":13337:13339   */\n      0x20\n        /* \"#utility.yul\":13363:13416   */\n      tag_459\n        /* \"#utility.yul\":13408:13415   */\n      dup6\n        /* \"#utility.yul\":13399:13405   */\n      dup3\n        /* \"#utility.yul\":13388:13397   */\n      dup7\n        /* \"#utility.yul\":13384:13406   */\n      add\n        /* \"#utility.yul\":13363:13416   */\n      tag_250\n      jump\t// in\n    tag_459:\n        /* \"#utility.yul\":13353:13416   */\n      swap2\n      pop\n        /* \"#utility.yul\":13308:13426   */\n      pop\n        /* \"#utility.yul\":12959:13433   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13439:13608   */\n    tag_264:\n        /* \"#utility.yul\":13523:13534   */\n      0x00\n        /* \"#utility.yul\":13557:13563   */\n      dup3\n        /* \"#utility.yul\":13552:13555   */\n      dup3\n        /* \"#utility.yul\":13545:13564   */\n      mstore\n        /* \"#utility.yul\":13597:13601   */\n      0x20\n        /* \"#utility.yul\":13592:13595   */\n      dup3\n        /* \"#utility.yul\":13588:13602   */\n      add\n        /* \"#utility.yul\":13573:13602   */\n      swap1\n      pop\n        /* \"#utility.yul\":13439:13608   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13614:13782   */\n    tag_265:\n        /* \"#utility.yul\":13754:13774   */\n      0x696e737566666369656e7420616d6f756e740000000000000000000000000000\n        /* \"#utility.yul\":13750:13751   */\n      0x00\n        /* \"#utility.yul\":13742:13748   */\n      dup3\n        /* \"#utility.yul\":13738:13752   */\n      add\n        /* \"#utility.yul\":13731:13775   */\n      mstore\n        /* \"#utility.yul\":13614:13782   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13788:14154   */\n    tag_266:\n        /* \"#utility.yul\":13930:13933   */\n      0x00\n        /* \"#utility.yul\":13951:14018   */\n      tag_463\n        /* \"#utility.yul\":14015:14017   */\n      0x12\n        /* \"#utility.yul\":14010:14013   */\n      dup4\n        /* \"#utility.yul\":13951:14018   */\n      tag_264\n      jump\t// in\n    tag_463:\n        /* \"#utility.yul\":13944:14018   */\n      swap2\n      pop\n        /* \"#utility.yul\":14027:14120   */\n      tag_464\n        /* \"#utility.yul\":14116:14119   */\n      dup3\n        /* \"#utility.yul\":14027:14120   */\n      tag_265\n      jump\t// in\n    tag_464:\n        /* \"#utility.yul\":14145:14147   */\n      0x20\n        /* \"#utility.yul\":14140:14143   */\n      dup3\n        /* \"#utility.yul\":14136:14148   */\n      add\n        /* \"#utility.yul\":14129:14148   */\n      swap1\n      pop\n        /* \"#utility.yul\":13788:14154   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14160:14579   */\n    tag_100:\n        /* \"#utility.yul\":14326:14330   */\n      0x00\n        /* \"#utility.yul\":14364:14366   */\n      0x20\n        /* \"#utility.yul\":14353:14362   */\n      dup3\n        /* \"#utility.yul\":14349:14367   */\n      add\n        /* \"#utility.yul\":14341:14367   */\n      swap1\n      pop\n        /* \"#utility.yul\":14413:14422   */\n      dup2\n        /* \"#utility.yul\":14407:14411   */\n      dup2\n        /* \"#utility.yul\":14403:14423   */\n      sub\n        /* \"#utility.yul\":14399:14400   */\n      0x00\n        /* \"#utility.yul\":14388:14397   */\n      dup4\n        /* \"#utility.yul\":14384:14401   */\n      add\n        /* \"#utility.yul\":14377:14424   */\n      mstore\n        /* \"#utility.yul\":14441:14572   */\n      tag_466\n        /* \"#utility.yul\":14567:14571   */\n      dup2\n        /* \"#utility.yul\":14441:14572   */\n      tag_266\n      jump\t// in\n    tag_466:\n        /* \"#utility.yul\":14433:14572   */\n      swap1\n      pop\n        /* \"#utility.yul\":14160:14579   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14585:14732   */\n    tag_267:\n        /* \"#utility.yul\":14686:14697   */\n      0x00\n        /* \"#utility.yul\":14723:14726   */\n      dup2\n        /* \"#utility.yul\":14708:14726   */\n      swap1\n      pop\n        /* \"#utility.yul\":14585:14732   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14738:14852   */\n    tag_268:\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14858:15256   */\n    tag_269:\n        /* \"#utility.yul\":15017:15020   */\n      0x00\n        /* \"#utility.yul\":15038:15121   */\n      tag_470\n        /* \"#utility.yul\":15119:15120   */\n      0x00\n        /* \"#utility.yul\":15114:15117   */\n      dup4\n        /* \"#utility.yul\":15038:15121   */\n      tag_267\n      jump\t// in\n    tag_470:\n        /* \"#utility.yul\":15031:15121   */\n      swap2\n      pop\n        /* \"#utility.yul\":15130:15223   */\n      tag_471\n        /* \"#utility.yul\":15219:15222   */\n      dup3\n        /* \"#utility.yul\":15130:15223   */\n      tag_268\n      jump\t// in\n    tag_471:\n        /* \"#utility.yul\":15248:15249   */\n      0x00\n        /* \"#utility.yul\":15243:15246   */\n      dup3\n        /* \"#utility.yul\":15239:15250   */\n      add\n        /* \"#utility.yul\":15232:15250   */\n      swap1\n      pop\n        /* \"#utility.yul\":14858:15256   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15262:15641   */\n    tag_102:\n        /* \"#utility.yul\":15446:15449   */\n      0x00\n        /* \"#utility.yul\":15468:15615   */\n      tag_473\n        /* \"#utility.yul\":15611:15614   */\n      dup3\n        /* \"#utility.yul\":15468:15615   */\n      tag_269\n      jump\t// in\n    tag_473:\n        /* \"#utility.yul\":15461:15615   */\n      swap2\n      pop\n        /* \"#utility.yul\":15632:15635   */\n      dup2\n        /* \"#utility.yul\":15625:15635   */\n      swap1\n      pop\n        /* \"#utility.yul\":15262:15641   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15647:15821   */\n    tag_270:\n        /* \"#utility.yul\":15787:15813   */\n      0x756e61626c6520746f207769746864726177206d617469630000000000000000\n        /* \"#utility.yul\":15783:15784   */\n      0x00\n        /* \"#utility.yul\":15775:15781   */\n      dup3\n        /* \"#utility.yul\":15771:15785   */\n      add\n        /* \"#utility.yul\":15764:15814   */\n      mstore\n        /* \"#utility.yul\":15647:15821   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15827:16193   */\n    tag_271:\n        /* \"#utility.yul\":15969:15972   */\n      0x00\n        /* \"#utility.yul\":15990:16057   */\n      tag_476\n        /* \"#utility.yul\":16054:16056   */\n      0x18\n        /* \"#utility.yul\":16049:16052   */\n      dup4\n        /* \"#utility.yul\":15990:16057   */\n      tag_264\n      jump\t// in\n    tag_476:\n        /* \"#utility.yul\":15983:16057   */\n      swap2\n      pop\n        /* \"#utility.yul\":16066:16159   */\n      tag_477\n        /* \"#utility.yul\":16155:16158   */\n      dup3\n        /* \"#utility.yul\":16066:16159   */\n      tag_270\n      jump\t// in\n    tag_477:\n        /* \"#utility.yul\":16184:16186   */\n      0x20\n        /* \"#utility.yul\":16179:16182   */\n      dup3\n        /* \"#utility.yul\":16175:16187   */\n      add\n        /* \"#utility.yul\":16168:16187   */\n      swap1\n      pop\n        /* \"#utility.yul\":15827:16193   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16199:16618   */\n    tag_108:\n        /* \"#utility.yul\":16365:16369   */\n      0x00\n        /* \"#utility.yul\":16403:16405   */\n      0x20\n        /* \"#utility.yul\":16392:16401   */\n      dup3\n        /* \"#utility.yul\":16388:16406   */\n      add\n        /* \"#utility.yul\":16380:16406   */\n      swap1\n      pop\n        /* \"#utility.yul\":16452:16461   */\n      dup2\n        /* \"#utility.yul\":16446:16450   */\n      dup2\n        /* \"#utility.yul\":16442:16462   */\n      sub\n        /* \"#utility.yul\":16438:16439   */\n      0x00\n        /* \"#utility.yul\":16427:16436   */\n      dup4\n        /* \"#utility.yul\":16423:16440   */\n      add\n        /* \"#utility.yul\":16416:16463   */\n      mstore\n        /* \"#utility.yul\":16480:16611   */\n      tag_479\n        /* \"#utility.yul\":16606:16610   */\n      dup2\n        /* \"#utility.yul\":16480:16611   */\n      tag_271\n      jump\t// in\n    tag_479:\n        /* \"#utility.yul\":16472:16611   */\n      swap1\n      pop\n        /* \"#utility.yul\":16199:16618   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16624:16956   */\n    tag_110:\n        /* \"#utility.yul\":16745:16749   */\n      0x00\n        /* \"#utility.yul\":16783:16785   */\n      0x40\n        /* \"#utility.yul\":16772:16781   */\n      dup3\n        /* \"#utility.yul\":16768:16786   */\n      add\n        /* \"#utility.yul\":16760:16786   */\n      swap1\n      pop\n        /* \"#utility.yul\":16796:16867   */\n      tag_481\n        /* \"#utility.yul\":16864:16865   */\n      0x00\n        /* \"#utility.yul\":16853:16862   */\n      dup4\n        /* \"#utility.yul\":16849:16866   */\n      add\n        /* \"#utility.yul\":16840:16846   */\n      dup6\n        /* \"#utility.yul\":16796:16867   */\n      tag_239\n      jump\t// in\n    tag_481:\n        /* \"#utility.yul\":16877:16949   */\n      tag_482\n        /* \"#utility.yul\":16945:16947   */\n      0x20\n        /* \"#utility.yul\":16934:16943   */\n      dup4\n        /* \"#utility.yul\":16930:16948   */\n      add\n        /* \"#utility.yul\":16921:16927   */\n      dup5\n        /* \"#utility.yul\":16877:16949   */\n      tag_231\n      jump\t// in\n    tag_482:\n        /* \"#utility.yul\":16624:16956   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16962:17132   */\n    tag_272:\n        /* \"#utility.yul\":17102:17124   */\n      0x7072696365206973206e6f742073657420796574000000000000000000000000\n        /* \"#utility.yul\":17098:17099   */\n      0x00\n        /* \"#utility.yul\":17090:17096   */\n      dup3\n        /* \"#utility.yul\":17086:17100   */\n      add\n        /* \"#utility.yul\":17079:17125   */\n      mstore\n        /* \"#utility.yul\":16962:17132   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17138:17504   */\n    tag_273:\n        /* \"#utility.yul\":17280:17283   */\n      0x00\n        /* \"#utility.yul\":17301:17368   */\n      tag_485\n        /* \"#utility.yul\":17365:17367   */\n      0x14\n        /* \"#utility.yul\":17360:17363   */\n      dup4\n        /* \"#utility.yul\":17301:17368   */\n      tag_264\n      jump\t// in\n    tag_485:\n        /* \"#utility.yul\":17294:17368   */\n      swap2\n      pop\n        /* \"#utility.yul\":17377:17470   */\n      tag_486\n        /* \"#utility.yul\":17466:17469   */\n      dup3\n        /* \"#utility.yul\":17377:17470   */\n      tag_272\n      jump\t// in\n    tag_486:\n        /* \"#utility.yul\":17495:17497   */\n      0x20\n        /* \"#utility.yul\":17490:17493   */\n      dup3\n        /* \"#utility.yul\":17486:17498   */\n      add\n        /* \"#utility.yul\":17479:17498   */\n      swap1\n      pop\n        /* \"#utility.yul\":17138:17504   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17510:17929   */\n    tag_121:\n        /* \"#utility.yul\":17676:17680   */\n      0x00\n        /* \"#utility.yul\":17714:17716   */\n      0x20\n        /* \"#utility.yul\":17703:17712   */\n      dup3\n        /* \"#utility.yul\":17699:17717   */\n      add\n        /* \"#utility.yul\":17691:17717   */\n      swap1\n      pop\n        /* \"#utility.yul\":17763:17772   */\n      dup2\n        /* \"#utility.yul\":17757:17761   */\n      dup2\n        /* \"#utility.yul\":17753:17773   */\n      sub\n        /* \"#utility.yul\":17749:17750   */\n      0x00\n        /* \"#utility.yul\":17738:17747   */\n      dup4\n        /* \"#utility.yul\":17734:17751   */\n      add\n        /* \"#utility.yul\":17727:17774   */\n      mstore\n        /* \"#utility.yul\":17791:17922   */\n      tag_488\n        /* \"#utility.yul\":17917:17921   */\n      dup2\n        /* \"#utility.yul\":17791:17922   */\n      tag_273\n      jump\t// in\n    tag_488:\n        /* \"#utility.yul\":17783:17922   */\n      swap1\n      pop\n        /* \"#utility.yul\":17510:17929   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17935:18115   */\n    tag_274:\n        /* \"#utility.yul\":17983:18060   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":17980:17981   */\n      0x00\n        /* \"#utility.yul\":17973:18061   */\n      mstore\n        /* \"#utility.yul\":18080:18084   */\n      0x11\n        /* \"#utility.yul\":18077:18078   */\n      0x04\n        /* \"#utility.yul\":18070:18085   */\n      mstore\n        /* \"#utility.yul\":18104:18108   */\n      0x24\n        /* \"#utility.yul\":18101:18102   */\n      0x00\n        /* \"#utility.yul\":18094:18109   */\n      revert\n        /* \"#utility.yul\":18121:18531   */\n    tag_123:\n        /* \"#utility.yul\":18161:18168   */\n      0x00\n        /* \"#utility.yul\":18184:18204   */\n      tag_491\n        /* \"#utility.yul\":18202:18203   */\n      dup3\n        /* \"#utility.yul\":18184:18204   */\n      tag_230\n      jump\t// in\n    tag_491:\n        /* \"#utility.yul\":18179:18204   */\n      swap2\n      pop\n        /* \"#utility.yul\":18218:18238   */\n      tag_492\n        /* \"#utility.yul\":18236:18237   */\n      dup4\n        /* \"#utility.yul\":18218:18238   */\n      tag_230\n      jump\t// in\n    tag_492:\n        /* \"#utility.yul\":18213:18238   */\n      swap3\n      pop\n        /* \"#utility.yul\":18273:18274   */\n      dup3\n        /* \"#utility.yul\":18270:18271   */\n      dup3\n        /* \"#utility.yul\":18266:18275   */\n      mul\n        /* \"#utility.yul\":18295:18325   */\n      tag_493\n        /* \"#utility.yul\":18313:18324   */\n      dup2\n        /* \"#utility.yul\":18295:18325   */\n      tag_230\n      jump\t// in\n    tag_493:\n        /* \"#utility.yul\":18284:18325   */\n      swap2\n      pop\n        /* \"#utility.yul\":18474:18475   */\n      dup3\n        /* \"#utility.yul\":18465:18472   */\n      dup3\n        /* \"#utility.yul\":18461:18476   */\n      div\n        /* \"#utility.yul\":18458:18459   */\n      dup5\n        /* \"#utility.yul\":18455:18477   */\n      eq\n        /* \"#utility.yul\":18435:18436   */\n      dup4\n        /* \"#utility.yul\":18428:18437   */\n      iszero\n        /* \"#utility.yul\":18408:18491   */\n      or\n        /* \"#utility.yul\":18385:18524   */\n      tag_494\n      jumpi\n        /* \"#utility.yul\":18504:18522   */\n      tag_495\n      tag_274\n      jump\t// in\n    tag_495:\n        /* \"#utility.yul\":18385:18524   */\n    tag_494:\n        /* \"#utility.yul\":18169:18531   */\n      pop\n        /* \"#utility.yul\":18121:18531   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18537:18704   */\n    tag_275:\n        /* \"#utility.yul\":18677:18696   */\n      0x616d6f756e74206e6f7420656e6f756768000000000000000000000000000000\n        /* \"#utility.yul\":18673:18674   */\n      0x00\n        /* \"#utility.yul\":18665:18671   */\n      dup3\n        /* \"#utility.yul\":18661:18675   */\n      add\n        /* \"#utility.yul\":18654:18697   */\n      mstore\n        /* \"#utility.yul\":18537:18704   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18710:19076   */\n    tag_276:\n        /* \"#utility.yul\":18852:18855   */\n      0x00\n        /* \"#utility.yul\":18873:18940   */\n      tag_498\n        /* \"#utility.yul\":18937:18939   */\n      0x11\n        /* \"#utility.yul\":18932:18935   */\n      dup4\n        /* \"#utility.yul\":18873:18940   */\n      tag_264\n      jump\t// in\n    tag_498:\n        /* \"#utility.yul\":18866:18940   */\n      swap2\n      pop\n        /* \"#utility.yul\":18949:19042   */\n      tag_499\n        /* \"#utility.yul\":19038:19041   */\n      dup3\n        /* \"#utility.yul\":18949:19042   */\n      tag_275\n      jump\t// in\n    tag_499:\n        /* \"#utility.yul\":19067:19069   */\n      0x20\n        /* \"#utility.yul\":19062:19065   */\n      dup3\n        /* \"#utility.yul\":19058:19070   */\n      add\n        /* \"#utility.yul\":19051:19070   */\n      swap1\n      pop\n        /* \"#utility.yul\":18710:19076   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19082:19501   */\n    tag_126:\n        /* \"#utility.yul\":19248:19252   */\n      0x00\n        /* \"#utility.yul\":19286:19288   */\n      0x20\n        /* \"#utility.yul\":19275:19284   */\n      dup3\n        /* \"#utility.yul\":19271:19289   */\n      add\n        /* \"#utility.yul\":19263:19289   */\n      swap1\n      pop\n        /* \"#utility.yul\":19335:19344   */\n      dup2\n        /* \"#utility.yul\":19329:19333   */\n      dup2\n        /* \"#utility.yul\":19325:19345   */\n      sub\n        /* \"#utility.yul\":19321:19322   */\n      0x00\n        /* \"#utility.yul\":19310:19319   */\n      dup4\n        /* \"#utility.yul\":19306:19323   */\n      add\n        /* \"#utility.yul\":19299:19346   */\n      mstore\n        /* \"#utility.yul\":19363:19494   */\n      tag_501\n        /* \"#utility.yul\":19489:19493   */\n      dup2\n        /* \"#utility.yul\":19363:19494   */\n      tag_276\n      jump\t// in\n    tag_501:\n        /* \"#utility.yul\":19355:19494   */\n      swap1\n      pop\n        /* \"#utility.yul\":19082:19501   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19507:19650   */\n    tag_277:\n        /* \"#utility.yul\":19564:19569   */\n      0x00\n        /* \"#utility.yul\":19595:19601   */\n      dup2\n        /* \"#utility.yul\":19589:19602   */\n      mload\n        /* \"#utility.yul\":19580:19602   */\n      swap1\n      pop\n        /* \"#utility.yul\":19611:19644   */\n      tag_503\n        /* \"#utility.yul\":19638:19643   */\n      dup2\n        /* \"#utility.yul\":19611:19644   */\n      tag_249\n      jump\t// in\n    tag_503:\n        /* \"#utility.yul\":19507:19650   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19656:20007   */\n    tag_131:\n        /* \"#utility.yul\":19726:19732   */\n      0x00\n        /* \"#utility.yul\":19775:19777   */\n      0x20\n        /* \"#utility.yul\":19763:19772   */\n      dup3\n        /* \"#utility.yul\":19754:19761   */\n      dup5\n        /* \"#utility.yul\":19750:19773   */\n      sub\n        /* \"#utility.yul\":19746:19778   */\n      slt\n        /* \"#utility.yul\":19743:19862   */\n      iszero\n      tag_505\n      jumpi\n        /* \"#utility.yul\":19781:19860   */\n      tag_506\n      tag_223\n      jump\t// in\n    tag_506:\n        /* \"#utility.yul\":19743:19862   */\n    tag_505:\n        /* \"#utility.yul\":19901:19902   */\n      0x00\n        /* \"#utility.yul\":19926:19990   */\n      tag_507\n        /* \"#utility.yul\":19982:19989   */\n      dup5\n        /* \"#utility.yul\":19973:19979   */\n      dup3\n        /* \"#utility.yul\":19962:19971   */\n      dup6\n        /* \"#utility.yul\":19958:19980   */\n      add\n        /* \"#utility.yul\":19926:19990   */\n      tag_277\n      jump\t// in\n    tag_507:\n        /* \"#utility.yul\":19916:19990   */\n      swap2\n      pop\n        /* \"#utility.yul\":19872:20000   */\n      pop\n        /* \"#utility.yul\":19656:20007   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20013:20184   */\n    tag_278:\n        /* \"#utility.yul\":20153:20176   */\n      0x62616c616e6365206973206e6f7420656e6f7567680000000000000000000000\n        /* \"#utility.yul\":20149:20150   */\n      0x00\n        /* \"#utility.yul\":20141:20147   */\n      dup3\n        /* \"#utility.yul\":20137:20151   */\n      add\n        /* \"#utility.yul\":20130:20177   */\n      mstore\n        /* \"#utility.yul\":20013:20184   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20190:20556   */\n    tag_279:\n        /* \"#utility.yul\":20332:20335   */\n      0x00\n        /* \"#utility.yul\":20353:20420   */\n      tag_510\n        /* \"#utility.yul\":20417:20419   */\n      0x15\n        /* \"#utility.yul\":20412:20415   */\n      dup4\n        /* \"#utility.yul\":20353:20420   */\n      tag_264\n      jump\t// in\n    tag_510:\n        /* \"#utility.yul\":20346:20420   */\n      swap2\n      pop\n        /* \"#utility.yul\":20429:20522   */\n      tag_511\n        /* \"#utility.yul\":20518:20521   */\n      dup3\n        /* \"#utility.yul\":20429:20522   */\n      tag_278\n      jump\t// in\n    tag_511:\n        /* \"#utility.yul\":20547:20549   */\n      0x20\n        /* \"#utility.yul\":20542:20545   */\n      dup3\n        /* \"#utility.yul\":20538:20550   */\n      add\n        /* \"#utility.yul\":20531:20550   */\n      swap1\n      pop\n        /* \"#utility.yul\":20190:20556   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20562:20981   */\n    tag_134:\n        /* \"#utility.yul\":20728:20732   */\n      0x00\n        /* \"#utility.yul\":20766:20768   */\n      0x20\n        /* \"#utility.yul\":20755:20764   */\n      dup3\n        /* \"#utility.yul\":20751:20769   */\n      add\n        /* \"#utility.yul\":20743:20769   */\n      swap1\n      pop\n        /* \"#utility.yul\":20815:20824   */\n      dup2\n        /* \"#utility.yul\":20809:20813   */\n      dup2\n        /* \"#utility.yul\":20805:20825   */\n      sub\n        /* \"#utility.yul\":20801:20802   */\n      0x00\n        /* \"#utility.yul\":20790:20799   */\n      dup4\n        /* \"#utility.yul\":20786:20803   */\n      add\n        /* \"#utility.yul\":20779:20826   */\n      mstore\n        /* \"#utility.yul\":20843:20974   */\n      tag_513\n        /* \"#utility.yul\":20969:20973   */\n      dup2\n        /* \"#utility.yul\":20843:20974   */\n      tag_279\n      jump\t// in\n    tag_513:\n        /* \"#utility.yul\":20835:20974   */\n      swap1\n      pop\n        /* \"#utility.yul\":20562:20981   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20987:21155   */\n    tag_280:\n        /* \"#utility.yul\":21127:21147   */\n      0x696e73756666696369656e7420746f6b656e0000000000000000000000000000\n        /* \"#utility.yul\":21123:21124   */\n      0x00\n        /* \"#utility.yul\":21115:21121   */\n      dup3\n        /* \"#utility.yul\":21111:21125   */\n      add\n        /* \"#utility.yul\":21104:21148   */\n      mstore\n        /* \"#utility.yul\":20987:21155   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21161:21527   */\n    tag_281:\n        /* \"#utility.yul\":21303:21306   */\n      0x00\n        /* \"#utility.yul\":21324:21391   */\n      tag_516\n        /* \"#utility.yul\":21388:21390   */\n      0x12\n        /* \"#utility.yul\":21383:21386   */\n      dup4\n        /* \"#utility.yul\":21324:21391   */\n      tag_264\n      jump\t// in\n    tag_516:\n        /* \"#utility.yul\":21317:21391   */\n      swap2\n      pop\n        /* \"#utility.yul\":21400:21493   */\n      tag_517\n        /* \"#utility.yul\":21489:21492   */\n      dup3\n        /* \"#utility.yul\":21400:21493   */\n      tag_280\n      jump\t// in\n    tag_517:\n        /* \"#utility.yul\":21518:21520   */\n      0x20\n        /* \"#utility.yul\":21513:21516   */\n      dup3\n        /* \"#utility.yul\":21509:21521   */\n      add\n        /* \"#utility.yul\":21502:21521   */\n      swap1\n      pop\n        /* \"#utility.yul\":21161:21527   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21533:21952   */\n    tag_141:\n        /* \"#utility.yul\":21699:21703   */\n      0x00\n        /* \"#utility.yul\":21737:21739   */\n      0x20\n        /* \"#utility.yul\":21726:21735   */\n      dup3\n        /* \"#utility.yul\":21722:21740   */\n      add\n        /* \"#utility.yul\":21714:21740   */\n      swap1\n      pop\n        /* \"#utility.yul\":21786:21795   */\n      dup2\n        /* \"#utility.yul\":21780:21784   */\n      dup2\n        /* \"#utility.yul\":21776:21796   */\n      sub\n        /* \"#utility.yul\":21772:21773   */\n      0x00\n        /* \"#utility.yul\":21761:21770   */\n      dup4\n        /* \"#utility.yul\":21757:21774   */\n      add\n        /* \"#utility.yul\":21750:21797   */\n      mstore\n        /* \"#utility.yul\":21814:21945   */\n      tag_519\n        /* \"#utility.yul\":21940:21944   */\n      dup2\n        /* \"#utility.yul\":21814:21945   */\n      tag_281\n      jump\t// in\n    tag_519:\n        /* \"#utility.yul\":21806:21945   */\n      swap1\n      pop\n        /* \"#utility.yul\":21533:21952   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21958:22290   */\n    tag_143:\n        /* \"#utility.yul\":22079:22083   */\n      0x00\n        /* \"#utility.yul\":22117:22119   */\n      0x40\n        /* \"#utility.yul\":22106:22115   */\n      dup3\n        /* \"#utility.yul\":22102:22120   */\n      add\n        /* \"#utility.yul\":22094:22120   */\n      swap1\n      pop\n        /* \"#utility.yul\":22130:22201   */\n      tag_521\n        /* \"#utility.yul\":22198:22199   */\n      0x00\n        /* \"#utility.yul\":22187:22196   */\n      dup4\n        /* \"#utility.yul\":22183:22200   */\n      add\n        /* \"#utility.yul\":22174:22180   */\n      dup6\n        /* \"#utility.yul\":22130:22201   */\n      tag_239\n      jump\t// in\n    tag_521:\n        /* \"#utility.yul\":22211:22283   */\n      tag_522\n        /* \"#utility.yul\":22279:22281   */\n      0x20\n        /* \"#utility.yul\":22268:22277   */\n      dup4\n        /* \"#utility.yul\":22264:22282   */\n      add\n        /* \"#utility.yul\":22255:22261   */\n      dup5\n        /* \"#utility.yul\":22211:22283   */\n      tag_239\n      jump\t// in\n    tag_522:\n        /* \"#utility.yul\":21958:22290   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22296:22473   */\n    tag_282:\n        /* \"#utility.yul\":22436:22465   */\n      0x696e73756666696369656e7420746f6b656e20617070726f76616c0000000000\n        /* \"#utility.yul\":22432:22433   */\n      0x00\n        /* \"#utility.yul\":22424:22430   */\n      dup3\n        /* \"#utility.yul\":22420:22434   */\n      add\n        /* \"#utility.yul\":22413:22466   */\n      mstore\n        /* \"#utility.yul\":22296:22473   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22479:22845   */\n    tag_283:\n        /* \"#utility.yul\":22621:22624   */\n      0x00\n        /* \"#utility.yul\":22642:22709   */\n      tag_525\n        /* \"#utility.yul\":22706:22708   */\n      0x1b\n        /* \"#utility.yul\":22701:22704   */\n      dup4\n        /* \"#utility.yul\":22642:22709   */\n      tag_264\n      jump\t// in\n    tag_525:\n        /* \"#utility.yul\":22635:22709   */\n      swap2\n      pop\n        /* \"#utility.yul\":22718:22811   */\n      tag_526\n        /* \"#utility.yul\":22807:22810   */\n      dup3\n        /* \"#utility.yul\":22718:22811   */\n      tag_282\n      jump\t// in\n    tag_526:\n        /* \"#utility.yul\":22836:22838   */\n      0x20\n        /* \"#utility.yul\":22831:22834   */\n      dup3\n        /* \"#utility.yul\":22827:22839   */\n      add\n        /* \"#utility.yul\":22820:22839   */\n      swap1\n      pop\n        /* \"#utility.yul\":22479:22845   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22851:23270   */\n    tag_149:\n        /* \"#utility.yul\":23017:23021   */\n      0x00\n        /* \"#utility.yul\":23055:23057   */\n      0x20\n        /* \"#utility.yul\":23044:23053   */\n      dup3\n        /* \"#utility.yul\":23040:23058   */\n      add\n        /* \"#utility.yul\":23032:23058   */\n      swap1\n      pop\n        /* \"#utility.yul\":23104:23113   */\n      dup2\n        /* \"#utility.yul\":23098:23102   */\n      dup2\n        /* \"#utility.yul\":23094:23114   */\n      sub\n        /* \"#utility.yul\":23090:23091   */\n      0x00\n        /* \"#utility.yul\":23079:23088   */\n      dup4\n        /* \"#utility.yul\":23075:23092   */\n      add\n        /* \"#utility.yul\":23068:23115   */\n      mstore\n        /* \"#utility.yul\":23132:23263   */\n      tag_528\n        /* \"#utility.yul\":23258:23262   */\n      dup2\n        /* \"#utility.yul\":23132:23263   */\n      tag_283\n      jump\t// in\n    tag_528:\n        /* \"#utility.yul\":23124:23263   */\n      swap1\n      pop\n        /* \"#utility.yul\":22851:23270   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23276:23414   */\n    tag_284:\n        /* \"#utility.yul\":23324:23333   */\n      0x00\n        /* \"#utility.yul\":23357:23408   */\n      tag_530\n        /* \"#utility.yul\":23375:23407   */\n      tag_531\n        /* \"#utility.yul\":23384:23406   */\n      tag_532\n        /* \"#utility.yul\":23400:23405   */\n      dup5\n        /* \"#utility.yul\":23384:23406   */\n      tag_259\n      jump\t// in\n    tag_532:\n        /* \"#utility.yul\":23375:23407   */\n      tag_233\n      jump\t// in\n    tag_531:\n        /* \"#utility.yul\":23357:23408   */\n      tag_230\n      jump\t// in\n    tag_530:\n        /* \"#utility.yul\":23344:23408   */\n      swap1\n      pop\n        /* \"#utility.yul\":23276:23414   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23420:23547   */\n    tag_285:\n        /* \"#utility.yul\":23505:23540   */\n      tag_534\n        /* \"#utility.yul\":23534:23539   */\n      dup2\n        /* \"#utility.yul\":23505:23540   */\n      tag_284\n      jump\t// in\n    tag_534:\n        /* \"#utility.yul\":23500:23503   */\n      dup3\n        /* \"#utility.yul\":23493:23541   */\n      mstore\n        /* \"#utility.yul\":23420:23547   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23553:23721   */\n    tag_286:\n        /* \"#utility.yul\":23636:23647   */\n      0x00\n        /* \"#utility.yul\":23670:23676   */\n      dup3\n        /* \"#utility.yul\":23665:23668   */\n      dup3\n        /* \"#utility.yul\":23658:23677   */\n      mstore\n        /* \"#utility.yul\":23710:23714   */\n      0x20\n        /* \"#utility.yul\":23705:23708   */\n      dup3\n        /* \"#utility.yul\":23701:23715   */\n      add\n        /* \"#utility.yul\":23686:23715   */\n      swap1\n      pop\n        /* \"#utility.yul\":23553:23721   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23727:24089   */\n    tag_287:\n        /* \"#utility.yul\":23868:23871   */\n      0x00\n        /* \"#utility.yul\":23889:23954   */\n      tag_537\n        /* \"#utility.yul\":23952:23953   */\n      0x00\n        /* \"#utility.yul\":23947:23950   */\n      dup4\n        /* \"#utility.yul\":23889:23954   */\n      tag_286\n      jump\t// in\n    tag_537:\n        /* \"#utility.yul\":23882:23954   */\n      swap2\n      pop\n        /* \"#utility.yul\":23963:24056   */\n      tag_538\n        /* \"#utility.yul\":24052:24055   */\n      dup3\n        /* \"#utility.yul\":23963:24056   */\n      tag_268\n      jump\t// in\n    tag_538:\n        /* \"#utility.yul\":24081:24082   */\n      0x00\n        /* \"#utility.yul\":24076:24079   */\n      dup3\n        /* \"#utility.yul\":24072:24083   */\n      add\n        /* \"#utility.yul\":24065:24083   */\n      swap1\n      pop\n        /* \"#utility.yul\":23727:24089   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24095:24950   */\n    tag_154:\n        /* \"#utility.yul\":24370:24374   */\n      0x00\n        /* \"#utility.yul\":24408:24411   */\n      0xa0\n        /* \"#utility.yul\":24397:24406   */\n      dup3\n        /* \"#utility.yul\":24393:24412   */\n      add\n        /* \"#utility.yul\":24385:24412   */\n      swap1\n      pop\n        /* \"#utility.yul\":24422:24493   */\n      tag_540\n        /* \"#utility.yul\":24490:24491   */\n      0x00\n        /* \"#utility.yul\":24479:24488   */\n      dup4\n        /* \"#utility.yul\":24475:24492   */\n      add\n        /* \"#utility.yul\":24466:24472   */\n      dup8\n        /* \"#utility.yul\":24422:24493   */\n      tag_239\n      jump\t// in\n    tag_540:\n        /* \"#utility.yul\":24503:24575   */\n      tag_541\n        /* \"#utility.yul\":24571:24573   */\n      0x20\n        /* \"#utility.yul\":24560:24569   */\n      dup4\n        /* \"#utility.yul\":24556:24574   */\n      add\n        /* \"#utility.yul\":24547:24553   */\n      dup7\n        /* \"#utility.yul\":24503:24575   */\n      tag_239\n      jump\t// in\n    tag_541:\n        /* \"#utility.yul\":24585:24657   */\n      tag_542\n        /* \"#utility.yul\":24653:24655   */\n      0x40\n        /* \"#utility.yul\":24642:24651   */\n      dup4\n        /* \"#utility.yul\":24638:24656   */\n      add\n        /* \"#utility.yul\":24629:24635   */\n      dup6\n        /* \"#utility.yul\":24585:24657   */\n      tag_231\n      jump\t// in\n    tag_542:\n        /* \"#utility.yul\":24667:24737   */\n      tag_543\n        /* \"#utility.yul\":24733:24735   */\n      0x60\n        /* \"#utility.yul\":24722:24731   */\n      dup4\n        /* \"#utility.yul\":24718:24736   */\n      add\n        /* \"#utility.yul\":24709:24715   */\n      dup5\n        /* \"#utility.yul\":24667:24737   */\n      tag_285\n      jump\t// in\n    tag_543:\n        /* \"#utility.yul\":24785:24794   */\n      dup2\n        /* \"#utility.yul\":24779:24783   */\n      dup2\n        /* \"#utility.yul\":24775:24795   */\n      sub\n        /* \"#utility.yul\":24769:24772   */\n      0x80\n        /* \"#utility.yul\":24758:24767   */\n      dup4\n        /* \"#utility.yul\":24754:24773   */\n      add\n        /* \"#utility.yul\":24747:24796   */\n      mstore\n        /* \"#utility.yul\":24813:24943   */\n      tag_544\n        /* \"#utility.yul\":24938:24942   */\n      dup2\n        /* \"#utility.yul\":24813:24943   */\n      tag_287\n      jump\t// in\n    tag_544:\n        /* \"#utility.yul\":24805:24943   */\n      swap1\n      pop\n        /* \"#utility.yul\":24095:24950   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24956:25068   */\n    tag_288:\n        /* \"#utility.yul\":25039:25061   */\n      tag_546\n        /* \"#utility.yul\":25055:25060   */\n      dup2\n        /* \"#utility.yul\":25039:25061   */\n      tag_259\n      jump\t// in\n    tag_546:\n        /* \"#utility.yul\":25034:25037   */\n      dup3\n        /* \"#utility.yul\":25027:25062   */\n      mstore\n        /* \"#utility.yul\":24956:25068   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25074:25619   */\n    tag_159:\n        /* \"#utility.yul\":25247:25251   */\n      0x00\n        /* \"#utility.yul\":25285:25288   */\n      0x80\n        /* \"#utility.yul\":25274:25283   */\n      dup3\n        /* \"#utility.yul\":25270:25289   */\n      add\n        /* \"#utility.yul\":25262:25289   */\n      swap1\n      pop\n        /* \"#utility.yul\":25299:25370   */\n      tag_548\n        /* \"#utility.yul\":25367:25368   */\n      0x00\n        /* \"#utility.yul\":25356:25365   */\n      dup4\n        /* \"#utility.yul\":25352:25369   */\n      add\n        /* \"#utility.yul\":25343:25349   */\n      dup8\n        /* \"#utility.yul\":25299:25370   */\n      tag_231\n      jump\t// in\n    tag_548:\n        /* \"#utility.yul\":25380:25452   */\n      tag_549\n        /* \"#utility.yul\":25448:25450   */\n      0x20\n        /* \"#utility.yul\":25437:25446   */\n      dup4\n        /* \"#utility.yul\":25433:25451   */\n      add\n        /* \"#utility.yul\":25424:25430   */\n      dup7\n        /* \"#utility.yul\":25380:25452   */\n      tag_231\n      jump\t// in\n    tag_549:\n        /* \"#utility.yul\":25462:25530   */\n      tag_550\n        /* \"#utility.yul\":25526:25528   */\n      0x40\n        /* \"#utility.yul\":25515:25524   */\n      dup4\n        /* \"#utility.yul\":25511:25529   */\n      add\n        /* \"#utility.yul\":25502:25508   */\n      dup6\n        /* \"#utility.yul\":25462:25530   */\n      tag_288\n      jump\t// in\n    tag_550:\n        /* \"#utility.yul\":25540:25612   */\n      tag_551\n        /* \"#utility.yul\":25608:25610   */\n      0x60\n        /* \"#utility.yul\":25597:25606   */\n      dup4\n        /* \"#utility.yul\":25593:25611   */\n      add\n        /* \"#utility.yul\":25584:25590   */\n      dup5\n        /* \"#utility.yul\":25540:25612   */\n      tag_231\n      jump\t// in\n    tag_551:\n        /* \"#utility.yul\":25074:25619   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25625:25791   */\n    tag_289:\n        /* \"#utility.yul\":25765:25783   */\n      0x7072696365206e6f7420656e6f75676800000000000000000000000000000000\n        /* \"#utility.yul\":25761:25762   */\n      0x00\n        /* \"#utility.yul\":25753:25759   */\n      dup3\n        /* \"#utility.yul\":25749:25763   */\n      add\n        /* \"#utility.yul\":25742:25784   */\n      mstore\n        /* \"#utility.yul\":25625:25791   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25797:26163   */\n    tag_290:\n        /* \"#utility.yul\":25939:25942   */\n      0x00\n        /* \"#utility.yul\":25960:26027   */\n      tag_554\n        /* \"#utility.yul\":26024:26026   */\n      0x10\n        /* \"#utility.yul\":26019:26022   */\n      dup4\n        /* \"#utility.yul\":25960:26027   */\n      tag_264\n      jump\t// in\n    tag_554:\n        /* \"#utility.yul\":25953:26027   */\n      swap2\n      pop\n        /* \"#utility.yul\":26036:26129   */\n      tag_555\n        /* \"#utility.yul\":26125:26128   */\n      dup3\n        /* \"#utility.yul\":26036:26129   */\n      tag_289\n      jump\t// in\n    tag_555:\n        /* \"#utility.yul\":26154:26156   */\n      0x20\n        /* \"#utility.yul\":26149:26152   */\n      dup3\n        /* \"#utility.yul\":26145:26157   */\n      add\n        /* \"#utility.yul\":26138:26157   */\n      swap1\n      pop\n        /* \"#utility.yul\":25797:26163   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26169:26588   */\n    tag_163:\n        /* \"#utility.yul\":26335:26339   */\n      0x00\n        /* \"#utility.yul\":26373:26375   */\n      0x20\n        /* \"#utility.yul\":26362:26371   */\n      dup3\n        /* \"#utility.yul\":26358:26376   */\n      add\n        /* \"#utility.yul\":26350:26376   */\n      swap1\n      pop\n        /* \"#utility.yul\":26422:26431   */\n      dup2\n        /* \"#utility.yul\":26416:26420   */\n      dup2\n        /* \"#utility.yul\":26412:26432   */\n      sub\n        /* \"#utility.yul\":26408:26409   */\n      0x00\n        /* \"#utility.yul\":26397:26406   */\n      dup4\n        /* \"#utility.yul\":26393:26410   */\n      add\n        /* \"#utility.yul\":26386:26433   */\n      mstore\n        /* \"#utility.yul\":26450:26581   */\n      tag_557\n        /* \"#utility.yul\":26576:26580   */\n      dup2\n        /* \"#utility.yul\":26450:26581   */\n      tag_290\n      jump\t// in\n    tag_557:\n        /* \"#utility.yul\":26442:26581   */\n      swap1\n      pop\n        /* \"#utility.yul\":26169:26588   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26594:27036   */\n    tag_165:\n        /* \"#utility.yul\":26743:26747   */\n      0x00\n        /* \"#utility.yul\":26781:26783   */\n      0x60\n        /* \"#utility.yul\":26770:26779   */\n      dup3\n        /* \"#utility.yul\":26766:26784   */\n      add\n        /* \"#utility.yul\":26758:26784   */\n      swap1\n      pop\n        /* \"#utility.yul\":26794:26865   */\n      tag_559\n        /* \"#utility.yul\":26862:26863   */\n      0x00\n        /* \"#utility.yul\":26851:26860   */\n      dup4\n        /* \"#utility.yul\":26847:26864   */\n      add\n        /* \"#utility.yul\":26838:26844   */\n      dup7\n        /* \"#utility.yul\":26794:26865   */\n      tag_239\n      jump\t// in\n    tag_559:\n        /* \"#utility.yul\":26875:26947   */\n      tag_560\n        /* \"#utility.yul\":26943:26945   */\n      0x20\n        /* \"#utility.yul\":26932:26941   */\n      dup4\n        /* \"#utility.yul\":26928:26946   */\n      add\n        /* \"#utility.yul\":26919:26925   */\n      dup6\n        /* \"#utility.yul\":26875:26947   */\n      tag_231\n      jump\t// in\n    tag_560:\n        /* \"#utility.yul\":26957:27029   */\n      tag_561\n        /* \"#utility.yul\":27025:27027   */\n      0x40\n        /* \"#utility.yul\":27014:27023   */\n      dup4\n        /* \"#utility.yul\":27010:27028   */\n      add\n        /* \"#utility.yul\":27001:27007   */\n      dup5\n        /* \"#utility.yul\":26957:27029   */\n      tag_231\n      jump\t// in\n    tag_561:\n        /* \"#utility.yul\":26594:27036   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27042:27140   */\n    tag_291:\n        /* \"#utility.yul\":27093:27099   */\n      0x00\n        /* \"#utility.yul\":27127:27132   */\n      dup2\n        /* \"#utility.yul\":27121:27133   */\n      mload\n        /* \"#utility.yul\":27111:27133   */\n      swap1\n      pop\n        /* \"#utility.yul\":27042:27140   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27146:27285   */\n    tag_292:\n        /* \"#utility.yul\":27235:27241   */\n      dup3\n        /* \"#utility.yul\":27230:27233   */\n      dup2\n        /* \"#utility.yul\":27225:27228   */\n      dup4\n        /* \"#utility.yul\":27219:27242   */\n      mcopy\n        /* \"#utility.yul\":27276:27277   */\n      0x00\n        /* \"#utility.yul\":27267:27273   */\n      dup4\n        /* \"#utility.yul\":27262:27265   */\n      dup4\n        /* \"#utility.yul\":27258:27274   */\n      add\n        /* \"#utility.yul\":27251:27278   */\n      mstore\n        /* \"#utility.yul\":27146:27285   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27291:27677   */\n    tag_293:\n        /* \"#utility.yul\":27395:27398   */\n      0x00\n        /* \"#utility.yul\":27423:27461   */\n      tag_565\n        /* \"#utility.yul\":27455:27460   */\n      dup3\n        /* \"#utility.yul\":27423:27461   */\n      tag_291\n      jump\t// in\n    tag_565:\n        /* \"#utility.yul\":27477:27565   */\n      tag_566\n        /* \"#utility.yul\":27558:27564   */\n      dup2\n        /* \"#utility.yul\":27553:27556   */\n      dup6\n        /* \"#utility.yul\":27477:27565   */\n      tag_267\n      jump\t// in\n    tag_566:\n        /* \"#utility.yul\":27470:27565   */\n      swap4\n      pop\n        /* \"#utility.yul\":27574:27639   */\n      tag_567\n        /* \"#utility.yul\":27632:27638   */\n      dup2\n        /* \"#utility.yul\":27627:27630   */\n      dup6\n        /* \"#utility.yul\":27620:27624   */\n      0x20\n        /* \"#utility.yul\":27613:27618   */\n      dup7\n        /* \"#utility.yul\":27609:27625   */\n      add\n        /* \"#utility.yul\":27574:27639   */\n      tag_292\n      jump\t// in\n    tag_567:\n        /* \"#utility.yul\":27664:27670   */\n      dup1\n        /* \"#utility.yul\":27659:27662   */\n      dup5\n        /* \"#utility.yul\":27655:27671   */\n      add\n        /* \"#utility.yul\":27648:27671   */\n      swap2\n      pop\n        /* \"#utility.yul\":27399:27677   */\n      pop\n        /* \"#utility.yul\":27291:27677   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27683:27954   */\n    tag_167:\n        /* \"#utility.yul\":27813:27816   */\n      0x00\n        /* \"#utility.yul\":27835:27928   */\n      tag_569\n        /* \"#utility.yul\":27924:27927   */\n      dup3\n        /* \"#utility.yul\":27915:27921   */\n      dup5\n        /* \"#utility.yul\":27835:27928   */\n      tag_293\n      jump\t// in\n    tag_569:\n        /* \"#utility.yul\":27828:27928   */\n      swap2\n      pop\n        /* \"#utility.yul\":27945:27948   */\n      dup2\n        /* \"#utility.yul\":27938:27948   */\n      swap1\n      pop\n        /* \"#utility.yul\":27683:27954   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27960:28121   */\n    tag_294:\n        /* \"#utility.yul\":28100:28113   */\n      0x6d696e74206661696c6564000000000000000000000000000000000000000000\n        /* \"#utility.yul\":28096:28097   */\n      0x00\n        /* \"#utility.yul\":28088:28094   */\n      dup3\n        /* \"#utility.yul\":28084:28098   */\n      add\n        /* \"#utility.yul\":28077:28114   */\n      mstore\n        /* \"#utility.yul\":27960:28121   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28127:28493   */\n    tag_295:\n        /* \"#utility.yul\":28269:28272   */\n      0x00\n        /* \"#utility.yul\":28290:28357   */\n      tag_572\n        /* \"#utility.yul\":28354:28356   */\n      0x0b\n        /* \"#utility.yul\":28349:28352   */\n      dup4\n        /* \"#utility.yul\":28290:28357   */\n      tag_264\n      jump\t// in\n    tag_572:\n        /* \"#utility.yul\":28283:28357   */\n      swap2\n      pop\n        /* \"#utility.yul\":28366:28459   */\n      tag_573\n        /* \"#utility.yul\":28455:28458   */\n      dup3\n        /* \"#utility.yul\":28366:28459   */\n      tag_294\n      jump\t// in\n    tag_573:\n        /* \"#utility.yul\":28484:28486   */\n      0x20\n        /* \"#utility.yul\":28479:28482   */\n      dup3\n        /* \"#utility.yul\":28475:28487   */\n      add\n        /* \"#utility.yul\":28468:28487   */\n      swap1\n      pop\n        /* \"#utility.yul\":28127:28493   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28499:28918   */\n    tag_173:\n        /* \"#utility.yul\":28665:28669   */\n      0x00\n        /* \"#utility.yul\":28703:28705   */\n      0x20\n        /* \"#utility.yul\":28692:28701   */\n      dup3\n        /* \"#utility.yul\":28688:28706   */\n      add\n        /* \"#utility.yul\":28680:28706   */\n      swap1\n      pop\n        /* \"#utility.yul\":28752:28761   */\n      dup2\n        /* \"#utility.yul\":28746:28750   */\n      dup2\n        /* \"#utility.yul\":28742:28762   */\n      sub\n        /* \"#utility.yul\":28738:28739   */\n      0x00\n        /* \"#utility.yul\":28727:28736   */\n      dup4\n        /* \"#utility.yul\":28723:28740   */\n      add\n        /* \"#utility.yul\":28716:28763   */\n      mstore\n        /* \"#utility.yul\":28780:28911   */\n      tag_575\n        /* \"#utility.yul\":28906:28910   */\n      dup2\n        /* \"#utility.yul\":28780:28911   */\n      tag_295\n      jump\t// in\n    tag_575:\n        /* \"#utility.yul\":28772:28911   */\n      swap1\n      pop\n        /* \"#utility.yul\":28499:28918   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28924:29090   */\n    tag_296:\n        /* \"#utility.yul\":29064:29082   */\n      0x696e636f72726563742073656e64657200000000000000000000000000000000\n        /* \"#utility.yul\":29060:29061   */\n      0x00\n        /* \"#utility.yul\":29052:29058   */\n      dup3\n        /* \"#utility.yul\":29048:29062   */\n      add\n        /* \"#utility.yul\":29041:29083   */\n      mstore\n        /* \"#utility.yul\":28924:29090   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":29096:29462   */\n    tag_297:\n        /* \"#utility.yul\":29238:29241   */\n      0x00\n        /* \"#utility.yul\":29259:29326   */\n      tag_578\n        /* \"#utility.yul\":29323:29325   */\n      0x10\n        /* \"#utility.yul\":29318:29321   */\n      dup4\n        /* \"#utility.yul\":29259:29326   */\n      tag_264\n      jump\t// in\n    tag_578:\n        /* \"#utility.yul\":29252:29326   */\n      swap2\n      pop\n        /* \"#utility.yul\":29335:29428   */\n      tag_579\n        /* \"#utility.yul\":29424:29427   */\n      dup3\n        /* \"#utility.yul\":29335:29428   */\n      tag_296\n      jump\t// in\n    tag_579:\n        /* \"#utility.yul\":29453:29455   */\n      0x20\n        /* \"#utility.yul\":29448:29451   */\n      dup3\n        /* \"#utility.yul\":29444:29456   */\n      add\n        /* \"#utility.yul\":29437:29456   */\n      swap1\n      pop\n        /* \"#utility.yul\":29096:29462   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":29468:29887   */\n    tag_178:\n        /* \"#utility.yul\":29634:29638   */\n      0x00\n        /* \"#utility.yul\":29672:29674   */\n      0x20\n        /* \"#utility.yul\":29661:29670   */\n      dup3\n        /* \"#utility.yul\":29657:29675   */\n      add\n        /* \"#utility.yul\":29649:29675   */\n      swap1\n      pop\n        /* \"#utility.yul\":29721:29730   */\n      dup2\n        /* \"#utility.yul\":29715:29719   */\n      dup2\n        /* \"#utility.yul\":29711:29731   */\n      sub\n        /* \"#utility.yul\":29707:29708   */\n      0x00\n        /* \"#utility.yul\":29696:29705   */\n      dup4\n        /* \"#utility.yul\":29692:29709   */\n      add\n        /* \"#utility.yul\":29685:29732   */\n      mstore\n        /* \"#utility.yul\":29749:29880   */\n      tag_581\n        /* \"#utility.yul\":29875:29879   */\n      dup2\n        /* \"#utility.yul\":29749:29880   */\n      tag_297\n      jump\t// in\n    tag_581:\n        /* \"#utility.yul\":29741:29880   */\n      swap1\n      pop\n        /* \"#utility.yul\":29468:29887   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":29893:30059   */\n    tag_298:\n        /* \"#utility.yul\":30033:30051   */\n      0x7175616e74697479206973207a65726f00000000000000000000000000000000\n        /* \"#utility.yul\":30029:30030   */\n      0x00\n        /* \"#utility.yul\":30021:30027   */\n      dup3\n        /* \"#utility.yul\":30017:30031   */\n      add\n        /* \"#utility.yul\":30010:30052   */\n      mstore\n        /* \"#utility.yul\":29893:30059   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":30065:30431   */\n    tag_299:\n        /* \"#utility.yul\":30207:30210   */\n      0x00\n        /* \"#utility.yul\":30228:30295   */\n      tag_584\n        /* \"#utility.yul\":30292:30294   */\n      0x10\n        /* \"#utility.yul\":30287:30290   */\n      dup4\n        /* \"#utility.yul\":30228:30295   */\n      tag_264\n      jump\t// in\n    tag_584:\n        /* \"#utility.yul\":30221:30295   */\n      swap2\n      pop\n        /* \"#utility.yul\":30304:30397   */\n      tag_585\n        /* \"#utility.yul\":30393:30396   */\n      dup3\n        /* \"#utility.yul\":30304:30397   */\n      tag_298\n      jump\t// in\n    tag_585:\n        /* \"#utility.yul\":30422:30424   */\n      0x20\n        /* \"#utility.yul\":30417:30420   */\n      dup3\n        /* \"#utility.yul\":30413:30425   */\n      add\n        /* \"#utility.yul\":30406:30425   */\n      swap1\n      pop\n        /* \"#utility.yul\":30065:30431   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":30437:30856   */\n    tag_181:\n        /* \"#utility.yul\":30603:30607   */\n      0x00\n        /* \"#utility.yul\":30641:30643   */\n      0x20\n        /* \"#utility.yul\":30630:30639   */\n      dup3\n        /* \"#utility.yul\":30626:30644   */\n      add\n        /* \"#utility.yul\":30618:30644   */\n      swap1\n      pop\n        /* \"#utility.yul\":30690:30699   */\n      dup2\n        /* \"#utility.yul\":30684:30688   */\n      dup2\n        /* \"#utility.yul\":30680:30700   */\n      sub\n        /* \"#utility.yul\":30676:30677   */\n      0x00\n        /* \"#utility.yul\":30665:30674   */\n      dup4\n        /* \"#utility.yul\":30661:30678   */\n      add\n        /* \"#utility.yul\":30654:30701   */\n      mstore\n        /* \"#utility.yul\":30718:30849   */\n      tag_587\n        /* \"#utility.yul\":30844:30848   */\n      dup2\n        /* \"#utility.yul\":30718:30849   */\n      tag_299\n      jump\t// in\n    tag_587:\n        /* \"#utility.yul\":30710:30849   */\n      swap1\n      pop\n        /* \"#utility.yul\":30437:30856   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":30862:31415   */\n    tag_183:\n        /* \"#utility.yul\":31039:31043   */\n      0x00\n        /* \"#utility.yul\":31077:31080   */\n      0x80\n        /* \"#utility.yul\":31066:31075   */\n      dup3\n        /* \"#utility.yul\":31062:31081   */\n      add\n        /* \"#utility.yul\":31054:31081   */\n      swap1\n      pop\n        /* \"#utility.yul\":31091:31162   */\n      tag_589\n        /* \"#utility.yul\":31159:31160   */\n      0x00\n        /* \"#utility.yul\":31148:31157   */\n      dup4\n        /* \"#utility.yul\":31144:31161   */\n      add\n        /* \"#utility.yul\":31135:31141   */\n      dup8\n        /* \"#utility.yul\":31091:31162   */\n      tag_239\n      jump\t// in\n    tag_589:\n        /* \"#utility.yul\":31172:31244   */\n      tag_590\n        /* \"#utility.yul\":31240:31242   */\n      0x20\n        /* \"#utility.yul\":31229:31238   */\n      dup4\n        /* \"#utility.yul\":31225:31243   */\n      add\n        /* \"#utility.yul\":31216:31222   */\n      dup7\n        /* \"#utility.yul\":31172:31244   */\n      tag_239\n      jump\t// in\n    tag_590:\n        /* \"#utility.yul\":31254:31326   */\n      tag_591\n        /* \"#utility.yul\":31322:31324   */\n      0x40\n        /* \"#utility.yul\":31311:31320   */\n      dup4\n        /* \"#utility.yul\":31307:31325   */\n      add\n        /* \"#utility.yul\":31298:31304   */\n      dup6\n        /* \"#utility.yul\":31254:31326   */\n      tag_231\n      jump\t// in\n    tag_591:\n        /* \"#utility.yul\":31336:31408   */\n      tag_592\n        /* \"#utility.yul\":31404:31406   */\n      0x60\n        /* \"#utility.yul\":31393:31402   */\n      dup4\n        /* \"#utility.yul\":31389:31407   */\n      add\n        /* \"#utility.yul\":31380:31386   */\n      dup5\n        /* \"#utility.yul\":31336:31408   */\n      tag_231\n      jump\t// in\n    tag_592:\n        /* \"#utility.yul\":30862:31415   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":31421:31586   */\n    tag_300:\n        /* \"#utility.yul\":31561:31578   */\n      0x746f6b656e4964206973207a65726f0000000000000000000000000000000000\n        /* \"#utility.yul\":31557:31558   */\n      0x00\n        /* \"#utility.yul\":31549:31555   */\n      dup3\n        /* \"#utility.yul\":31545:31559   */\n      add\n        /* \"#utility.yul\":31538:31579   */\n      mstore\n        /* \"#utility.yul\":31421:31586   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":31592:31958   */\n    tag_301:\n        /* \"#utility.yul\":31734:31737   */\n      0x00\n        /* \"#utility.yul\":31755:31822   */\n      tag_595\n        /* \"#utility.yul\":31819:31821   */\n      0x0f\n        /* \"#utility.yul\":31814:31817   */\n      dup4\n        /* \"#utility.yul\":31755:31822   */\n      tag_264\n      jump\t// in\n    tag_595:\n        /* \"#utility.yul\":31748:31822   */\n      swap2\n      pop\n        /* \"#utility.yul\":31831:31924   */\n      tag_596\n        /* \"#utility.yul\":31920:31923   */\n      dup3\n        /* \"#utility.yul\":31831:31924   */\n      tag_300\n      jump\t// in\n    tag_596:\n        /* \"#utility.yul\":31949:31951   */\n      0x20\n        /* \"#utility.yul\":31944:31947   */\n      dup3\n        /* \"#utility.yul\":31940:31952   */\n      add\n        /* \"#utility.yul\":31933:31952   */\n      swap1\n      pop\n        /* \"#utility.yul\":31592:31958   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":31964:32383   */\n    tag_195:\n        /* \"#utility.yul\":32130:32134   */\n      0x00\n        /* \"#utility.yul\":32168:32170   */\n      0x20\n        /* \"#utility.yul\":32157:32166   */\n      dup3\n        /* \"#utility.yul\":32153:32171   */\n      add\n        /* \"#utility.yul\":32145:32171   */\n      swap1\n      pop\n        /* \"#utility.yul\":32217:32226   */\n      dup2\n        /* \"#utility.yul\":32211:32215   */\n      dup2\n        /* \"#utility.yul\":32207:32227   */\n      sub\n        /* \"#utility.yul\":32203:32204   */\n      0x00\n        /* \"#utility.yul\":32192:32201   */\n      dup4\n        /* \"#utility.yul\":32188:32205   */\n      add\n        /* \"#utility.yul\":32181:32228   */\n      mstore\n        /* \"#utility.yul\":32245:32376   */\n      tag_598\n        /* \"#utility.yul\":32371:32375   */\n      dup2\n        /* \"#utility.yul\":32245:32376   */\n      tag_301\n      jump\t// in\n    tag_598:\n        /* \"#utility.yul\":32237:32376   */\n      swap1\n      pop\n        /* \"#utility.yul\":31964:32383   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":32389:32552   */\n    tag_302:\n        /* \"#utility.yul\":32529:32544   */\n      0x7072696365206973207a65726f00000000000000000000000000000000000000\n        /* \"#utility.yul\":32525:32526   */\n      0x00\n        /* \"#utility.yul\":32517:32523   */\n      dup3\n        /* \"#utility.yul\":32513:32527   */\n      add\n        /* \"#utility.yul\":32506:32545   */\n      mstore\n        /* \"#utility.yul\":32389:32552   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":32558:32924   */\n    tag_303:\n        /* \"#utility.yul\":32700:32703   */\n      0x00\n        /* \"#utility.yul\":32721:32788   */\n      tag_601\n        /* \"#utility.yul\":32785:32787   */\n      0x0d\n        /* \"#utility.yul\":32780:32783   */\n      dup4\n        /* \"#utility.yul\":32721:32788   */\n      tag_264\n      jump\t// in\n    tag_601:\n        /* \"#utility.yul\":32714:32788   */\n      swap2\n      pop\n        /* \"#utility.yul\":32797:32890   */\n      tag_602\n        /* \"#utility.yul\":32886:32889   */\n      dup3\n        /* \"#utility.yul\":32797:32890   */\n      tag_302\n      jump\t// in\n    tag_602:\n        /* \"#utility.yul\":32915:32917   */\n      0x20\n        /* \"#utility.yul\":32910:32913   */\n      dup3\n        /* \"#utility.yul\":32906:32918   */\n      add\n        /* \"#utility.yul\":32899:32918   */\n      swap1\n      pop\n        /* \"#utility.yul\":32558:32924   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":32930:33349   */\n    tag_198:\n        /* \"#utility.yul\":33096:33100   */\n      0x00\n        /* \"#utility.yul\":33134:33136   */\n      0x20\n        /* \"#utility.yul\":33123:33132   */\n      dup3\n        /* \"#utility.yul\":33119:33137   */\n      add\n        /* \"#utility.yul\":33111:33137   */\n      swap1\n      pop\n        /* \"#utility.yul\":33183:33192   */\n      dup2\n        /* \"#utility.yul\":33177:33181   */\n      dup2\n        /* \"#utility.yul\":33173:33193   */\n      sub\n        /* \"#utility.yul\":33169:33170   */\n      0x00\n        /* \"#utility.yul\":33158:33167   */\n      dup4\n        /* \"#utility.yul\":33154:33171   */\n      add\n        /* \"#utility.yul\":33147:33194   */\n      mstore\n        /* \"#utility.yul\":33211:33342   */\n      tag_604\n        /* \"#utility.yul\":33337:33341   */\n      dup2\n        /* \"#utility.yul\":33211:33342   */\n      tag_303\n      jump\t// in\n    tag_604:\n        /* \"#utility.yul\":33203:33342   */\n      swap1\n      pop\n        /* \"#utility.yul\":32930:33349   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":33355:33797   */\n    tag_200:\n        /* \"#utility.yul\":33504:33508   */\n      0x00\n        /* \"#utility.yul\":33542:33544   */\n      0x60\n        /* \"#utility.yul\":33531:33540   */\n      dup3\n        /* \"#utility.yul\":33527:33545   */\n      add\n        /* \"#utility.yul\":33519:33545   */\n      swap1\n      pop\n        /* \"#utility.yul\":33555:33626   */\n      tag_606\n        /* \"#utility.yul\":33623:33624   */\n      0x00\n        /* \"#utility.yul\":33612:33621   */\n      dup4\n        /* \"#utility.yul\":33608:33625   */\n      add\n        /* \"#utility.yul\":33599:33605   */\n      dup7\n        /* \"#utility.yul\":33555:33626   */\n      tag_231\n      jump\t// in\n    tag_606:\n        /* \"#utility.yul\":33636:33708   */\n      tag_607\n        /* \"#utility.yul\":33704:33706   */\n      0x20\n        /* \"#utility.yul\":33693:33702   */\n      dup4\n        /* \"#utility.yul\":33689:33707   */\n      add\n        /* \"#utility.yul\":33680:33686   */\n      dup6\n        /* \"#utility.yul\":33636:33708   */\n      tag_231\n      jump\t// in\n    tag_607:\n        /* \"#utility.yul\":33718:33790   */\n      tag_608\n        /* \"#utility.yul\":33786:33788   */\n      0x40\n        /* \"#utility.yul\":33775:33784   */\n      dup4\n        /* \"#utility.yul\":33771:33789   */\n      add\n        /* \"#utility.yul\":33762:33768   */\n      dup5\n        /* \"#utility.yul\":33718:33790   */\n      tag_231\n      jump\t// in\n    tag_608:\n        /* \"#utility.yul\":33355:33797   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":33803:34245   */\n    tag_213:\n        /* \"#utility.yul\":33952:33956   */\n      0x00\n        /* \"#utility.yul\":33990:33992   */\n      0x60\n        /* \"#utility.yul\":33979:33988   */\n      dup3\n        /* \"#utility.yul\":33975:33993   */\n      add\n        /* \"#utility.yul\":33967:33993   */\n      swap1\n      pop\n        /* \"#utility.yul\":34003:34074   */\n      tag_610\n        /* \"#utility.yul\":34071:34072   */\n      0x00\n        /* \"#utility.yul\":34060:34069   */\n      dup4\n        /* \"#utility.yul\":34056:34073   */\n      add\n        /* \"#utility.yul\":34047:34053   */\n      dup7\n        /* \"#utility.yul\":34003:34074   */\n      tag_239\n      jump\t// in\n    tag_610:\n        /* \"#utility.yul\":34084:34156   */\n      tag_611\n        /* \"#utility.yul\":34152:34154   */\n      0x20\n        /* \"#utility.yul\":34141:34150   */\n      dup4\n        /* \"#utility.yul\":34137:34155   */\n      add\n        /* \"#utility.yul\":34128:34134   */\n      dup6\n        /* \"#utility.yul\":34084:34156   */\n      tag_239\n      jump\t// in\n    tag_611:\n        /* \"#utility.yul\":34166:34238   */\n      tag_612\n        /* \"#utility.yul\":34234:34236   */\n      0x40\n        /* \"#utility.yul\":34223:34232   */\n      dup4\n        /* \"#utility.yul\":34219:34237   */\n      add\n        /* \"#utility.yul\":34210:34216   */\n      dup5\n        /* \"#utility.yul\":34166:34238   */\n      tag_231\n      jump\t// in\n    tag_612:\n        /* \"#utility.yul\":33803:34245   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122098e28633849d2e62da14111fe0c7e3b6bf16866c563c6fc9e0820b8008563ffe64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1418": {
									"entryPoint": null,
									"id": 1418,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_msgSender_1243": {
									"entryPoint": 326,
									"id": 1243,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_146": {
									"entryPoint": 333,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 600,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address_fromMemory": {
									"entryPoint": 620,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 682,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 697,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 561,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 530,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 526,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 578,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:1707:15",
										"nodeType": "YulBlock",
										"src": "0:1707:15",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:15",
													"nodeType": "YulBlock",
													"src": "47:35:15",
													"statements": [
														{
															"nativeSrc": "57:19:15",
															"nodeType": "YulAssignment",
															"src": "57:19:15",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:15",
																		"nodeType": "YulLiteral",
																		"src": "73:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:15"
																},
																"nativeSrc": "67:9:15",
																"nodeType": "YulFunctionCall",
																"src": "67:9:15"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:15"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:15",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:15",
														"nodeType": "YulTypedName",
														"src": "40:6:15",
														"type": ""
													}
												],
												"src": "7:75:15"
											},
											{
												"body": {
													"nativeSrc": "177:28:15",
													"nodeType": "YulBlock",
													"src": "177:28:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:15",
																		"nodeType": "YulLiteral",
																		"src": "194:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:15",
																		"nodeType": "YulLiteral",
																		"src": "197:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:15"
																},
																"nativeSrc": "187:12:15",
																"nodeType": "YulFunctionCall",
																"src": "187:12:15"
															},
															"nativeSrc": "187:12:15",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:15"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:15",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:15"
											},
											{
												"body": {
													"nativeSrc": "300:28:15",
													"nodeType": "YulBlock",
													"src": "300:28:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:15",
																		"nodeType": "YulLiteral",
																		"src": "317:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:15",
																		"nodeType": "YulLiteral",
																		"src": "320:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:15"
																},
																"nativeSrc": "310:12:15",
																"nodeType": "YulFunctionCall",
																"src": "310:12:15"
															},
															"nativeSrc": "310:12:15",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:15"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:15",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:15"
											},
											{
												"body": {
													"nativeSrc": "379:81:15",
													"nodeType": "YulBlock",
													"src": "379:81:15",
													"statements": [
														{
															"nativeSrc": "389:65:15",
															"nodeType": "YulAssignment",
															"src": "389:65:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:15",
																		"nodeType": "YulLiteral",
																		"src": "411:42:15",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:15"
																},
																"nativeSrc": "400:54:15",
																"nodeType": "YulFunctionCall",
																"src": "400:54:15"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:15",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:15"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:15",
														"nodeType": "YulTypedName",
														"src": "361:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:15",
														"nodeType": "YulTypedName",
														"src": "371:7:15",
														"type": ""
													}
												],
												"src": "334:126:15"
											},
											{
												"body": {
													"nativeSrc": "511:51:15",
													"nodeType": "YulBlock",
													"src": "511:51:15",
													"statements": [
														{
															"nativeSrc": "521:35:15",
															"nodeType": "YulAssignment",
															"src": "521:35:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:15"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:15",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:15"
																},
																"nativeSrc": "532:24:15",
																"nodeType": "YulFunctionCall",
																"src": "532:24:15"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:15",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:15"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:15",
														"nodeType": "YulTypedName",
														"src": "493:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:15",
														"nodeType": "YulTypedName",
														"src": "503:7:15",
														"type": ""
													}
												],
												"src": "466:96:15"
											},
											{
												"body": {
													"nativeSrc": "611:79:15",
													"nodeType": "YulBlock",
													"src": "611:79:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:15",
																"nodeType": "YulBlock",
																"src": "668:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:15",
																					"nodeType": "YulLiteral",
																					"src": "677:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:15",
																					"nodeType": "YulLiteral",
																					"src": "680:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:15"
																			},
																			"nativeSrc": "670:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:15"
																		},
																		"nativeSrc": "670:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:15",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:15"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:15",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:15"
																				},
																				"nativeSrc": "641:24:15",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:15"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:15"
																		},
																		"nativeSrc": "631:35:15",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:15"
																},
																"nativeSrc": "624:43:15",
																"nodeType": "YulFunctionCall",
																"src": "624:43:15"
															},
															"nativeSrc": "621:63:15",
															"nodeType": "YulIf",
															"src": "621:63:15"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:15",
														"nodeType": "YulTypedName",
														"src": "604:5:15",
														"type": ""
													}
												],
												"src": "568:122:15"
											},
											{
												"body": {
													"nativeSrc": "759:80:15",
													"nodeType": "YulBlock",
													"src": "759:80:15",
													"statements": [
														{
															"nativeSrc": "769:22:15",
															"nodeType": "YulAssignment",
															"src": "769:22:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "784:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "778:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:15"
																},
																"nativeSrc": "778:13:15",
																"nodeType": "YulFunctionCall",
																"src": "778:13:15"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "769:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "827:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "800:26:15",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:15"
																},
																"nativeSrc": "800:33:15",
																"nodeType": "YulFunctionCall",
																"src": "800:33:15"
															},
															"nativeSrc": "800:33:15",
															"nodeType": "YulExpressionStatement",
															"src": "800:33:15"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "696:143:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "737:6:15",
														"nodeType": "YulTypedName",
														"src": "737:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "745:3:15",
														"nodeType": "YulTypedName",
														"src": "745:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "753:5:15",
														"nodeType": "YulTypedName",
														"src": "753:5:15",
														"type": ""
													}
												],
												"src": "696:143:15"
											},
											{
												"body": {
													"nativeSrc": "939:413:15",
													"nodeType": "YulBlock",
													"src": "939:413:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "985:83:15",
																"nodeType": "YulBlock",
																"src": "985:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "987:77:15",
																				"nodeType": "YulIdentifier",
																				"src": "987:77:15"
																			},
																			"nativeSrc": "987:79:15",
																			"nodeType": "YulFunctionCall",
																			"src": "987:79:15"
																		},
																		"nativeSrc": "987:79:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "987:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "960:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "960:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "969:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "969:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "956:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "956:3:15"
																		},
																		"nativeSrc": "956:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "956:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "981:2:15",
																		"nodeType": "YulLiteral",
																		"src": "981:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "952:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "952:3:15"
																},
																"nativeSrc": "952:32:15",
																"nodeType": "YulFunctionCall",
																"src": "952:32:15"
															},
															"nativeSrc": "949:119:15",
															"nodeType": "YulIf",
															"src": "949:119:15"
														},
														{
															"nativeSrc": "1078:128:15",
															"nodeType": "YulBlock",
															"src": "1078:128:15",
															"statements": [
																{
																	"nativeSrc": "1093:15:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1093:15:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1107:1:15",
																		"nodeType": "YulLiteral",
																		"src": "1107:1:15",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1097:6:15",
																			"nodeType": "YulTypedName",
																			"src": "1097:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1122:74:15",
																	"nodeType": "YulAssignment",
																	"src": "1122:74:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1168:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "1168:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1179:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "1179:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1164:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "1164:3:15"
																				},
																				"nativeSrc": "1164:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "1164:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1188:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "1188:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1132:31:15",
																			"nodeType": "YulIdentifier",
																			"src": "1132:31:15"
																		},
																		"nativeSrc": "1132:64:15",
																		"nodeType": "YulFunctionCall",
																		"src": "1132:64:15"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1122:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "1122:6:15"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1216:129:15",
															"nodeType": "YulBlock",
															"src": "1216:129:15",
															"statements": [
																{
																	"nativeSrc": "1231:16:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1231:16:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1245:2:15",
																		"nodeType": "YulLiteral",
																		"src": "1245:2:15",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1235:6:15",
																			"nodeType": "YulTypedName",
																			"src": "1235:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1261:74:15",
																	"nodeType": "YulAssignment",
																	"src": "1261:74:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1307:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "1307:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1318:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "1318:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1303:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "1303:3:15"
																				},
																				"nativeSrc": "1303:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "1303:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1327:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "1327:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1271:31:15",
																			"nodeType": "YulIdentifier",
																			"src": "1271:31:15"
																		},
																		"nativeSrc": "1271:64:15",
																		"nodeType": "YulFunctionCall",
																		"src": "1271:64:15"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1261:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "1261:6:15"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address_fromMemory",
												"nativeSrc": "845:507:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "901:9:15",
														"nodeType": "YulTypedName",
														"src": "901:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "912:7:15",
														"nodeType": "YulTypedName",
														"src": "912:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "924:6:15",
														"nodeType": "YulTypedName",
														"src": "924:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "932:6:15",
														"nodeType": "YulTypedName",
														"src": "932:6:15",
														"type": ""
													}
												],
												"src": "845:507:15"
											},
											{
												"body": {
													"nativeSrc": "1423:53:15",
													"nodeType": "YulBlock",
													"src": "1423:53:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1440:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "1440:3:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1463:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "1463:5:15"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "1445:17:15",
																			"nodeType": "YulIdentifier",
																			"src": "1445:17:15"
																		},
																		"nativeSrc": "1445:24:15",
																		"nodeType": "YulFunctionCall",
																		"src": "1445:24:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1433:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "1433:6:15"
																},
																"nativeSrc": "1433:37:15",
																"nodeType": "YulFunctionCall",
																"src": "1433:37:15"
															},
															"nativeSrc": "1433:37:15",
															"nodeType": "YulExpressionStatement",
															"src": "1433:37:15"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "1358:118:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1411:5:15",
														"nodeType": "YulTypedName",
														"src": "1411:5:15",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1418:3:15",
														"nodeType": "YulTypedName",
														"src": "1418:3:15",
														"type": ""
													}
												],
												"src": "1358:118:15"
											},
											{
												"body": {
													"nativeSrc": "1580:124:15",
													"nodeType": "YulBlock",
													"src": "1580:124:15",
													"statements": [
														{
															"nativeSrc": "1590:26:15",
															"nodeType": "YulAssignment",
															"src": "1590:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1602:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "1602:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1613:2:15",
																		"nodeType": "YulLiteral",
																		"src": "1613:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1598:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "1598:3:15"
																},
																"nativeSrc": "1598:18:15",
																"nodeType": "YulFunctionCall",
																"src": "1598:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1590:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "1590:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1670:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "1670:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1683:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "1683:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1694:1:15",
																				"nodeType": "YulLiteral",
																				"src": "1694:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1679:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "1679:3:15"
																		},
																		"nativeSrc": "1679:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "1679:17:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "1626:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "1626:43:15"
																},
																"nativeSrc": "1626:71:15",
																"nodeType": "YulFunctionCall",
																"src": "1626:71:15"
															},
															"nativeSrc": "1626:71:15",
															"nodeType": "YulExpressionStatement",
															"src": "1626:71:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "1482:222:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1552:9:15",
														"nodeType": "YulTypedName",
														"src": "1552:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1564:6:15",
														"nodeType": "YulTypedName",
														"src": "1564:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1575:4:15",
														"nodeType": "YulTypedName",
														"src": "1575:4:15",
														"type": ""
													}
												],
												"src": "1482:222:15"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 15,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060405161245b38038061245b8339818101604052810190610031919061026c565b61003f61014660201b60201c565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036100af575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016100a691906102b9565b60405180910390fd5b6100be8161014d60201b60201c565b508160025f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508060015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050506102d2565b5f33905090565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61023b82610212565b9050919050565b61024b81610231565b8114610255575f80fd5b50565b5f8151905061026681610242565b92915050565b5f80604083850312156102825761028161020e565b5b5f61028f85828601610258565b92505060206102a085828601610258565b9150509250929050565b6102b381610231565b82525050565b5f6020820190506102cc5f8301846102aa565b92915050565b61217c806102df5f395ff3fe6080604052600436106100dc575f3560e01c8063d407cee71161007e578063edca914c11610058578063edca914c14610290578063f23a6e611461029a578063f2fde38b146102d6578063f7d97577146102fe576100dc565b8063d407cee714610202578063d4ddce8a1461022a578063ea75aa8f14610266576100dc565b80633ccfd60b116100ba5780633ccfd60b14610170578063715018a6146101865780638da5cb5b1461019c578063bc197c81146101c6576100dc565b806301ffc9a7146100e057806312065fe01461011c5780632c1449e114610146575b5f80fd5b3480156100eb575f80fd5b50610106600480360381019061010191906111e2565b610326565b6040516101139190611227565b60405180910390f35b348015610127575f80fd5b5061013061039f565b60405161013d9190611258565b60405180910390f35b348015610151575f80fd5b5061015a6103a6565b60405161016791906112eb565b60405180910390f35b34801561017b575f80fd5b506101846103cb565b005b348015610191575f80fd5b5061019a610505565b005b3480156101a7575f80fd5b506101b0610518565b6040516101bd9190611324565b60405180910390f35b3480156101d1575f80fd5b506101ec60048036038101906101e79190611591565b61053f565b6040516101f9919061166b565b60405180910390f35b34801561020d575f80fd5b50610228600480360381019061022391906116ba565b610553565b005b348015610235575f80fd5b50610250600480360381019061024b919061170a565b6109df565b60405161025d9190611258565b60405180910390f35b348015610271575f80fd5b5061027a6109f4565b6040516102879190611755565b60405180910390f35b610298610a19565b005b3480156102a5575f80fd5b506102c060048036038101906102bb919061176e565b610c20565b6040516102cd919061166b565b60405180910390f35b3480156102e1575f80fd5b506102fc60048036038101906102f79190611801565b610d42565b005b348015610309575f80fd5b50610324600480360381019061031f919061182c565b610dc6565b005b5f7f4e2312e0000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480610398575061039782610ea7565b5b9050919050565b5f47905090565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6103d3610f10565b5f6103dc61039f565b90505f8103610420576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610417906118c4565b60405180910390fd5b5f3373ffffffffffffffffffffffffffffffffffffffff16826040516104459061190f565b5f6040518083038185875af1925050503d805f811461047f576040519150601f19603f3d011682016040523d82523d5f602084013e610484565b606091505b50509050806104c8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104bf9061196d565b60405180910390fd5b7f884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a942436433836040516104f992919061198b565b60405180910390a15050565b61050d610f10565b6105165f610f97565b565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b5f63bc197c8160e01b905095945050505050565b5f3390505f60035f8681526020019081526020015f2054036105aa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105a1906119fc565b60405180910390fd5b8160ff1660035f8681526020019081526020015f20546105ca9190611a47565b83101561060c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060390611ad2565b60405180910390fd5b8160ff1660025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1662fdd58e30876040518363ffffffff1660e01b815260040161066b92919061198b565b602060405180830381865afa158015610686573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906106aa9190611b04565b10156106eb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106e290611b79565b60405180910390fd5b8260015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231836040518263ffffffff1660e01b81526004016107469190611324565b602060405180830381865afa158015610761573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906107859190611b04565b10156107c6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107bd90611be1565b60405180910390fd5b8260015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e83306040518363ffffffff1660e01b8152600401610823929190611bff565b602060405180830381865afa15801561083e573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906108629190611b04565b10156108a3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161089a90611c70565b60405180910390fd5b6108f8816108af610518565b8560015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16611058909392919063ffffffff16565b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f242432a308387866040518563ffffffff1660e01b81526004016109589493929190611cee565b5f604051808303815f87803b15801561096f575f80fd5b505af1158015610981573d5f803e3d5ffd5b505050508073ffffffffffffffffffffffffffffffffffffffff167fb911d7e2ec7c85dd17dc5dbf9c086e0ade9a12a268015519a2a5f93ce5754fea858585426040516109d19493929190611d53565b60405180910390a250505050565b6003602052805f5260405f205f915090505481565b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b662386f26fc10000341015610a63576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a5a90611de0565b60405180910390fd5b5f60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16337001000000000000000000000000000000006001604051602401610ac393929190611dfe565b6040516020818303038152906040527f156e29f6000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050604051610b4d9190611e7b565b5f604051808303815f865af19150503d805f8114610b86576040519150601f19603f3d011682016040523d82523d5f602084013e610b8b565b606091505b5050905080610bcf576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bc690611edb565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff167f2a3164428cba5dad15f5ffe47e10cbefdcbbe9e269fd482753982ee8b2648c3e42604051610c159190611258565b60405180910390a250565b5f60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610cb0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ca790611f43565b60405180910390fd5b5f8303610cf2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ce990611fab565b60405180910390fd5b7f1650d49bac940346e34bac1dde642598b57ba618d7a0c005a91257851cae2c2486868686604051610d279493929190611fc9565b60405180910390a163f23a6e6160e01b905095945050505050565b610d4a610f10565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610dba575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610db19190611324565b60405180910390fd5b610dc381610f97565b50565b610dce610f10565b5f8203610e10576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e0790612056565b60405180910390fd5b5f8103610e52576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e49906120be565b60405180910390fd5b8060035f8481526020019081526020015f20819055507f18e75bb8c091a6448c12a2023f055b2714c151b941a91df8b9938788769ffe13828242604051610e9b939291906120dc565b60405180910390a15050565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b610f186110da565b73ffffffffffffffffffffffffffffffffffffffff16610f36610518565b73ffffffffffffffffffffffffffffffffffffffff1614610f9557610f596110da565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610f8c9190611324565b60405180910390fd5b565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6110d4848573ffffffffffffffffffffffffffffffffffffffff166323b872dd86868660405160240161108d93929190612111565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506110e1565b50505050565b5f33905090565b5f8060205f8451602086015f885af180611100576040513d5f823e3d81fd5b3d92505f519150505f8214611119576001811415611134565b5f8473ffffffffffffffffffffffffffffffffffffffff163b145b1561117657836040517f5274afe700000000000000000000000000000000000000000000000000000000815260040161116d9190611324565b60405180910390fd5b50505050565b5f604051905090565b5f80fd5b5f80fd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6111c18161118d565b81146111cb575f80fd5b50565b5f813590506111dc816111b8565b92915050565b5f602082840312156111f7576111f6611185565b5b5f611204848285016111ce565b91505092915050565b5f8115159050919050565b6112218161120d565b82525050565b5f60208201905061123a5f830184611218565b92915050565b5f819050919050565b61125281611240565b82525050565b5f60208201905061126b5f830184611249565b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f819050919050565b5f6112b36112ae6112a984611271565b611290565b611271565b9050919050565b5f6112c482611299565b9050919050565b5f6112d5826112ba565b9050919050565b6112e5816112cb565b82525050565b5f6020820190506112fe5f8301846112dc565b92915050565b5f61130e82611271565b9050919050565b61131e81611304565b82525050565b5f6020820190506113375f830184611315565b92915050565b61134681611304565b8114611350575f80fd5b50565b5f813590506113618161133d565b92915050565b5f80fd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b6113b18261136b565b810181811067ffffffffffffffff821117156113d0576113cf61137b565b5b80604052505050565b5f6113e261117c565b90506113ee82826113a8565b919050565b5f67ffffffffffffffff82111561140d5761140c61137b565b5b602082029050602081019050919050565b5f80fd5b61142b81611240565b8114611435575f80fd5b50565b5f8135905061144681611422565b92915050565b5f61145e611459846113f3565b6113d9565b905080838252602082019050602084028301858111156114815761148061141e565b5b835b818110156114aa57806114968882611438565b845260208401935050602081019050611483565b5050509392505050565b5f82601f8301126114c8576114c7611367565b5b81356114d884826020860161144c565b91505092915050565b5f80fd5b5f67ffffffffffffffff8211156114ff576114fe61137b565b5b6115088261136b565b9050602081019050919050565b828183375f83830152505050565b5f611535611530846114e5565b6113d9565b905082815260208101848484011115611551576115506114e1565b5b61155c848285611515565b509392505050565b5f82601f83011261157857611577611367565b5b8135611588848260208601611523565b91505092915050565b5f805f805f60a086880312156115aa576115a9611185565b5b5f6115b788828901611353565b95505060206115c888828901611353565b945050604086013567ffffffffffffffff8111156115e9576115e8611189565b5b6115f5888289016114b4565b935050606086013567ffffffffffffffff81111561161657611615611189565b5b611622888289016114b4565b925050608086013567ffffffffffffffff81111561164357611642611189565b5b61164f88828901611564565b9150509295509295909350565b6116658161118d565b82525050565b5f60208201905061167e5f83018461165c565b92915050565b5f60ff82169050919050565b61169981611684565b81146116a3575f80fd5b50565b5f813590506116b481611690565b92915050565b5f805f606084860312156116d1576116d0611185565b5b5f6116de86828701611438565b93505060206116ef86828701611438565b9250506040611700868287016116a6565b9150509250925092565b5f6020828403121561171f5761171e611185565b5b5f61172c84828501611438565b91505092915050565b5f61173f826112ba565b9050919050565b61174f81611735565b82525050565b5f6020820190506117685f830184611746565b92915050565b5f805f805f60a0868803121561178757611786611185565b5b5f61179488828901611353565b95505060206117a588828901611353565b94505060406117b688828901611438565b93505060606117c788828901611438565b925050608086013567ffffffffffffffff8111156117e8576117e7611189565b5b6117f488828901611564565b9150509295509295909350565b5f6020828403121561181657611815611185565b5b5f61182384828501611353565b91505092915050565b5f806040838503121561184257611841611185565b5b5f61184f85828601611438565b925050602061186085828601611438565b9150509250929050565b5f82825260208201905092915050565b7f696e737566666369656e7420616d6f756e7400000000000000000000000000005f82015250565b5f6118ae60128361186a565b91506118b98261187a565b602082019050919050565b5f6020820190508181035f8301526118db816118a2565b9050919050565b5f81905092915050565b50565b5f6118fa5f836118e2565b9150611905826118ec565b5f82019050919050565b5f611919826118ef565b9150819050919050565b7f756e61626c6520746f207769746864726177206d6174696300000000000000005f82015250565b5f61195760188361186a565b915061196282611923565b602082019050919050565b5f6020820190508181035f8301526119848161194b565b9050919050565b5f60408201905061199e5f830185611315565b6119ab6020830184611249565b9392505050565b7f7072696365206973206e6f7420736574207965740000000000000000000000005f82015250565b5f6119e660148361186a565b91506119f1826119b2565b602082019050919050565b5f6020820190508181035f830152611a13816119da565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f611a5182611240565b9150611a5c83611240565b9250828202611a6a81611240565b91508282048414831517611a8157611a80611a1a565b5b5092915050565b7f616d6f756e74206e6f7420656e6f7567680000000000000000000000000000005f82015250565b5f611abc60118361186a565b9150611ac782611a88565b602082019050919050565b5f6020820190508181035f830152611ae981611ab0565b9050919050565b5f81519050611afe81611422565b92915050565b5f60208284031215611b1957611b18611185565b5b5f611b2684828501611af0565b91505092915050565b7f62616c616e6365206973206e6f7420656e6f75676800000000000000000000005f82015250565b5f611b6360158361186a565b9150611b6e82611b2f565b602082019050919050565b5f6020820190508181035f830152611b9081611b57565b9050919050565b7f696e73756666696369656e7420746f6b656e00000000000000000000000000005f82015250565b5f611bcb60128361186a565b9150611bd682611b97565b602082019050919050565b5f6020820190508181035f830152611bf881611bbf565b9050919050565b5f604082019050611c125f830185611315565b611c1f6020830184611315565b9392505050565b7f696e73756666696369656e7420746f6b656e20617070726f76616c00000000005f82015250565b5f611c5a601b8361186a565b9150611c6582611c26565b602082019050919050565b5f6020820190508181035f830152611c8781611c4e565b9050919050565b5f611ca8611ca3611c9e84611684565b611290565b611240565b9050919050565b611cb881611c8e565b82525050565b5f82825260208201905092915050565b5f611cd95f83611cbe565b9150611ce4826118ec565b5f82019050919050565b5f60a082019050611d015f830187611315565b611d0e6020830186611315565b611d1b6040830185611249565b611d286060830184611caf565b8181036080830152611d3981611cce565b905095945050505050565b611d4d81611684565b82525050565b5f608082019050611d665f830187611249565b611d736020830186611249565b611d806040830185611d44565b611d8d6060830184611249565b95945050505050565b7f7072696365206e6f7420656e6f756768000000000000000000000000000000005f82015250565b5f611dca60108361186a565b9150611dd582611d96565b602082019050919050565b5f6020820190508181035f830152611df781611dbe565b9050919050565b5f606082019050611e115f830186611315565b611e1e6020830185611249565b611e2b6040830184611249565b949350505050565b5f81519050919050565b8281835e5f83830152505050565b5f611e5582611e33565b611e5f81856118e2565b9350611e6f818560208601611e3d565b80840191505092915050565b5f611e868284611e4b565b915081905092915050565b7f6d696e74206661696c65640000000000000000000000000000000000000000005f82015250565b5f611ec5600b8361186a565b9150611ed082611e91565b602082019050919050565b5f6020820190508181035f830152611ef281611eb9565b9050919050565b7f696e636f72726563742073656e646572000000000000000000000000000000005f82015250565b5f611f2d60108361186a565b9150611f3882611ef9565b602082019050919050565b5f6020820190508181035f830152611f5a81611f21565b9050919050565b7f7175616e74697479206973207a65726f000000000000000000000000000000005f82015250565b5f611f9560108361186a565b9150611fa082611f61565b602082019050919050565b5f6020820190508181035f830152611fc281611f89565b9050919050565b5f608082019050611fdc5f830187611315565b611fe96020830186611315565b611ff66040830185611249565b6120036060830184611249565b95945050505050565b7f746f6b656e4964206973207a65726f00000000000000000000000000000000005f82015250565b5f612040600f8361186a565b915061204b8261200c565b602082019050919050565b5f6020820190508181035f83015261206d81612034565b9050919050565b7f7072696365206973207a65726f000000000000000000000000000000000000005f82015250565b5f6120a8600d8361186a565b91506120b382612074565b602082019050919050565b5f6020820190508181035f8301526120d58161209c565b9050919050565b5f6060820190506120ef5f830186611249565b6120fc6020830185611249565b6121096040830184611249565b949350505050565b5f6060820190506121245f830186611315565b6121316020830185611315565b61213e6040830184611249565b94935050505056fea264697066735822122098e28633849d2e62da14111fe0c7e3b6bf16866c563c6fc9e0820b8008563ffe64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x245B CODESIZE SUB DUP1 PUSH2 0x245B DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0x26C JUMP JUMPDEST PUSH2 0x3F PUSH2 0x146 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xAF JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA6 SWAP2 SWAP1 PUSH2 0x2B9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xBE DUP2 PUSH2 0x14D PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP DUP2 PUSH1 0x2 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP PUSH2 0x2D2 JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x23B DUP3 PUSH2 0x212 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x24B DUP2 PUSH2 0x231 JUMP JUMPDEST DUP2 EQ PUSH2 0x255 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x266 DUP2 PUSH2 0x242 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x282 JUMPI PUSH2 0x281 PUSH2 0x20E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x28F DUP6 DUP3 DUP7 ADD PUSH2 0x258 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2A0 DUP6 DUP3 DUP7 ADD PUSH2 0x258 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x2B3 DUP2 PUSH2 0x231 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2CC PUSH0 DUP4 ADD DUP5 PUSH2 0x2AA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x217C DUP1 PUSH2 0x2DF PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xDC JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xD407CEE7 GT PUSH2 0x7E JUMPI DUP1 PUSH4 0xEDCA914C GT PUSH2 0x58 JUMPI DUP1 PUSH4 0xEDCA914C EQ PUSH2 0x290 JUMPI DUP1 PUSH4 0xF23A6E61 EQ PUSH2 0x29A JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x2D6 JUMPI DUP1 PUSH4 0xF7D97577 EQ PUSH2 0x2FE JUMPI PUSH2 0xDC JUMP JUMPDEST DUP1 PUSH4 0xD407CEE7 EQ PUSH2 0x202 JUMPI DUP1 PUSH4 0xD4DDCE8A EQ PUSH2 0x22A JUMPI DUP1 PUSH4 0xEA75AA8F EQ PUSH2 0x266 JUMPI PUSH2 0xDC JUMP JUMPDEST DUP1 PUSH4 0x3CCFD60B GT PUSH2 0xBA JUMPI DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x170 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x186 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x19C JUMPI DUP1 PUSH4 0xBC197C81 EQ PUSH2 0x1C6 JUMPI PUSH2 0xDC JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xE0 JUMPI DUP1 PUSH4 0x12065FE0 EQ PUSH2 0x11C JUMPI DUP1 PUSH4 0x2C1449E1 EQ PUSH2 0x146 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xEB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x106 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x101 SWAP2 SWAP1 PUSH2 0x11E2 JUMP JUMPDEST PUSH2 0x326 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x113 SWAP2 SWAP1 PUSH2 0x1227 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x127 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x130 PUSH2 0x39F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13D SWAP2 SWAP1 PUSH2 0x1258 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x151 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x15A PUSH2 0x3A6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x167 SWAP2 SWAP1 PUSH2 0x12EB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x17B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x184 PUSH2 0x3CB JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x191 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x19A PUSH2 0x505 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1A7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B0 PUSH2 0x518 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BD SWAP2 SWAP1 PUSH2 0x1324 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1EC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E7 SWAP2 SWAP1 PUSH2 0x1591 JUMP JUMPDEST PUSH2 0x53F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F9 SWAP2 SWAP1 PUSH2 0x166B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x20D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x228 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x223 SWAP2 SWAP1 PUSH2 0x16BA JUMP JUMPDEST PUSH2 0x553 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x235 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x250 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x24B SWAP2 SWAP1 PUSH2 0x170A JUMP JUMPDEST PUSH2 0x9DF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25D SWAP2 SWAP1 PUSH2 0x1258 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x271 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x27A PUSH2 0x9F4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x287 SWAP2 SWAP1 PUSH2 0x1755 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x298 PUSH2 0xA19 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2BB SWAP2 SWAP1 PUSH2 0x176E JUMP JUMPDEST PUSH2 0xC20 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2CD SWAP2 SWAP1 PUSH2 0x166B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2FC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F7 SWAP2 SWAP1 PUSH2 0x1801 JUMP JUMPDEST PUSH2 0xD42 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x309 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x324 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x31F SWAP2 SWAP1 PUSH2 0x182C JUMP JUMPDEST PUSH2 0xDC6 JUMP JUMPDEST STOP JUMPDEST PUSH0 PUSH32 0x4E2312E000000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x398 JUMPI POP PUSH2 0x397 DUP3 PUSH2 0xEA7 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 SELFBALANCE SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x3D3 PUSH2 0xF10 JUMP JUMPDEST PUSH0 PUSH2 0x3DC PUSH2 0x39F JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 SUB PUSH2 0x420 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x417 SWAP1 PUSH2 0x18C4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0x445 SWAP1 PUSH2 0x190F JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x47F JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x484 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x4C8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4BF SWAP1 PUSH2 0x196D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x884EDAD9CE6FA2440D8A54CC123490EB96D2768479D49FF9C7366125A9424364 CALLER DUP4 PUSH1 0x40 MLOAD PUSH2 0x4F9 SWAP3 SWAP2 SWAP1 PUSH2 0x198B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH2 0x50D PUSH2 0xF10 JUMP JUMPDEST PUSH2 0x516 PUSH0 PUSH2 0xF97 JUMP JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH4 0xBC197C81 PUSH1 0xE0 SHL SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP PUSH0 PUSH1 0x3 PUSH0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SUB PUSH2 0x5AA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5A1 SWAP1 PUSH2 0x19FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0xFF AND PUSH1 0x3 PUSH0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x5CA SWAP2 SWAP1 PUSH2 0x1A47 JUMP JUMPDEST DUP4 LT ISZERO PUSH2 0x60C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x603 SWAP1 PUSH2 0x1AD2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0xFF AND PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH3 0xFDD58E ADDRESS DUP8 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x66B SWAP3 SWAP2 SWAP1 PUSH2 0x198B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x686 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6AA SWAP2 SWAP1 PUSH2 0x1B04 JUMP JUMPDEST LT ISZERO PUSH2 0x6EB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6E2 SWAP1 PUSH2 0x1B79 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x746 SWAP2 SWAP1 PUSH2 0x1324 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x761 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x785 SWAP2 SWAP1 PUSH2 0x1B04 JUMP JUMPDEST LT ISZERO PUSH2 0x7C6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7BD SWAP1 PUSH2 0x1BE1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDD62ED3E DUP4 ADDRESS PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x823 SWAP3 SWAP2 SWAP1 PUSH2 0x1BFF JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x83E JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x862 SWAP2 SWAP1 PUSH2 0x1B04 JUMP JUMPDEST LT ISZERO PUSH2 0x8A3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x89A SWAP1 PUSH2 0x1C70 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8F8 DUP2 PUSH2 0x8AF PUSH2 0x518 JUMP JUMPDEST DUP6 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1058 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF242432A ADDRESS DUP4 DUP8 DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x958 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1CEE JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x96F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x981 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xB911D7E2EC7C85DD17DC5DBF9C086E0ADE9A12A268015519A2A5F93CE5754FEA DUP6 DUP6 DUP6 TIMESTAMP PUSH1 0x40 MLOAD PUSH2 0x9D1 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1D53 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH7 0x2386F26FC10000 CALLVALUE LT ISZERO PUSH2 0xA63 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA5A SWAP1 PUSH2 0x1DE0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH17 0x100000000000000000000000000000000 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0xAC3 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1DFE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH32 0x156E29F600000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD PUSH2 0xB4D SWAP2 SWAP1 PUSH2 0x1E7B JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0xB86 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xB8B JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0xBCF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBC6 SWAP1 PUSH2 0x1EDB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x2A3164428CBA5DAD15F5FFE47E10CBEFDCBBE9E269FD482753982EE8B2648C3E TIMESTAMP PUSH1 0x40 MLOAD PUSH2 0xC15 SWAP2 SWAP1 PUSH2 0x1258 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xCB0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCA7 SWAP1 PUSH2 0x1F43 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP4 SUB PUSH2 0xCF2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCE9 SWAP1 PUSH2 0x1FAB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x1650D49BAC940346E34BAC1DDE642598B57BA618D7A0C005A91257851CAE2C24 DUP7 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0xD27 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1FC9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH4 0xF23A6E61 PUSH1 0xE0 SHL SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0xD4A PUSH2 0xF10 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xDBA JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDB1 SWAP2 SWAP1 PUSH2 0x1324 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xDC3 DUP2 PUSH2 0xF97 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xDCE PUSH2 0xF10 JUMP JUMPDEST PUSH0 DUP3 SUB PUSH2 0xE10 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE07 SWAP1 PUSH2 0x2056 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 SUB PUSH2 0xE52 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE49 SWAP1 PUSH2 0x20BE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH32 0x18E75BB8C091A6448C12A2023F055B2714C151B941A91DF8B9938788769FFE13 DUP3 DUP3 TIMESTAMP PUSH1 0x40 MLOAD PUSH2 0xE9B SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x20DC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF18 PUSH2 0x10DA JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xF36 PUSH2 0x518 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xF95 JUMPI PUSH2 0xF59 PUSH2 0x10DA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF8C SWAP2 SWAP1 PUSH2 0x1324 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x10D4 DUP5 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x108D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2111 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x10E1 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x20 PUSH0 DUP5 MLOAD PUSH1 0x20 DUP7 ADD PUSH0 DUP9 GAS CALL DUP1 PUSH2 0x1100 JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE DUP2 REVERT JUMPDEST RETURNDATASIZE SWAP3 POP PUSH0 MLOAD SWAP2 POP POP PUSH0 DUP3 EQ PUSH2 0x1119 JUMPI PUSH1 0x1 DUP2 EQ ISZERO PUSH2 0x1134 JUMP JUMPDEST PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x1176 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x116D SWAP2 SWAP1 PUSH2 0x1324 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x11C1 DUP2 PUSH2 0x118D JUMP JUMPDEST DUP2 EQ PUSH2 0x11CB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x11DC DUP2 PUSH2 0x11B8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x11F7 JUMPI PUSH2 0x11F6 PUSH2 0x1185 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1204 DUP5 DUP3 DUP6 ADD PUSH2 0x11CE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1221 DUP2 PUSH2 0x120D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x123A PUSH0 DUP4 ADD DUP5 PUSH2 0x1218 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1252 DUP2 PUSH2 0x1240 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x126B PUSH0 DUP4 ADD DUP5 PUSH2 0x1249 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x12B3 PUSH2 0x12AE PUSH2 0x12A9 DUP5 PUSH2 0x1271 JUMP JUMPDEST PUSH2 0x1290 JUMP JUMPDEST PUSH2 0x1271 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x12C4 DUP3 PUSH2 0x1299 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x12D5 DUP3 PUSH2 0x12BA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x12E5 DUP2 PUSH2 0x12CB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x12FE PUSH0 DUP4 ADD DUP5 PUSH2 0x12DC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x130E DUP3 PUSH2 0x1271 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x131E DUP2 PUSH2 0x1304 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1337 PUSH0 DUP4 ADD DUP5 PUSH2 0x1315 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1346 DUP2 PUSH2 0x1304 JUMP JUMPDEST DUP2 EQ PUSH2 0x1350 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1361 DUP2 PUSH2 0x133D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x13B1 DUP3 PUSH2 0x136B JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x13D0 JUMPI PUSH2 0x13CF PUSH2 0x137B JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x13E2 PUSH2 0x117C JUMP JUMPDEST SWAP1 POP PUSH2 0x13EE DUP3 DUP3 PUSH2 0x13A8 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x140D JUMPI PUSH2 0x140C PUSH2 0x137B JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x142B DUP2 PUSH2 0x1240 JUMP JUMPDEST DUP2 EQ PUSH2 0x1435 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1446 DUP2 PUSH2 0x1422 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x145E PUSH2 0x1459 DUP5 PUSH2 0x13F3 JUMP JUMPDEST PUSH2 0x13D9 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x1481 JUMPI PUSH2 0x1480 PUSH2 0x141E JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x14AA JUMPI DUP1 PUSH2 0x1496 DUP9 DUP3 PUSH2 0x1438 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1483 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x14C8 JUMPI PUSH2 0x14C7 PUSH2 0x1367 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x14D8 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x144C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x14FF JUMPI PUSH2 0x14FE PUSH2 0x137B JUMP JUMPDEST JUMPDEST PUSH2 0x1508 DUP3 PUSH2 0x136B JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1535 PUSH2 0x1530 DUP5 PUSH2 0x14E5 JUMP JUMPDEST PUSH2 0x13D9 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1551 JUMPI PUSH2 0x1550 PUSH2 0x14E1 JUMP JUMPDEST JUMPDEST PUSH2 0x155C DUP5 DUP3 DUP6 PUSH2 0x1515 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1578 JUMPI PUSH2 0x1577 PUSH2 0x1367 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1588 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1523 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x15AA JUMPI PUSH2 0x15A9 PUSH2 0x1185 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x15B7 DUP9 DUP3 DUP10 ADD PUSH2 0x1353 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x15C8 DUP9 DUP3 DUP10 ADD PUSH2 0x1353 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x15E9 JUMPI PUSH2 0x15E8 PUSH2 0x1189 JUMP JUMPDEST JUMPDEST PUSH2 0x15F5 DUP9 DUP3 DUP10 ADD PUSH2 0x14B4 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1616 JUMPI PUSH2 0x1615 PUSH2 0x1189 JUMP JUMPDEST JUMPDEST PUSH2 0x1622 DUP9 DUP3 DUP10 ADD PUSH2 0x14B4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1643 JUMPI PUSH2 0x1642 PUSH2 0x1189 JUMP JUMPDEST JUMPDEST PUSH2 0x164F DUP9 DUP3 DUP10 ADD PUSH2 0x1564 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH2 0x1665 DUP2 PUSH2 0x118D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x167E PUSH0 DUP4 ADD DUP5 PUSH2 0x165C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1699 DUP2 PUSH2 0x1684 JUMP JUMPDEST DUP2 EQ PUSH2 0x16A3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x16B4 DUP2 PUSH2 0x1690 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x16D1 JUMPI PUSH2 0x16D0 PUSH2 0x1185 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x16DE DUP7 DUP3 DUP8 ADD PUSH2 0x1438 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x16EF DUP7 DUP3 DUP8 ADD PUSH2 0x1438 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1700 DUP7 DUP3 DUP8 ADD PUSH2 0x16A6 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x171F JUMPI PUSH2 0x171E PUSH2 0x1185 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x172C DUP5 DUP3 DUP6 ADD PUSH2 0x1438 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x173F DUP3 PUSH2 0x12BA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x174F DUP2 PUSH2 0x1735 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1768 PUSH0 DUP4 ADD DUP5 PUSH2 0x1746 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1787 JUMPI PUSH2 0x1786 PUSH2 0x1185 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1794 DUP9 DUP3 DUP10 ADD PUSH2 0x1353 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x17A5 DUP9 DUP3 DUP10 ADD PUSH2 0x1353 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x17B6 DUP9 DUP3 DUP10 ADD PUSH2 0x1438 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x17C7 DUP9 DUP3 DUP10 ADD PUSH2 0x1438 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x17E8 JUMPI PUSH2 0x17E7 PUSH2 0x1189 JUMP JUMPDEST JUMPDEST PUSH2 0x17F4 DUP9 DUP3 DUP10 ADD PUSH2 0x1564 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1816 JUMPI PUSH2 0x1815 PUSH2 0x1185 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1823 DUP5 DUP3 DUP6 ADD PUSH2 0x1353 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1842 JUMPI PUSH2 0x1841 PUSH2 0x1185 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x184F DUP6 DUP3 DUP7 ADD PUSH2 0x1438 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1860 DUP6 DUP3 DUP7 ADD PUSH2 0x1438 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x696E737566666369656E7420616D6F756E740000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x18AE PUSH1 0x12 DUP4 PUSH2 0x186A JUMP JUMPDEST SWAP2 POP PUSH2 0x18B9 DUP3 PUSH2 0x187A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x18DB DUP2 PUSH2 0x18A2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0x18FA PUSH0 DUP4 PUSH2 0x18E2 JUMP JUMPDEST SWAP2 POP PUSH2 0x1905 DUP3 PUSH2 0x18EC JUMP JUMPDEST PUSH0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1919 DUP3 PUSH2 0x18EF JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x756E61626C6520746F207769746864726177206D617469630000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1957 PUSH1 0x18 DUP4 PUSH2 0x186A JUMP JUMPDEST SWAP2 POP PUSH2 0x1962 DUP3 PUSH2 0x1923 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1984 DUP2 PUSH2 0x194B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x199E PUSH0 DUP4 ADD DUP6 PUSH2 0x1315 JUMP JUMPDEST PUSH2 0x19AB PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1249 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x7072696365206973206E6F742073657420796574000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x19E6 PUSH1 0x14 DUP4 PUSH2 0x186A JUMP JUMPDEST SWAP2 POP PUSH2 0x19F1 DUP3 PUSH2 0x19B2 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1A13 DUP2 PUSH2 0x19DA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1A51 DUP3 PUSH2 0x1240 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A5C DUP4 PUSH2 0x1240 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1A6A DUP2 PUSH2 0x1240 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1A81 JUMPI PUSH2 0x1A80 PUSH2 0x1A1A JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x616D6F756E74206E6F7420656E6F756768000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1ABC PUSH1 0x11 DUP4 PUSH2 0x186A JUMP JUMPDEST SWAP2 POP PUSH2 0x1AC7 DUP3 PUSH2 0x1A88 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1AE9 DUP2 PUSH2 0x1AB0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1AFE DUP2 PUSH2 0x1422 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B19 JUMPI PUSH2 0x1B18 PUSH2 0x1185 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1B26 DUP5 DUP3 DUP6 ADD PUSH2 0x1AF0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x62616C616E6365206973206E6F7420656E6F7567680000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1B63 PUSH1 0x15 DUP4 PUSH2 0x186A JUMP JUMPDEST SWAP2 POP PUSH2 0x1B6E DUP3 PUSH2 0x1B2F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1B90 DUP2 PUSH2 0x1B57 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x696E73756666696369656E7420746F6B656E0000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1BCB PUSH1 0x12 DUP4 PUSH2 0x186A JUMP JUMPDEST SWAP2 POP PUSH2 0x1BD6 DUP3 PUSH2 0x1B97 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1BF8 DUP2 PUSH2 0x1BBF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1C12 PUSH0 DUP4 ADD DUP6 PUSH2 0x1315 JUMP JUMPDEST PUSH2 0x1C1F PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1315 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x696E73756666696369656E7420746F6B656E20617070726F76616C0000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1C5A PUSH1 0x1B DUP4 PUSH2 0x186A JUMP JUMPDEST SWAP2 POP PUSH2 0x1C65 DUP3 PUSH2 0x1C26 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1C87 DUP2 PUSH2 0x1C4E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1CA8 PUSH2 0x1CA3 PUSH2 0x1C9E DUP5 PUSH2 0x1684 JUMP JUMPDEST PUSH2 0x1290 JUMP JUMPDEST PUSH2 0x1240 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1CB8 DUP2 PUSH2 0x1C8E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1CD9 PUSH0 DUP4 PUSH2 0x1CBE JUMP JUMPDEST SWAP2 POP PUSH2 0x1CE4 DUP3 PUSH2 0x18EC JUMP JUMPDEST PUSH0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x1D01 PUSH0 DUP4 ADD DUP8 PUSH2 0x1315 JUMP JUMPDEST PUSH2 0x1D0E PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1315 JUMP JUMPDEST PUSH2 0x1D1B PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1249 JUMP JUMPDEST PUSH2 0x1D28 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x1CAF JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x1D39 DUP2 PUSH2 0x1CCE JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1D4D DUP2 PUSH2 0x1684 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1D66 PUSH0 DUP4 ADD DUP8 PUSH2 0x1249 JUMP JUMPDEST PUSH2 0x1D73 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1249 JUMP JUMPDEST PUSH2 0x1D80 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1D44 JUMP JUMPDEST PUSH2 0x1D8D PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x1249 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x7072696365206E6F7420656E6F75676800000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1DCA PUSH1 0x10 DUP4 PUSH2 0x186A JUMP JUMPDEST SWAP2 POP PUSH2 0x1DD5 DUP3 PUSH2 0x1D96 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1DF7 DUP2 PUSH2 0x1DBE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1E11 PUSH0 DUP4 ADD DUP7 PUSH2 0x1315 JUMP JUMPDEST PUSH2 0x1E1E PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1249 JUMP JUMPDEST PUSH2 0x1E2B PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1249 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1E55 DUP3 PUSH2 0x1E33 JUMP JUMPDEST PUSH2 0x1E5F DUP2 DUP6 PUSH2 0x18E2 JUMP JUMPDEST SWAP4 POP PUSH2 0x1E6F DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1E3D JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1E86 DUP3 DUP5 PUSH2 0x1E4B JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x6D696E74206661696C6564000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1EC5 PUSH1 0xB DUP4 PUSH2 0x186A JUMP JUMPDEST SWAP2 POP PUSH2 0x1ED0 DUP3 PUSH2 0x1E91 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1EF2 DUP2 PUSH2 0x1EB9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x696E636F72726563742073656E64657200000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1F2D PUSH1 0x10 DUP4 PUSH2 0x186A JUMP JUMPDEST SWAP2 POP PUSH2 0x1F38 DUP3 PUSH2 0x1EF9 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1F5A DUP2 PUSH2 0x1F21 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x7175616E74697479206973207A65726F00000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1F95 PUSH1 0x10 DUP4 PUSH2 0x186A JUMP JUMPDEST SWAP2 POP PUSH2 0x1FA0 DUP3 PUSH2 0x1F61 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1FC2 DUP2 PUSH2 0x1F89 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1FDC PUSH0 DUP4 ADD DUP8 PUSH2 0x1315 JUMP JUMPDEST PUSH2 0x1FE9 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1315 JUMP JUMPDEST PUSH2 0x1FF6 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1249 JUMP JUMPDEST PUSH2 0x2003 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x1249 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x746F6B656E4964206973207A65726F0000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2040 PUSH1 0xF DUP4 PUSH2 0x186A JUMP JUMPDEST SWAP2 POP PUSH2 0x204B DUP3 PUSH2 0x200C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x206D DUP2 PUSH2 0x2034 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x7072696365206973207A65726F00000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x20A8 PUSH1 0xD DUP4 PUSH2 0x186A JUMP JUMPDEST SWAP2 POP PUSH2 0x20B3 DUP3 PUSH2 0x2074 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x20D5 DUP2 PUSH2 0x209C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x20EF PUSH0 DUP4 ADD DUP7 PUSH2 0x1249 JUMP JUMPDEST PUSH2 0x20FC PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1249 JUMP JUMPDEST PUSH2 0x2109 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1249 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2124 PUSH0 DUP4 ADD DUP7 PUSH2 0x1315 JUMP JUMPDEST PUSH2 0x2131 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1315 JUMP JUMPDEST PUSH2 0x213E PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1249 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP9 0xE2 DUP7 CALLER DUP5 SWAP14 0x2E PUSH3 0xDA1411 0x1F 0xE0 0xC7 0xE3 0xB6 0xBF AND DUP7 PUSH13 0x563C6FC9E0820B8008563FFE64 PUSH20 0x6F6C634300081A00330000000000000000000000 ",
							"sourceMap": "319:6282:14:-:0;;;1647:419;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1713:12;:10;;;:12;;:::i;:::-;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;1997:14:14::1;1974:11;;:38;;;;;;;;;;;;;;;;;;2045:12;2023;;:35;;;;;;;;;;;;;;;;;;1647:419:::0;;319:6282;;656:96:10;709:7;735:10;728:17;;656:96;:::o;2912:187:0:-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;88:117:15:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:507::-;924:6;932;981:2;969:9;960:7;956:23;952:32;949:119;;;987:79;;:::i;:::-;949:119;1107:1;1132:64;1188:7;1179:6;1168:9;1164:22;1132:64;:::i;:::-;1122:74;;1078:128;1245:2;1271:64;1327:7;1318:6;1307:9;1303:22;1271:64;:::i;:::-;1261:74;;1216:129;845:507;;;;;:::o;1358:118::-;1445:24;1463:5;1445:24;:::i;:::-;1440:3;1433:37;1358:118;;:::o;1482:222::-;1575:4;1613:2;1602:9;1598:18;1590:26;;1626:71;1694:1;1683:9;1679:17;1670:6;1626:71;:::i;:::-;1482:222;;;;:::o;319:6282:14:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_callOptionalReturn_930": {
									"entryPoint": 4321,
									"id": 930,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkOwner_84": {
									"entryPoint": 3856,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_1243": {
									"entryPoint": 4314,
									"id": 1243,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_146": {
									"entryPoint": 3991,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@buyItem_1568": {
									"entryPoint": 1363,
									"id": 1568,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@buyTicket_1609": {
									"entryPoint": 2585,
									"id": 1609,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getBalance_1621": {
									"entryPoint": 927,
									"id": 1621,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@onERC1155BatchReceived_482": {
									"entryPoint": 1343,
									"id": 482,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"@onERC1155Received_1464": {
									"entryPoint": 3104,
									"id": 1464,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"@owner_67": {
									"entryPoint": 1304,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_98": {
									"entryPoint": 1285,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeTransferFrom_635": {
									"entryPoint": 4184,
									"id": 635,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@setPrice_1697": {
									"entryPoint": 3526,
									"id": 1697,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@snowmenGame_1339": {
									"entryPoint": 2548,
									"id": 1339,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@snowmenToken_1336": {
									"entryPoint": 934,
									"id": 1336,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@supportsInterface_1306": {
									"entryPoint": 3751,
									"id": 1306,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_438": {
									"entryPoint": 806,
									"id": 438,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@tokenPrice_1352": {
									"entryPoint": 2527,
									"id": 1352,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_126": {
									"entryPoint": 3394,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@withdraw_1660": {
									"entryPoint": 971,
									"id": 1660,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 5196,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_bytes_memory_ptr": {
									"entryPoint": 5411,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 4947,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 5300,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4": {
									"entryPoint": 4558,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_memory_ptr": {
									"entryPoint": 5476,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 5176,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 6896,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint8": {
									"entryPoint": 5798,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 6145,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr": {
									"entryPoint": 5521,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr": {
									"entryPoint": 5998,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 4578,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 5898,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 6916,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 6188,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256t_uint256t_uint8": {
									"entryPoint": 5818,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 4885,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 4632,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes4_to_t_bytes4_fromStack": {
									"entryPoint": 5724,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 7755,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_contract$_IERC1155_$360_to_t_address_fromStack": {
									"entryPoint": 5958,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IERC20_$561_to_t_address_fromStack": {
									"entryPoint": 4828,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_12559359288c4fce39d17fa0f1324f72a3da45512a522d92ebf3218fb243f801_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7246,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_240c2a2420364d9260a9d9de5c0bdeaef40ae9271ae29d4c186edd83349afc50_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8244,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_248afc2f7838f28c4e3e8b4422d9aefd390d276ca06a0ae623456964600f75f2_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7614,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_49886143fed4f67f7143b146962ea8b8925c2fdc5341127d3966dea0fe25a8b9_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7103,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_4c1122224259dd0b02fff95af769f256a8450d91cf0444f02e6c136dce106f44_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8073,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_58b0c597f29dac8001964c5c8f94457e37567080fbc7198aa316b42b6379f65b_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7969,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_594ff2dfc35e5b8979a04d047bc1811cd0832013e67a9ef5bc97a173e7a27efb_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7865,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_743f341dbd5b34a8c4b55eb3374eeb8e53791ae693ac55d74c0130afb734375d_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6475,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_8177479f5ad9c40bafd12e1ed3db40c887baca8cbfff268a90cc65968008dcac_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6832,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_aa29b780b68936bfd0a853c44e2650b3d0dacee32c7f0cdc2421e6a8638fa1b4_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6306,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 7374,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 6383,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_e111634b261d696158fb58291ba33104cff741f79f092956e352cd551909642b_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6999,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_e5a68e1890c06b08dae31f764e95e8f1a2c25fa5fd06a39f1ed4630ab3d8317c_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6618,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ee8b0754ac04b271c493c71118fe013f51611851aeb777bded224dc19d7cd48c_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8348,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 4681,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint256_fromStack": {
									"entryPoint": 7343,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 7492,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 7803,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 6415,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 4900,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed": {
									"entryPoint": 7167,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 8465,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256__to_t_address_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 8137,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_uint8_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 7406,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 6539,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 7678,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 4647,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed": {
									"entryPoint": 5739,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC1155_$360__to_t_address__fromStack_reversed": {
									"entryPoint": 5973,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$561__to_t_address__fromStack_reversed": {
									"entryPoint": 4843,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_12559359288c4fce39d17fa0f1324f72a3da45512a522d92ebf3218fb243f801__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7280,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_240c2a2420364d9260a9d9de5c0bdeaef40ae9271ae29d4c186edd83349afc50__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8278,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_248afc2f7838f28c4e3e8b4422d9aefd390d276ca06a0ae623456964600f75f2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7648,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_49886143fed4f67f7143b146962ea8b8925c2fdc5341127d3966dea0fe25a8b9__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7137,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4c1122224259dd0b02fff95af769f256a8450d91cf0444f02e6c136dce106f44__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8107,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_58b0c597f29dac8001964c5c8f94457e37567080fbc7198aa316b42b6379f65b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8003,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_594ff2dfc35e5b8979a04d047bc1811cd0832013e67a9ef5bc97a173e7a27efb__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7899,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_743f341dbd5b34a8c4b55eb3374eeb8e53791ae693ac55d74c0130afb734375d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6509,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8177479f5ad9c40bafd12e1ed3db40c887baca8cbfff268a90cc65968008dcac__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6866,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_aa29b780b68936bfd0a853c44e2650b3d0dacee32c7f0cdc2421e6a8638fa1b4__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6340,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e111634b261d696158fb58291ba33104cff741f79f092956e352cd551909642b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7033,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e5a68e1890c06b08dae31f764e95e8f1a2c25fa5fd06a39f1ed4630ab3d8317c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6652,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ee8b0754ac04b271c493c71118fe013f51611851aeb777bded224dc19d7cd48c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8382,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 4696,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 8412,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_uint8_t_uint256__to_t_uint256_t_uint256_t_uint8_t_uint256__fromStack_reversed": {
									"entryPoint": 7507,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 5081,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 4476,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 5107,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_allocation_size_t_bytes_memory_ptr": {
									"entryPoint": 5349,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 7731,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 7358,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 6370,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 6250,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 6727,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 4868,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 4621,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 4493,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 4721,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 4672,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 5764,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC1155_$360_to_t_address": {
									"entryPoint": 5941,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC20_$561_to_t_address": {
									"entryPoint": 4811,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 4794,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 4761,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint8_to_t_uint256": {
									"entryPoint": 7310,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_calldata_to_memory_with_cleanup": {
									"entryPoint": 5397,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 7741,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"finalize_allocation": {
									"entryPoint": 5032,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 4752,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 6682,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 4987,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 4967,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef": {
									"entryPoint": 5150,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 5345,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 4489,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 4485,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 4971,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_12559359288c4fce39d17fa0f1324f72a3da45512a522d92ebf3218fb243f801": {
									"entryPoint": 7206,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_240c2a2420364d9260a9d9de5c0bdeaef40ae9271ae29d4c186edd83349afc50": {
									"entryPoint": 8204,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_248afc2f7838f28c4e3e8b4422d9aefd390d276ca06a0ae623456964600f75f2": {
									"entryPoint": 7574,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_49886143fed4f67f7143b146962ea8b8925c2fdc5341127d3966dea0fe25a8b9": {
									"entryPoint": 7063,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_4c1122224259dd0b02fff95af769f256a8450d91cf0444f02e6c136dce106f44": {
									"entryPoint": 8033,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_58b0c597f29dac8001964c5c8f94457e37567080fbc7198aa316b42b6379f65b": {
									"entryPoint": 7929,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_594ff2dfc35e5b8979a04d047bc1811cd0832013e67a9ef5bc97a173e7a27efb": {
									"entryPoint": 7825,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_743f341dbd5b34a8c4b55eb3374eeb8e53791ae693ac55d74c0130afb734375d": {
									"entryPoint": 6435,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_8177479f5ad9c40bafd12e1ed3db40c887baca8cbfff268a90cc65968008dcac": {
									"entryPoint": 6792,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_aa29b780b68936bfd0a853c44e2650b3d0dacee32c7f0cdc2421e6a8638fa1b4": {
									"entryPoint": 6266,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470": {
									"entryPoint": 6380,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_e111634b261d696158fb58291ba33104cff741f79f092956e352cd551909642b": {
									"entryPoint": 6959,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_e5a68e1890c06b08dae31f764e95e8f1a2c25fa5fd06a39f1ed4630ab3d8317c": {
									"entryPoint": 6578,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ee8b0754ac04b271c493c71118fe013f51611851aeb777bded224dc19d7cd48c": {
									"entryPoint": 8308,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 4925,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 4536,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 5154,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint8": {
									"entryPoint": 5776,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:34248:15",
										"nodeType": "YulBlock",
										"src": "0:34248:15",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:15",
													"nodeType": "YulBlock",
													"src": "47:35:15",
													"statements": [
														{
															"nativeSrc": "57:19:15",
															"nodeType": "YulAssignment",
															"src": "57:19:15",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:15",
																		"nodeType": "YulLiteral",
																		"src": "73:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:15"
																},
																"nativeSrc": "67:9:15",
																"nodeType": "YulFunctionCall",
																"src": "67:9:15"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:15"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:15",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:15",
														"nodeType": "YulTypedName",
														"src": "40:6:15",
														"type": ""
													}
												],
												"src": "7:75:15"
											},
											{
												"body": {
													"nativeSrc": "177:28:15",
													"nodeType": "YulBlock",
													"src": "177:28:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:15",
																		"nodeType": "YulLiteral",
																		"src": "194:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:15",
																		"nodeType": "YulLiteral",
																		"src": "197:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:15"
																},
																"nativeSrc": "187:12:15",
																"nodeType": "YulFunctionCall",
																"src": "187:12:15"
															},
															"nativeSrc": "187:12:15",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:15"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:15",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:15"
											},
											{
												"body": {
													"nativeSrc": "300:28:15",
													"nodeType": "YulBlock",
													"src": "300:28:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:15",
																		"nodeType": "YulLiteral",
																		"src": "317:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:15",
																		"nodeType": "YulLiteral",
																		"src": "320:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:15"
																},
																"nativeSrc": "310:12:15",
																"nodeType": "YulFunctionCall",
																"src": "310:12:15"
															},
															"nativeSrc": "310:12:15",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:15"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:15",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:15"
											},
											{
												"body": {
													"nativeSrc": "378:105:15",
													"nodeType": "YulBlock",
													"src": "378:105:15",
													"statements": [
														{
															"nativeSrc": "388:89:15",
															"nodeType": "YulAssignment",
															"src": "388:89:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "403:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "403:5:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "410:66:15",
																		"nodeType": "YulLiteral",
																		"src": "410:66:15",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "399:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "399:3:15"
																},
																"nativeSrc": "399:78:15",
																"nodeType": "YulFunctionCall",
																"src": "399:78:15"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "388:7:15",
																	"nodeType": "YulIdentifier",
																	"src": "388:7:15"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nativeSrc": "334:149:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "360:5:15",
														"nodeType": "YulTypedName",
														"src": "360:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "370:7:15",
														"nodeType": "YulTypedName",
														"src": "370:7:15",
														"type": ""
													}
												],
												"src": "334:149:15"
											},
											{
												"body": {
													"nativeSrc": "531:78:15",
													"nodeType": "YulBlock",
													"src": "531:78:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "587:16:15",
																"nodeType": "YulBlock",
																"src": "587:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "596:1:15",
																					"nodeType": "YulLiteral",
																					"src": "596:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "599:1:15",
																					"nodeType": "YulLiteral",
																					"src": "599:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "589:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "589:6:15"
																			},
																			"nativeSrc": "589:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "589:12:15"
																		},
																		"nativeSrc": "589:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "589:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "554:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "554:5:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "578:5:15",
																						"nodeType": "YulIdentifier",
																						"src": "578:5:15"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nativeSrc": "561:16:15",
																					"nodeType": "YulIdentifier",
																					"src": "561:16:15"
																				},
																				"nativeSrc": "561:23:15",
																				"nodeType": "YulFunctionCall",
																				"src": "561:23:15"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "551:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "551:2:15"
																		},
																		"nativeSrc": "551:34:15",
																		"nodeType": "YulFunctionCall",
																		"src": "551:34:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "544:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "544:6:15"
																},
																"nativeSrc": "544:42:15",
																"nodeType": "YulFunctionCall",
																"src": "544:42:15"
															},
															"nativeSrc": "541:62:15",
															"nodeType": "YulIf",
															"src": "541:62:15"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nativeSrc": "489:120:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "524:5:15",
														"nodeType": "YulTypedName",
														"src": "524:5:15",
														"type": ""
													}
												],
												"src": "489:120:15"
											},
											{
												"body": {
													"nativeSrc": "666:86:15",
													"nodeType": "YulBlock",
													"src": "666:86:15",
													"statements": [
														{
															"nativeSrc": "676:29:15",
															"nodeType": "YulAssignment",
															"src": "676:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "698:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "698:6:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "685:12:15",
																	"nodeType": "YulIdentifier",
																	"src": "685:12:15"
																},
																"nativeSrc": "685:20:15",
																"nodeType": "YulFunctionCall",
																"src": "685:20:15"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "676:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "676:5:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "740:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "740:5:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nativeSrc": "714:25:15",
																	"nodeType": "YulIdentifier",
																	"src": "714:25:15"
																},
																"nativeSrc": "714:32:15",
																"nodeType": "YulFunctionCall",
																"src": "714:32:15"
															},
															"nativeSrc": "714:32:15",
															"nodeType": "YulExpressionStatement",
															"src": "714:32:15"
														}
													]
												},
												"name": "abi_decode_t_bytes4",
												"nativeSrc": "615:137:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "644:6:15",
														"nodeType": "YulTypedName",
														"src": "644:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "652:3:15",
														"nodeType": "YulTypedName",
														"src": "652:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "660:5:15",
														"nodeType": "YulTypedName",
														"src": "660:5:15",
														"type": ""
													}
												],
												"src": "615:137:15"
											},
											{
												"body": {
													"nativeSrc": "823:262:15",
													"nodeType": "YulBlock",
													"src": "823:262:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "869:83:15",
																"nodeType": "YulBlock",
																"src": "869:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "871:77:15",
																				"nodeType": "YulIdentifier",
																				"src": "871:77:15"
																			},
																			"nativeSrc": "871:79:15",
																			"nodeType": "YulFunctionCall",
																			"src": "871:79:15"
																		},
																		"nativeSrc": "871:79:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "871:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "844:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "844:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "853:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "853:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "840:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "840:3:15"
																		},
																		"nativeSrc": "840:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "840:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "865:2:15",
																		"nodeType": "YulLiteral",
																		"src": "865:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "836:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "836:3:15"
																},
																"nativeSrc": "836:32:15",
																"nodeType": "YulFunctionCall",
																"src": "836:32:15"
															},
															"nativeSrc": "833:119:15",
															"nodeType": "YulIf",
															"src": "833:119:15"
														},
														{
															"nativeSrc": "962:116:15",
															"nodeType": "YulBlock",
															"src": "962:116:15",
															"statements": [
																{
																	"nativeSrc": "977:15:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "977:15:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "991:1:15",
																		"nodeType": "YulLiteral",
																		"src": "991:1:15",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "981:6:15",
																			"nodeType": "YulTypedName",
																			"src": "981:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1006:62:15",
																	"nodeType": "YulAssignment",
																	"src": "1006:62:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1040:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "1040:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1051:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "1051:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1036:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "1036:3:15"
																				},
																				"nativeSrc": "1036:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "1036:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1060:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "1060:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4",
																			"nativeSrc": "1016:19:15",
																			"nodeType": "YulIdentifier",
																			"src": "1016:19:15"
																		},
																		"nativeSrc": "1016:52:15",
																		"nodeType": "YulFunctionCall",
																		"src": "1016:52:15"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1006:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "1006:6:15"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nativeSrc": "758:327:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "793:9:15",
														"nodeType": "YulTypedName",
														"src": "793:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "804:7:15",
														"nodeType": "YulTypedName",
														"src": "804:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "816:6:15",
														"nodeType": "YulTypedName",
														"src": "816:6:15",
														"type": ""
													}
												],
												"src": "758:327:15"
											},
											{
												"body": {
													"nativeSrc": "1133:48:15",
													"nodeType": "YulBlock",
													"src": "1133:48:15",
													"statements": [
														{
															"nativeSrc": "1143:32:15",
															"nodeType": "YulAssignment",
															"src": "1143:32:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1168:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "1168:5:15"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1161:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "1161:6:15"
																		},
																		"nativeSrc": "1161:13:15",
																		"nodeType": "YulFunctionCall",
																		"src": "1161:13:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1154:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "1154:6:15"
																},
																"nativeSrc": "1154:21:15",
																"nodeType": "YulFunctionCall",
																"src": "1154:21:15"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1143:7:15",
																	"nodeType": "YulIdentifier",
																	"src": "1143:7:15"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "1091:90:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1115:5:15",
														"nodeType": "YulTypedName",
														"src": "1115:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1125:7:15",
														"nodeType": "YulTypedName",
														"src": "1125:7:15",
														"type": ""
													}
												],
												"src": "1091:90:15"
											},
											{
												"body": {
													"nativeSrc": "1246:50:15",
													"nodeType": "YulBlock",
													"src": "1246:50:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1263:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "1263:3:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1283:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "1283:5:15"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "1268:14:15",
																			"nodeType": "YulIdentifier",
																			"src": "1268:14:15"
																		},
																		"nativeSrc": "1268:21:15",
																		"nodeType": "YulFunctionCall",
																		"src": "1268:21:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1256:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "1256:6:15"
																},
																"nativeSrc": "1256:34:15",
																"nodeType": "YulFunctionCall",
																"src": "1256:34:15"
															},
															"nativeSrc": "1256:34:15",
															"nodeType": "YulExpressionStatement",
															"src": "1256:34:15"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "1187:109:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1234:5:15",
														"nodeType": "YulTypedName",
														"src": "1234:5:15",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1241:3:15",
														"nodeType": "YulTypedName",
														"src": "1241:3:15",
														"type": ""
													}
												],
												"src": "1187:109:15"
											},
											{
												"body": {
													"nativeSrc": "1394:118:15",
													"nodeType": "YulBlock",
													"src": "1394:118:15",
													"statements": [
														{
															"nativeSrc": "1404:26:15",
															"nodeType": "YulAssignment",
															"src": "1404:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1416:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "1416:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1427:2:15",
																		"nodeType": "YulLiteral",
																		"src": "1427:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1412:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "1412:3:15"
																},
																"nativeSrc": "1412:18:15",
																"nodeType": "YulFunctionCall",
																"src": "1412:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1404:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "1404:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1478:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "1478:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1491:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "1491:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1502:1:15",
																				"nodeType": "YulLiteral",
																				"src": "1502:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1487:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "1487:3:15"
																		},
																		"nativeSrc": "1487:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "1487:17:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "1440:37:15",
																	"nodeType": "YulIdentifier",
																	"src": "1440:37:15"
																},
																"nativeSrc": "1440:65:15",
																"nodeType": "YulFunctionCall",
																"src": "1440:65:15"
															},
															"nativeSrc": "1440:65:15",
															"nodeType": "YulExpressionStatement",
															"src": "1440:65:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1302:210:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1366:9:15",
														"nodeType": "YulTypedName",
														"src": "1366:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1378:6:15",
														"nodeType": "YulTypedName",
														"src": "1378:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1389:4:15",
														"nodeType": "YulTypedName",
														"src": "1389:4:15",
														"type": ""
													}
												],
												"src": "1302:210:15"
											},
											{
												"body": {
													"nativeSrc": "1563:32:15",
													"nodeType": "YulBlock",
													"src": "1563:32:15",
													"statements": [
														{
															"nativeSrc": "1573:16:15",
															"nodeType": "YulAssignment",
															"src": "1573:16:15",
															"value": {
																"name": "value",
																"nativeSrc": "1584:5:15",
																"nodeType": "YulIdentifier",
																"src": "1584:5:15"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1573:7:15",
																	"nodeType": "YulIdentifier",
																	"src": "1573:7:15"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "1518:77:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1545:5:15",
														"nodeType": "YulTypedName",
														"src": "1545:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1555:7:15",
														"nodeType": "YulTypedName",
														"src": "1555:7:15",
														"type": ""
													}
												],
												"src": "1518:77:15"
											},
											{
												"body": {
													"nativeSrc": "1666:53:15",
													"nodeType": "YulBlock",
													"src": "1666:53:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1683:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "1683:3:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1706:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "1706:5:15"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "1688:17:15",
																			"nodeType": "YulIdentifier",
																			"src": "1688:17:15"
																		},
																		"nativeSrc": "1688:24:15",
																		"nodeType": "YulFunctionCall",
																		"src": "1688:24:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1676:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "1676:6:15"
																},
																"nativeSrc": "1676:37:15",
																"nodeType": "YulFunctionCall",
																"src": "1676:37:15"
															},
															"nativeSrc": "1676:37:15",
															"nodeType": "YulExpressionStatement",
															"src": "1676:37:15"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "1601:118:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1654:5:15",
														"nodeType": "YulTypedName",
														"src": "1654:5:15",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1661:3:15",
														"nodeType": "YulTypedName",
														"src": "1661:3:15",
														"type": ""
													}
												],
												"src": "1601:118:15"
											},
											{
												"body": {
													"nativeSrc": "1823:124:15",
													"nodeType": "YulBlock",
													"src": "1823:124:15",
													"statements": [
														{
															"nativeSrc": "1833:26:15",
															"nodeType": "YulAssignment",
															"src": "1833:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1845:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "1845:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1856:2:15",
																		"nodeType": "YulLiteral",
																		"src": "1856:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1841:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "1841:3:15"
																},
																"nativeSrc": "1841:18:15",
																"nodeType": "YulFunctionCall",
																"src": "1841:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1833:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "1833:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1913:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "1913:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1926:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "1926:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1937:1:15",
																				"nodeType": "YulLiteral",
																				"src": "1937:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1922:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "1922:3:15"
																		},
																		"nativeSrc": "1922:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "1922:17:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "1869:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "1869:43:15"
																},
																"nativeSrc": "1869:71:15",
																"nodeType": "YulFunctionCall",
																"src": "1869:71:15"
															},
															"nativeSrc": "1869:71:15",
															"nodeType": "YulExpressionStatement",
															"src": "1869:71:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "1725:222:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1795:9:15",
														"nodeType": "YulTypedName",
														"src": "1795:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1807:6:15",
														"nodeType": "YulTypedName",
														"src": "1807:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1818:4:15",
														"nodeType": "YulTypedName",
														"src": "1818:4:15",
														"type": ""
													}
												],
												"src": "1725:222:15"
											},
											{
												"body": {
													"nativeSrc": "1998:81:15",
													"nodeType": "YulBlock",
													"src": "1998:81:15",
													"statements": [
														{
															"nativeSrc": "2008:65:15",
															"nodeType": "YulAssignment",
															"src": "2008:65:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2023:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "2023:5:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2030:42:15",
																		"nodeType": "YulLiteral",
																		"src": "2030:42:15",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2019:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "2019:3:15"
																},
																"nativeSrc": "2019:54:15",
																"nodeType": "YulFunctionCall",
																"src": "2019:54:15"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2008:7:15",
																	"nodeType": "YulIdentifier",
																	"src": "2008:7:15"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1953:126:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1980:5:15",
														"nodeType": "YulTypedName",
														"src": "1980:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1990:7:15",
														"nodeType": "YulTypedName",
														"src": "1990:7:15",
														"type": ""
													}
												],
												"src": "1953:126:15"
											},
											{
												"body": {
													"nativeSrc": "2117:28:15",
													"nodeType": "YulBlock",
													"src": "2117:28:15",
													"statements": [
														{
															"nativeSrc": "2127:12:15",
															"nodeType": "YulAssignment",
															"src": "2127:12:15",
															"value": {
																"name": "value",
																"nativeSrc": "2134:5:15",
																"nodeType": "YulIdentifier",
																"src": "2134:5:15"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "2127:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "2127:3:15"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "2085:60:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2103:5:15",
														"nodeType": "YulTypedName",
														"src": "2103:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "2113:3:15",
														"nodeType": "YulTypedName",
														"src": "2113:3:15",
														"type": ""
													}
												],
												"src": "2085:60:15"
											},
											{
												"body": {
													"nativeSrc": "2211:82:15",
													"nodeType": "YulBlock",
													"src": "2211:82:15",
													"statements": [
														{
															"nativeSrc": "2221:66:15",
															"nodeType": "YulAssignment",
															"src": "2221:66:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2279:5:15",
																						"nodeType": "YulIdentifier",
																						"src": "2279:5:15"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "2261:17:15",
																					"nodeType": "YulIdentifier",
																					"src": "2261:17:15"
																				},
																				"nativeSrc": "2261:24:15",
																				"nodeType": "YulFunctionCall",
																				"src": "2261:24:15"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "2252:8:15",
																			"nodeType": "YulIdentifier",
																			"src": "2252:8:15"
																		},
																		"nativeSrc": "2252:34:15",
																		"nodeType": "YulFunctionCall",
																		"src": "2252:34:15"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "2234:17:15",
																	"nodeType": "YulIdentifier",
																	"src": "2234:17:15"
																},
																"nativeSrc": "2234:53:15",
																"nodeType": "YulFunctionCall",
																"src": "2234:53:15"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "2221:9:15",
																	"nodeType": "YulIdentifier",
																	"src": "2221:9:15"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nativeSrc": "2151:142:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2191:5:15",
														"nodeType": "YulTypedName",
														"src": "2191:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "2201:9:15",
														"nodeType": "YulTypedName",
														"src": "2201:9:15",
														"type": ""
													}
												],
												"src": "2151:142:15"
											},
											{
												"body": {
													"nativeSrc": "2359:66:15",
													"nodeType": "YulBlock",
													"src": "2359:66:15",
													"statements": [
														{
															"nativeSrc": "2369:50:15",
															"nodeType": "YulAssignment",
															"src": "2369:50:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2413:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "2413:5:15"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nativeSrc": "2382:30:15",
																	"nodeType": "YulIdentifier",
																	"src": "2382:30:15"
																},
																"nativeSrc": "2382:37:15",
																"nodeType": "YulFunctionCall",
																"src": "2382:37:15"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "2369:9:15",
																	"nodeType": "YulIdentifier",
																	"src": "2369:9:15"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nativeSrc": "2299:126:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2339:5:15",
														"nodeType": "YulTypedName",
														"src": "2339:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "2349:9:15",
														"nodeType": "YulTypedName",
														"src": "2349:9:15",
														"type": ""
													}
												],
												"src": "2299:126:15"
											},
											{
												"body": {
													"nativeSrc": "2505:66:15",
													"nodeType": "YulBlock",
													"src": "2505:66:15",
													"statements": [
														{
															"nativeSrc": "2515:50:15",
															"nodeType": "YulAssignment",
															"src": "2515:50:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2559:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "2559:5:15"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "2528:30:15",
																	"nodeType": "YulIdentifier",
																	"src": "2528:30:15"
																},
																"nativeSrc": "2528:37:15",
																"nodeType": "YulFunctionCall",
																"src": "2528:37:15"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "2515:9:15",
																	"nodeType": "YulIdentifier",
																	"src": "2515:9:15"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC20_$561_to_t_address",
												"nativeSrc": "2431:140:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2485:5:15",
														"nodeType": "YulTypedName",
														"src": "2485:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "2495:9:15",
														"nodeType": "YulTypedName",
														"src": "2495:9:15",
														"type": ""
													}
												],
												"src": "2431:140:15"
											},
											{
												"body": {
													"nativeSrc": "2656:80:15",
													"nodeType": "YulBlock",
													"src": "2656:80:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2673:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "2673:3:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2723:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "2723:5:15"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC20_$561_to_t_address",
																			"nativeSrc": "2678:44:15",
																			"nodeType": "YulIdentifier",
																			"src": "2678:44:15"
																		},
																		"nativeSrc": "2678:51:15",
																		"nodeType": "YulFunctionCall",
																		"src": "2678:51:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2666:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "2666:6:15"
																},
																"nativeSrc": "2666:64:15",
																"nodeType": "YulFunctionCall",
																"src": "2666:64:15"
															},
															"nativeSrc": "2666:64:15",
															"nodeType": "YulExpressionStatement",
															"src": "2666:64:15"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC20_$561_to_t_address_fromStack",
												"nativeSrc": "2577:159:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2644:5:15",
														"nodeType": "YulTypedName",
														"src": "2644:5:15",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2651:3:15",
														"nodeType": "YulTypedName",
														"src": "2651:3:15",
														"type": ""
													}
												],
												"src": "2577:159:15"
											},
											{
												"body": {
													"nativeSrc": "2854:138:15",
													"nodeType": "YulBlock",
													"src": "2854:138:15",
													"statements": [
														{
															"nativeSrc": "2864:26:15",
															"nodeType": "YulAssignment",
															"src": "2864:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2876:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "2876:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2887:2:15",
																		"nodeType": "YulLiteral",
																		"src": "2887:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2872:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "2872:3:15"
																},
																"nativeSrc": "2872:18:15",
																"nodeType": "YulFunctionCall",
																"src": "2872:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2864:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "2864:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2958:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "2958:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2971:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "2971:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2982:1:15",
																				"nodeType": "YulLiteral",
																				"src": "2982:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2967:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "2967:3:15"
																		},
																		"nativeSrc": "2967:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "2967:17:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20_$561_to_t_address_fromStack",
																	"nativeSrc": "2900:57:15",
																	"nodeType": "YulIdentifier",
																	"src": "2900:57:15"
																},
																"nativeSrc": "2900:85:15",
																"nodeType": "YulFunctionCall",
																"src": "2900:85:15"
															},
															"nativeSrc": "2900:85:15",
															"nodeType": "YulExpressionStatement",
															"src": "2900:85:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$561__to_t_address__fromStack_reversed",
												"nativeSrc": "2742:250:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2826:9:15",
														"nodeType": "YulTypedName",
														"src": "2826:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2838:6:15",
														"nodeType": "YulTypedName",
														"src": "2838:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2849:4:15",
														"nodeType": "YulTypedName",
														"src": "2849:4:15",
														"type": ""
													}
												],
												"src": "2742:250:15"
											},
											{
												"body": {
													"nativeSrc": "3043:51:15",
													"nodeType": "YulBlock",
													"src": "3043:51:15",
													"statements": [
														{
															"nativeSrc": "3053:35:15",
															"nodeType": "YulAssignment",
															"src": "3053:35:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3082:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "3082:5:15"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "3064:17:15",
																	"nodeType": "YulIdentifier",
																	"src": "3064:17:15"
																},
																"nativeSrc": "3064:24:15",
																"nodeType": "YulFunctionCall",
																"src": "3064:24:15"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3053:7:15",
																	"nodeType": "YulIdentifier",
																	"src": "3053:7:15"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "2998:96:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3025:5:15",
														"nodeType": "YulTypedName",
														"src": "3025:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3035:7:15",
														"nodeType": "YulTypedName",
														"src": "3035:7:15",
														"type": ""
													}
												],
												"src": "2998:96:15"
											},
											{
												"body": {
													"nativeSrc": "3165:53:15",
													"nodeType": "YulBlock",
													"src": "3165:53:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3182:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "3182:3:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3205:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "3205:5:15"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "3187:17:15",
																			"nodeType": "YulIdentifier",
																			"src": "3187:17:15"
																		},
																		"nativeSrc": "3187:24:15",
																		"nodeType": "YulFunctionCall",
																		"src": "3187:24:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3175:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "3175:6:15"
																},
																"nativeSrc": "3175:37:15",
																"nodeType": "YulFunctionCall",
																"src": "3175:37:15"
															},
															"nativeSrc": "3175:37:15",
															"nodeType": "YulExpressionStatement",
															"src": "3175:37:15"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "3100:118:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3153:5:15",
														"nodeType": "YulTypedName",
														"src": "3153:5:15",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3160:3:15",
														"nodeType": "YulTypedName",
														"src": "3160:3:15",
														"type": ""
													}
												],
												"src": "3100:118:15"
											},
											{
												"body": {
													"nativeSrc": "3322:124:15",
													"nodeType": "YulBlock",
													"src": "3322:124:15",
													"statements": [
														{
															"nativeSrc": "3332:26:15",
															"nodeType": "YulAssignment",
															"src": "3332:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3344:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "3344:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3355:2:15",
																		"nodeType": "YulLiteral",
																		"src": "3355:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3340:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "3340:3:15"
																},
																"nativeSrc": "3340:18:15",
																"nodeType": "YulFunctionCall",
																"src": "3340:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3332:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "3332:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3412:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "3412:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3425:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "3425:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3436:1:15",
																				"nodeType": "YulLiteral",
																				"src": "3436:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3421:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "3421:3:15"
																		},
																		"nativeSrc": "3421:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "3421:17:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "3368:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "3368:43:15"
																},
																"nativeSrc": "3368:71:15",
																"nodeType": "YulFunctionCall",
																"src": "3368:71:15"
															},
															"nativeSrc": "3368:71:15",
															"nodeType": "YulExpressionStatement",
															"src": "3368:71:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "3224:222:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3294:9:15",
														"nodeType": "YulTypedName",
														"src": "3294:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3306:6:15",
														"nodeType": "YulTypedName",
														"src": "3306:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3317:4:15",
														"nodeType": "YulTypedName",
														"src": "3317:4:15",
														"type": ""
													}
												],
												"src": "3224:222:15"
											},
											{
												"body": {
													"nativeSrc": "3495:79:15",
													"nodeType": "YulBlock",
													"src": "3495:79:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "3552:16:15",
																"nodeType": "YulBlock",
																"src": "3552:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3561:1:15",
																					"nodeType": "YulLiteral",
																					"src": "3561:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3564:1:15",
																					"nodeType": "YulLiteral",
																					"src": "3564:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3554:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "3554:6:15"
																			},
																			"nativeSrc": "3554:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "3554:12:15"
																		},
																		"nativeSrc": "3554:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "3554:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3518:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "3518:5:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3543:5:15",
																						"nodeType": "YulIdentifier",
																						"src": "3543:5:15"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "3525:17:15",
																					"nodeType": "YulIdentifier",
																					"src": "3525:17:15"
																				},
																				"nativeSrc": "3525:24:15",
																				"nodeType": "YulFunctionCall",
																				"src": "3525:24:15"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3515:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "3515:2:15"
																		},
																		"nativeSrc": "3515:35:15",
																		"nodeType": "YulFunctionCall",
																		"src": "3515:35:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3508:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "3508:6:15"
																},
																"nativeSrc": "3508:43:15",
																"nodeType": "YulFunctionCall",
																"src": "3508:43:15"
															},
															"nativeSrc": "3505:63:15",
															"nodeType": "YulIf",
															"src": "3505:63:15"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "3452:122:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3488:5:15",
														"nodeType": "YulTypedName",
														"src": "3488:5:15",
														"type": ""
													}
												],
												"src": "3452:122:15"
											},
											{
												"body": {
													"nativeSrc": "3632:87:15",
													"nodeType": "YulBlock",
													"src": "3632:87:15",
													"statements": [
														{
															"nativeSrc": "3642:29:15",
															"nodeType": "YulAssignment",
															"src": "3642:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3664:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "3664:6:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3651:12:15",
																	"nodeType": "YulIdentifier",
																	"src": "3651:12:15"
																},
																"nativeSrc": "3651:20:15",
																"nodeType": "YulFunctionCall",
																"src": "3651:20:15"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3642:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "3642:5:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3707:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "3707:5:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "3680:26:15",
																	"nodeType": "YulIdentifier",
																	"src": "3680:26:15"
																},
																"nativeSrc": "3680:33:15",
																"nodeType": "YulFunctionCall",
																"src": "3680:33:15"
															},
															"nativeSrc": "3680:33:15",
															"nodeType": "YulExpressionStatement",
															"src": "3680:33:15"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "3580:139:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3610:6:15",
														"nodeType": "YulTypedName",
														"src": "3610:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3618:3:15",
														"nodeType": "YulTypedName",
														"src": "3618:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3626:5:15",
														"nodeType": "YulTypedName",
														"src": "3626:5:15",
														"type": ""
													}
												],
												"src": "3580:139:15"
											},
											{
												"body": {
													"nativeSrc": "3814:28:15",
													"nodeType": "YulBlock",
													"src": "3814:28:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3831:1:15",
																		"nodeType": "YulLiteral",
																		"src": "3831:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3834:1:15",
																		"nodeType": "YulLiteral",
																		"src": "3834:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "3824:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "3824:6:15"
																},
																"nativeSrc": "3824:12:15",
																"nodeType": "YulFunctionCall",
																"src": "3824:12:15"
															},
															"nativeSrc": "3824:12:15",
															"nodeType": "YulExpressionStatement",
															"src": "3824:12:15"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "3725:117:15",
												"nodeType": "YulFunctionDefinition",
												"src": "3725:117:15"
											},
											{
												"body": {
													"nativeSrc": "3896:54:15",
													"nodeType": "YulBlock",
													"src": "3896:54:15",
													"statements": [
														{
															"nativeSrc": "3906:38:15",
															"nodeType": "YulAssignment",
															"src": "3906:38:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3924:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "3924:5:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3931:2:15",
																				"nodeType": "YulLiteral",
																				"src": "3931:2:15",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3920:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "3920:3:15"
																		},
																		"nativeSrc": "3920:14:15",
																		"nodeType": "YulFunctionCall",
																		"src": "3920:14:15"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "3940:2:15",
																				"nodeType": "YulLiteral",
																				"src": "3940:2:15",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "3936:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "3936:3:15"
																		},
																		"nativeSrc": "3936:7:15",
																		"nodeType": "YulFunctionCall",
																		"src": "3936:7:15"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3916:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "3916:3:15"
																},
																"nativeSrc": "3916:28:15",
																"nodeType": "YulFunctionCall",
																"src": "3916:28:15"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "3906:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "3906:6:15"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "3848:102:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3879:5:15",
														"nodeType": "YulTypedName",
														"src": "3879:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "3889:6:15",
														"nodeType": "YulTypedName",
														"src": "3889:6:15",
														"type": ""
													}
												],
												"src": "3848:102:15"
											},
											{
												"body": {
													"nativeSrc": "3984:152:15",
													"nodeType": "YulBlock",
													"src": "3984:152:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4001:1:15",
																		"nodeType": "YulLiteral",
																		"src": "4001:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4004:77:15",
																		"nodeType": "YulLiteral",
																		"src": "4004:77:15",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3994:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "3994:6:15"
																},
																"nativeSrc": "3994:88:15",
																"nodeType": "YulFunctionCall",
																"src": "3994:88:15"
															},
															"nativeSrc": "3994:88:15",
															"nodeType": "YulExpressionStatement",
															"src": "3994:88:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4098:1:15",
																		"nodeType": "YulLiteral",
																		"src": "4098:1:15",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4101:4:15",
																		"nodeType": "YulLiteral",
																		"src": "4101:4:15",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4091:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "4091:6:15"
																},
																"nativeSrc": "4091:15:15",
																"nodeType": "YulFunctionCall",
																"src": "4091:15:15"
															},
															"nativeSrc": "4091:15:15",
															"nodeType": "YulExpressionStatement",
															"src": "4091:15:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4122:1:15",
																		"nodeType": "YulLiteral",
																		"src": "4122:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4125:4:15",
																		"nodeType": "YulLiteral",
																		"src": "4125:4:15",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "4115:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "4115:6:15"
																},
																"nativeSrc": "4115:15:15",
																"nodeType": "YulFunctionCall",
																"src": "4115:15:15"
															},
															"nativeSrc": "4115:15:15",
															"nodeType": "YulExpressionStatement",
															"src": "4115:15:15"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "3956:180:15",
												"nodeType": "YulFunctionDefinition",
												"src": "3956:180:15"
											},
											{
												"body": {
													"nativeSrc": "4185:238:15",
													"nodeType": "YulBlock",
													"src": "4185:238:15",
													"statements": [
														{
															"nativeSrc": "4195:58:15",
															"nodeType": "YulVariableDeclaration",
															"src": "4195:58:15",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "4217:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "4217:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "4247:4:15",
																				"nodeType": "YulIdentifier",
																				"src": "4247:4:15"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "4225:21:15",
																			"nodeType": "YulIdentifier",
																			"src": "4225:21:15"
																		},
																		"nativeSrc": "4225:27:15",
																		"nodeType": "YulFunctionCall",
																		"src": "4225:27:15"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4213:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "4213:3:15"
																},
																"nativeSrc": "4213:40:15",
																"nodeType": "YulFunctionCall",
																"src": "4213:40:15"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "4199:10:15",
																	"nodeType": "YulTypedName",
																	"src": "4199:10:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4364:22:15",
																"nodeType": "YulBlock",
																"src": "4364:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "4366:16:15",
																				"nodeType": "YulIdentifier",
																				"src": "4366:16:15"
																			},
																			"nativeSrc": "4366:18:15",
																			"nodeType": "YulFunctionCall",
																			"src": "4366:18:15"
																		},
																		"nativeSrc": "4366:18:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "4366:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "4307:10:15",
																				"nodeType": "YulIdentifier",
																				"src": "4307:10:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4319:18:15",
																				"nodeType": "YulLiteral",
																				"src": "4319:18:15",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "4304:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "4304:2:15"
																		},
																		"nativeSrc": "4304:34:15",
																		"nodeType": "YulFunctionCall",
																		"src": "4304:34:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "4343:10:15",
																				"nodeType": "YulIdentifier",
																				"src": "4343:10:15"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "4355:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "4355:6:15"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "4340:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "4340:2:15"
																		},
																		"nativeSrc": "4340:22:15",
																		"nodeType": "YulFunctionCall",
																		"src": "4340:22:15"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "4301:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "4301:2:15"
																},
																"nativeSrc": "4301:62:15",
																"nodeType": "YulFunctionCall",
																"src": "4301:62:15"
															},
															"nativeSrc": "4298:88:15",
															"nodeType": "YulIf",
															"src": "4298:88:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4402:2:15",
																		"nodeType": "YulLiteral",
																		"src": "4402:2:15",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "4406:10:15",
																		"nodeType": "YulIdentifier",
																		"src": "4406:10:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4395:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "4395:6:15"
																},
																"nativeSrc": "4395:22:15",
																"nodeType": "YulFunctionCall",
																"src": "4395:22:15"
															},
															"nativeSrc": "4395:22:15",
															"nodeType": "YulExpressionStatement",
															"src": "4395:22:15"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "4142:281:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "4171:6:15",
														"nodeType": "YulTypedName",
														"src": "4171:6:15",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "4179:4:15",
														"nodeType": "YulTypedName",
														"src": "4179:4:15",
														"type": ""
													}
												],
												"src": "4142:281:15"
											},
											{
												"body": {
													"nativeSrc": "4470:88:15",
													"nodeType": "YulBlock",
													"src": "4470:88:15",
													"statements": [
														{
															"nativeSrc": "4480:30:15",
															"nodeType": "YulAssignment",
															"src": "4480:30:15",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "4490:18:15",
																	"nodeType": "YulIdentifier",
																	"src": "4490:18:15"
																},
																"nativeSrc": "4490:20:15",
																"nodeType": "YulFunctionCall",
																"src": "4490:20:15"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "4480:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "4480:6:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "4539:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "4539:6:15"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "4547:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "4547:4:15"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "4519:19:15",
																	"nodeType": "YulIdentifier",
																	"src": "4519:19:15"
																},
																"nativeSrc": "4519:33:15",
																"nodeType": "YulFunctionCall",
																"src": "4519:33:15"
															},
															"nativeSrc": "4519:33:15",
															"nodeType": "YulExpressionStatement",
															"src": "4519:33:15"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "4429:129:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "4454:4:15",
														"nodeType": "YulTypedName",
														"src": "4454:4:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "4463:6:15",
														"nodeType": "YulTypedName",
														"src": "4463:6:15",
														"type": ""
													}
												],
												"src": "4429:129:15"
											},
											{
												"body": {
													"nativeSrc": "4646:229:15",
													"nodeType": "YulBlock",
													"src": "4646:229:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "4751:22:15",
																"nodeType": "YulBlock",
																"src": "4751:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "4753:16:15",
																				"nodeType": "YulIdentifier",
																				"src": "4753:16:15"
																			},
																			"nativeSrc": "4753:18:15",
																			"nodeType": "YulFunctionCall",
																			"src": "4753:18:15"
																		},
																		"nativeSrc": "4753:18:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "4753:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "4723:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "4723:6:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4731:18:15",
																		"nodeType": "YulLiteral",
																		"src": "4731:18:15",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4720:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "4720:2:15"
																},
																"nativeSrc": "4720:30:15",
																"nodeType": "YulFunctionCall",
																"src": "4720:30:15"
															},
															"nativeSrc": "4717:56:15",
															"nodeType": "YulIf",
															"src": "4717:56:15"
														},
														{
															"nativeSrc": "4783:25:15",
															"nodeType": "YulAssignment",
															"src": "4783:25:15",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "4795:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "4795:6:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4803:4:15",
																		"nodeType": "YulLiteral",
																		"src": "4803:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "4791:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "4791:3:15"
																},
																"nativeSrc": "4791:17:15",
																"nodeType": "YulFunctionCall",
																"src": "4791:17:15"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "4783:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "4783:4:15"
																}
															]
														},
														{
															"nativeSrc": "4845:23:15",
															"nodeType": "YulAssignment",
															"src": "4845:23:15",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "4857:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "4857:4:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4863:4:15",
																		"nodeType": "YulLiteral",
																		"src": "4863:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4853:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "4853:3:15"
																},
																"nativeSrc": "4853:15:15",
																"nodeType": "YulFunctionCall",
																"src": "4853:15:15"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "4845:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "4845:4:15"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr",
												"nativeSrc": "4564:311:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "4630:6:15",
														"nodeType": "YulTypedName",
														"src": "4630:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "4641:4:15",
														"nodeType": "YulTypedName",
														"src": "4641:4:15",
														"type": ""
													}
												],
												"src": "4564:311:15"
											},
											{
												"body": {
													"nativeSrc": "4970:28:15",
													"nodeType": "YulBlock",
													"src": "4970:28:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4987:1:15",
																		"nodeType": "YulLiteral",
																		"src": "4987:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4990:1:15",
																		"nodeType": "YulLiteral",
																		"src": "4990:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "4980:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "4980:6:15"
																},
																"nativeSrc": "4980:12:15",
																"nodeType": "YulFunctionCall",
																"src": "4980:12:15"
															},
															"nativeSrc": "4980:12:15",
															"nodeType": "YulExpressionStatement",
															"src": "4980:12:15"
														}
													]
												},
												"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
												"nativeSrc": "4881:117:15",
												"nodeType": "YulFunctionDefinition",
												"src": "4881:117:15"
											},
											{
												"body": {
													"nativeSrc": "5047:79:15",
													"nodeType": "YulBlock",
													"src": "5047:79:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "5104:16:15",
																"nodeType": "YulBlock",
																"src": "5104:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5113:1:15",
																					"nodeType": "YulLiteral",
																					"src": "5113:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5116:1:15",
																					"nodeType": "YulLiteral",
																					"src": "5116:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5106:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "5106:6:15"
																			},
																			"nativeSrc": "5106:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "5106:12:15"
																		},
																		"nativeSrc": "5106:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "5106:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5070:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "5070:5:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5095:5:15",
																						"nodeType": "YulIdentifier",
																						"src": "5095:5:15"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "5077:17:15",
																					"nodeType": "YulIdentifier",
																					"src": "5077:17:15"
																				},
																				"nativeSrc": "5077:24:15",
																				"nodeType": "YulFunctionCall",
																				"src": "5077:24:15"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "5067:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "5067:2:15"
																		},
																		"nativeSrc": "5067:35:15",
																		"nodeType": "YulFunctionCall",
																		"src": "5067:35:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5060:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "5060:6:15"
																},
																"nativeSrc": "5060:43:15",
																"nodeType": "YulFunctionCall",
																"src": "5060:43:15"
															},
															"nativeSrc": "5057:63:15",
															"nodeType": "YulIf",
															"src": "5057:63:15"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "5004:122:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5040:5:15",
														"nodeType": "YulTypedName",
														"src": "5040:5:15",
														"type": ""
													}
												],
												"src": "5004:122:15"
											},
											{
												"body": {
													"nativeSrc": "5184:87:15",
													"nodeType": "YulBlock",
													"src": "5184:87:15",
													"statements": [
														{
															"nativeSrc": "5194:29:15",
															"nodeType": "YulAssignment",
															"src": "5194:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "5216:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "5216:6:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "5203:12:15",
																	"nodeType": "YulIdentifier",
																	"src": "5203:12:15"
																},
																"nativeSrc": "5203:20:15",
																"nodeType": "YulFunctionCall",
																"src": "5203:20:15"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "5194:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "5194:5:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5259:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "5259:5:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "5232:26:15",
																	"nodeType": "YulIdentifier",
																	"src": "5232:26:15"
																},
																"nativeSrc": "5232:33:15",
																"nodeType": "YulFunctionCall",
																"src": "5232:33:15"
															},
															"nativeSrc": "5232:33:15",
															"nodeType": "YulExpressionStatement",
															"src": "5232:33:15"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "5132:139:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "5162:6:15",
														"nodeType": "YulTypedName",
														"src": "5162:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "5170:3:15",
														"nodeType": "YulTypedName",
														"src": "5170:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "5178:5:15",
														"nodeType": "YulTypedName",
														"src": "5178:5:15",
														"type": ""
													}
												],
												"src": "5132:139:15"
											},
											{
												"body": {
													"nativeSrc": "5396:608:15",
													"nodeType": "YulBlock",
													"src": "5396:608:15",
													"statements": [
														{
															"nativeSrc": "5406:90:15",
															"nodeType": "YulAssignment",
															"src": "5406:90:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "5488:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "5488:6:15"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr",
																			"nativeSrc": "5431:56:15",
																			"nodeType": "YulIdentifier",
																			"src": "5431:56:15"
																		},
																		"nativeSrc": "5431:64:15",
																		"nodeType": "YulFunctionCall",
																		"src": "5431:64:15"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "5415:15:15",
																	"nodeType": "YulIdentifier",
																	"src": "5415:15:15"
																},
																"nativeSrc": "5415:81:15",
																"nodeType": "YulFunctionCall",
																"src": "5415:81:15"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "5406:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "5406:5:15"
																}
															]
														},
														{
															"nativeSrc": "5505:16:15",
															"nodeType": "YulVariableDeclaration",
															"src": "5505:16:15",
															"value": {
																"name": "array",
																"nativeSrc": "5516:5:15",
																"nodeType": "YulIdentifier",
																"src": "5516:5:15"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "5509:3:15",
																	"nodeType": "YulTypedName",
																	"src": "5509:3:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "5538:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "5538:5:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "5545:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "5545:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5531:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "5531:6:15"
																},
																"nativeSrc": "5531:21:15",
																"nodeType": "YulFunctionCall",
																"src": "5531:21:15"
															},
															"nativeSrc": "5531:21:15",
															"nodeType": "YulExpressionStatement",
															"src": "5531:21:15"
														},
														{
															"nativeSrc": "5561:23:15",
															"nodeType": "YulAssignment",
															"src": "5561:23:15",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "5572:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "5572:5:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5579:4:15",
																		"nodeType": "YulLiteral",
																		"src": "5579:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5568:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "5568:3:15"
																},
																"nativeSrc": "5568:16:15",
																"nodeType": "YulFunctionCall",
																"src": "5568:16:15"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nativeSrc": "5561:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "5561:3:15"
																}
															]
														},
														{
															"nativeSrc": "5594:44:15",
															"nodeType": "YulVariableDeclaration",
															"src": "5594:44:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "5612:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "5612:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "5624:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "5624:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5632:4:15",
																				"nodeType": "YulLiteral",
																				"src": "5632:4:15",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "5620:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "5620:3:15"
																		},
																		"nativeSrc": "5620:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "5620:17:15"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5608:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "5608:3:15"
																},
																"nativeSrc": "5608:30:15",
																"nodeType": "YulFunctionCall",
																"src": "5608:30:15"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nativeSrc": "5598:6:15",
																	"nodeType": "YulTypedName",
																	"src": "5598:6:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5666:103:15",
																"nodeType": "YulBlock",
																"src": "5666:103:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nativeSrc": "5680:77:15",
																				"nodeType": "YulIdentifier",
																				"src": "5680:77:15"
																			},
																			"nativeSrc": "5680:79:15",
																			"nodeType": "YulFunctionCall",
																			"src": "5680:79:15"
																		},
																		"nativeSrc": "5680:79:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "5680:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nativeSrc": "5653:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "5653:6:15"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "5661:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "5661:3:15"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5650:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "5650:2:15"
																},
																"nativeSrc": "5650:15:15",
																"nodeType": "YulFunctionCall",
																"src": "5650:15:15"
															},
															"nativeSrc": "5647:122:15",
															"nodeType": "YulIf",
															"src": "5647:122:15"
														},
														{
															"body": {
																"nativeSrc": "5854:144:15",
																"nodeType": "YulBlock",
																"src": "5854:144:15",
																"statements": [
																	{
																		"nativeSrc": "5869:21:15",
																		"nodeType": "YulVariableDeclaration",
																		"src": "5869:21:15",
																		"value": {
																			"name": "src",
																			"nativeSrc": "5887:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "5887:3:15"
																		},
																		"variables": [
																			{
																				"name": "elementPos",
																				"nativeSrc": "5873:10:15",
																				"nodeType": "YulTypedName",
																				"src": "5873:10:15",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nativeSrc": "5911:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "5911:3:15"
																				},
																				{
																					"arguments": [
																						{
																							"name": "elementPos",
																							"nativeSrc": "5937:10:15",
																							"nodeType": "YulIdentifier",
																							"src": "5937:10:15"
																						},
																						{
																							"name": "end",
																							"nativeSrc": "5949:3:15",
																							"nodeType": "YulIdentifier",
																							"src": "5949:3:15"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_t_uint256",
																						"nativeSrc": "5916:20:15",
																						"nodeType": "YulIdentifier",
																						"src": "5916:20:15"
																					},
																					"nativeSrc": "5916:37:15",
																					"nodeType": "YulFunctionCall",
																					"src": "5916:37:15"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "5904:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "5904:6:15"
																			},
																			"nativeSrc": "5904:50:15",
																			"nodeType": "YulFunctionCall",
																			"src": "5904:50:15"
																		},
																		"nativeSrc": "5904:50:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "5904:50:15"
																	},
																	{
																		"nativeSrc": "5967:21:15",
																		"nodeType": "YulAssignment",
																		"src": "5967:21:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nativeSrc": "5978:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "5978:3:15"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5983:4:15",
																					"nodeType": "YulLiteral",
																					"src": "5983:4:15",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "5974:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "5974:3:15"
																			},
																			"nativeSrc": "5974:14:15",
																			"nodeType": "YulFunctionCall",
																			"src": "5974:14:15"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nativeSrc": "5967:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "5967:3:15"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "5807:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "5807:3:15"
																	},
																	{
																		"name": "srcEnd",
																		"nativeSrc": "5812:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "5812:6:15"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "5804:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "5804:2:15"
																},
																"nativeSrc": "5804:15:15",
																"nodeType": "YulFunctionCall",
																"src": "5804:15:15"
															},
															"nativeSrc": "5778:220:15",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "5820:25:15",
																"nodeType": "YulBlock",
																"src": "5820:25:15",
																"statements": [
																	{
																		"nativeSrc": "5822:21:15",
																		"nodeType": "YulAssignment",
																		"src": "5822:21:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nativeSrc": "5833:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "5833:3:15"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5838:4:15",
																					"nodeType": "YulLiteral",
																					"src": "5838:4:15",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "5829:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "5829:3:15"
																			},
																			"nativeSrc": "5829:14:15",
																			"nodeType": "YulFunctionCall",
																			"src": "5829:14:15"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nativeSrc": "5822:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "5822:3:15"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "5782:21:15",
																"nodeType": "YulBlock",
																"src": "5782:21:15",
																"statements": [
																	{
																		"nativeSrc": "5784:17:15",
																		"nodeType": "YulVariableDeclaration",
																		"src": "5784:17:15",
																		"value": {
																			"name": "offset",
																			"nativeSrc": "5795:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "5795:6:15"
																		},
																		"variables": [
																			{
																				"name": "src",
																				"nativeSrc": "5788:3:15",
																				"nodeType": "YulTypedName",
																				"src": "5788:3:15",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "5778:220:15"
														}
													]
												},
												"name": "abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr",
												"nativeSrc": "5294:710:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "5366:6:15",
														"nodeType": "YulTypedName",
														"src": "5366:6:15",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "5374:6:15",
														"nodeType": "YulTypedName",
														"src": "5374:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "5382:3:15",
														"nodeType": "YulTypedName",
														"src": "5382:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "5390:5:15",
														"nodeType": "YulTypedName",
														"src": "5390:5:15",
														"type": ""
													}
												],
												"src": "5294:710:15"
											},
											{
												"body": {
													"nativeSrc": "6104:293:15",
													"nodeType": "YulBlock",
													"src": "6104:293:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "6153:83:15",
																"nodeType": "YulBlock",
																"src": "6153:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "6155:77:15",
																				"nodeType": "YulIdentifier",
																				"src": "6155:77:15"
																			},
																			"nativeSrc": "6155:79:15",
																			"nodeType": "YulFunctionCall",
																			"src": "6155:79:15"
																		},
																		"nativeSrc": "6155:79:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "6155:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "6132:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "6132:6:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6140:4:15",
																						"nodeType": "YulLiteral",
																						"src": "6140:4:15",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6128:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "6128:3:15"
																				},
																				"nativeSrc": "6128:17:15",
																				"nodeType": "YulFunctionCall",
																				"src": "6128:17:15"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "6147:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "6147:3:15"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "6124:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "6124:3:15"
																		},
																		"nativeSrc": "6124:27:15",
																		"nodeType": "YulFunctionCall",
																		"src": "6124:27:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6117:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "6117:6:15"
																},
																"nativeSrc": "6117:35:15",
																"nodeType": "YulFunctionCall",
																"src": "6117:35:15"
															},
															"nativeSrc": "6114:122:15",
															"nodeType": "YulIf",
															"src": "6114:122:15"
														},
														{
															"nativeSrc": "6245:34:15",
															"nodeType": "YulVariableDeclaration",
															"src": "6245:34:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "6272:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "6272:6:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "6259:12:15",
																	"nodeType": "YulIdentifier",
																	"src": "6259:12:15"
																},
																"nativeSrc": "6259:20:15",
																"nodeType": "YulFunctionCall",
																"src": "6259:20:15"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "6249:6:15",
																	"nodeType": "YulTypedName",
																	"src": "6249:6:15",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "6288:103:15",
															"nodeType": "YulAssignment",
															"src": "6288:103:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "6364:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "6364:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6372:4:15",
																				"nodeType": "YulLiteral",
																				"src": "6372:4:15",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6360:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "6360:3:15"
																		},
																		"nativeSrc": "6360:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "6360:17:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6379:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "6379:6:15"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "6387:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "6387:3:15"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr",
																	"nativeSrc": "6297:62:15",
																	"nodeType": "YulIdentifier",
																	"src": "6297:62:15"
																},
																"nativeSrc": "6297:94:15",
																"nodeType": "YulFunctionCall",
																"src": "6297:94:15"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "6288:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "6288:5:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
												"nativeSrc": "6027:370:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "6082:6:15",
														"nodeType": "YulTypedName",
														"src": "6082:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "6090:3:15",
														"nodeType": "YulTypedName",
														"src": "6090:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "6098:5:15",
														"nodeType": "YulTypedName",
														"src": "6098:5:15",
														"type": ""
													}
												],
												"src": "6027:370:15"
											},
											{
												"body": {
													"nativeSrc": "6492:28:15",
													"nodeType": "YulBlock",
													"src": "6492:28:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6509:1:15",
																		"nodeType": "YulLiteral",
																		"src": "6509:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6512:1:15",
																		"nodeType": "YulLiteral",
																		"src": "6512:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6502:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "6502:6:15"
																},
																"nativeSrc": "6502:12:15",
																"nodeType": "YulFunctionCall",
																"src": "6502:12:15"
															},
															"nativeSrc": "6502:12:15",
															"nodeType": "YulExpressionStatement",
															"src": "6502:12:15"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nativeSrc": "6403:117:15",
												"nodeType": "YulFunctionDefinition",
												"src": "6403:117:15"
											},
											{
												"body": {
													"nativeSrc": "6592:241:15",
													"nodeType": "YulBlock",
													"src": "6592:241:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "6697:22:15",
																"nodeType": "YulBlock",
																"src": "6697:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "6699:16:15",
																				"nodeType": "YulIdentifier",
																				"src": "6699:16:15"
																			},
																			"nativeSrc": "6699:18:15",
																			"nodeType": "YulFunctionCall",
																			"src": "6699:18:15"
																		},
																		"nativeSrc": "6699:18:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "6699:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "6669:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "6669:6:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6677:18:15",
																		"nodeType": "YulLiteral",
																		"src": "6677:18:15",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6666:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "6666:2:15"
																},
																"nativeSrc": "6666:30:15",
																"nodeType": "YulFunctionCall",
																"src": "6666:30:15"
															},
															"nativeSrc": "6663:56:15",
															"nodeType": "YulIf",
															"src": "6663:56:15"
														},
														{
															"nativeSrc": "6729:37:15",
															"nodeType": "YulAssignment",
															"src": "6729:37:15",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "6759:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "6759:6:15"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "6737:21:15",
																	"nodeType": "YulIdentifier",
																	"src": "6737:21:15"
																},
																"nativeSrc": "6737:29:15",
																"nodeType": "YulFunctionCall",
																"src": "6737:29:15"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "6729:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "6729:4:15"
																}
															]
														},
														{
															"nativeSrc": "6803:23:15",
															"nodeType": "YulAssignment",
															"src": "6803:23:15",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "6815:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "6815:4:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6821:4:15",
																		"nodeType": "YulLiteral",
																		"src": "6821:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6811:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "6811:3:15"
																},
																"nativeSrc": "6811:15:15",
																"nodeType": "YulFunctionCall",
																"src": "6811:15:15"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "6803:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "6803:4:15"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_bytes_memory_ptr",
												"nativeSrc": "6526:307:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "6576:6:15",
														"nodeType": "YulTypedName",
														"src": "6576:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "6587:4:15",
														"nodeType": "YulTypedName",
														"src": "6587:4:15",
														"type": ""
													}
												],
												"src": "6526:307:15"
											},
											{
												"body": {
													"nativeSrc": "6903:84:15",
													"nodeType": "YulBlock",
													"src": "6903:84:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "6927:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "6927:3:15"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "6932:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "6932:3:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6937:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "6937:6:15"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "6914:12:15",
																	"nodeType": "YulIdentifier",
																	"src": "6914:12:15"
																},
																"nativeSrc": "6914:30:15",
																"nodeType": "YulFunctionCall",
																"src": "6914:30:15"
															},
															"nativeSrc": "6914:30:15",
															"nodeType": "YulExpressionStatement",
															"src": "6914:30:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "6964:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "6964:3:15"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "6969:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "6969:6:15"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6960:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "6960:3:15"
																		},
																		"nativeSrc": "6960:16:15",
																		"nodeType": "YulFunctionCall",
																		"src": "6960:16:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6978:1:15",
																		"nodeType": "YulLiteral",
																		"src": "6978:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6953:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "6953:6:15"
																},
																"nativeSrc": "6953:27:15",
																"nodeType": "YulFunctionCall",
																"src": "6953:27:15"
															},
															"nativeSrc": "6953:27:15",
															"nodeType": "YulExpressionStatement",
															"src": "6953:27:15"
														}
													]
												},
												"name": "copy_calldata_to_memory_with_cleanup",
												"nativeSrc": "6839:148:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "6885:3:15",
														"nodeType": "YulTypedName",
														"src": "6885:3:15",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "6890:3:15",
														"nodeType": "YulTypedName",
														"src": "6890:3:15",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "6895:6:15",
														"nodeType": "YulTypedName",
														"src": "6895:6:15",
														"type": ""
													}
												],
												"src": "6839:148:15"
											},
											{
												"body": {
													"nativeSrc": "7076:340:15",
													"nodeType": "YulBlock",
													"src": "7076:340:15",
													"statements": [
														{
															"nativeSrc": "7086:74:15",
															"nodeType": "YulAssignment",
															"src": "7086:74:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "7152:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "7152:6:15"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_bytes_memory_ptr",
																			"nativeSrc": "7111:40:15",
																			"nodeType": "YulIdentifier",
																			"src": "7111:40:15"
																		},
																		"nativeSrc": "7111:48:15",
																		"nodeType": "YulFunctionCall",
																		"src": "7111:48:15"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "7095:15:15",
																	"nodeType": "YulIdentifier",
																	"src": "7095:15:15"
																},
																"nativeSrc": "7095:65:15",
																"nodeType": "YulFunctionCall",
																"src": "7095:65:15"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "7086:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "7086:5:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "7176:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "7176:5:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7183:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "7183:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7169:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "7169:6:15"
																},
																"nativeSrc": "7169:21:15",
																"nodeType": "YulFunctionCall",
																"src": "7169:21:15"
															},
															"nativeSrc": "7169:21:15",
															"nodeType": "YulExpressionStatement",
															"src": "7169:21:15"
														},
														{
															"nativeSrc": "7199:27:15",
															"nodeType": "YulVariableDeclaration",
															"src": "7199:27:15",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "7214:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "7214:5:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7221:4:15",
																		"nodeType": "YulLiteral",
																		"src": "7221:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7210:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "7210:3:15"
																},
																"nativeSrc": "7210:16:15",
																"nodeType": "YulFunctionCall",
																"src": "7210:16:15"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "7203:3:15",
																	"nodeType": "YulTypedName",
																	"src": "7203:3:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7264:83:15",
																"nodeType": "YulBlock",
																"src": "7264:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "7266:77:15",
																				"nodeType": "YulIdentifier",
																				"src": "7266:77:15"
																			},
																			"nativeSrc": "7266:79:15",
																			"nodeType": "YulFunctionCall",
																			"src": "7266:79:15"
																		},
																		"nativeSrc": "7266:79:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "7266:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "7245:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "7245:3:15"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "7250:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "7250:6:15"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7241:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "7241:3:15"
																		},
																		"nativeSrc": "7241:16:15",
																		"nodeType": "YulFunctionCall",
																		"src": "7241:16:15"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "7259:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "7259:3:15"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7238:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "7238:2:15"
																},
																"nativeSrc": "7238:25:15",
																"nodeType": "YulFunctionCall",
																"src": "7238:25:15"
															},
															"nativeSrc": "7235:112:15",
															"nodeType": "YulIf",
															"src": "7235:112:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "7393:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "7393:3:15"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "7398:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "7398:3:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7403:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "7403:6:15"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nativeSrc": "7356:36:15",
																	"nodeType": "YulIdentifier",
																	"src": "7356:36:15"
																},
																"nativeSrc": "7356:54:15",
																"nodeType": "YulFunctionCall",
																"src": "7356:54:15"
															},
															"nativeSrc": "7356:54:15",
															"nodeType": "YulExpressionStatement",
															"src": "7356:54:15"
														}
													]
												},
												"name": "abi_decode_available_length_t_bytes_memory_ptr",
												"nativeSrc": "6993:423:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "7049:3:15",
														"nodeType": "YulTypedName",
														"src": "7049:3:15",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "7054:6:15",
														"nodeType": "YulTypedName",
														"src": "7054:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "7062:3:15",
														"nodeType": "YulTypedName",
														"src": "7062:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "7070:5:15",
														"nodeType": "YulTypedName",
														"src": "7070:5:15",
														"type": ""
													}
												],
												"src": "6993:423:15"
											},
											{
												"body": {
													"nativeSrc": "7496:277:15",
													"nodeType": "YulBlock",
													"src": "7496:277:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "7545:83:15",
																"nodeType": "YulBlock",
																"src": "7545:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "7547:77:15",
																				"nodeType": "YulIdentifier",
																				"src": "7547:77:15"
																			},
																			"nativeSrc": "7547:79:15",
																			"nodeType": "YulFunctionCall",
																			"src": "7547:79:15"
																		},
																		"nativeSrc": "7547:79:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "7547:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "7524:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "7524:6:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7532:4:15",
																						"nodeType": "YulLiteral",
																						"src": "7532:4:15",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7520:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "7520:3:15"
																				},
																				"nativeSrc": "7520:17:15",
																				"nodeType": "YulFunctionCall",
																				"src": "7520:17:15"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "7539:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "7539:3:15"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "7516:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "7516:3:15"
																		},
																		"nativeSrc": "7516:27:15",
																		"nodeType": "YulFunctionCall",
																		"src": "7516:27:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7509:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "7509:6:15"
																},
																"nativeSrc": "7509:35:15",
																"nodeType": "YulFunctionCall",
																"src": "7509:35:15"
															},
															"nativeSrc": "7506:122:15",
															"nodeType": "YulIf",
															"src": "7506:122:15"
														},
														{
															"nativeSrc": "7637:34:15",
															"nodeType": "YulVariableDeclaration",
															"src": "7637:34:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "7664:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "7664:6:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "7651:12:15",
																	"nodeType": "YulIdentifier",
																	"src": "7651:12:15"
																},
																"nativeSrc": "7651:20:15",
																"nodeType": "YulFunctionCall",
																"src": "7651:20:15"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "7641:6:15",
																	"nodeType": "YulTypedName",
																	"src": "7641:6:15",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7680:87:15",
															"nodeType": "YulAssignment",
															"src": "7680:87:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "7740:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "7740:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7748:4:15",
																				"nodeType": "YulLiteral",
																				"src": "7748:4:15",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7736:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "7736:3:15"
																		},
																		"nativeSrc": "7736:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "7736:17:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7755:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "7755:6:15"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "7763:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "7763:3:15"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_bytes_memory_ptr",
																	"nativeSrc": "7689:46:15",
																	"nodeType": "YulIdentifier",
																	"src": "7689:46:15"
																},
																"nativeSrc": "7689:78:15",
																"nodeType": "YulFunctionCall",
																"src": "7689:78:15"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "7680:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "7680:5:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_bytes_memory_ptr",
												"nativeSrc": "7435:338:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "7474:6:15",
														"nodeType": "YulTypedName",
														"src": "7474:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "7482:3:15",
														"nodeType": "YulTypedName",
														"src": "7482:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "7490:5:15",
														"nodeType": "YulTypedName",
														"src": "7490:5:15",
														"type": ""
													}
												],
												"src": "7435:338:15"
											},
											{
												"body": {
													"nativeSrc": "7972:1316:15",
													"nodeType": "YulBlock",
													"src": "7972:1316:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "8019:83:15",
																"nodeType": "YulBlock",
																"src": "8019:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "8021:77:15",
																				"nodeType": "YulIdentifier",
																				"src": "8021:77:15"
																			},
																			"nativeSrc": "8021:79:15",
																			"nodeType": "YulFunctionCall",
																			"src": "8021:79:15"
																		},
																		"nativeSrc": "8021:79:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "8021:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7993:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "7993:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8002:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "8002:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7989:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "7989:3:15"
																		},
																		"nativeSrc": "7989:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "7989:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8014:3:15",
																		"nodeType": "YulLiteral",
																		"src": "8014:3:15",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7985:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "7985:3:15"
																},
																"nativeSrc": "7985:33:15",
																"nodeType": "YulFunctionCall",
																"src": "7985:33:15"
															},
															"nativeSrc": "7982:120:15",
															"nodeType": "YulIf",
															"src": "7982:120:15"
														},
														{
															"nativeSrc": "8112:117:15",
															"nodeType": "YulBlock",
															"src": "8112:117:15",
															"statements": [
																{
																	"nativeSrc": "8127:15:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8127:15:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8141:1:15",
																		"nodeType": "YulLiteral",
																		"src": "8141:1:15",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8131:6:15",
																			"nodeType": "YulTypedName",
																			"src": "8131:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8156:63:15",
																	"nodeType": "YulAssignment",
																	"src": "8156:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8191:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "8191:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8202:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "8202:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8187:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "8187:3:15"
																				},
																				"nativeSrc": "8187:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "8187:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8211:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "8211:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "8166:20:15",
																			"nodeType": "YulIdentifier",
																			"src": "8166:20:15"
																		},
																		"nativeSrc": "8166:53:15",
																		"nodeType": "YulFunctionCall",
																		"src": "8166:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "8156:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "8156:6:15"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "8239:118:15",
															"nodeType": "YulBlock",
															"src": "8239:118:15",
															"statements": [
																{
																	"nativeSrc": "8254:16:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8254:16:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8268:2:15",
																		"nodeType": "YulLiteral",
																		"src": "8268:2:15",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8258:6:15",
																			"nodeType": "YulTypedName",
																			"src": "8258:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8284:63:15",
																	"nodeType": "YulAssignment",
																	"src": "8284:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8319:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "8319:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8330:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "8330:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8315:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "8315:3:15"
																				},
																				"nativeSrc": "8315:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "8315:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8339:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "8339:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "8294:20:15",
																			"nodeType": "YulIdentifier",
																			"src": "8294:20:15"
																		},
																		"nativeSrc": "8294:53:15",
																		"nodeType": "YulFunctionCall",
																		"src": "8294:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "8284:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "8284:6:15"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "8367:303:15",
															"nodeType": "YulBlock",
															"src": "8367:303:15",
															"statements": [
																{
																	"nativeSrc": "8382:46:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8382:46:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8413:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "8413:9:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8424:2:15",
																						"nodeType": "YulLiteral",
																						"src": "8424:2:15",
																						"type": "",
																						"value": "64"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8409:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "8409:3:15"
																				},
																				"nativeSrc": "8409:18:15",
																				"nodeType": "YulFunctionCall",
																				"src": "8409:18:15"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "8396:12:15",
																			"nodeType": "YulIdentifier",
																			"src": "8396:12:15"
																		},
																		"nativeSrc": "8396:32:15",
																		"nodeType": "YulFunctionCall",
																		"src": "8396:32:15"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8386:6:15",
																			"nodeType": "YulTypedName",
																			"src": "8386:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "8475:83:15",
																		"nodeType": "YulBlock",
																		"src": "8475:83:15",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "8477:77:15",
																						"nodeType": "YulIdentifier",
																						"src": "8477:77:15"
																					},
																					"nativeSrc": "8477:79:15",
																					"nodeType": "YulFunctionCall",
																					"src": "8477:79:15"
																				},
																				"nativeSrc": "8477:79:15",
																				"nodeType": "YulExpressionStatement",
																				"src": "8477:79:15"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "8447:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "8447:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8455:18:15",
																				"nodeType": "YulLiteral",
																				"src": "8455:18:15",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "8444:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "8444:2:15"
																		},
																		"nativeSrc": "8444:30:15",
																		"nodeType": "YulFunctionCall",
																		"src": "8444:30:15"
																	},
																	"nativeSrc": "8441:117:15",
																	"nodeType": "YulIf",
																	"src": "8441:117:15"
																},
																{
																	"nativeSrc": "8572:88:15",
																	"nodeType": "YulAssignment",
																	"src": "8572:88:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8632:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "8632:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8643:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "8643:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8628:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "8628:3:15"
																				},
																				"nativeSrc": "8628:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "8628:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8652:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "8652:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
																			"nativeSrc": "8582:45:15",
																			"nodeType": "YulIdentifier",
																			"src": "8582:45:15"
																		},
																		"nativeSrc": "8582:78:15",
																		"nodeType": "YulFunctionCall",
																		"src": "8582:78:15"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "8572:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "8572:6:15"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "8680:303:15",
															"nodeType": "YulBlock",
															"src": "8680:303:15",
															"statements": [
																{
																	"nativeSrc": "8695:46:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8695:46:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8726:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "8726:9:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8737:2:15",
																						"nodeType": "YulLiteral",
																						"src": "8737:2:15",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8722:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "8722:3:15"
																				},
																				"nativeSrc": "8722:18:15",
																				"nodeType": "YulFunctionCall",
																				"src": "8722:18:15"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "8709:12:15",
																			"nodeType": "YulIdentifier",
																			"src": "8709:12:15"
																		},
																		"nativeSrc": "8709:32:15",
																		"nodeType": "YulFunctionCall",
																		"src": "8709:32:15"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8699:6:15",
																			"nodeType": "YulTypedName",
																			"src": "8699:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "8788:83:15",
																		"nodeType": "YulBlock",
																		"src": "8788:83:15",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "8790:77:15",
																						"nodeType": "YulIdentifier",
																						"src": "8790:77:15"
																					},
																					"nativeSrc": "8790:79:15",
																					"nodeType": "YulFunctionCall",
																					"src": "8790:79:15"
																				},
																				"nativeSrc": "8790:79:15",
																				"nodeType": "YulExpressionStatement",
																				"src": "8790:79:15"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "8760:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "8760:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8768:18:15",
																				"nodeType": "YulLiteral",
																				"src": "8768:18:15",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "8757:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "8757:2:15"
																		},
																		"nativeSrc": "8757:30:15",
																		"nodeType": "YulFunctionCall",
																		"src": "8757:30:15"
																	},
																	"nativeSrc": "8754:117:15",
																	"nodeType": "YulIf",
																	"src": "8754:117:15"
																},
																{
																	"nativeSrc": "8885:88:15",
																	"nodeType": "YulAssignment",
																	"src": "8885:88:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8945:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "8945:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8956:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "8956:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8941:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "8941:3:15"
																				},
																				"nativeSrc": "8941:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "8941:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8965:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "8965:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
																			"nativeSrc": "8895:45:15",
																			"nodeType": "YulIdentifier",
																			"src": "8895:45:15"
																		},
																		"nativeSrc": "8895:78:15",
																		"nodeType": "YulFunctionCall",
																		"src": "8895:78:15"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "8885:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "8885:6:15"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "8993:288:15",
															"nodeType": "YulBlock",
															"src": "8993:288:15",
															"statements": [
																{
																	"nativeSrc": "9008:47:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9008:47:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9039:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "9039:9:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "9050:3:15",
																						"nodeType": "YulLiteral",
																						"src": "9050:3:15",
																						"type": "",
																						"value": "128"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9035:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "9035:3:15"
																				},
																				"nativeSrc": "9035:19:15",
																				"nodeType": "YulFunctionCall",
																				"src": "9035:19:15"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "9022:12:15",
																			"nodeType": "YulIdentifier",
																			"src": "9022:12:15"
																		},
																		"nativeSrc": "9022:33:15",
																		"nodeType": "YulFunctionCall",
																		"src": "9022:33:15"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9012:6:15",
																			"nodeType": "YulTypedName",
																			"src": "9012:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "9102:83:15",
																		"nodeType": "YulBlock",
																		"src": "9102:83:15",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "9104:77:15",
																						"nodeType": "YulIdentifier",
																						"src": "9104:77:15"
																					},
																					"nativeSrc": "9104:79:15",
																					"nodeType": "YulFunctionCall",
																					"src": "9104:79:15"
																				},
																				"nativeSrc": "9104:79:15",
																				"nodeType": "YulExpressionStatement",
																				"src": "9104:79:15"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "9074:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "9074:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9082:18:15",
																				"nodeType": "YulLiteral",
																				"src": "9082:18:15",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "9071:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "9071:2:15"
																		},
																		"nativeSrc": "9071:30:15",
																		"nodeType": "YulFunctionCall",
																		"src": "9071:30:15"
																	},
																	"nativeSrc": "9068:117:15",
																	"nodeType": "YulIf",
																	"src": "9068:117:15"
																},
																{
																	"nativeSrc": "9199:72:15",
																	"nodeType": "YulAssignment",
																	"src": "9199:72:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9243:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "9243:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9254:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "9254:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9239:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "9239:3:15"
																				},
																				"nativeSrc": "9239:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "9239:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9263:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "9263:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nativeSrc": "9209:29:15",
																			"nodeType": "YulIdentifier",
																			"src": "9209:29:15"
																		},
																		"nativeSrc": "9209:62:15",
																		"nodeType": "YulFunctionCall",
																		"src": "9209:62:15"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nativeSrc": "9199:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "9199:6:15"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr",
												"nativeSrc": "7779:1509:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7910:9:15",
														"nodeType": "YulTypedName",
														"src": "7910:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7921:7:15",
														"nodeType": "YulTypedName",
														"src": "7921:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7933:6:15",
														"nodeType": "YulTypedName",
														"src": "7933:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7941:6:15",
														"nodeType": "YulTypedName",
														"src": "7941:6:15",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "7949:6:15",
														"nodeType": "YulTypedName",
														"src": "7949:6:15",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "7957:6:15",
														"nodeType": "YulTypedName",
														"src": "7957:6:15",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "7965:6:15",
														"nodeType": "YulTypedName",
														"src": "7965:6:15",
														"type": ""
													}
												],
												"src": "7779:1509:15"
											},
											{
												"body": {
													"nativeSrc": "9357:52:15",
													"nodeType": "YulBlock",
													"src": "9357:52:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9374:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "9374:3:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "9396:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "9396:5:15"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes4",
																			"nativeSrc": "9379:16:15",
																			"nodeType": "YulIdentifier",
																			"src": "9379:16:15"
																		},
																		"nativeSrc": "9379:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "9379:23:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9367:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "9367:6:15"
																},
																"nativeSrc": "9367:36:15",
																"nodeType": "YulFunctionCall",
																"src": "9367:36:15"
															},
															"nativeSrc": "9367:36:15",
															"nodeType": "YulExpressionStatement",
															"src": "9367:36:15"
														}
													]
												},
												"name": "abi_encode_t_bytes4_to_t_bytes4_fromStack",
												"nativeSrc": "9294:115:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9345:5:15",
														"nodeType": "YulTypedName",
														"src": "9345:5:15",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "9352:3:15",
														"nodeType": "YulTypedName",
														"src": "9352:3:15",
														"type": ""
													}
												],
												"src": "9294:115:15"
											},
											{
												"body": {
													"nativeSrc": "9511:122:15",
													"nodeType": "YulBlock",
													"src": "9511:122:15",
													"statements": [
														{
															"nativeSrc": "9521:26:15",
															"nodeType": "YulAssignment",
															"src": "9521:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9533:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "9533:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9544:2:15",
																		"nodeType": "YulLiteral",
																		"src": "9544:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9529:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "9529:3:15"
																},
																"nativeSrc": "9529:18:15",
																"nodeType": "YulFunctionCall",
																"src": "9529:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9521:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "9521:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9599:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "9599:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9612:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "9612:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9623:1:15",
																				"nodeType": "YulLiteral",
																				"src": "9623:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9608:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "9608:3:15"
																		},
																		"nativeSrc": "9608:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "9608:17:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes4_to_t_bytes4_fromStack",
																	"nativeSrc": "9557:41:15",
																	"nodeType": "YulIdentifier",
																	"src": "9557:41:15"
																},
																"nativeSrc": "9557:69:15",
																"nodeType": "YulFunctionCall",
																"src": "9557:69:15"
															},
															"nativeSrc": "9557:69:15",
															"nodeType": "YulExpressionStatement",
															"src": "9557:69:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed",
												"nativeSrc": "9415:218:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9483:9:15",
														"nodeType": "YulTypedName",
														"src": "9483:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9495:6:15",
														"nodeType": "YulTypedName",
														"src": "9495:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9506:4:15",
														"nodeType": "YulTypedName",
														"src": "9506:4:15",
														"type": ""
													}
												],
												"src": "9415:218:15"
											},
											{
												"body": {
													"nativeSrc": "9682:43:15",
													"nodeType": "YulBlock",
													"src": "9682:43:15",
													"statements": [
														{
															"nativeSrc": "9692:27:15",
															"nodeType": "YulAssignment",
															"src": "9692:27:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9707:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "9707:5:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9714:4:15",
																		"nodeType": "YulLiteral",
																		"src": "9714:4:15",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "9703:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "9703:3:15"
																},
																"nativeSrc": "9703:16:15",
																"nodeType": "YulFunctionCall",
																"src": "9703:16:15"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "9692:7:15",
																	"nodeType": "YulIdentifier",
																	"src": "9692:7:15"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "9639:86:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9664:5:15",
														"nodeType": "YulTypedName",
														"src": "9664:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "9674:7:15",
														"nodeType": "YulTypedName",
														"src": "9674:7:15",
														"type": ""
													}
												],
												"src": "9639:86:15"
											},
											{
												"body": {
													"nativeSrc": "9772:77:15",
													"nodeType": "YulBlock",
													"src": "9772:77:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "9827:16:15",
																"nodeType": "YulBlock",
																"src": "9827:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "9836:1:15",
																					"nodeType": "YulLiteral",
																					"src": "9836:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "9839:1:15",
																					"nodeType": "YulLiteral",
																					"src": "9839:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "9829:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "9829:6:15"
																			},
																			"nativeSrc": "9829:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "9829:12:15"
																		},
																		"nativeSrc": "9829:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "9829:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "9795:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "9795:5:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "9818:5:15",
																						"nodeType": "YulIdentifier",
																						"src": "9818:5:15"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint8",
																					"nativeSrc": "9802:15:15",
																					"nodeType": "YulIdentifier",
																					"src": "9802:15:15"
																				},
																				"nativeSrc": "9802:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "9802:22:15"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "9792:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "9792:2:15"
																		},
																		"nativeSrc": "9792:33:15",
																		"nodeType": "YulFunctionCall",
																		"src": "9792:33:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9785:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "9785:6:15"
																},
																"nativeSrc": "9785:41:15",
																"nodeType": "YulFunctionCall",
																"src": "9785:41:15"
															},
															"nativeSrc": "9782:61:15",
															"nodeType": "YulIf",
															"src": "9782:61:15"
														}
													]
												},
												"name": "validator_revert_t_uint8",
												"nativeSrc": "9731:118:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9765:5:15",
														"nodeType": "YulTypedName",
														"src": "9765:5:15",
														"type": ""
													}
												],
												"src": "9731:118:15"
											},
											{
												"body": {
													"nativeSrc": "9905:85:15",
													"nodeType": "YulBlock",
													"src": "9905:85:15",
													"statements": [
														{
															"nativeSrc": "9915:29:15",
															"nodeType": "YulAssignment",
															"src": "9915:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "9937:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "9937:6:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "9924:12:15",
																	"nodeType": "YulIdentifier",
																	"src": "9924:12:15"
																},
																"nativeSrc": "9924:20:15",
																"nodeType": "YulFunctionCall",
																"src": "9924:20:15"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "9915:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "9915:5:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9978:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "9978:5:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint8",
																	"nativeSrc": "9953:24:15",
																	"nodeType": "YulIdentifier",
																	"src": "9953:24:15"
																},
																"nativeSrc": "9953:31:15",
																"nodeType": "YulFunctionCall",
																"src": "9953:31:15"
															},
															"nativeSrc": "9953:31:15",
															"nodeType": "YulExpressionStatement",
															"src": "9953:31:15"
														}
													]
												},
												"name": "abi_decode_t_uint8",
												"nativeSrc": "9855:135:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "9883:6:15",
														"nodeType": "YulTypedName",
														"src": "9883:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "9891:3:15",
														"nodeType": "YulTypedName",
														"src": "9891:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "9899:5:15",
														"nodeType": "YulTypedName",
														"src": "9899:5:15",
														"type": ""
													}
												],
												"src": "9855:135:15"
											},
											{
												"body": {
													"nativeSrc": "10094:517:15",
													"nodeType": "YulBlock",
													"src": "10094:517:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "10140:83:15",
																"nodeType": "YulBlock",
																"src": "10140:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "10142:77:15",
																				"nodeType": "YulIdentifier",
																				"src": "10142:77:15"
																			},
																			"nativeSrc": "10142:79:15",
																			"nodeType": "YulFunctionCall",
																			"src": "10142:79:15"
																		},
																		"nativeSrc": "10142:79:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "10142:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10115:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "10115:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10124:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "10124:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10111:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "10111:3:15"
																		},
																		"nativeSrc": "10111:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "10111:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10136:2:15",
																		"nodeType": "YulLiteral",
																		"src": "10136:2:15",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "10107:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "10107:3:15"
																},
																"nativeSrc": "10107:32:15",
																"nodeType": "YulFunctionCall",
																"src": "10107:32:15"
															},
															"nativeSrc": "10104:119:15",
															"nodeType": "YulIf",
															"src": "10104:119:15"
														},
														{
															"nativeSrc": "10233:117:15",
															"nodeType": "YulBlock",
															"src": "10233:117:15",
															"statements": [
																{
																	"nativeSrc": "10248:15:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10248:15:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10262:1:15",
																		"nodeType": "YulLiteral",
																		"src": "10262:1:15",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10252:6:15",
																			"nodeType": "YulTypedName",
																			"src": "10252:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10277:63:15",
																	"nodeType": "YulAssignment",
																	"src": "10277:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10312:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "10312:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10323:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "10323:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10308:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "10308:3:15"
																				},
																				"nativeSrc": "10308:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "10308:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10332:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "10332:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "10287:20:15",
																			"nodeType": "YulIdentifier",
																			"src": "10287:20:15"
																		},
																		"nativeSrc": "10287:53:15",
																		"nodeType": "YulFunctionCall",
																		"src": "10287:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "10277:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "10277:6:15"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "10360:118:15",
															"nodeType": "YulBlock",
															"src": "10360:118:15",
															"statements": [
																{
																	"nativeSrc": "10375:16:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10375:16:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10389:2:15",
																		"nodeType": "YulLiteral",
																		"src": "10389:2:15",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10379:6:15",
																			"nodeType": "YulTypedName",
																			"src": "10379:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10405:63:15",
																	"nodeType": "YulAssignment",
																	"src": "10405:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10440:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "10440:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10451:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "10451:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10436:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "10436:3:15"
																				},
																				"nativeSrc": "10436:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "10436:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10460:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "10460:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "10415:20:15",
																			"nodeType": "YulIdentifier",
																			"src": "10415:20:15"
																		},
																		"nativeSrc": "10415:53:15",
																		"nodeType": "YulFunctionCall",
																		"src": "10415:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "10405:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "10405:6:15"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "10488:116:15",
															"nodeType": "YulBlock",
															"src": "10488:116:15",
															"statements": [
																{
																	"nativeSrc": "10503:16:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10503:16:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10517:2:15",
																		"nodeType": "YulLiteral",
																		"src": "10517:2:15",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10507:6:15",
																			"nodeType": "YulTypedName",
																			"src": "10507:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10533:61:15",
																	"nodeType": "YulAssignment",
																	"src": "10533:61:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10566:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "10566:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10577:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "10577:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10562:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "10562:3:15"
																				},
																				"nativeSrc": "10562:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "10562:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10586:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "10586:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint8",
																			"nativeSrc": "10543:18:15",
																			"nodeType": "YulIdentifier",
																			"src": "10543:18:15"
																		},
																		"nativeSrc": "10543:51:15",
																		"nodeType": "YulFunctionCall",
																		"src": "10543:51:15"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "10533:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "10533:6:15"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256t_uint8",
												"nativeSrc": "9996:615:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10048:9:15",
														"nodeType": "YulTypedName",
														"src": "10048:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "10059:7:15",
														"nodeType": "YulTypedName",
														"src": "10059:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "10071:6:15",
														"nodeType": "YulTypedName",
														"src": "10071:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10079:6:15",
														"nodeType": "YulTypedName",
														"src": "10079:6:15",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "10087:6:15",
														"nodeType": "YulTypedName",
														"src": "10087:6:15",
														"type": ""
													}
												],
												"src": "9996:615:15"
											},
											{
												"body": {
													"nativeSrc": "10683:263:15",
													"nodeType": "YulBlock",
													"src": "10683:263:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "10729:83:15",
																"nodeType": "YulBlock",
																"src": "10729:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "10731:77:15",
																				"nodeType": "YulIdentifier",
																				"src": "10731:77:15"
																			},
																			"nativeSrc": "10731:79:15",
																			"nodeType": "YulFunctionCall",
																			"src": "10731:79:15"
																		},
																		"nativeSrc": "10731:79:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "10731:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10704:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "10704:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10713:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "10713:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10700:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "10700:3:15"
																		},
																		"nativeSrc": "10700:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "10700:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10725:2:15",
																		"nodeType": "YulLiteral",
																		"src": "10725:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "10696:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "10696:3:15"
																},
																"nativeSrc": "10696:32:15",
																"nodeType": "YulFunctionCall",
																"src": "10696:32:15"
															},
															"nativeSrc": "10693:119:15",
															"nodeType": "YulIf",
															"src": "10693:119:15"
														},
														{
															"nativeSrc": "10822:117:15",
															"nodeType": "YulBlock",
															"src": "10822:117:15",
															"statements": [
																{
																	"nativeSrc": "10837:15:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10837:15:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10851:1:15",
																		"nodeType": "YulLiteral",
																		"src": "10851:1:15",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10841:6:15",
																			"nodeType": "YulTypedName",
																			"src": "10841:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10866:63:15",
																	"nodeType": "YulAssignment",
																	"src": "10866:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10901:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "10901:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10912:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "10912:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10897:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "10897:3:15"
																				},
																				"nativeSrc": "10897:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "10897:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10921:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "10921:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "10876:20:15",
																			"nodeType": "YulIdentifier",
																			"src": "10876:20:15"
																		},
																		"nativeSrc": "10876:53:15",
																		"nodeType": "YulFunctionCall",
																		"src": "10876:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "10866:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "10866:6:15"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "10617:329:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10653:9:15",
														"nodeType": "YulTypedName",
														"src": "10653:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "10664:7:15",
														"nodeType": "YulTypedName",
														"src": "10664:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "10676:6:15",
														"nodeType": "YulTypedName",
														"src": "10676:6:15",
														"type": ""
													}
												],
												"src": "10617:329:15"
											},
											{
												"body": {
													"nativeSrc": "11028:66:15",
													"nodeType": "YulBlock",
													"src": "11028:66:15",
													"statements": [
														{
															"nativeSrc": "11038:50:15",
															"nodeType": "YulAssignment",
															"src": "11038:50:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "11082:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "11082:5:15"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "11051:30:15",
																	"nodeType": "YulIdentifier",
																	"src": "11051:30:15"
																},
																"nativeSrc": "11051:37:15",
																"nodeType": "YulFunctionCall",
																"src": "11051:37:15"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "11038:9:15",
																	"nodeType": "YulIdentifier",
																	"src": "11038:9:15"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC1155_$360_to_t_address",
												"nativeSrc": "10952:142:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "11008:5:15",
														"nodeType": "YulTypedName",
														"src": "11008:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "11018:9:15",
														"nodeType": "YulTypedName",
														"src": "11018:9:15",
														"type": ""
													}
												],
												"src": "10952:142:15"
											},
											{
												"body": {
													"nativeSrc": "11181:82:15",
													"nodeType": "YulBlock",
													"src": "11181:82:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11198:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "11198:3:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "11250:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "11250:5:15"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC1155_$360_to_t_address",
																			"nativeSrc": "11203:46:15",
																			"nodeType": "YulIdentifier",
																			"src": "11203:46:15"
																		},
																		"nativeSrc": "11203:53:15",
																		"nodeType": "YulFunctionCall",
																		"src": "11203:53:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11191:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "11191:6:15"
																},
																"nativeSrc": "11191:66:15",
																"nodeType": "YulFunctionCall",
																"src": "11191:66:15"
															},
															"nativeSrc": "11191:66:15",
															"nodeType": "YulExpressionStatement",
															"src": "11191:66:15"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC1155_$360_to_t_address_fromStack",
												"nativeSrc": "11100:163:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "11169:5:15",
														"nodeType": "YulTypedName",
														"src": "11169:5:15",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "11176:3:15",
														"nodeType": "YulTypedName",
														"src": "11176:3:15",
														"type": ""
													}
												],
												"src": "11100:163:15"
											},
											{
												"body": {
													"nativeSrc": "11383:140:15",
													"nodeType": "YulBlock",
													"src": "11383:140:15",
													"statements": [
														{
															"nativeSrc": "11393:26:15",
															"nodeType": "YulAssignment",
															"src": "11393:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11405:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "11405:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11416:2:15",
																		"nodeType": "YulLiteral",
																		"src": "11416:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11401:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "11401:3:15"
																},
																"nativeSrc": "11401:18:15",
																"nodeType": "YulFunctionCall",
																"src": "11401:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11393:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "11393:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "11489:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "11489:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11502:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "11502:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11513:1:15",
																				"nodeType": "YulLiteral",
																				"src": "11513:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11498:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "11498:3:15"
																		},
																		"nativeSrc": "11498:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "11498:17:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC1155_$360_to_t_address_fromStack",
																	"nativeSrc": "11429:59:15",
																	"nodeType": "YulIdentifier",
																	"src": "11429:59:15"
																},
																"nativeSrc": "11429:87:15",
																"nodeType": "YulFunctionCall",
																"src": "11429:87:15"
															},
															"nativeSrc": "11429:87:15",
															"nodeType": "YulExpressionStatement",
															"src": "11429:87:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC1155_$360__to_t_address__fromStack_reversed",
												"nativeSrc": "11269:254:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11355:9:15",
														"nodeType": "YulTypedName",
														"src": "11355:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "11367:6:15",
														"nodeType": "YulTypedName",
														"src": "11367:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11378:4:15",
														"nodeType": "YulTypedName",
														"src": "11378:4:15",
														"type": ""
													}
												],
												"src": "11269:254:15"
											},
											{
												"body": {
													"nativeSrc": "11672:946:15",
													"nodeType": "YulBlock",
													"src": "11672:946:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "11719:83:15",
																"nodeType": "YulBlock",
																"src": "11719:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "11721:77:15",
																				"nodeType": "YulIdentifier",
																				"src": "11721:77:15"
																			},
																			"nativeSrc": "11721:79:15",
																			"nodeType": "YulFunctionCall",
																			"src": "11721:79:15"
																		},
																		"nativeSrc": "11721:79:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "11721:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11693:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "11693:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11702:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "11702:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11689:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "11689:3:15"
																		},
																		"nativeSrc": "11689:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "11689:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11714:3:15",
																		"nodeType": "YulLiteral",
																		"src": "11714:3:15",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "11685:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "11685:3:15"
																},
																"nativeSrc": "11685:33:15",
																"nodeType": "YulFunctionCall",
																"src": "11685:33:15"
															},
															"nativeSrc": "11682:120:15",
															"nodeType": "YulIf",
															"src": "11682:120:15"
														},
														{
															"nativeSrc": "11812:117:15",
															"nodeType": "YulBlock",
															"src": "11812:117:15",
															"statements": [
																{
																	"nativeSrc": "11827:15:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11827:15:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "11841:1:15",
																		"nodeType": "YulLiteral",
																		"src": "11841:1:15",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "11831:6:15",
																			"nodeType": "YulTypedName",
																			"src": "11831:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "11856:63:15",
																	"nodeType": "YulAssignment",
																	"src": "11856:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11891:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "11891:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "11902:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "11902:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11887:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "11887:3:15"
																				},
																				"nativeSrc": "11887:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "11887:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11911:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "11911:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "11866:20:15",
																			"nodeType": "YulIdentifier",
																			"src": "11866:20:15"
																		},
																		"nativeSrc": "11866:53:15",
																		"nodeType": "YulFunctionCall",
																		"src": "11866:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "11856:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "11856:6:15"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "11939:118:15",
															"nodeType": "YulBlock",
															"src": "11939:118:15",
															"statements": [
																{
																	"nativeSrc": "11954:16:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11954:16:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "11968:2:15",
																		"nodeType": "YulLiteral",
																		"src": "11968:2:15",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "11958:6:15",
																			"nodeType": "YulTypedName",
																			"src": "11958:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "11984:63:15",
																	"nodeType": "YulAssignment",
																	"src": "11984:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12019:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "12019:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "12030:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "12030:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12015:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "12015:3:15"
																				},
																				"nativeSrc": "12015:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "12015:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12039:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "12039:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "11994:20:15",
																			"nodeType": "YulIdentifier",
																			"src": "11994:20:15"
																		},
																		"nativeSrc": "11994:53:15",
																		"nodeType": "YulFunctionCall",
																		"src": "11994:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "11984:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "11984:6:15"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "12067:118:15",
															"nodeType": "YulBlock",
															"src": "12067:118:15",
															"statements": [
																{
																	"nativeSrc": "12082:16:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "12082:16:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "12096:2:15",
																		"nodeType": "YulLiteral",
																		"src": "12096:2:15",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "12086:6:15",
																			"nodeType": "YulTypedName",
																			"src": "12086:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "12112:63:15",
																	"nodeType": "YulAssignment",
																	"src": "12112:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12147:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "12147:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "12158:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "12158:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12143:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "12143:3:15"
																				},
																				"nativeSrc": "12143:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "12143:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12167:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "12167:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "12122:20:15",
																			"nodeType": "YulIdentifier",
																			"src": "12122:20:15"
																		},
																		"nativeSrc": "12122:53:15",
																		"nodeType": "YulFunctionCall",
																		"src": "12122:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "12112:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "12112:6:15"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "12195:118:15",
															"nodeType": "YulBlock",
															"src": "12195:118:15",
															"statements": [
																{
																	"nativeSrc": "12210:16:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "12210:16:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "12224:2:15",
																		"nodeType": "YulLiteral",
																		"src": "12224:2:15",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "12214:6:15",
																			"nodeType": "YulTypedName",
																			"src": "12214:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "12240:63:15",
																	"nodeType": "YulAssignment",
																	"src": "12240:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12275:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "12275:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "12286:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "12286:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12271:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "12271:3:15"
																				},
																				"nativeSrc": "12271:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "12271:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12295:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "12295:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "12250:20:15",
																			"nodeType": "YulIdentifier",
																			"src": "12250:20:15"
																		},
																		"nativeSrc": "12250:53:15",
																		"nodeType": "YulFunctionCall",
																		"src": "12250:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "12240:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "12240:6:15"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "12323:288:15",
															"nodeType": "YulBlock",
															"src": "12323:288:15",
															"statements": [
																{
																	"nativeSrc": "12338:47:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "12338:47:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12369:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "12369:9:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "12380:3:15",
																						"nodeType": "YulLiteral",
																						"src": "12380:3:15",
																						"type": "",
																						"value": "128"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12365:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "12365:3:15"
																				},
																				"nativeSrc": "12365:19:15",
																				"nodeType": "YulFunctionCall",
																				"src": "12365:19:15"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "12352:12:15",
																			"nodeType": "YulIdentifier",
																			"src": "12352:12:15"
																		},
																		"nativeSrc": "12352:33:15",
																		"nodeType": "YulFunctionCall",
																		"src": "12352:33:15"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "12342:6:15",
																			"nodeType": "YulTypedName",
																			"src": "12342:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "12432:83:15",
																		"nodeType": "YulBlock",
																		"src": "12432:83:15",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "12434:77:15",
																						"nodeType": "YulIdentifier",
																						"src": "12434:77:15"
																					},
																					"nativeSrc": "12434:79:15",
																					"nodeType": "YulFunctionCall",
																					"src": "12434:79:15"
																				},
																				"nativeSrc": "12434:79:15",
																				"nodeType": "YulExpressionStatement",
																				"src": "12434:79:15"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "12404:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "12404:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12412:18:15",
																				"nodeType": "YulLiteral",
																				"src": "12412:18:15",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "12401:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "12401:2:15"
																		},
																		"nativeSrc": "12401:30:15",
																		"nodeType": "YulFunctionCall",
																		"src": "12401:30:15"
																	},
																	"nativeSrc": "12398:117:15",
																	"nodeType": "YulIf",
																	"src": "12398:117:15"
																},
																{
																	"nativeSrc": "12529:72:15",
																	"nodeType": "YulAssignment",
																	"src": "12529:72:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12573:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "12573:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "12584:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "12584:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12569:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "12569:3:15"
																				},
																				"nativeSrc": "12569:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "12569:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12593:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "12593:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nativeSrc": "12539:29:15",
																			"nodeType": "YulIdentifier",
																			"src": "12539:29:15"
																		},
																		"nativeSrc": "12539:62:15",
																		"nodeType": "YulFunctionCall",
																		"src": "12539:62:15"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nativeSrc": "12529:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "12529:6:15"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr",
												"nativeSrc": "11529:1089:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11610:9:15",
														"nodeType": "YulTypedName",
														"src": "11610:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "11621:7:15",
														"nodeType": "YulTypedName",
														"src": "11621:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "11633:6:15",
														"nodeType": "YulTypedName",
														"src": "11633:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "11641:6:15",
														"nodeType": "YulTypedName",
														"src": "11641:6:15",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "11649:6:15",
														"nodeType": "YulTypedName",
														"src": "11649:6:15",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "11657:6:15",
														"nodeType": "YulTypedName",
														"src": "11657:6:15",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "11665:6:15",
														"nodeType": "YulTypedName",
														"src": "11665:6:15",
														"type": ""
													}
												],
												"src": "11529:1089:15"
											},
											{
												"body": {
													"nativeSrc": "12690:263:15",
													"nodeType": "YulBlock",
													"src": "12690:263:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "12736:83:15",
																"nodeType": "YulBlock",
																"src": "12736:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "12738:77:15",
																				"nodeType": "YulIdentifier",
																				"src": "12738:77:15"
																			},
																			"nativeSrc": "12738:79:15",
																			"nodeType": "YulFunctionCall",
																			"src": "12738:79:15"
																		},
																		"nativeSrc": "12738:79:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "12738:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12711:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "12711:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12720:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "12720:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12707:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "12707:3:15"
																		},
																		"nativeSrc": "12707:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "12707:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12732:2:15",
																		"nodeType": "YulLiteral",
																		"src": "12732:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "12703:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "12703:3:15"
																},
																"nativeSrc": "12703:32:15",
																"nodeType": "YulFunctionCall",
																"src": "12703:32:15"
															},
															"nativeSrc": "12700:119:15",
															"nodeType": "YulIf",
															"src": "12700:119:15"
														},
														{
															"nativeSrc": "12829:117:15",
															"nodeType": "YulBlock",
															"src": "12829:117:15",
															"statements": [
																{
																	"nativeSrc": "12844:15:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "12844:15:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "12858:1:15",
																		"nodeType": "YulLiteral",
																		"src": "12858:1:15",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "12848:6:15",
																			"nodeType": "YulTypedName",
																			"src": "12848:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "12873:63:15",
																	"nodeType": "YulAssignment",
																	"src": "12873:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12908:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "12908:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "12919:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "12919:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12904:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "12904:3:15"
																				},
																				"nativeSrc": "12904:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "12904:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12928:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "12928:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "12883:20:15",
																			"nodeType": "YulIdentifier",
																			"src": "12883:20:15"
																		},
																		"nativeSrc": "12883:53:15",
																		"nodeType": "YulFunctionCall",
																		"src": "12883:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "12873:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "12873:6:15"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "12624:329:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12660:9:15",
														"nodeType": "YulTypedName",
														"src": "12660:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "12671:7:15",
														"nodeType": "YulTypedName",
														"src": "12671:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "12683:6:15",
														"nodeType": "YulTypedName",
														"src": "12683:6:15",
														"type": ""
													}
												],
												"src": "12624:329:15"
											},
											{
												"body": {
													"nativeSrc": "13042:391:15",
													"nodeType": "YulBlock",
													"src": "13042:391:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "13088:83:15",
																"nodeType": "YulBlock",
																"src": "13088:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "13090:77:15",
																				"nodeType": "YulIdentifier",
																				"src": "13090:77:15"
																			},
																			"nativeSrc": "13090:79:15",
																			"nodeType": "YulFunctionCall",
																			"src": "13090:79:15"
																		},
																		"nativeSrc": "13090:79:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "13090:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "13063:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "13063:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "13072:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "13072:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13059:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "13059:3:15"
																		},
																		"nativeSrc": "13059:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "13059:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13084:2:15",
																		"nodeType": "YulLiteral",
																		"src": "13084:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "13055:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "13055:3:15"
																},
																"nativeSrc": "13055:32:15",
																"nodeType": "YulFunctionCall",
																"src": "13055:32:15"
															},
															"nativeSrc": "13052:119:15",
															"nodeType": "YulIf",
															"src": "13052:119:15"
														},
														{
															"nativeSrc": "13181:117:15",
															"nodeType": "YulBlock",
															"src": "13181:117:15",
															"statements": [
																{
																	"nativeSrc": "13196:15:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "13196:15:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "13210:1:15",
																		"nodeType": "YulLiteral",
																		"src": "13210:1:15",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "13200:6:15",
																			"nodeType": "YulTypedName",
																			"src": "13200:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "13225:63:15",
																	"nodeType": "YulAssignment",
																	"src": "13225:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "13260:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "13260:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "13271:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "13271:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "13256:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "13256:3:15"
																				},
																				"nativeSrc": "13256:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "13256:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "13280:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "13280:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "13235:20:15",
																			"nodeType": "YulIdentifier",
																			"src": "13235:20:15"
																		},
																		"nativeSrc": "13235:53:15",
																		"nodeType": "YulFunctionCall",
																		"src": "13235:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "13225:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "13225:6:15"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "13308:118:15",
															"nodeType": "YulBlock",
															"src": "13308:118:15",
															"statements": [
																{
																	"nativeSrc": "13323:16:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "13323:16:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "13337:2:15",
																		"nodeType": "YulLiteral",
																		"src": "13337:2:15",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "13327:6:15",
																			"nodeType": "YulTypedName",
																			"src": "13327:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "13353:63:15",
																	"nodeType": "YulAssignment",
																	"src": "13353:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "13388:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "13388:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "13399:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "13399:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "13384:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "13384:3:15"
																				},
																				"nativeSrc": "13384:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "13384:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "13408:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "13408:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "13363:20:15",
																			"nodeType": "YulIdentifier",
																			"src": "13363:20:15"
																		},
																		"nativeSrc": "13363:53:15",
																		"nodeType": "YulFunctionCall",
																		"src": "13363:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "13353:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "13353:6:15"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nativeSrc": "12959:474:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13004:9:15",
														"nodeType": "YulTypedName",
														"src": "13004:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "13015:7:15",
														"nodeType": "YulTypedName",
														"src": "13015:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "13027:6:15",
														"nodeType": "YulTypedName",
														"src": "13027:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "13035:6:15",
														"nodeType": "YulTypedName",
														"src": "13035:6:15",
														"type": ""
													}
												],
												"src": "12959:474:15"
											},
											{
												"body": {
													"nativeSrc": "13535:73:15",
													"nodeType": "YulBlock",
													"src": "13535:73:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13552:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "13552:3:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "13557:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "13557:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13545:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "13545:6:15"
																},
																"nativeSrc": "13545:19:15",
																"nodeType": "YulFunctionCall",
																"src": "13545:19:15"
															},
															"nativeSrc": "13545:19:15",
															"nodeType": "YulExpressionStatement",
															"src": "13545:19:15"
														},
														{
															"nativeSrc": "13573:29:15",
															"nodeType": "YulAssignment",
															"src": "13573:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13592:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "13592:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13597:4:15",
																		"nodeType": "YulLiteral",
																		"src": "13597:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13588:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "13588:3:15"
																},
																"nativeSrc": "13588:14:15",
																"nodeType": "YulFunctionCall",
																"src": "13588:14:15"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "13573:11:15",
																	"nodeType": "YulIdentifier",
																	"src": "13573:11:15"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "13439:169:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "13507:3:15",
														"nodeType": "YulTypedName",
														"src": "13507:3:15",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "13512:6:15",
														"nodeType": "YulTypedName",
														"src": "13512:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "13523:11:15",
														"nodeType": "YulTypedName",
														"src": "13523:11:15",
														"type": ""
													}
												],
												"src": "13439:169:15"
											},
											{
												"body": {
													"nativeSrc": "13720:62:15",
													"nodeType": "YulBlock",
													"src": "13720:62:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "13742:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "13742:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13750:1:15",
																				"nodeType": "YulLiteral",
																				"src": "13750:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13738:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "13738:3:15"
																		},
																		"nativeSrc": "13738:14:15",
																		"nodeType": "YulFunctionCall",
																		"src": "13738:14:15"
																	},
																	{
																		"hexValue": "696e737566666369656e7420616d6f756e74",
																		"kind": "string",
																		"nativeSrc": "13754:20:15",
																		"nodeType": "YulLiteral",
																		"src": "13754:20:15",
																		"type": "",
																		"value": "insuffcient amount"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13731:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "13731:6:15"
																},
																"nativeSrc": "13731:44:15",
																"nodeType": "YulFunctionCall",
																"src": "13731:44:15"
															},
															"nativeSrc": "13731:44:15",
															"nodeType": "YulExpressionStatement",
															"src": "13731:44:15"
														}
													]
												},
												"name": "store_literal_in_memory_aa29b780b68936bfd0a853c44e2650b3d0dacee32c7f0cdc2421e6a8638fa1b4",
												"nativeSrc": "13614:168:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "13712:6:15",
														"nodeType": "YulTypedName",
														"src": "13712:6:15",
														"type": ""
													}
												],
												"src": "13614:168:15"
											},
											{
												"body": {
													"nativeSrc": "13934:220:15",
													"nodeType": "YulBlock",
													"src": "13934:220:15",
													"statements": [
														{
															"nativeSrc": "13944:74:15",
															"nodeType": "YulAssignment",
															"src": "13944:74:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14010:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "14010:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14015:2:15",
																		"nodeType": "YulLiteral",
																		"src": "14015:2:15",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13951:58:15",
																	"nodeType": "YulIdentifier",
																	"src": "13951:58:15"
																},
																"nativeSrc": "13951:67:15",
																"nodeType": "YulFunctionCall",
																"src": "13951:67:15"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "13944:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "13944:3:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14116:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "14116:3:15"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_aa29b780b68936bfd0a853c44e2650b3d0dacee32c7f0cdc2421e6a8638fa1b4",
																	"nativeSrc": "14027:88:15",
																	"nodeType": "YulIdentifier",
																	"src": "14027:88:15"
																},
																"nativeSrc": "14027:93:15",
																"nodeType": "YulFunctionCall",
																"src": "14027:93:15"
															},
															"nativeSrc": "14027:93:15",
															"nodeType": "YulExpressionStatement",
															"src": "14027:93:15"
														},
														{
															"nativeSrc": "14129:19:15",
															"nodeType": "YulAssignment",
															"src": "14129:19:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14140:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "14140:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14145:2:15",
																		"nodeType": "YulLiteral",
																		"src": "14145:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14136:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "14136:3:15"
																},
																"nativeSrc": "14136:12:15",
																"nodeType": "YulFunctionCall",
																"src": "14136:12:15"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "14129:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "14129:3:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_aa29b780b68936bfd0a853c44e2650b3d0dacee32c7f0cdc2421e6a8638fa1b4_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "13788:366:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "13922:3:15",
														"nodeType": "YulTypedName",
														"src": "13922:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "13930:3:15",
														"nodeType": "YulTypedName",
														"src": "13930:3:15",
														"type": ""
													}
												],
												"src": "13788:366:15"
											},
											{
												"body": {
													"nativeSrc": "14331:248:15",
													"nodeType": "YulBlock",
													"src": "14331:248:15",
													"statements": [
														{
															"nativeSrc": "14341:26:15",
															"nodeType": "YulAssignment",
															"src": "14341:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14353:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "14353:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14364:2:15",
																		"nodeType": "YulLiteral",
																		"src": "14364:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14349:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "14349:3:15"
																},
																"nativeSrc": "14349:18:15",
																"nodeType": "YulFunctionCall",
																"src": "14349:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14341:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "14341:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14388:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "14388:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14399:1:15",
																				"nodeType": "YulLiteral",
																				"src": "14399:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14384:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "14384:3:15"
																		},
																		"nativeSrc": "14384:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "14384:17:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "14407:4:15",
																				"nodeType": "YulIdentifier",
																				"src": "14407:4:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "14413:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "14413:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "14403:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "14403:3:15"
																		},
																		"nativeSrc": "14403:20:15",
																		"nodeType": "YulFunctionCall",
																		"src": "14403:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14377:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "14377:6:15"
																},
																"nativeSrc": "14377:47:15",
																"nodeType": "YulFunctionCall",
																"src": "14377:47:15"
															},
															"nativeSrc": "14377:47:15",
															"nodeType": "YulExpressionStatement",
															"src": "14377:47:15"
														},
														{
															"nativeSrc": "14433:139:15",
															"nodeType": "YulAssignment",
															"src": "14433:139:15",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "14567:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "14567:4:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_aa29b780b68936bfd0a853c44e2650b3d0dacee32c7f0cdc2421e6a8638fa1b4_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14441:124:15",
																	"nodeType": "YulIdentifier",
																	"src": "14441:124:15"
																},
																"nativeSrc": "14441:131:15",
																"nodeType": "YulFunctionCall",
																"src": "14441:131:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14433:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "14433:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_aa29b780b68936bfd0a853c44e2650b3d0dacee32c7f0cdc2421e6a8638fa1b4__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14160:419:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14311:9:15",
														"nodeType": "YulTypedName",
														"src": "14311:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14326:4:15",
														"nodeType": "YulTypedName",
														"src": "14326:4:15",
														"type": ""
													}
												],
												"src": "14160:419:15"
											},
											{
												"body": {
													"nativeSrc": "14698:34:15",
													"nodeType": "YulBlock",
													"src": "14698:34:15",
													"statements": [
														{
															"nativeSrc": "14708:18:15",
															"nodeType": "YulAssignment",
															"src": "14708:18:15",
															"value": {
																"name": "pos",
																"nativeSrc": "14723:3:15",
																"nodeType": "YulIdentifier",
																"src": "14723:3:15"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "14708:11:15",
																	"nodeType": "YulIdentifier",
																	"src": "14708:11:15"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "14585:147:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "14670:3:15",
														"nodeType": "YulTypedName",
														"src": "14670:3:15",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "14675:6:15",
														"nodeType": "YulTypedName",
														"src": "14675:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "14686:11:15",
														"nodeType": "YulTypedName",
														"src": "14686:11:15",
														"type": ""
													}
												],
												"src": "14585:147:15"
											},
											{
												"body": {
													"nativeSrc": "14844:8:15",
													"nodeType": "YulBlock",
													"src": "14844:8:15",
													"statements": []
												},
												"name": "store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
												"nativeSrc": "14738:114:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "14836:6:15",
														"nodeType": "YulTypedName",
														"src": "14836:6:15",
														"type": ""
													}
												],
												"src": "14738:114:15"
											},
											{
												"body": {
													"nativeSrc": "15021:235:15",
													"nodeType": "YulBlock",
													"src": "15021:235:15",
													"statements": [
														{
															"nativeSrc": "15031:90:15",
															"nodeType": "YulAssignment",
															"src": "15031:90:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15114:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "15114:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15119:1:15",
																		"nodeType": "YulLiteral",
																		"src": "15119:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "15038:75:15",
																	"nodeType": "YulIdentifier",
																	"src": "15038:75:15"
																},
																"nativeSrc": "15038:83:15",
																"nodeType": "YulFunctionCall",
																"src": "15038:83:15"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "15031:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "15031:3:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15219:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "15219:3:15"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"nativeSrc": "15130:88:15",
																	"nodeType": "YulIdentifier",
																	"src": "15130:88:15"
																},
																"nativeSrc": "15130:93:15",
																"nodeType": "YulFunctionCall",
																"src": "15130:93:15"
															},
															"nativeSrc": "15130:93:15",
															"nodeType": "YulExpressionStatement",
															"src": "15130:93:15"
														},
														{
															"nativeSrc": "15232:18:15",
															"nodeType": "YulAssignment",
															"src": "15232:18:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15243:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "15243:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15248:1:15",
																		"nodeType": "YulLiteral",
																		"src": "15248:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15239:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "15239:3:15"
																},
																"nativeSrc": "15239:11:15",
																"nodeType": "YulFunctionCall",
																"src": "15239:11:15"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "15232:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "15232:3:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "14858:398:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "15009:3:15",
														"nodeType": "YulTypedName",
														"src": "15009:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "15017:3:15",
														"nodeType": "YulTypedName",
														"src": "15017:3:15",
														"type": ""
													}
												],
												"src": "14858:398:15"
											},
											{
												"body": {
													"nativeSrc": "15450:191:15",
													"nodeType": "YulBlock",
													"src": "15450:191:15",
													"statements": [
														{
															"nativeSrc": "15461:154:15",
															"nodeType": "YulAssignment",
															"src": "15461:154:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15611:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "15611:3:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "15468:141:15",
																	"nodeType": "YulIdentifier",
																	"src": "15468:141:15"
																},
																"nativeSrc": "15468:147:15",
																"nodeType": "YulFunctionCall",
																"src": "15468:147:15"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "15461:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "15461:3:15"
																}
															]
														},
														{
															"nativeSrc": "15625:10:15",
															"nodeType": "YulAssignment",
															"src": "15625:10:15",
															"value": {
																"name": "pos",
																"nativeSrc": "15632:3:15",
																"nodeType": "YulIdentifier",
																"src": "15632:3:15"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "15625:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "15625:3:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "15262:379:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "15437:3:15",
														"nodeType": "YulTypedName",
														"src": "15437:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "15446:3:15",
														"nodeType": "YulTypedName",
														"src": "15446:3:15",
														"type": ""
													}
												],
												"src": "15262:379:15"
											},
											{
												"body": {
													"nativeSrc": "15753:68:15",
													"nodeType": "YulBlock",
													"src": "15753:68:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "15775:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "15775:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15783:1:15",
																				"nodeType": "YulLiteral",
																				"src": "15783:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15771:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "15771:3:15"
																		},
																		"nativeSrc": "15771:14:15",
																		"nodeType": "YulFunctionCall",
																		"src": "15771:14:15"
																	},
																	{
																		"hexValue": "756e61626c6520746f207769746864726177206d61746963",
																		"kind": "string",
																		"nativeSrc": "15787:26:15",
																		"nodeType": "YulLiteral",
																		"src": "15787:26:15",
																		"type": "",
																		"value": "unable to withdraw matic"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15764:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "15764:6:15"
																},
																"nativeSrc": "15764:50:15",
																"nodeType": "YulFunctionCall",
																"src": "15764:50:15"
															},
															"nativeSrc": "15764:50:15",
															"nodeType": "YulExpressionStatement",
															"src": "15764:50:15"
														}
													]
												},
												"name": "store_literal_in_memory_743f341dbd5b34a8c4b55eb3374eeb8e53791ae693ac55d74c0130afb734375d",
												"nativeSrc": "15647:174:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "15745:6:15",
														"nodeType": "YulTypedName",
														"src": "15745:6:15",
														"type": ""
													}
												],
												"src": "15647:174:15"
											},
											{
												"body": {
													"nativeSrc": "15973:220:15",
													"nodeType": "YulBlock",
													"src": "15973:220:15",
													"statements": [
														{
															"nativeSrc": "15983:74:15",
															"nodeType": "YulAssignment",
															"src": "15983:74:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16049:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "16049:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16054:2:15",
																		"nodeType": "YulLiteral",
																		"src": "16054:2:15",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15990:58:15",
																	"nodeType": "YulIdentifier",
																	"src": "15990:58:15"
																},
																"nativeSrc": "15990:67:15",
																"nodeType": "YulFunctionCall",
																"src": "15990:67:15"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "15983:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "15983:3:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16155:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "16155:3:15"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_743f341dbd5b34a8c4b55eb3374eeb8e53791ae693ac55d74c0130afb734375d",
																	"nativeSrc": "16066:88:15",
																	"nodeType": "YulIdentifier",
																	"src": "16066:88:15"
																},
																"nativeSrc": "16066:93:15",
																"nodeType": "YulFunctionCall",
																"src": "16066:93:15"
															},
															"nativeSrc": "16066:93:15",
															"nodeType": "YulExpressionStatement",
															"src": "16066:93:15"
														},
														{
															"nativeSrc": "16168:19:15",
															"nodeType": "YulAssignment",
															"src": "16168:19:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16179:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "16179:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16184:2:15",
																		"nodeType": "YulLiteral",
																		"src": "16184:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16175:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "16175:3:15"
																},
																"nativeSrc": "16175:12:15",
																"nodeType": "YulFunctionCall",
																"src": "16175:12:15"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "16168:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "16168:3:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_743f341dbd5b34a8c4b55eb3374eeb8e53791ae693ac55d74c0130afb734375d_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "15827:366:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "15961:3:15",
														"nodeType": "YulTypedName",
														"src": "15961:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "15969:3:15",
														"nodeType": "YulTypedName",
														"src": "15969:3:15",
														"type": ""
													}
												],
												"src": "15827:366:15"
											},
											{
												"body": {
													"nativeSrc": "16370:248:15",
													"nodeType": "YulBlock",
													"src": "16370:248:15",
													"statements": [
														{
															"nativeSrc": "16380:26:15",
															"nodeType": "YulAssignment",
															"src": "16380:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16392:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "16392:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16403:2:15",
																		"nodeType": "YulLiteral",
																		"src": "16403:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16388:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "16388:3:15"
																},
																"nativeSrc": "16388:18:15",
																"nodeType": "YulFunctionCall",
																"src": "16388:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16380:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "16380:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16427:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "16427:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16438:1:15",
																				"nodeType": "YulLiteral",
																				"src": "16438:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16423:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "16423:3:15"
																		},
																		"nativeSrc": "16423:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "16423:17:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "16446:4:15",
																				"nodeType": "YulIdentifier",
																				"src": "16446:4:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "16452:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "16452:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "16442:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "16442:3:15"
																		},
																		"nativeSrc": "16442:20:15",
																		"nodeType": "YulFunctionCall",
																		"src": "16442:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16416:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "16416:6:15"
																},
																"nativeSrc": "16416:47:15",
																"nodeType": "YulFunctionCall",
																"src": "16416:47:15"
															},
															"nativeSrc": "16416:47:15",
															"nodeType": "YulExpressionStatement",
															"src": "16416:47:15"
														},
														{
															"nativeSrc": "16472:139:15",
															"nodeType": "YulAssignment",
															"src": "16472:139:15",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "16606:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "16606:4:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_743f341dbd5b34a8c4b55eb3374eeb8e53791ae693ac55d74c0130afb734375d_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "16480:124:15",
																	"nodeType": "YulIdentifier",
																	"src": "16480:124:15"
																},
																"nativeSrc": "16480:131:15",
																"nodeType": "YulFunctionCall",
																"src": "16480:131:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16472:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "16472:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_743f341dbd5b34a8c4b55eb3374eeb8e53791ae693ac55d74c0130afb734375d__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "16199:419:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16350:9:15",
														"nodeType": "YulTypedName",
														"src": "16350:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "16365:4:15",
														"nodeType": "YulTypedName",
														"src": "16365:4:15",
														"type": ""
													}
												],
												"src": "16199:419:15"
											},
											{
												"body": {
													"nativeSrc": "16750:206:15",
													"nodeType": "YulBlock",
													"src": "16750:206:15",
													"statements": [
														{
															"nativeSrc": "16760:26:15",
															"nodeType": "YulAssignment",
															"src": "16760:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16772:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "16772:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16783:2:15",
																		"nodeType": "YulLiteral",
																		"src": "16783:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16768:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "16768:3:15"
																},
																"nativeSrc": "16768:18:15",
																"nodeType": "YulFunctionCall",
																"src": "16768:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16760:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "16760:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "16840:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "16840:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16853:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "16853:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16864:1:15",
																				"nodeType": "YulLiteral",
																				"src": "16864:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16849:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "16849:3:15"
																		},
																		"nativeSrc": "16849:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "16849:17:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "16796:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "16796:43:15"
																},
																"nativeSrc": "16796:71:15",
																"nodeType": "YulFunctionCall",
																"src": "16796:71:15"
															},
															"nativeSrc": "16796:71:15",
															"nodeType": "YulExpressionStatement",
															"src": "16796:71:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "16921:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "16921:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16934:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "16934:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16945:2:15",
																				"nodeType": "YulLiteral",
																				"src": "16945:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16930:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "16930:3:15"
																		},
																		"nativeSrc": "16930:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "16930:18:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "16877:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "16877:43:15"
																},
																"nativeSrc": "16877:72:15",
																"nodeType": "YulFunctionCall",
																"src": "16877:72:15"
															},
															"nativeSrc": "16877:72:15",
															"nodeType": "YulExpressionStatement",
															"src": "16877:72:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "16624:332:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16714:9:15",
														"nodeType": "YulTypedName",
														"src": "16714:9:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "16726:6:15",
														"nodeType": "YulTypedName",
														"src": "16726:6:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "16734:6:15",
														"nodeType": "YulTypedName",
														"src": "16734:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "16745:4:15",
														"nodeType": "YulTypedName",
														"src": "16745:4:15",
														"type": ""
													}
												],
												"src": "16624:332:15"
											},
											{
												"body": {
													"nativeSrc": "17068:64:15",
													"nodeType": "YulBlock",
													"src": "17068:64:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "17090:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "17090:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17098:1:15",
																				"nodeType": "YulLiteral",
																				"src": "17098:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17086:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "17086:3:15"
																		},
																		"nativeSrc": "17086:14:15",
																		"nodeType": "YulFunctionCall",
																		"src": "17086:14:15"
																	},
																	{
																		"hexValue": "7072696365206973206e6f742073657420796574",
																		"kind": "string",
																		"nativeSrc": "17102:22:15",
																		"nodeType": "YulLiteral",
																		"src": "17102:22:15",
																		"type": "",
																		"value": "price is not set yet"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17079:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "17079:6:15"
																},
																"nativeSrc": "17079:46:15",
																"nodeType": "YulFunctionCall",
																"src": "17079:46:15"
															},
															"nativeSrc": "17079:46:15",
															"nodeType": "YulExpressionStatement",
															"src": "17079:46:15"
														}
													]
												},
												"name": "store_literal_in_memory_e5a68e1890c06b08dae31f764e95e8f1a2c25fa5fd06a39f1ed4630ab3d8317c",
												"nativeSrc": "16962:170:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "17060:6:15",
														"nodeType": "YulTypedName",
														"src": "17060:6:15",
														"type": ""
													}
												],
												"src": "16962:170:15"
											},
											{
												"body": {
													"nativeSrc": "17284:220:15",
													"nodeType": "YulBlock",
													"src": "17284:220:15",
													"statements": [
														{
															"nativeSrc": "17294:74:15",
															"nodeType": "YulAssignment",
															"src": "17294:74:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17360:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "17360:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17365:2:15",
																		"nodeType": "YulLiteral",
																		"src": "17365:2:15",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "17301:58:15",
																	"nodeType": "YulIdentifier",
																	"src": "17301:58:15"
																},
																"nativeSrc": "17301:67:15",
																"nodeType": "YulFunctionCall",
																"src": "17301:67:15"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "17294:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "17294:3:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17466:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "17466:3:15"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_e5a68e1890c06b08dae31f764e95e8f1a2c25fa5fd06a39f1ed4630ab3d8317c",
																	"nativeSrc": "17377:88:15",
																	"nodeType": "YulIdentifier",
																	"src": "17377:88:15"
																},
																"nativeSrc": "17377:93:15",
																"nodeType": "YulFunctionCall",
																"src": "17377:93:15"
															},
															"nativeSrc": "17377:93:15",
															"nodeType": "YulExpressionStatement",
															"src": "17377:93:15"
														},
														{
															"nativeSrc": "17479:19:15",
															"nodeType": "YulAssignment",
															"src": "17479:19:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17490:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "17490:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17495:2:15",
																		"nodeType": "YulLiteral",
																		"src": "17495:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17486:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "17486:3:15"
																},
																"nativeSrc": "17486:12:15",
																"nodeType": "YulFunctionCall",
																"src": "17486:12:15"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "17479:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "17479:3:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_e5a68e1890c06b08dae31f764e95e8f1a2c25fa5fd06a39f1ed4630ab3d8317c_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "17138:366:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "17272:3:15",
														"nodeType": "YulTypedName",
														"src": "17272:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "17280:3:15",
														"nodeType": "YulTypedName",
														"src": "17280:3:15",
														"type": ""
													}
												],
												"src": "17138:366:15"
											},
											{
												"body": {
													"nativeSrc": "17681:248:15",
													"nodeType": "YulBlock",
													"src": "17681:248:15",
													"statements": [
														{
															"nativeSrc": "17691:26:15",
															"nodeType": "YulAssignment",
															"src": "17691:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "17703:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "17703:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17714:2:15",
																		"nodeType": "YulLiteral",
																		"src": "17714:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17699:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "17699:3:15"
																},
																"nativeSrc": "17699:18:15",
																"nodeType": "YulFunctionCall",
																"src": "17699:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17691:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "17691:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17738:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "17738:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17749:1:15",
																				"nodeType": "YulLiteral",
																				"src": "17749:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17734:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "17734:3:15"
																		},
																		"nativeSrc": "17734:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "17734:17:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "17757:4:15",
																				"nodeType": "YulIdentifier",
																				"src": "17757:4:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "17763:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "17763:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "17753:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "17753:3:15"
																		},
																		"nativeSrc": "17753:20:15",
																		"nodeType": "YulFunctionCall",
																		"src": "17753:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17727:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "17727:6:15"
																},
																"nativeSrc": "17727:47:15",
																"nodeType": "YulFunctionCall",
																"src": "17727:47:15"
															},
															"nativeSrc": "17727:47:15",
															"nodeType": "YulExpressionStatement",
															"src": "17727:47:15"
														},
														{
															"nativeSrc": "17783:139:15",
															"nodeType": "YulAssignment",
															"src": "17783:139:15",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "17917:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "17917:4:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_e5a68e1890c06b08dae31f764e95e8f1a2c25fa5fd06a39f1ed4630ab3d8317c_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "17791:124:15",
																	"nodeType": "YulIdentifier",
																	"src": "17791:124:15"
																},
																"nativeSrc": "17791:131:15",
																"nodeType": "YulFunctionCall",
																"src": "17791:131:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17783:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "17783:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e5a68e1890c06b08dae31f764e95e8f1a2c25fa5fd06a39f1ed4630ab3d8317c__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "17510:419:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "17661:9:15",
														"nodeType": "YulTypedName",
														"src": "17661:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "17676:4:15",
														"nodeType": "YulTypedName",
														"src": "17676:4:15",
														"type": ""
													}
												],
												"src": "17510:419:15"
											},
											{
												"body": {
													"nativeSrc": "17963:152:15",
													"nodeType": "YulBlock",
													"src": "17963:152:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "17980:1:15",
																		"nodeType": "YulLiteral",
																		"src": "17980:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17983:77:15",
																		"nodeType": "YulLiteral",
																		"src": "17983:77:15",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17973:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "17973:6:15"
																},
																"nativeSrc": "17973:88:15",
																"nodeType": "YulFunctionCall",
																"src": "17973:88:15"
															},
															"nativeSrc": "17973:88:15",
															"nodeType": "YulExpressionStatement",
															"src": "17973:88:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "18077:1:15",
																		"nodeType": "YulLiteral",
																		"src": "18077:1:15",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18080:4:15",
																		"nodeType": "YulLiteral",
																		"src": "18080:4:15",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18070:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "18070:6:15"
																},
																"nativeSrc": "18070:15:15",
																"nodeType": "YulFunctionCall",
																"src": "18070:15:15"
															},
															"nativeSrc": "18070:15:15",
															"nodeType": "YulExpressionStatement",
															"src": "18070:15:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "18101:1:15",
																		"nodeType": "YulLiteral",
																		"src": "18101:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18104:4:15",
																		"nodeType": "YulLiteral",
																		"src": "18104:4:15",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "18094:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "18094:6:15"
																},
																"nativeSrc": "18094:15:15",
																"nodeType": "YulFunctionCall",
																"src": "18094:15:15"
															},
															"nativeSrc": "18094:15:15",
															"nodeType": "YulExpressionStatement",
															"src": "18094:15:15"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "17935:180:15",
												"nodeType": "YulFunctionDefinition",
												"src": "17935:180:15"
											},
											{
												"body": {
													"nativeSrc": "18169:362:15",
													"nodeType": "YulBlock",
													"src": "18169:362:15",
													"statements": [
														{
															"nativeSrc": "18179:25:15",
															"nodeType": "YulAssignment",
															"src": "18179:25:15",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "18202:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "18202:1:15"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "18184:17:15",
																	"nodeType": "YulIdentifier",
																	"src": "18184:17:15"
																},
																"nativeSrc": "18184:20:15",
																"nodeType": "YulFunctionCall",
																"src": "18184:20:15"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "18179:1:15",
																	"nodeType": "YulIdentifier",
																	"src": "18179:1:15"
																}
															]
														},
														{
															"nativeSrc": "18213:25:15",
															"nodeType": "YulAssignment",
															"src": "18213:25:15",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "18236:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "18236:1:15"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "18218:17:15",
																	"nodeType": "YulIdentifier",
																	"src": "18218:17:15"
																},
																"nativeSrc": "18218:20:15",
																"nodeType": "YulFunctionCall",
																"src": "18218:20:15"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "18213:1:15",
																	"nodeType": "YulIdentifier",
																	"src": "18213:1:15"
																}
															]
														},
														{
															"nativeSrc": "18247:28:15",
															"nodeType": "YulVariableDeclaration",
															"src": "18247:28:15",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "18270:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "18270:1:15"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "18273:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "18273:1:15"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "18266:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "18266:3:15"
																},
																"nativeSrc": "18266:9:15",
																"nodeType": "YulFunctionCall",
																"src": "18266:9:15"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "18251:11:15",
																	"nodeType": "YulTypedName",
																	"src": "18251:11:15",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "18284:41:15",
															"nodeType": "YulAssignment",
															"src": "18284:41:15",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "18313:11:15",
																		"nodeType": "YulIdentifier",
																		"src": "18313:11:15"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "18295:17:15",
																	"nodeType": "YulIdentifier",
																	"src": "18295:17:15"
																},
																"nativeSrc": "18295:30:15",
																"nodeType": "YulFunctionCall",
																"src": "18295:30:15"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "18284:7:15",
																	"nodeType": "YulIdentifier",
																	"src": "18284:7:15"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "18502:22:15",
																"nodeType": "YulBlock",
																"src": "18502:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "18504:16:15",
																				"nodeType": "YulIdentifier",
																				"src": "18504:16:15"
																			},
																			"nativeSrc": "18504:18:15",
																			"nodeType": "YulFunctionCall",
																			"src": "18504:18:15"
																		},
																		"nativeSrc": "18504:18:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "18504:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "18435:1:15",
																						"nodeType": "YulIdentifier",
																						"src": "18435:1:15"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "18428:6:15",
																					"nodeType": "YulIdentifier",
																					"src": "18428:6:15"
																				},
																				"nativeSrc": "18428:9:15",
																				"nodeType": "YulFunctionCall",
																				"src": "18428:9:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "18458:1:15",
																						"nodeType": "YulIdentifier",
																						"src": "18458:1:15"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "18465:7:15",
																								"nodeType": "YulIdentifier",
																								"src": "18465:7:15"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "18474:1:15",
																								"nodeType": "YulIdentifier",
																								"src": "18474:1:15"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "18461:3:15",
																							"nodeType": "YulIdentifier",
																							"src": "18461:3:15"
																						},
																						"nativeSrc": "18461:15:15",
																						"nodeType": "YulFunctionCall",
																						"src": "18461:15:15"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "18455:2:15",
																					"nodeType": "YulIdentifier",
																					"src": "18455:2:15"
																				},
																				"nativeSrc": "18455:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "18455:22:15"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "18408:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "18408:2:15"
																		},
																		"nativeSrc": "18408:83:15",
																		"nodeType": "YulFunctionCall",
																		"src": "18408:83:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "18388:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "18388:6:15"
																},
																"nativeSrc": "18388:113:15",
																"nodeType": "YulFunctionCall",
																"src": "18388:113:15"
															},
															"nativeSrc": "18385:139:15",
															"nodeType": "YulIf",
															"src": "18385:139:15"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "18121:410:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "18152:1:15",
														"nodeType": "YulTypedName",
														"src": "18152:1:15",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "18155:1:15",
														"nodeType": "YulTypedName",
														"src": "18155:1:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "18161:7:15",
														"nodeType": "YulTypedName",
														"src": "18161:7:15",
														"type": ""
													}
												],
												"src": "18121:410:15"
											},
											{
												"body": {
													"nativeSrc": "18643:61:15",
													"nodeType": "YulBlock",
													"src": "18643:61:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "18665:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "18665:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18673:1:15",
																				"nodeType": "YulLiteral",
																				"src": "18673:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18661:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "18661:3:15"
																		},
																		"nativeSrc": "18661:14:15",
																		"nodeType": "YulFunctionCall",
																		"src": "18661:14:15"
																	},
																	{
																		"hexValue": "616d6f756e74206e6f7420656e6f756768",
																		"kind": "string",
																		"nativeSrc": "18677:19:15",
																		"nodeType": "YulLiteral",
																		"src": "18677:19:15",
																		"type": "",
																		"value": "amount not enough"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18654:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "18654:6:15"
																},
																"nativeSrc": "18654:43:15",
																"nodeType": "YulFunctionCall",
																"src": "18654:43:15"
															},
															"nativeSrc": "18654:43:15",
															"nodeType": "YulExpressionStatement",
															"src": "18654:43:15"
														}
													]
												},
												"name": "store_literal_in_memory_8177479f5ad9c40bafd12e1ed3db40c887baca8cbfff268a90cc65968008dcac",
												"nativeSrc": "18537:167:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "18635:6:15",
														"nodeType": "YulTypedName",
														"src": "18635:6:15",
														"type": ""
													}
												],
												"src": "18537:167:15"
											},
											{
												"body": {
													"nativeSrc": "18856:220:15",
													"nodeType": "YulBlock",
													"src": "18856:220:15",
													"statements": [
														{
															"nativeSrc": "18866:74:15",
															"nodeType": "YulAssignment",
															"src": "18866:74:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18932:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "18932:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18937:2:15",
																		"nodeType": "YulLiteral",
																		"src": "18937:2:15",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "18873:58:15",
																	"nodeType": "YulIdentifier",
																	"src": "18873:58:15"
																},
																"nativeSrc": "18873:67:15",
																"nodeType": "YulFunctionCall",
																"src": "18873:67:15"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "18866:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "18866:3:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19038:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "19038:3:15"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_8177479f5ad9c40bafd12e1ed3db40c887baca8cbfff268a90cc65968008dcac",
																	"nativeSrc": "18949:88:15",
																	"nodeType": "YulIdentifier",
																	"src": "18949:88:15"
																},
																"nativeSrc": "18949:93:15",
																"nodeType": "YulFunctionCall",
																"src": "18949:93:15"
															},
															"nativeSrc": "18949:93:15",
															"nodeType": "YulExpressionStatement",
															"src": "18949:93:15"
														},
														{
															"nativeSrc": "19051:19:15",
															"nodeType": "YulAssignment",
															"src": "19051:19:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19062:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "19062:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19067:2:15",
																		"nodeType": "YulLiteral",
																		"src": "19067:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19058:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "19058:3:15"
																},
																"nativeSrc": "19058:12:15",
																"nodeType": "YulFunctionCall",
																"src": "19058:12:15"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "19051:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "19051:3:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_8177479f5ad9c40bafd12e1ed3db40c887baca8cbfff268a90cc65968008dcac_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "18710:366:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "18844:3:15",
														"nodeType": "YulTypedName",
														"src": "18844:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "18852:3:15",
														"nodeType": "YulTypedName",
														"src": "18852:3:15",
														"type": ""
													}
												],
												"src": "18710:366:15"
											},
											{
												"body": {
													"nativeSrc": "19253:248:15",
													"nodeType": "YulBlock",
													"src": "19253:248:15",
													"statements": [
														{
															"nativeSrc": "19263:26:15",
															"nodeType": "YulAssignment",
															"src": "19263:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "19275:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "19275:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19286:2:15",
																		"nodeType": "YulLiteral",
																		"src": "19286:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19271:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "19271:3:15"
																},
																"nativeSrc": "19271:18:15",
																"nodeType": "YulFunctionCall",
																"src": "19271:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19263:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "19263:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19310:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "19310:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19321:1:15",
																				"nodeType": "YulLiteral",
																				"src": "19321:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19306:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "19306:3:15"
																		},
																		"nativeSrc": "19306:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "19306:17:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "19329:4:15",
																				"nodeType": "YulIdentifier",
																				"src": "19329:4:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "19335:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "19335:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "19325:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "19325:3:15"
																		},
																		"nativeSrc": "19325:20:15",
																		"nodeType": "YulFunctionCall",
																		"src": "19325:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19299:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "19299:6:15"
																},
																"nativeSrc": "19299:47:15",
																"nodeType": "YulFunctionCall",
																"src": "19299:47:15"
															},
															"nativeSrc": "19299:47:15",
															"nodeType": "YulExpressionStatement",
															"src": "19299:47:15"
														},
														{
															"nativeSrc": "19355:139:15",
															"nodeType": "YulAssignment",
															"src": "19355:139:15",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "19489:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "19489:4:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_8177479f5ad9c40bafd12e1ed3db40c887baca8cbfff268a90cc65968008dcac_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "19363:124:15",
																	"nodeType": "YulIdentifier",
																	"src": "19363:124:15"
																},
																"nativeSrc": "19363:131:15",
																"nodeType": "YulFunctionCall",
																"src": "19363:131:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19355:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "19355:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8177479f5ad9c40bafd12e1ed3db40c887baca8cbfff268a90cc65968008dcac__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "19082:419:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "19233:9:15",
														"nodeType": "YulTypedName",
														"src": "19233:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "19248:4:15",
														"nodeType": "YulTypedName",
														"src": "19248:4:15",
														"type": ""
													}
												],
												"src": "19082:419:15"
											},
											{
												"body": {
													"nativeSrc": "19570:80:15",
													"nodeType": "YulBlock",
													"src": "19570:80:15",
													"statements": [
														{
															"nativeSrc": "19580:22:15",
															"nodeType": "YulAssignment",
															"src": "19580:22:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "19595:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "19595:6:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "19589:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "19589:5:15"
																},
																"nativeSrc": "19589:13:15",
																"nodeType": "YulFunctionCall",
																"src": "19589:13:15"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "19580:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "19580:5:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "19638:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "19638:5:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "19611:26:15",
																	"nodeType": "YulIdentifier",
																	"src": "19611:26:15"
																},
																"nativeSrc": "19611:33:15",
																"nodeType": "YulFunctionCall",
																"src": "19611:33:15"
															},
															"nativeSrc": "19611:33:15",
															"nodeType": "YulExpressionStatement",
															"src": "19611:33:15"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "19507:143:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "19548:6:15",
														"nodeType": "YulTypedName",
														"src": "19548:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "19556:3:15",
														"nodeType": "YulTypedName",
														"src": "19556:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "19564:5:15",
														"nodeType": "YulTypedName",
														"src": "19564:5:15",
														"type": ""
													}
												],
												"src": "19507:143:15"
											},
											{
												"body": {
													"nativeSrc": "19733:274:15",
													"nodeType": "YulBlock",
													"src": "19733:274:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "19779:83:15",
																"nodeType": "YulBlock",
																"src": "19779:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "19781:77:15",
																				"nodeType": "YulIdentifier",
																				"src": "19781:77:15"
																			},
																			"nativeSrc": "19781:79:15",
																			"nodeType": "YulFunctionCall",
																			"src": "19781:79:15"
																		},
																		"nativeSrc": "19781:79:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "19781:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "19754:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "19754:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "19763:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "19763:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "19750:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "19750:3:15"
																		},
																		"nativeSrc": "19750:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "19750:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19775:2:15",
																		"nodeType": "YulLiteral",
																		"src": "19775:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "19746:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "19746:3:15"
																},
																"nativeSrc": "19746:32:15",
																"nodeType": "YulFunctionCall",
																"src": "19746:32:15"
															},
															"nativeSrc": "19743:119:15",
															"nodeType": "YulIf",
															"src": "19743:119:15"
														},
														{
															"nativeSrc": "19872:128:15",
															"nodeType": "YulBlock",
															"src": "19872:128:15",
															"statements": [
																{
																	"nativeSrc": "19887:15:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "19887:15:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "19901:1:15",
																		"nodeType": "YulLiteral",
																		"src": "19901:1:15",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "19891:6:15",
																			"nodeType": "YulTypedName",
																			"src": "19891:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "19916:74:15",
																	"nodeType": "YulAssignment",
																	"src": "19916:74:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "19962:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "19962:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "19973:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "19973:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "19958:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "19958:3:15"
																				},
																				"nativeSrc": "19958:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "19958:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "19982:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "19982:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "19926:31:15",
																			"nodeType": "YulIdentifier",
																			"src": "19926:31:15"
																		},
																		"nativeSrc": "19926:64:15",
																		"nodeType": "YulFunctionCall",
																		"src": "19926:64:15"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "19916:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "19916:6:15"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "19656:351:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "19703:9:15",
														"nodeType": "YulTypedName",
														"src": "19703:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "19714:7:15",
														"nodeType": "YulTypedName",
														"src": "19714:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "19726:6:15",
														"nodeType": "YulTypedName",
														"src": "19726:6:15",
														"type": ""
													}
												],
												"src": "19656:351:15"
											},
											{
												"body": {
													"nativeSrc": "20119:65:15",
													"nodeType": "YulBlock",
													"src": "20119:65:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "20141:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "20141:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20149:1:15",
																				"nodeType": "YulLiteral",
																				"src": "20149:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20137:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "20137:3:15"
																		},
																		"nativeSrc": "20137:14:15",
																		"nodeType": "YulFunctionCall",
																		"src": "20137:14:15"
																	},
																	{
																		"hexValue": "62616c616e6365206973206e6f7420656e6f756768",
																		"kind": "string",
																		"nativeSrc": "20153:23:15",
																		"nodeType": "YulLiteral",
																		"src": "20153:23:15",
																		"type": "",
																		"value": "balance is not enough"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20130:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "20130:6:15"
																},
																"nativeSrc": "20130:47:15",
																"nodeType": "YulFunctionCall",
																"src": "20130:47:15"
															},
															"nativeSrc": "20130:47:15",
															"nodeType": "YulExpressionStatement",
															"src": "20130:47:15"
														}
													]
												},
												"name": "store_literal_in_memory_e111634b261d696158fb58291ba33104cff741f79f092956e352cd551909642b",
												"nativeSrc": "20013:171:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "20111:6:15",
														"nodeType": "YulTypedName",
														"src": "20111:6:15",
														"type": ""
													}
												],
												"src": "20013:171:15"
											},
											{
												"body": {
													"nativeSrc": "20336:220:15",
													"nodeType": "YulBlock",
													"src": "20336:220:15",
													"statements": [
														{
															"nativeSrc": "20346:74:15",
															"nodeType": "YulAssignment",
															"src": "20346:74:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20412:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "20412:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20417:2:15",
																		"nodeType": "YulLiteral",
																		"src": "20417:2:15",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "20353:58:15",
																	"nodeType": "YulIdentifier",
																	"src": "20353:58:15"
																},
																"nativeSrc": "20353:67:15",
																"nodeType": "YulFunctionCall",
																"src": "20353:67:15"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "20346:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "20346:3:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20518:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "20518:3:15"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_e111634b261d696158fb58291ba33104cff741f79f092956e352cd551909642b",
																	"nativeSrc": "20429:88:15",
																	"nodeType": "YulIdentifier",
																	"src": "20429:88:15"
																},
																"nativeSrc": "20429:93:15",
																"nodeType": "YulFunctionCall",
																"src": "20429:93:15"
															},
															"nativeSrc": "20429:93:15",
															"nodeType": "YulExpressionStatement",
															"src": "20429:93:15"
														},
														{
															"nativeSrc": "20531:19:15",
															"nodeType": "YulAssignment",
															"src": "20531:19:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20542:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "20542:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20547:2:15",
																		"nodeType": "YulLiteral",
																		"src": "20547:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20538:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "20538:3:15"
																},
																"nativeSrc": "20538:12:15",
																"nodeType": "YulFunctionCall",
																"src": "20538:12:15"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "20531:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "20531:3:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_e111634b261d696158fb58291ba33104cff741f79f092956e352cd551909642b_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "20190:366:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "20324:3:15",
														"nodeType": "YulTypedName",
														"src": "20324:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "20332:3:15",
														"nodeType": "YulTypedName",
														"src": "20332:3:15",
														"type": ""
													}
												],
												"src": "20190:366:15"
											},
											{
												"body": {
													"nativeSrc": "20733:248:15",
													"nodeType": "YulBlock",
													"src": "20733:248:15",
													"statements": [
														{
															"nativeSrc": "20743:26:15",
															"nodeType": "YulAssignment",
															"src": "20743:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "20755:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "20755:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20766:2:15",
																		"nodeType": "YulLiteral",
																		"src": "20766:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20751:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "20751:3:15"
																},
																"nativeSrc": "20751:18:15",
																"nodeType": "YulFunctionCall",
																"src": "20751:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20743:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "20743:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20790:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "20790:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20801:1:15",
																				"nodeType": "YulLiteral",
																				"src": "20801:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20786:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "20786:3:15"
																		},
																		"nativeSrc": "20786:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "20786:17:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "20809:4:15",
																				"nodeType": "YulIdentifier",
																				"src": "20809:4:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "20815:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "20815:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "20805:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "20805:3:15"
																		},
																		"nativeSrc": "20805:20:15",
																		"nodeType": "YulFunctionCall",
																		"src": "20805:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20779:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "20779:6:15"
																},
																"nativeSrc": "20779:47:15",
																"nodeType": "YulFunctionCall",
																"src": "20779:47:15"
															},
															"nativeSrc": "20779:47:15",
															"nodeType": "YulExpressionStatement",
															"src": "20779:47:15"
														},
														{
															"nativeSrc": "20835:139:15",
															"nodeType": "YulAssignment",
															"src": "20835:139:15",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "20969:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "20969:4:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_e111634b261d696158fb58291ba33104cff741f79f092956e352cd551909642b_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "20843:124:15",
																	"nodeType": "YulIdentifier",
																	"src": "20843:124:15"
																},
																"nativeSrc": "20843:131:15",
																"nodeType": "YulFunctionCall",
																"src": "20843:131:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20835:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "20835:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e111634b261d696158fb58291ba33104cff741f79f092956e352cd551909642b__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "20562:419:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "20713:9:15",
														"nodeType": "YulTypedName",
														"src": "20713:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "20728:4:15",
														"nodeType": "YulTypedName",
														"src": "20728:4:15",
														"type": ""
													}
												],
												"src": "20562:419:15"
											},
											{
												"body": {
													"nativeSrc": "21093:62:15",
													"nodeType": "YulBlock",
													"src": "21093:62:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "21115:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "21115:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21123:1:15",
																				"nodeType": "YulLiteral",
																				"src": "21123:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21111:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "21111:3:15"
																		},
																		"nativeSrc": "21111:14:15",
																		"nodeType": "YulFunctionCall",
																		"src": "21111:14:15"
																	},
																	{
																		"hexValue": "696e73756666696369656e7420746f6b656e",
																		"kind": "string",
																		"nativeSrc": "21127:20:15",
																		"nodeType": "YulLiteral",
																		"src": "21127:20:15",
																		"type": "",
																		"value": "insufficient token"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21104:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "21104:6:15"
																},
																"nativeSrc": "21104:44:15",
																"nodeType": "YulFunctionCall",
																"src": "21104:44:15"
															},
															"nativeSrc": "21104:44:15",
															"nodeType": "YulExpressionStatement",
															"src": "21104:44:15"
														}
													]
												},
												"name": "store_literal_in_memory_49886143fed4f67f7143b146962ea8b8925c2fdc5341127d3966dea0fe25a8b9",
												"nativeSrc": "20987:168:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "21085:6:15",
														"nodeType": "YulTypedName",
														"src": "21085:6:15",
														"type": ""
													}
												],
												"src": "20987:168:15"
											},
											{
												"body": {
													"nativeSrc": "21307:220:15",
													"nodeType": "YulBlock",
													"src": "21307:220:15",
													"statements": [
														{
															"nativeSrc": "21317:74:15",
															"nodeType": "YulAssignment",
															"src": "21317:74:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "21383:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "21383:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21388:2:15",
																		"nodeType": "YulLiteral",
																		"src": "21388:2:15",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "21324:58:15",
																	"nodeType": "YulIdentifier",
																	"src": "21324:58:15"
																},
																"nativeSrc": "21324:67:15",
																"nodeType": "YulFunctionCall",
																"src": "21324:67:15"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "21317:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "21317:3:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "21489:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "21489:3:15"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_49886143fed4f67f7143b146962ea8b8925c2fdc5341127d3966dea0fe25a8b9",
																	"nativeSrc": "21400:88:15",
																	"nodeType": "YulIdentifier",
																	"src": "21400:88:15"
																},
																"nativeSrc": "21400:93:15",
																"nodeType": "YulFunctionCall",
																"src": "21400:93:15"
															},
															"nativeSrc": "21400:93:15",
															"nodeType": "YulExpressionStatement",
															"src": "21400:93:15"
														},
														{
															"nativeSrc": "21502:19:15",
															"nodeType": "YulAssignment",
															"src": "21502:19:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "21513:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "21513:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21518:2:15",
																		"nodeType": "YulLiteral",
																		"src": "21518:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "21509:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "21509:3:15"
																},
																"nativeSrc": "21509:12:15",
																"nodeType": "YulFunctionCall",
																"src": "21509:12:15"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "21502:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "21502:3:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_49886143fed4f67f7143b146962ea8b8925c2fdc5341127d3966dea0fe25a8b9_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "21161:366:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "21295:3:15",
														"nodeType": "YulTypedName",
														"src": "21295:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "21303:3:15",
														"nodeType": "YulTypedName",
														"src": "21303:3:15",
														"type": ""
													}
												],
												"src": "21161:366:15"
											},
											{
												"body": {
													"nativeSrc": "21704:248:15",
													"nodeType": "YulBlock",
													"src": "21704:248:15",
													"statements": [
														{
															"nativeSrc": "21714:26:15",
															"nodeType": "YulAssignment",
															"src": "21714:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "21726:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "21726:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21737:2:15",
																		"nodeType": "YulLiteral",
																		"src": "21737:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "21722:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "21722:3:15"
																},
																"nativeSrc": "21722:18:15",
																"nodeType": "YulFunctionCall",
																"src": "21722:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "21714:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "21714:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "21761:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "21761:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21772:1:15",
																				"nodeType": "YulLiteral",
																				"src": "21772:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21757:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "21757:3:15"
																		},
																		"nativeSrc": "21757:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "21757:17:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "21780:4:15",
																				"nodeType": "YulIdentifier",
																				"src": "21780:4:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "21786:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "21786:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "21776:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "21776:3:15"
																		},
																		"nativeSrc": "21776:20:15",
																		"nodeType": "YulFunctionCall",
																		"src": "21776:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21750:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "21750:6:15"
																},
																"nativeSrc": "21750:47:15",
																"nodeType": "YulFunctionCall",
																"src": "21750:47:15"
															},
															"nativeSrc": "21750:47:15",
															"nodeType": "YulExpressionStatement",
															"src": "21750:47:15"
														},
														{
															"nativeSrc": "21806:139:15",
															"nodeType": "YulAssignment",
															"src": "21806:139:15",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "21940:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "21940:4:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_49886143fed4f67f7143b146962ea8b8925c2fdc5341127d3966dea0fe25a8b9_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "21814:124:15",
																	"nodeType": "YulIdentifier",
																	"src": "21814:124:15"
																},
																"nativeSrc": "21814:131:15",
																"nodeType": "YulFunctionCall",
																"src": "21814:131:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "21806:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "21806:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_49886143fed4f67f7143b146962ea8b8925c2fdc5341127d3966dea0fe25a8b9__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "21533:419:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "21684:9:15",
														"nodeType": "YulTypedName",
														"src": "21684:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "21699:4:15",
														"nodeType": "YulTypedName",
														"src": "21699:4:15",
														"type": ""
													}
												],
												"src": "21533:419:15"
											},
											{
												"body": {
													"nativeSrc": "22084:206:15",
													"nodeType": "YulBlock",
													"src": "22084:206:15",
													"statements": [
														{
															"nativeSrc": "22094:26:15",
															"nodeType": "YulAssignment",
															"src": "22094:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "22106:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "22106:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22117:2:15",
																		"nodeType": "YulLiteral",
																		"src": "22117:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "22102:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "22102:3:15"
																},
																"nativeSrc": "22102:18:15",
																"nodeType": "YulFunctionCall",
																"src": "22102:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "22094:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "22094:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "22174:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "22174:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "22187:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "22187:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22198:1:15",
																				"nodeType": "YulLiteral",
																				"src": "22198:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22183:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "22183:3:15"
																		},
																		"nativeSrc": "22183:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "22183:17:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "22130:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "22130:43:15"
																},
																"nativeSrc": "22130:71:15",
																"nodeType": "YulFunctionCall",
																"src": "22130:71:15"
															},
															"nativeSrc": "22130:71:15",
															"nodeType": "YulExpressionStatement",
															"src": "22130:71:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "22255:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "22255:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "22268:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "22268:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22279:2:15",
																				"nodeType": "YulLiteral",
																				"src": "22279:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22264:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "22264:3:15"
																		},
																		"nativeSrc": "22264:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "22264:18:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "22211:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "22211:43:15"
																},
																"nativeSrc": "22211:72:15",
																"nodeType": "YulFunctionCall",
																"src": "22211:72:15"
															},
															"nativeSrc": "22211:72:15",
															"nodeType": "YulExpressionStatement",
															"src": "22211:72:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
												"nativeSrc": "21958:332:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "22048:9:15",
														"nodeType": "YulTypedName",
														"src": "22048:9:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "22060:6:15",
														"nodeType": "YulTypedName",
														"src": "22060:6:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "22068:6:15",
														"nodeType": "YulTypedName",
														"src": "22068:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "22079:4:15",
														"nodeType": "YulTypedName",
														"src": "22079:4:15",
														"type": ""
													}
												],
												"src": "21958:332:15"
											},
											{
												"body": {
													"nativeSrc": "22402:71:15",
													"nodeType": "YulBlock",
													"src": "22402:71:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "22424:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "22424:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22432:1:15",
																				"nodeType": "YulLiteral",
																				"src": "22432:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22420:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "22420:3:15"
																		},
																		"nativeSrc": "22420:14:15",
																		"nodeType": "YulFunctionCall",
																		"src": "22420:14:15"
																	},
																	{
																		"hexValue": "696e73756666696369656e7420746f6b656e20617070726f76616c",
																		"kind": "string",
																		"nativeSrc": "22436:29:15",
																		"nodeType": "YulLiteral",
																		"src": "22436:29:15",
																		"type": "",
																		"value": "insufficient token approval"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "22413:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "22413:6:15"
																},
																"nativeSrc": "22413:53:15",
																"nodeType": "YulFunctionCall",
																"src": "22413:53:15"
															},
															"nativeSrc": "22413:53:15",
															"nodeType": "YulExpressionStatement",
															"src": "22413:53:15"
														}
													]
												},
												"name": "store_literal_in_memory_12559359288c4fce39d17fa0f1324f72a3da45512a522d92ebf3218fb243f801",
												"nativeSrc": "22296:177:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "22394:6:15",
														"nodeType": "YulTypedName",
														"src": "22394:6:15",
														"type": ""
													}
												],
												"src": "22296:177:15"
											},
											{
												"body": {
													"nativeSrc": "22625:220:15",
													"nodeType": "YulBlock",
													"src": "22625:220:15",
													"statements": [
														{
															"nativeSrc": "22635:74:15",
															"nodeType": "YulAssignment",
															"src": "22635:74:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "22701:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "22701:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22706:2:15",
																		"nodeType": "YulLiteral",
																		"src": "22706:2:15",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "22642:58:15",
																	"nodeType": "YulIdentifier",
																	"src": "22642:58:15"
																},
																"nativeSrc": "22642:67:15",
																"nodeType": "YulFunctionCall",
																"src": "22642:67:15"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "22635:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "22635:3:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "22807:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "22807:3:15"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_12559359288c4fce39d17fa0f1324f72a3da45512a522d92ebf3218fb243f801",
																	"nativeSrc": "22718:88:15",
																	"nodeType": "YulIdentifier",
																	"src": "22718:88:15"
																},
																"nativeSrc": "22718:93:15",
																"nodeType": "YulFunctionCall",
																"src": "22718:93:15"
															},
															"nativeSrc": "22718:93:15",
															"nodeType": "YulExpressionStatement",
															"src": "22718:93:15"
														},
														{
															"nativeSrc": "22820:19:15",
															"nodeType": "YulAssignment",
															"src": "22820:19:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "22831:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "22831:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22836:2:15",
																		"nodeType": "YulLiteral",
																		"src": "22836:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "22827:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "22827:3:15"
																},
																"nativeSrc": "22827:12:15",
																"nodeType": "YulFunctionCall",
																"src": "22827:12:15"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "22820:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "22820:3:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_12559359288c4fce39d17fa0f1324f72a3da45512a522d92ebf3218fb243f801_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "22479:366:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "22613:3:15",
														"nodeType": "YulTypedName",
														"src": "22613:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "22621:3:15",
														"nodeType": "YulTypedName",
														"src": "22621:3:15",
														"type": ""
													}
												],
												"src": "22479:366:15"
											},
											{
												"body": {
													"nativeSrc": "23022:248:15",
													"nodeType": "YulBlock",
													"src": "23022:248:15",
													"statements": [
														{
															"nativeSrc": "23032:26:15",
															"nodeType": "YulAssignment",
															"src": "23032:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "23044:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "23044:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23055:2:15",
																		"nodeType": "YulLiteral",
																		"src": "23055:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "23040:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "23040:3:15"
																},
																"nativeSrc": "23040:18:15",
																"nodeType": "YulFunctionCall",
																"src": "23040:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "23032:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "23032:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "23079:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "23079:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "23090:1:15",
																				"nodeType": "YulLiteral",
																				"src": "23090:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "23075:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "23075:3:15"
																		},
																		"nativeSrc": "23075:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "23075:17:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "23098:4:15",
																				"nodeType": "YulIdentifier",
																				"src": "23098:4:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "23104:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "23104:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "23094:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "23094:3:15"
																		},
																		"nativeSrc": "23094:20:15",
																		"nodeType": "YulFunctionCall",
																		"src": "23094:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "23068:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "23068:6:15"
																},
																"nativeSrc": "23068:47:15",
																"nodeType": "YulFunctionCall",
																"src": "23068:47:15"
															},
															"nativeSrc": "23068:47:15",
															"nodeType": "YulExpressionStatement",
															"src": "23068:47:15"
														},
														{
															"nativeSrc": "23124:139:15",
															"nodeType": "YulAssignment",
															"src": "23124:139:15",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "23258:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "23258:4:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_12559359288c4fce39d17fa0f1324f72a3da45512a522d92ebf3218fb243f801_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "23132:124:15",
																	"nodeType": "YulIdentifier",
																	"src": "23132:124:15"
																},
																"nativeSrc": "23132:131:15",
																"nodeType": "YulFunctionCall",
																"src": "23132:131:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "23124:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "23124:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_12559359288c4fce39d17fa0f1324f72a3da45512a522d92ebf3218fb243f801__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "22851:419:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "23002:9:15",
														"nodeType": "YulTypedName",
														"src": "23002:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "23017:4:15",
														"nodeType": "YulTypedName",
														"src": "23017:4:15",
														"type": ""
													}
												],
												"src": "22851:419:15"
											},
											{
												"body": {
													"nativeSrc": "23334:80:15",
													"nodeType": "YulBlock",
													"src": "23334:80:15",
													"statements": [
														{
															"nativeSrc": "23344:64:15",
															"nodeType": "YulAssignment",
															"src": "23344:64:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "23400:5:15",
																						"nodeType": "YulIdentifier",
																						"src": "23400:5:15"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint8",
																					"nativeSrc": "23384:15:15",
																					"nodeType": "YulIdentifier",
																					"src": "23384:15:15"
																				},
																				"nativeSrc": "23384:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "23384:22:15"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "23375:8:15",
																			"nodeType": "YulIdentifier",
																			"src": "23375:8:15"
																		},
																		"nativeSrc": "23375:32:15",
																		"nodeType": "YulFunctionCall",
																		"src": "23375:32:15"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "23357:17:15",
																	"nodeType": "YulIdentifier",
																	"src": "23357:17:15"
																},
																"nativeSrc": "23357:51:15",
																"nodeType": "YulFunctionCall",
																"src": "23357:51:15"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "23344:9:15",
																	"nodeType": "YulIdentifier",
																	"src": "23344:9:15"
																}
															]
														}
													]
												},
												"name": "convert_t_uint8_to_t_uint256",
												"nativeSrc": "23276:138:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "23314:5:15",
														"nodeType": "YulTypedName",
														"src": "23314:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "23324:9:15",
														"nodeType": "YulTypedName",
														"src": "23324:9:15",
														"type": ""
													}
												],
												"src": "23276:138:15"
											},
											{
												"body": {
													"nativeSrc": "23483:64:15",
													"nodeType": "YulBlock",
													"src": "23483:64:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "23500:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "23500:3:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "23534:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "23534:5:15"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_uint8_to_t_uint256",
																			"nativeSrc": "23505:28:15",
																			"nodeType": "YulIdentifier",
																			"src": "23505:28:15"
																		},
																		"nativeSrc": "23505:35:15",
																		"nodeType": "YulFunctionCall",
																		"src": "23505:35:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "23493:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "23493:6:15"
																},
																"nativeSrc": "23493:48:15",
																"nodeType": "YulFunctionCall",
																"src": "23493:48:15"
															},
															"nativeSrc": "23493:48:15",
															"nodeType": "YulExpressionStatement",
															"src": "23493:48:15"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint256_fromStack",
												"nativeSrc": "23420:127:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "23471:5:15",
														"nodeType": "YulTypedName",
														"src": "23471:5:15",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "23478:3:15",
														"nodeType": "YulTypedName",
														"src": "23478:3:15",
														"type": ""
													}
												],
												"src": "23420:127:15"
											},
											{
												"body": {
													"nativeSrc": "23648:73:15",
													"nodeType": "YulBlock",
													"src": "23648:73:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "23665:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "23665:3:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "23670:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "23670:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "23658:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "23658:6:15"
																},
																"nativeSrc": "23658:19:15",
																"nodeType": "YulFunctionCall",
																"src": "23658:19:15"
															},
															"nativeSrc": "23658:19:15",
															"nodeType": "YulExpressionStatement",
															"src": "23658:19:15"
														},
														{
															"nativeSrc": "23686:29:15",
															"nodeType": "YulAssignment",
															"src": "23686:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "23705:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "23705:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23710:4:15",
																		"nodeType": "YulLiteral",
																		"src": "23710:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "23701:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "23701:3:15"
																},
																"nativeSrc": "23701:14:15",
																"nodeType": "YulFunctionCall",
																"src": "23701:14:15"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "23686:11:15",
																	"nodeType": "YulIdentifier",
																	"src": "23686:11:15"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
												"nativeSrc": "23553:168:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "23620:3:15",
														"nodeType": "YulTypedName",
														"src": "23620:3:15",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "23625:6:15",
														"nodeType": "YulTypedName",
														"src": "23625:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "23636:11:15",
														"nodeType": "YulTypedName",
														"src": "23636:11:15",
														"type": ""
													}
												],
												"src": "23553:168:15"
											},
											{
												"body": {
													"nativeSrc": "23872:217:15",
													"nodeType": "YulBlock",
													"src": "23872:217:15",
													"statements": [
														{
															"nativeSrc": "23882:72:15",
															"nodeType": "YulAssignment",
															"src": "23882:72:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "23947:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "23947:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23952:1:15",
																		"nodeType": "YulLiteral",
																		"src": "23952:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
																	"nativeSrc": "23889:57:15",
																	"nodeType": "YulIdentifier",
																	"src": "23889:57:15"
																},
																"nativeSrc": "23889:65:15",
																"nodeType": "YulFunctionCall",
																"src": "23889:65:15"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "23882:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "23882:3:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "24052:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "24052:3:15"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"nativeSrc": "23963:88:15",
																	"nodeType": "YulIdentifier",
																	"src": "23963:88:15"
																},
																"nativeSrc": "23963:93:15",
																"nodeType": "YulFunctionCall",
																"src": "23963:93:15"
															},
															"nativeSrc": "23963:93:15",
															"nodeType": "YulExpressionStatement",
															"src": "23963:93:15"
														},
														{
															"nativeSrc": "24065:18:15",
															"nodeType": "YulAssignment",
															"src": "24065:18:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "24076:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "24076:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "24081:1:15",
																		"nodeType": "YulLiteral",
																		"src": "24081:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "24072:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "24072:3:15"
																},
																"nativeSrc": "24072:11:15",
																"nodeType": "YulFunctionCall",
																"src": "24072:11:15"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "24065:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "24065:3:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_fromStack",
												"nativeSrc": "23727:362:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "23860:3:15",
														"nodeType": "YulTypedName",
														"src": "23860:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "23868:3:15",
														"nodeType": "YulTypedName",
														"src": "23868:3:15",
														"type": ""
													}
												],
												"src": "23727:362:15"
											},
											{
												"body": {
													"nativeSrc": "24375:575:15",
													"nodeType": "YulBlock",
													"src": "24375:575:15",
													"statements": [
														{
															"nativeSrc": "24385:27:15",
															"nodeType": "YulAssignment",
															"src": "24385:27:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "24397:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "24397:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "24408:3:15",
																		"nodeType": "YulLiteral",
																		"src": "24408:3:15",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "24393:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "24393:3:15"
																},
																"nativeSrc": "24393:19:15",
																"nodeType": "YulFunctionCall",
																"src": "24393:19:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "24385:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "24385:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "24466:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "24466:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "24479:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "24479:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "24490:1:15",
																				"nodeType": "YulLiteral",
																				"src": "24490:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "24475:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "24475:3:15"
																		},
																		"nativeSrc": "24475:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "24475:17:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "24422:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "24422:43:15"
																},
																"nativeSrc": "24422:71:15",
																"nodeType": "YulFunctionCall",
																"src": "24422:71:15"
															},
															"nativeSrc": "24422:71:15",
															"nodeType": "YulExpressionStatement",
															"src": "24422:71:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "24547:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "24547:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "24560:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "24560:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "24571:2:15",
																				"nodeType": "YulLiteral",
																				"src": "24571:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "24556:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "24556:3:15"
																		},
																		"nativeSrc": "24556:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "24556:18:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "24503:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "24503:43:15"
																},
																"nativeSrc": "24503:72:15",
																"nodeType": "YulFunctionCall",
																"src": "24503:72:15"
															},
															"nativeSrc": "24503:72:15",
															"nodeType": "YulExpressionStatement",
															"src": "24503:72:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "24629:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "24629:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "24642:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "24642:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "24653:2:15",
																				"nodeType": "YulLiteral",
																				"src": "24653:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "24638:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "24638:3:15"
																		},
																		"nativeSrc": "24638:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "24638:18:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "24585:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "24585:43:15"
																},
																"nativeSrc": "24585:72:15",
																"nodeType": "YulFunctionCall",
																"src": "24585:72:15"
															},
															"nativeSrc": "24585:72:15",
															"nodeType": "YulExpressionStatement",
															"src": "24585:72:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "24709:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "24709:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "24722:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "24722:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "24733:2:15",
																				"nodeType": "YulLiteral",
																				"src": "24733:2:15",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "24718:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "24718:3:15"
																		},
																		"nativeSrc": "24718:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "24718:18:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint256_fromStack",
																	"nativeSrc": "24667:41:15",
																	"nodeType": "YulIdentifier",
																	"src": "24667:41:15"
																},
																"nativeSrc": "24667:70:15",
																"nodeType": "YulFunctionCall",
																"src": "24667:70:15"
															},
															"nativeSrc": "24667:70:15",
															"nodeType": "YulExpressionStatement",
															"src": "24667:70:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "24758:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "24758:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "24769:3:15",
																				"nodeType": "YulLiteral",
																				"src": "24769:3:15",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "24754:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "24754:3:15"
																		},
																		"nativeSrc": "24754:19:15",
																		"nodeType": "YulFunctionCall",
																		"src": "24754:19:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "24779:4:15",
																				"nodeType": "YulIdentifier",
																				"src": "24779:4:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "24785:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "24785:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "24775:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "24775:3:15"
																		},
																		"nativeSrc": "24775:20:15",
																		"nodeType": "YulFunctionCall",
																		"src": "24775:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "24747:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "24747:6:15"
																},
																"nativeSrc": "24747:49:15",
																"nodeType": "YulFunctionCall",
																"src": "24747:49:15"
															},
															"nativeSrc": "24747:49:15",
															"nodeType": "YulExpressionStatement",
															"src": "24747:49:15"
														},
														{
															"nativeSrc": "24805:138:15",
															"nodeType": "YulAssignment",
															"src": "24805:138:15",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "24938:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "24938:4:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_fromStack",
																	"nativeSrc": "24813:123:15",
																	"nodeType": "YulIdentifier",
																	"src": "24813:123:15"
																},
																"nativeSrc": "24813:130:15",
																"nodeType": "YulFunctionCall",
																"src": "24813:130:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "24805:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "24805:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_uint8_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nativeSrc": "24095:855:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "24323:9:15",
														"nodeType": "YulTypedName",
														"src": "24323:9:15",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "24335:6:15",
														"nodeType": "YulTypedName",
														"src": "24335:6:15",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "24343:6:15",
														"nodeType": "YulTypedName",
														"src": "24343:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "24351:6:15",
														"nodeType": "YulTypedName",
														"src": "24351:6:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "24359:6:15",
														"nodeType": "YulTypedName",
														"src": "24359:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "24370:4:15",
														"nodeType": "YulTypedName",
														"src": "24370:4:15",
														"type": ""
													}
												],
												"src": "24095:855:15"
											},
											{
												"body": {
													"nativeSrc": "25017:51:15",
													"nodeType": "YulBlock",
													"src": "25017:51:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "25034:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "25034:3:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "25055:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "25055:5:15"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "25039:15:15",
																			"nodeType": "YulIdentifier",
																			"src": "25039:15:15"
																		},
																		"nativeSrc": "25039:22:15",
																		"nodeType": "YulFunctionCall",
																		"src": "25039:22:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "25027:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "25027:6:15"
																},
																"nativeSrc": "25027:35:15",
																"nodeType": "YulFunctionCall",
																"src": "25027:35:15"
															},
															"nativeSrc": "25027:35:15",
															"nodeType": "YulExpressionStatement",
															"src": "25027:35:15"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "24956:112:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "25005:5:15",
														"nodeType": "YulTypedName",
														"src": "25005:5:15",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "25012:3:15",
														"nodeType": "YulTypedName",
														"src": "25012:3:15",
														"type": ""
													}
												],
												"src": "24956:112:15"
											},
											{
												"body": {
													"nativeSrc": "25252:367:15",
													"nodeType": "YulBlock",
													"src": "25252:367:15",
													"statements": [
														{
															"nativeSrc": "25262:27:15",
															"nodeType": "YulAssignment",
															"src": "25262:27:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "25274:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "25274:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "25285:3:15",
																		"nodeType": "YulLiteral",
																		"src": "25285:3:15",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "25270:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "25270:3:15"
																},
																"nativeSrc": "25270:19:15",
																"nodeType": "YulFunctionCall",
																"src": "25270:19:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "25262:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "25262:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "25343:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "25343:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "25356:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "25356:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "25367:1:15",
																				"nodeType": "YulLiteral",
																				"src": "25367:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "25352:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "25352:3:15"
																		},
																		"nativeSrc": "25352:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "25352:17:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "25299:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "25299:43:15"
																},
																"nativeSrc": "25299:71:15",
																"nodeType": "YulFunctionCall",
																"src": "25299:71:15"
															},
															"nativeSrc": "25299:71:15",
															"nodeType": "YulExpressionStatement",
															"src": "25299:71:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "25424:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "25424:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "25437:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "25437:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "25448:2:15",
																				"nodeType": "YulLiteral",
																				"src": "25448:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "25433:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "25433:3:15"
																		},
																		"nativeSrc": "25433:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "25433:18:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "25380:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "25380:43:15"
																},
																"nativeSrc": "25380:72:15",
																"nodeType": "YulFunctionCall",
																"src": "25380:72:15"
															},
															"nativeSrc": "25380:72:15",
															"nodeType": "YulExpressionStatement",
															"src": "25380:72:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "25502:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "25502:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "25515:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "25515:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "25526:2:15",
																				"nodeType": "YulLiteral",
																				"src": "25526:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "25511:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "25511:3:15"
																		},
																		"nativeSrc": "25511:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "25511:18:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "25462:39:15",
																	"nodeType": "YulIdentifier",
																	"src": "25462:39:15"
																},
																"nativeSrc": "25462:68:15",
																"nodeType": "YulFunctionCall",
																"src": "25462:68:15"
															},
															"nativeSrc": "25462:68:15",
															"nodeType": "YulExpressionStatement",
															"src": "25462:68:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "25584:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "25584:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "25597:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "25597:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "25608:2:15",
																				"nodeType": "YulLiteral",
																				"src": "25608:2:15",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "25593:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "25593:3:15"
																		},
																		"nativeSrc": "25593:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "25593:18:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "25540:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "25540:43:15"
																},
																"nativeSrc": "25540:72:15",
																"nodeType": "YulFunctionCall",
																"src": "25540:72:15"
															},
															"nativeSrc": "25540:72:15",
															"nodeType": "YulExpressionStatement",
															"src": "25540:72:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint8_t_uint256__to_t_uint256_t_uint256_t_uint8_t_uint256__fromStack_reversed",
												"nativeSrc": "25074:545:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "25200:9:15",
														"nodeType": "YulTypedName",
														"src": "25200:9:15",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "25212:6:15",
														"nodeType": "YulTypedName",
														"src": "25212:6:15",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "25220:6:15",
														"nodeType": "YulTypedName",
														"src": "25220:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "25228:6:15",
														"nodeType": "YulTypedName",
														"src": "25228:6:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "25236:6:15",
														"nodeType": "YulTypedName",
														"src": "25236:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "25247:4:15",
														"nodeType": "YulTypedName",
														"src": "25247:4:15",
														"type": ""
													}
												],
												"src": "25074:545:15"
											},
											{
												"body": {
													"nativeSrc": "25731:60:15",
													"nodeType": "YulBlock",
													"src": "25731:60:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "25753:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "25753:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "25761:1:15",
																				"nodeType": "YulLiteral",
																				"src": "25761:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "25749:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "25749:3:15"
																		},
																		"nativeSrc": "25749:14:15",
																		"nodeType": "YulFunctionCall",
																		"src": "25749:14:15"
																	},
																	{
																		"hexValue": "7072696365206e6f7420656e6f756768",
																		"kind": "string",
																		"nativeSrc": "25765:18:15",
																		"nodeType": "YulLiteral",
																		"src": "25765:18:15",
																		"type": "",
																		"value": "price not enough"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "25742:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "25742:6:15"
																},
																"nativeSrc": "25742:42:15",
																"nodeType": "YulFunctionCall",
																"src": "25742:42:15"
															},
															"nativeSrc": "25742:42:15",
															"nodeType": "YulExpressionStatement",
															"src": "25742:42:15"
														}
													]
												},
												"name": "store_literal_in_memory_248afc2f7838f28c4e3e8b4422d9aefd390d276ca06a0ae623456964600f75f2",
												"nativeSrc": "25625:166:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "25723:6:15",
														"nodeType": "YulTypedName",
														"src": "25723:6:15",
														"type": ""
													}
												],
												"src": "25625:166:15"
											},
											{
												"body": {
													"nativeSrc": "25943:220:15",
													"nodeType": "YulBlock",
													"src": "25943:220:15",
													"statements": [
														{
															"nativeSrc": "25953:74:15",
															"nodeType": "YulAssignment",
															"src": "25953:74:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "26019:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "26019:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "26024:2:15",
																		"nodeType": "YulLiteral",
																		"src": "26024:2:15",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "25960:58:15",
																	"nodeType": "YulIdentifier",
																	"src": "25960:58:15"
																},
																"nativeSrc": "25960:67:15",
																"nodeType": "YulFunctionCall",
																"src": "25960:67:15"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "25953:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "25953:3:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "26125:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "26125:3:15"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_248afc2f7838f28c4e3e8b4422d9aefd390d276ca06a0ae623456964600f75f2",
																	"nativeSrc": "26036:88:15",
																	"nodeType": "YulIdentifier",
																	"src": "26036:88:15"
																},
																"nativeSrc": "26036:93:15",
																"nodeType": "YulFunctionCall",
																"src": "26036:93:15"
															},
															"nativeSrc": "26036:93:15",
															"nodeType": "YulExpressionStatement",
															"src": "26036:93:15"
														},
														{
															"nativeSrc": "26138:19:15",
															"nodeType": "YulAssignment",
															"src": "26138:19:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "26149:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "26149:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "26154:2:15",
																		"nodeType": "YulLiteral",
																		"src": "26154:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "26145:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "26145:3:15"
																},
																"nativeSrc": "26145:12:15",
																"nodeType": "YulFunctionCall",
																"src": "26145:12:15"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "26138:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "26138:3:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_248afc2f7838f28c4e3e8b4422d9aefd390d276ca06a0ae623456964600f75f2_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "25797:366:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "25931:3:15",
														"nodeType": "YulTypedName",
														"src": "25931:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "25939:3:15",
														"nodeType": "YulTypedName",
														"src": "25939:3:15",
														"type": ""
													}
												],
												"src": "25797:366:15"
											},
											{
												"body": {
													"nativeSrc": "26340:248:15",
													"nodeType": "YulBlock",
													"src": "26340:248:15",
													"statements": [
														{
															"nativeSrc": "26350:26:15",
															"nodeType": "YulAssignment",
															"src": "26350:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "26362:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "26362:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "26373:2:15",
																		"nodeType": "YulLiteral",
																		"src": "26373:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "26358:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "26358:3:15"
																},
																"nativeSrc": "26358:18:15",
																"nodeType": "YulFunctionCall",
																"src": "26358:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "26350:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "26350:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "26397:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "26397:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "26408:1:15",
																				"nodeType": "YulLiteral",
																				"src": "26408:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "26393:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "26393:3:15"
																		},
																		"nativeSrc": "26393:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "26393:17:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "26416:4:15",
																				"nodeType": "YulIdentifier",
																				"src": "26416:4:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "26422:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "26422:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "26412:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "26412:3:15"
																		},
																		"nativeSrc": "26412:20:15",
																		"nodeType": "YulFunctionCall",
																		"src": "26412:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "26386:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "26386:6:15"
																},
																"nativeSrc": "26386:47:15",
																"nodeType": "YulFunctionCall",
																"src": "26386:47:15"
															},
															"nativeSrc": "26386:47:15",
															"nodeType": "YulExpressionStatement",
															"src": "26386:47:15"
														},
														{
															"nativeSrc": "26442:139:15",
															"nodeType": "YulAssignment",
															"src": "26442:139:15",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "26576:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "26576:4:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_248afc2f7838f28c4e3e8b4422d9aefd390d276ca06a0ae623456964600f75f2_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "26450:124:15",
																	"nodeType": "YulIdentifier",
																	"src": "26450:124:15"
																},
																"nativeSrc": "26450:131:15",
																"nodeType": "YulFunctionCall",
																"src": "26450:131:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "26442:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "26442:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_248afc2f7838f28c4e3e8b4422d9aefd390d276ca06a0ae623456964600f75f2__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "26169:419:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "26320:9:15",
														"nodeType": "YulTypedName",
														"src": "26320:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "26335:4:15",
														"nodeType": "YulTypedName",
														"src": "26335:4:15",
														"type": ""
													}
												],
												"src": "26169:419:15"
											},
											{
												"body": {
													"nativeSrc": "26748:288:15",
													"nodeType": "YulBlock",
													"src": "26748:288:15",
													"statements": [
														{
															"nativeSrc": "26758:26:15",
															"nodeType": "YulAssignment",
															"src": "26758:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "26770:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "26770:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "26781:2:15",
																		"nodeType": "YulLiteral",
																		"src": "26781:2:15",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "26766:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "26766:3:15"
																},
																"nativeSrc": "26766:18:15",
																"nodeType": "YulFunctionCall",
																"src": "26766:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "26758:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "26758:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "26838:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "26838:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "26851:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "26851:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "26862:1:15",
																				"nodeType": "YulLiteral",
																				"src": "26862:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "26847:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "26847:3:15"
																		},
																		"nativeSrc": "26847:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "26847:17:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "26794:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "26794:43:15"
																},
																"nativeSrc": "26794:71:15",
																"nodeType": "YulFunctionCall",
																"src": "26794:71:15"
															},
															"nativeSrc": "26794:71:15",
															"nodeType": "YulExpressionStatement",
															"src": "26794:71:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "26919:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "26919:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "26932:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "26932:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "26943:2:15",
																				"nodeType": "YulLiteral",
																				"src": "26943:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "26928:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "26928:3:15"
																		},
																		"nativeSrc": "26928:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "26928:18:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "26875:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "26875:43:15"
																},
																"nativeSrc": "26875:72:15",
																"nodeType": "YulFunctionCall",
																"src": "26875:72:15"
															},
															"nativeSrc": "26875:72:15",
															"nodeType": "YulExpressionStatement",
															"src": "26875:72:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "27001:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "27001:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "27014:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "27014:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "27025:2:15",
																				"nodeType": "YulLiteral",
																				"src": "27025:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "27010:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "27010:3:15"
																		},
																		"nativeSrc": "27010:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "27010:18:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "26957:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "26957:43:15"
																},
																"nativeSrc": "26957:72:15",
																"nodeType": "YulFunctionCall",
																"src": "26957:72:15"
															},
															"nativeSrc": "26957:72:15",
															"nodeType": "YulExpressionStatement",
															"src": "26957:72:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "26594:442:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "26704:9:15",
														"nodeType": "YulTypedName",
														"src": "26704:9:15",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "26716:6:15",
														"nodeType": "YulTypedName",
														"src": "26716:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "26724:6:15",
														"nodeType": "YulTypedName",
														"src": "26724:6:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "26732:6:15",
														"nodeType": "YulTypedName",
														"src": "26732:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "26743:4:15",
														"nodeType": "YulTypedName",
														"src": "26743:4:15",
														"type": ""
													}
												],
												"src": "26594:442:15"
											},
											{
												"body": {
													"nativeSrc": "27100:40:15",
													"nodeType": "YulBlock",
													"src": "27100:40:15",
													"statements": [
														{
															"nativeSrc": "27111:22:15",
															"nodeType": "YulAssignment",
															"src": "27111:22:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "27127:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "27127:5:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "27121:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "27121:5:15"
																},
																"nativeSrc": "27121:12:15",
																"nodeType": "YulFunctionCall",
																"src": "27121:12:15"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "27111:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "27111:6:15"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nativeSrc": "27042:98:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "27083:5:15",
														"nodeType": "YulTypedName",
														"src": "27083:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "27093:6:15",
														"nodeType": "YulTypedName",
														"src": "27093:6:15",
														"type": ""
													}
												],
												"src": "27042:98:15"
											},
											{
												"body": {
													"nativeSrc": "27208:77:15",
													"nodeType": "YulBlock",
													"src": "27208:77:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "27225:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "27225:3:15"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "27230:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "27230:3:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "27235:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "27235:6:15"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "27219:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "27219:5:15"
																},
																"nativeSrc": "27219:23:15",
																"nodeType": "YulFunctionCall",
																"src": "27219:23:15"
															},
															"nativeSrc": "27219:23:15",
															"nodeType": "YulExpressionStatement",
															"src": "27219:23:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "27262:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "27262:3:15"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "27267:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "27267:6:15"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "27258:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "27258:3:15"
																		},
																		"nativeSrc": "27258:16:15",
																		"nodeType": "YulFunctionCall",
																		"src": "27258:16:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "27276:1:15",
																		"nodeType": "YulLiteral",
																		"src": "27276:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "27251:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "27251:6:15"
																},
																"nativeSrc": "27251:27:15",
																"nodeType": "YulFunctionCall",
																"src": "27251:27:15"
															},
															"nativeSrc": "27251:27:15",
															"nodeType": "YulExpressionStatement",
															"src": "27251:27:15"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "27146:139:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "27190:3:15",
														"nodeType": "YulTypedName",
														"src": "27190:3:15",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "27195:3:15",
														"nodeType": "YulTypedName",
														"src": "27195:3:15",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "27200:6:15",
														"nodeType": "YulTypedName",
														"src": "27200:6:15",
														"type": ""
													}
												],
												"src": "27146:139:15"
											},
											{
												"body": {
													"nativeSrc": "27399:278:15",
													"nodeType": "YulBlock",
													"src": "27399:278:15",
													"statements": [
														{
															"nativeSrc": "27409:52:15",
															"nodeType": "YulVariableDeclaration",
															"src": "27409:52:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "27455:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "27455:5:15"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nativeSrc": "27423:31:15",
																	"nodeType": "YulIdentifier",
																	"src": "27423:31:15"
																},
																"nativeSrc": "27423:38:15",
																"nodeType": "YulFunctionCall",
																"src": "27423:38:15"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "27413:6:15",
																	"nodeType": "YulTypedName",
																	"src": "27413:6:15",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "27470:95:15",
															"nodeType": "YulAssignment",
															"src": "27470:95:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "27553:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "27553:3:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "27558:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "27558:6:15"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "27477:75:15",
																	"nodeType": "YulIdentifier",
																	"src": "27477:75:15"
																},
																"nativeSrc": "27477:88:15",
																"nodeType": "YulFunctionCall",
																"src": "27477:88:15"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "27470:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "27470:3:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "27613:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "27613:5:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "27620:4:15",
																				"nodeType": "YulLiteral",
																				"src": "27620:4:15",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "27609:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "27609:3:15"
																		},
																		"nativeSrc": "27609:16:15",
																		"nodeType": "YulFunctionCall",
																		"src": "27609:16:15"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "27627:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "27627:3:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "27632:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "27632:6:15"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "27574:34:15",
																	"nodeType": "YulIdentifier",
																	"src": "27574:34:15"
																},
																"nativeSrc": "27574:65:15",
																"nodeType": "YulFunctionCall",
																"src": "27574:65:15"
															},
															"nativeSrc": "27574:65:15",
															"nodeType": "YulExpressionStatement",
															"src": "27574:65:15"
														},
														{
															"nativeSrc": "27648:23:15",
															"nodeType": "YulAssignment",
															"src": "27648:23:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "27659:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "27659:3:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "27664:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "27664:6:15"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "27655:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "27655:3:15"
																},
																"nativeSrc": "27655:16:15",
																"nodeType": "YulFunctionCall",
																"src": "27655:16:15"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "27648:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "27648:3:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "27291:386:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "27380:5:15",
														"nodeType": "YulTypedName",
														"src": "27380:5:15",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "27387:3:15",
														"nodeType": "YulTypedName",
														"src": "27387:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "27395:3:15",
														"nodeType": "YulTypedName",
														"src": "27395:3:15",
														"type": ""
													}
												],
												"src": "27291:386:15"
											},
											{
												"body": {
													"nativeSrc": "27817:137:15",
													"nodeType": "YulBlock",
													"src": "27817:137:15",
													"statements": [
														{
															"nativeSrc": "27828:100:15",
															"nodeType": "YulAssignment",
															"src": "27828:100:15",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "27915:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "27915:6:15"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "27924:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "27924:3:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "27835:79:15",
																	"nodeType": "YulIdentifier",
																	"src": "27835:79:15"
																},
																"nativeSrc": "27835:93:15",
																"nodeType": "YulFunctionCall",
																"src": "27835:93:15"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "27828:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "27828:3:15"
																}
															]
														},
														{
															"nativeSrc": "27938:10:15",
															"nodeType": "YulAssignment",
															"src": "27938:10:15",
															"value": {
																"name": "pos",
																"nativeSrc": "27945:3:15",
																"nodeType": "YulIdentifier",
																"src": "27945:3:15"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "27938:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "27938:3:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "27683:271:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "27796:3:15",
														"nodeType": "YulTypedName",
														"src": "27796:3:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "27802:6:15",
														"nodeType": "YulTypedName",
														"src": "27802:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "27813:3:15",
														"nodeType": "YulTypedName",
														"src": "27813:3:15",
														"type": ""
													}
												],
												"src": "27683:271:15"
											},
											{
												"body": {
													"nativeSrc": "28066:55:15",
													"nodeType": "YulBlock",
													"src": "28066:55:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "28088:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "28088:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "28096:1:15",
																				"nodeType": "YulLiteral",
																				"src": "28096:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "28084:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "28084:3:15"
																		},
																		"nativeSrc": "28084:14:15",
																		"nodeType": "YulFunctionCall",
																		"src": "28084:14:15"
																	},
																	{
																		"hexValue": "6d696e74206661696c6564",
																		"kind": "string",
																		"nativeSrc": "28100:13:15",
																		"nodeType": "YulLiteral",
																		"src": "28100:13:15",
																		"type": "",
																		"value": "mint failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "28077:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "28077:6:15"
																},
																"nativeSrc": "28077:37:15",
																"nodeType": "YulFunctionCall",
																"src": "28077:37:15"
															},
															"nativeSrc": "28077:37:15",
															"nodeType": "YulExpressionStatement",
															"src": "28077:37:15"
														}
													]
												},
												"name": "store_literal_in_memory_594ff2dfc35e5b8979a04d047bc1811cd0832013e67a9ef5bc97a173e7a27efb",
												"nativeSrc": "27960:161:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "28058:6:15",
														"nodeType": "YulTypedName",
														"src": "28058:6:15",
														"type": ""
													}
												],
												"src": "27960:161:15"
											},
											{
												"body": {
													"nativeSrc": "28273:220:15",
													"nodeType": "YulBlock",
													"src": "28273:220:15",
													"statements": [
														{
															"nativeSrc": "28283:74:15",
															"nodeType": "YulAssignment",
															"src": "28283:74:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "28349:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "28349:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "28354:2:15",
																		"nodeType": "YulLiteral",
																		"src": "28354:2:15",
																		"type": "",
																		"value": "11"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "28290:58:15",
																	"nodeType": "YulIdentifier",
																	"src": "28290:58:15"
																},
																"nativeSrc": "28290:67:15",
																"nodeType": "YulFunctionCall",
																"src": "28290:67:15"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "28283:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "28283:3:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "28455:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "28455:3:15"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_594ff2dfc35e5b8979a04d047bc1811cd0832013e67a9ef5bc97a173e7a27efb",
																	"nativeSrc": "28366:88:15",
																	"nodeType": "YulIdentifier",
																	"src": "28366:88:15"
																},
																"nativeSrc": "28366:93:15",
																"nodeType": "YulFunctionCall",
																"src": "28366:93:15"
															},
															"nativeSrc": "28366:93:15",
															"nodeType": "YulExpressionStatement",
															"src": "28366:93:15"
														},
														{
															"nativeSrc": "28468:19:15",
															"nodeType": "YulAssignment",
															"src": "28468:19:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "28479:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "28479:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "28484:2:15",
																		"nodeType": "YulLiteral",
																		"src": "28484:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "28475:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "28475:3:15"
																},
																"nativeSrc": "28475:12:15",
																"nodeType": "YulFunctionCall",
																"src": "28475:12:15"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "28468:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "28468:3:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_594ff2dfc35e5b8979a04d047bc1811cd0832013e67a9ef5bc97a173e7a27efb_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "28127:366:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "28261:3:15",
														"nodeType": "YulTypedName",
														"src": "28261:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "28269:3:15",
														"nodeType": "YulTypedName",
														"src": "28269:3:15",
														"type": ""
													}
												],
												"src": "28127:366:15"
											},
											{
												"body": {
													"nativeSrc": "28670:248:15",
													"nodeType": "YulBlock",
													"src": "28670:248:15",
													"statements": [
														{
															"nativeSrc": "28680:26:15",
															"nodeType": "YulAssignment",
															"src": "28680:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "28692:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "28692:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "28703:2:15",
																		"nodeType": "YulLiteral",
																		"src": "28703:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "28688:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "28688:3:15"
																},
																"nativeSrc": "28688:18:15",
																"nodeType": "YulFunctionCall",
																"src": "28688:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "28680:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "28680:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "28727:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "28727:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "28738:1:15",
																				"nodeType": "YulLiteral",
																				"src": "28738:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "28723:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "28723:3:15"
																		},
																		"nativeSrc": "28723:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "28723:17:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "28746:4:15",
																				"nodeType": "YulIdentifier",
																				"src": "28746:4:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "28752:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "28752:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "28742:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "28742:3:15"
																		},
																		"nativeSrc": "28742:20:15",
																		"nodeType": "YulFunctionCall",
																		"src": "28742:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "28716:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "28716:6:15"
																},
																"nativeSrc": "28716:47:15",
																"nodeType": "YulFunctionCall",
																"src": "28716:47:15"
															},
															"nativeSrc": "28716:47:15",
															"nodeType": "YulExpressionStatement",
															"src": "28716:47:15"
														},
														{
															"nativeSrc": "28772:139:15",
															"nodeType": "YulAssignment",
															"src": "28772:139:15",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "28906:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "28906:4:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_594ff2dfc35e5b8979a04d047bc1811cd0832013e67a9ef5bc97a173e7a27efb_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "28780:124:15",
																	"nodeType": "YulIdentifier",
																	"src": "28780:124:15"
																},
																"nativeSrc": "28780:131:15",
																"nodeType": "YulFunctionCall",
																"src": "28780:131:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "28772:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "28772:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_594ff2dfc35e5b8979a04d047bc1811cd0832013e67a9ef5bc97a173e7a27efb__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "28499:419:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "28650:9:15",
														"nodeType": "YulTypedName",
														"src": "28650:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "28665:4:15",
														"nodeType": "YulTypedName",
														"src": "28665:4:15",
														"type": ""
													}
												],
												"src": "28499:419:15"
											},
											{
												"body": {
													"nativeSrc": "29030:60:15",
													"nodeType": "YulBlock",
													"src": "29030:60:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "29052:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "29052:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "29060:1:15",
																				"nodeType": "YulLiteral",
																				"src": "29060:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "29048:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "29048:3:15"
																		},
																		"nativeSrc": "29048:14:15",
																		"nodeType": "YulFunctionCall",
																		"src": "29048:14:15"
																	},
																	{
																		"hexValue": "696e636f72726563742073656e646572",
																		"kind": "string",
																		"nativeSrc": "29064:18:15",
																		"nodeType": "YulLiteral",
																		"src": "29064:18:15",
																		"type": "",
																		"value": "incorrect sender"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "29041:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "29041:6:15"
																},
																"nativeSrc": "29041:42:15",
																"nodeType": "YulFunctionCall",
																"src": "29041:42:15"
															},
															"nativeSrc": "29041:42:15",
															"nodeType": "YulExpressionStatement",
															"src": "29041:42:15"
														}
													]
												},
												"name": "store_literal_in_memory_58b0c597f29dac8001964c5c8f94457e37567080fbc7198aa316b42b6379f65b",
												"nativeSrc": "28924:166:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "29022:6:15",
														"nodeType": "YulTypedName",
														"src": "29022:6:15",
														"type": ""
													}
												],
												"src": "28924:166:15"
											},
											{
												"body": {
													"nativeSrc": "29242:220:15",
													"nodeType": "YulBlock",
													"src": "29242:220:15",
													"statements": [
														{
															"nativeSrc": "29252:74:15",
															"nodeType": "YulAssignment",
															"src": "29252:74:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "29318:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "29318:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "29323:2:15",
																		"nodeType": "YulLiteral",
																		"src": "29323:2:15",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "29259:58:15",
																	"nodeType": "YulIdentifier",
																	"src": "29259:58:15"
																},
																"nativeSrc": "29259:67:15",
																"nodeType": "YulFunctionCall",
																"src": "29259:67:15"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "29252:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "29252:3:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "29424:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "29424:3:15"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_58b0c597f29dac8001964c5c8f94457e37567080fbc7198aa316b42b6379f65b",
																	"nativeSrc": "29335:88:15",
																	"nodeType": "YulIdentifier",
																	"src": "29335:88:15"
																},
																"nativeSrc": "29335:93:15",
																"nodeType": "YulFunctionCall",
																"src": "29335:93:15"
															},
															"nativeSrc": "29335:93:15",
															"nodeType": "YulExpressionStatement",
															"src": "29335:93:15"
														},
														{
															"nativeSrc": "29437:19:15",
															"nodeType": "YulAssignment",
															"src": "29437:19:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "29448:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "29448:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "29453:2:15",
																		"nodeType": "YulLiteral",
																		"src": "29453:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "29444:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "29444:3:15"
																},
																"nativeSrc": "29444:12:15",
																"nodeType": "YulFunctionCall",
																"src": "29444:12:15"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "29437:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "29437:3:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_58b0c597f29dac8001964c5c8f94457e37567080fbc7198aa316b42b6379f65b_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "29096:366:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "29230:3:15",
														"nodeType": "YulTypedName",
														"src": "29230:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "29238:3:15",
														"nodeType": "YulTypedName",
														"src": "29238:3:15",
														"type": ""
													}
												],
												"src": "29096:366:15"
											},
											{
												"body": {
													"nativeSrc": "29639:248:15",
													"nodeType": "YulBlock",
													"src": "29639:248:15",
													"statements": [
														{
															"nativeSrc": "29649:26:15",
															"nodeType": "YulAssignment",
															"src": "29649:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "29661:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "29661:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "29672:2:15",
																		"nodeType": "YulLiteral",
																		"src": "29672:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "29657:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "29657:3:15"
																},
																"nativeSrc": "29657:18:15",
																"nodeType": "YulFunctionCall",
																"src": "29657:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "29649:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "29649:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "29696:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "29696:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "29707:1:15",
																				"nodeType": "YulLiteral",
																				"src": "29707:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "29692:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "29692:3:15"
																		},
																		"nativeSrc": "29692:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "29692:17:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "29715:4:15",
																				"nodeType": "YulIdentifier",
																				"src": "29715:4:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "29721:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "29721:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "29711:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "29711:3:15"
																		},
																		"nativeSrc": "29711:20:15",
																		"nodeType": "YulFunctionCall",
																		"src": "29711:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "29685:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "29685:6:15"
																},
																"nativeSrc": "29685:47:15",
																"nodeType": "YulFunctionCall",
																"src": "29685:47:15"
															},
															"nativeSrc": "29685:47:15",
															"nodeType": "YulExpressionStatement",
															"src": "29685:47:15"
														},
														{
															"nativeSrc": "29741:139:15",
															"nodeType": "YulAssignment",
															"src": "29741:139:15",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "29875:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "29875:4:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_58b0c597f29dac8001964c5c8f94457e37567080fbc7198aa316b42b6379f65b_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "29749:124:15",
																	"nodeType": "YulIdentifier",
																	"src": "29749:124:15"
																},
																"nativeSrc": "29749:131:15",
																"nodeType": "YulFunctionCall",
																"src": "29749:131:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "29741:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "29741:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_58b0c597f29dac8001964c5c8f94457e37567080fbc7198aa316b42b6379f65b__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "29468:419:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "29619:9:15",
														"nodeType": "YulTypedName",
														"src": "29619:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "29634:4:15",
														"nodeType": "YulTypedName",
														"src": "29634:4:15",
														"type": ""
													}
												],
												"src": "29468:419:15"
											},
											{
												"body": {
													"nativeSrc": "29999:60:15",
													"nodeType": "YulBlock",
													"src": "29999:60:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "30021:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "30021:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "30029:1:15",
																				"nodeType": "YulLiteral",
																				"src": "30029:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "30017:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "30017:3:15"
																		},
																		"nativeSrc": "30017:14:15",
																		"nodeType": "YulFunctionCall",
																		"src": "30017:14:15"
																	},
																	{
																		"hexValue": "7175616e74697479206973207a65726f",
																		"kind": "string",
																		"nativeSrc": "30033:18:15",
																		"nodeType": "YulLiteral",
																		"src": "30033:18:15",
																		"type": "",
																		"value": "quantity is zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "30010:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "30010:6:15"
																},
																"nativeSrc": "30010:42:15",
																"nodeType": "YulFunctionCall",
																"src": "30010:42:15"
															},
															"nativeSrc": "30010:42:15",
															"nodeType": "YulExpressionStatement",
															"src": "30010:42:15"
														}
													]
												},
												"name": "store_literal_in_memory_4c1122224259dd0b02fff95af769f256a8450d91cf0444f02e6c136dce106f44",
												"nativeSrc": "29893:166:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "29991:6:15",
														"nodeType": "YulTypedName",
														"src": "29991:6:15",
														"type": ""
													}
												],
												"src": "29893:166:15"
											},
											{
												"body": {
													"nativeSrc": "30211:220:15",
													"nodeType": "YulBlock",
													"src": "30211:220:15",
													"statements": [
														{
															"nativeSrc": "30221:74:15",
															"nodeType": "YulAssignment",
															"src": "30221:74:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "30287:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "30287:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "30292:2:15",
																		"nodeType": "YulLiteral",
																		"src": "30292:2:15",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "30228:58:15",
																	"nodeType": "YulIdentifier",
																	"src": "30228:58:15"
																},
																"nativeSrc": "30228:67:15",
																"nodeType": "YulFunctionCall",
																"src": "30228:67:15"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "30221:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "30221:3:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "30393:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "30393:3:15"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_4c1122224259dd0b02fff95af769f256a8450d91cf0444f02e6c136dce106f44",
																	"nativeSrc": "30304:88:15",
																	"nodeType": "YulIdentifier",
																	"src": "30304:88:15"
																},
																"nativeSrc": "30304:93:15",
																"nodeType": "YulFunctionCall",
																"src": "30304:93:15"
															},
															"nativeSrc": "30304:93:15",
															"nodeType": "YulExpressionStatement",
															"src": "30304:93:15"
														},
														{
															"nativeSrc": "30406:19:15",
															"nodeType": "YulAssignment",
															"src": "30406:19:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "30417:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "30417:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "30422:2:15",
																		"nodeType": "YulLiteral",
																		"src": "30422:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "30413:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "30413:3:15"
																},
																"nativeSrc": "30413:12:15",
																"nodeType": "YulFunctionCall",
																"src": "30413:12:15"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "30406:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "30406:3:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_4c1122224259dd0b02fff95af769f256a8450d91cf0444f02e6c136dce106f44_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "30065:366:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "30199:3:15",
														"nodeType": "YulTypedName",
														"src": "30199:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "30207:3:15",
														"nodeType": "YulTypedName",
														"src": "30207:3:15",
														"type": ""
													}
												],
												"src": "30065:366:15"
											},
											{
												"body": {
													"nativeSrc": "30608:248:15",
													"nodeType": "YulBlock",
													"src": "30608:248:15",
													"statements": [
														{
															"nativeSrc": "30618:26:15",
															"nodeType": "YulAssignment",
															"src": "30618:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "30630:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "30630:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "30641:2:15",
																		"nodeType": "YulLiteral",
																		"src": "30641:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "30626:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "30626:3:15"
																},
																"nativeSrc": "30626:18:15",
																"nodeType": "YulFunctionCall",
																"src": "30626:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "30618:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "30618:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "30665:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "30665:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "30676:1:15",
																				"nodeType": "YulLiteral",
																				"src": "30676:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "30661:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "30661:3:15"
																		},
																		"nativeSrc": "30661:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "30661:17:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "30684:4:15",
																				"nodeType": "YulIdentifier",
																				"src": "30684:4:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "30690:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "30690:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "30680:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "30680:3:15"
																		},
																		"nativeSrc": "30680:20:15",
																		"nodeType": "YulFunctionCall",
																		"src": "30680:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "30654:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "30654:6:15"
																},
																"nativeSrc": "30654:47:15",
																"nodeType": "YulFunctionCall",
																"src": "30654:47:15"
															},
															"nativeSrc": "30654:47:15",
															"nodeType": "YulExpressionStatement",
															"src": "30654:47:15"
														},
														{
															"nativeSrc": "30710:139:15",
															"nodeType": "YulAssignment",
															"src": "30710:139:15",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "30844:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "30844:4:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_4c1122224259dd0b02fff95af769f256a8450d91cf0444f02e6c136dce106f44_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "30718:124:15",
																	"nodeType": "YulIdentifier",
																	"src": "30718:124:15"
																},
																"nativeSrc": "30718:131:15",
																"nodeType": "YulFunctionCall",
																"src": "30718:131:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "30710:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "30710:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4c1122224259dd0b02fff95af769f256a8450d91cf0444f02e6c136dce106f44__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "30437:419:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "30588:9:15",
														"nodeType": "YulTypedName",
														"src": "30588:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "30603:4:15",
														"nodeType": "YulTypedName",
														"src": "30603:4:15",
														"type": ""
													}
												],
												"src": "30437:419:15"
											},
											{
												"body": {
													"nativeSrc": "31044:371:15",
													"nodeType": "YulBlock",
													"src": "31044:371:15",
													"statements": [
														{
															"nativeSrc": "31054:27:15",
															"nodeType": "YulAssignment",
															"src": "31054:27:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "31066:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "31066:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "31077:3:15",
																		"nodeType": "YulLiteral",
																		"src": "31077:3:15",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "31062:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "31062:3:15"
																},
																"nativeSrc": "31062:19:15",
																"nodeType": "YulFunctionCall",
																"src": "31062:19:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "31054:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "31054:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "31135:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "31135:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "31148:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "31148:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "31159:1:15",
																				"nodeType": "YulLiteral",
																				"src": "31159:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "31144:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "31144:3:15"
																		},
																		"nativeSrc": "31144:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "31144:17:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "31091:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "31091:43:15"
																},
																"nativeSrc": "31091:71:15",
																"nodeType": "YulFunctionCall",
																"src": "31091:71:15"
															},
															"nativeSrc": "31091:71:15",
															"nodeType": "YulExpressionStatement",
															"src": "31091:71:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "31216:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "31216:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "31229:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "31229:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "31240:2:15",
																				"nodeType": "YulLiteral",
																				"src": "31240:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "31225:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "31225:3:15"
																		},
																		"nativeSrc": "31225:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "31225:18:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "31172:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "31172:43:15"
																},
																"nativeSrc": "31172:72:15",
																"nodeType": "YulFunctionCall",
																"src": "31172:72:15"
															},
															"nativeSrc": "31172:72:15",
															"nodeType": "YulExpressionStatement",
															"src": "31172:72:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "31298:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "31298:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "31311:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "31311:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "31322:2:15",
																				"nodeType": "YulLiteral",
																				"src": "31322:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "31307:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "31307:3:15"
																		},
																		"nativeSrc": "31307:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "31307:18:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "31254:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "31254:43:15"
																},
																"nativeSrc": "31254:72:15",
																"nodeType": "YulFunctionCall",
																"src": "31254:72:15"
															},
															"nativeSrc": "31254:72:15",
															"nodeType": "YulExpressionStatement",
															"src": "31254:72:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "31380:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "31380:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "31393:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "31393:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "31404:2:15",
																				"nodeType": "YulLiteral",
																				"src": "31404:2:15",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "31389:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "31389:3:15"
																		},
																		"nativeSrc": "31389:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "31389:18:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "31336:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "31336:43:15"
																},
																"nativeSrc": "31336:72:15",
																"nodeType": "YulFunctionCall",
																"src": "31336:72:15"
															},
															"nativeSrc": "31336:72:15",
															"nodeType": "YulExpressionStatement",
															"src": "31336:72:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_uint256__to_t_address_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "30862:553:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "30992:9:15",
														"nodeType": "YulTypedName",
														"src": "30992:9:15",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "31004:6:15",
														"nodeType": "YulTypedName",
														"src": "31004:6:15",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "31012:6:15",
														"nodeType": "YulTypedName",
														"src": "31012:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "31020:6:15",
														"nodeType": "YulTypedName",
														"src": "31020:6:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "31028:6:15",
														"nodeType": "YulTypedName",
														"src": "31028:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "31039:4:15",
														"nodeType": "YulTypedName",
														"src": "31039:4:15",
														"type": ""
													}
												],
												"src": "30862:553:15"
											},
											{
												"body": {
													"nativeSrc": "31527:59:15",
													"nodeType": "YulBlock",
													"src": "31527:59:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "31549:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "31549:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "31557:1:15",
																				"nodeType": "YulLiteral",
																				"src": "31557:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "31545:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "31545:3:15"
																		},
																		"nativeSrc": "31545:14:15",
																		"nodeType": "YulFunctionCall",
																		"src": "31545:14:15"
																	},
																	{
																		"hexValue": "746f6b656e4964206973207a65726f",
																		"kind": "string",
																		"nativeSrc": "31561:17:15",
																		"nodeType": "YulLiteral",
																		"src": "31561:17:15",
																		"type": "",
																		"value": "tokenId is zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "31538:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "31538:6:15"
																},
																"nativeSrc": "31538:41:15",
																"nodeType": "YulFunctionCall",
																"src": "31538:41:15"
															},
															"nativeSrc": "31538:41:15",
															"nodeType": "YulExpressionStatement",
															"src": "31538:41:15"
														}
													]
												},
												"name": "store_literal_in_memory_240c2a2420364d9260a9d9de5c0bdeaef40ae9271ae29d4c186edd83349afc50",
												"nativeSrc": "31421:165:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "31519:6:15",
														"nodeType": "YulTypedName",
														"src": "31519:6:15",
														"type": ""
													}
												],
												"src": "31421:165:15"
											},
											{
												"body": {
													"nativeSrc": "31738:220:15",
													"nodeType": "YulBlock",
													"src": "31738:220:15",
													"statements": [
														{
															"nativeSrc": "31748:74:15",
															"nodeType": "YulAssignment",
															"src": "31748:74:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "31814:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "31814:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "31819:2:15",
																		"nodeType": "YulLiteral",
																		"src": "31819:2:15",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "31755:58:15",
																	"nodeType": "YulIdentifier",
																	"src": "31755:58:15"
																},
																"nativeSrc": "31755:67:15",
																"nodeType": "YulFunctionCall",
																"src": "31755:67:15"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "31748:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "31748:3:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "31920:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "31920:3:15"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_240c2a2420364d9260a9d9de5c0bdeaef40ae9271ae29d4c186edd83349afc50",
																	"nativeSrc": "31831:88:15",
																	"nodeType": "YulIdentifier",
																	"src": "31831:88:15"
																},
																"nativeSrc": "31831:93:15",
																"nodeType": "YulFunctionCall",
																"src": "31831:93:15"
															},
															"nativeSrc": "31831:93:15",
															"nodeType": "YulExpressionStatement",
															"src": "31831:93:15"
														},
														{
															"nativeSrc": "31933:19:15",
															"nodeType": "YulAssignment",
															"src": "31933:19:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "31944:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "31944:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "31949:2:15",
																		"nodeType": "YulLiteral",
																		"src": "31949:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "31940:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "31940:3:15"
																},
																"nativeSrc": "31940:12:15",
																"nodeType": "YulFunctionCall",
																"src": "31940:12:15"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "31933:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "31933:3:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_240c2a2420364d9260a9d9de5c0bdeaef40ae9271ae29d4c186edd83349afc50_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "31592:366:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "31726:3:15",
														"nodeType": "YulTypedName",
														"src": "31726:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "31734:3:15",
														"nodeType": "YulTypedName",
														"src": "31734:3:15",
														"type": ""
													}
												],
												"src": "31592:366:15"
											},
											{
												"body": {
													"nativeSrc": "32135:248:15",
													"nodeType": "YulBlock",
													"src": "32135:248:15",
													"statements": [
														{
															"nativeSrc": "32145:26:15",
															"nodeType": "YulAssignment",
															"src": "32145:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "32157:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "32157:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "32168:2:15",
																		"nodeType": "YulLiteral",
																		"src": "32168:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "32153:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "32153:3:15"
																},
																"nativeSrc": "32153:18:15",
																"nodeType": "YulFunctionCall",
																"src": "32153:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "32145:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "32145:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "32192:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "32192:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "32203:1:15",
																				"nodeType": "YulLiteral",
																				"src": "32203:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "32188:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "32188:3:15"
																		},
																		"nativeSrc": "32188:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "32188:17:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "32211:4:15",
																				"nodeType": "YulIdentifier",
																				"src": "32211:4:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "32217:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "32217:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "32207:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "32207:3:15"
																		},
																		"nativeSrc": "32207:20:15",
																		"nodeType": "YulFunctionCall",
																		"src": "32207:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "32181:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "32181:6:15"
																},
																"nativeSrc": "32181:47:15",
																"nodeType": "YulFunctionCall",
																"src": "32181:47:15"
															},
															"nativeSrc": "32181:47:15",
															"nodeType": "YulExpressionStatement",
															"src": "32181:47:15"
														},
														{
															"nativeSrc": "32237:139:15",
															"nodeType": "YulAssignment",
															"src": "32237:139:15",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "32371:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "32371:4:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_240c2a2420364d9260a9d9de5c0bdeaef40ae9271ae29d4c186edd83349afc50_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "32245:124:15",
																	"nodeType": "YulIdentifier",
																	"src": "32245:124:15"
																},
																"nativeSrc": "32245:131:15",
																"nodeType": "YulFunctionCall",
																"src": "32245:131:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "32237:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "32237:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_240c2a2420364d9260a9d9de5c0bdeaef40ae9271ae29d4c186edd83349afc50__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "31964:419:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "32115:9:15",
														"nodeType": "YulTypedName",
														"src": "32115:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "32130:4:15",
														"nodeType": "YulTypedName",
														"src": "32130:4:15",
														"type": ""
													}
												],
												"src": "31964:419:15"
											},
											{
												"body": {
													"nativeSrc": "32495:57:15",
													"nodeType": "YulBlock",
													"src": "32495:57:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "32517:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "32517:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "32525:1:15",
																				"nodeType": "YulLiteral",
																				"src": "32525:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "32513:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "32513:3:15"
																		},
																		"nativeSrc": "32513:14:15",
																		"nodeType": "YulFunctionCall",
																		"src": "32513:14:15"
																	},
																	{
																		"hexValue": "7072696365206973207a65726f",
																		"kind": "string",
																		"nativeSrc": "32529:15:15",
																		"nodeType": "YulLiteral",
																		"src": "32529:15:15",
																		"type": "",
																		"value": "price is zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "32506:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "32506:6:15"
																},
																"nativeSrc": "32506:39:15",
																"nodeType": "YulFunctionCall",
																"src": "32506:39:15"
															},
															"nativeSrc": "32506:39:15",
															"nodeType": "YulExpressionStatement",
															"src": "32506:39:15"
														}
													]
												},
												"name": "store_literal_in_memory_ee8b0754ac04b271c493c71118fe013f51611851aeb777bded224dc19d7cd48c",
												"nativeSrc": "32389:163:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "32487:6:15",
														"nodeType": "YulTypedName",
														"src": "32487:6:15",
														"type": ""
													}
												],
												"src": "32389:163:15"
											},
											{
												"body": {
													"nativeSrc": "32704:220:15",
													"nodeType": "YulBlock",
													"src": "32704:220:15",
													"statements": [
														{
															"nativeSrc": "32714:74:15",
															"nodeType": "YulAssignment",
															"src": "32714:74:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "32780:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "32780:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "32785:2:15",
																		"nodeType": "YulLiteral",
																		"src": "32785:2:15",
																		"type": "",
																		"value": "13"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "32721:58:15",
																	"nodeType": "YulIdentifier",
																	"src": "32721:58:15"
																},
																"nativeSrc": "32721:67:15",
																"nodeType": "YulFunctionCall",
																"src": "32721:67:15"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "32714:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "32714:3:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "32886:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "32886:3:15"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ee8b0754ac04b271c493c71118fe013f51611851aeb777bded224dc19d7cd48c",
																	"nativeSrc": "32797:88:15",
																	"nodeType": "YulIdentifier",
																	"src": "32797:88:15"
																},
																"nativeSrc": "32797:93:15",
																"nodeType": "YulFunctionCall",
																"src": "32797:93:15"
															},
															"nativeSrc": "32797:93:15",
															"nodeType": "YulExpressionStatement",
															"src": "32797:93:15"
														},
														{
															"nativeSrc": "32899:19:15",
															"nodeType": "YulAssignment",
															"src": "32899:19:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "32910:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "32910:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "32915:2:15",
																		"nodeType": "YulLiteral",
																		"src": "32915:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "32906:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "32906:3:15"
																},
																"nativeSrc": "32906:12:15",
																"nodeType": "YulFunctionCall",
																"src": "32906:12:15"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "32899:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "32899:3:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ee8b0754ac04b271c493c71118fe013f51611851aeb777bded224dc19d7cd48c_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "32558:366:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "32692:3:15",
														"nodeType": "YulTypedName",
														"src": "32692:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "32700:3:15",
														"nodeType": "YulTypedName",
														"src": "32700:3:15",
														"type": ""
													}
												],
												"src": "32558:366:15"
											},
											{
												"body": {
													"nativeSrc": "33101:248:15",
													"nodeType": "YulBlock",
													"src": "33101:248:15",
													"statements": [
														{
															"nativeSrc": "33111:26:15",
															"nodeType": "YulAssignment",
															"src": "33111:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "33123:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "33123:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "33134:2:15",
																		"nodeType": "YulLiteral",
																		"src": "33134:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "33119:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "33119:3:15"
																},
																"nativeSrc": "33119:18:15",
																"nodeType": "YulFunctionCall",
																"src": "33119:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "33111:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "33111:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "33158:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "33158:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "33169:1:15",
																				"nodeType": "YulLiteral",
																				"src": "33169:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "33154:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "33154:3:15"
																		},
																		"nativeSrc": "33154:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "33154:17:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "33177:4:15",
																				"nodeType": "YulIdentifier",
																				"src": "33177:4:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "33183:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "33183:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "33173:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "33173:3:15"
																		},
																		"nativeSrc": "33173:20:15",
																		"nodeType": "YulFunctionCall",
																		"src": "33173:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "33147:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "33147:6:15"
																},
																"nativeSrc": "33147:47:15",
																"nodeType": "YulFunctionCall",
																"src": "33147:47:15"
															},
															"nativeSrc": "33147:47:15",
															"nodeType": "YulExpressionStatement",
															"src": "33147:47:15"
														},
														{
															"nativeSrc": "33203:139:15",
															"nodeType": "YulAssignment",
															"src": "33203:139:15",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "33337:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "33337:4:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ee8b0754ac04b271c493c71118fe013f51611851aeb777bded224dc19d7cd48c_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "33211:124:15",
																	"nodeType": "YulIdentifier",
																	"src": "33211:124:15"
																},
																"nativeSrc": "33211:131:15",
																"nodeType": "YulFunctionCall",
																"src": "33211:131:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "33203:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "33203:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ee8b0754ac04b271c493c71118fe013f51611851aeb777bded224dc19d7cd48c__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "32930:419:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "33081:9:15",
														"nodeType": "YulTypedName",
														"src": "33081:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "33096:4:15",
														"nodeType": "YulTypedName",
														"src": "33096:4:15",
														"type": ""
													}
												],
												"src": "32930:419:15"
											},
											{
												"body": {
													"nativeSrc": "33509:288:15",
													"nodeType": "YulBlock",
													"src": "33509:288:15",
													"statements": [
														{
															"nativeSrc": "33519:26:15",
															"nodeType": "YulAssignment",
															"src": "33519:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "33531:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "33531:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "33542:2:15",
																		"nodeType": "YulLiteral",
																		"src": "33542:2:15",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "33527:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "33527:3:15"
																},
																"nativeSrc": "33527:18:15",
																"nodeType": "YulFunctionCall",
																"src": "33527:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "33519:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "33519:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "33599:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "33599:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "33612:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "33612:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "33623:1:15",
																				"nodeType": "YulLiteral",
																				"src": "33623:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "33608:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "33608:3:15"
																		},
																		"nativeSrc": "33608:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "33608:17:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "33555:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "33555:43:15"
																},
																"nativeSrc": "33555:71:15",
																"nodeType": "YulFunctionCall",
																"src": "33555:71:15"
															},
															"nativeSrc": "33555:71:15",
															"nodeType": "YulExpressionStatement",
															"src": "33555:71:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "33680:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "33680:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "33693:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "33693:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "33704:2:15",
																				"nodeType": "YulLiteral",
																				"src": "33704:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "33689:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "33689:3:15"
																		},
																		"nativeSrc": "33689:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "33689:18:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "33636:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "33636:43:15"
																},
																"nativeSrc": "33636:72:15",
																"nodeType": "YulFunctionCall",
																"src": "33636:72:15"
															},
															"nativeSrc": "33636:72:15",
															"nodeType": "YulExpressionStatement",
															"src": "33636:72:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "33762:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "33762:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "33775:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "33775:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "33786:2:15",
																				"nodeType": "YulLiteral",
																				"src": "33786:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "33771:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "33771:3:15"
																		},
																		"nativeSrc": "33771:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "33771:18:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "33718:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "33718:43:15"
																},
																"nativeSrc": "33718:72:15",
																"nodeType": "YulFunctionCall",
																"src": "33718:72:15"
															},
															"nativeSrc": "33718:72:15",
															"nodeType": "YulExpressionStatement",
															"src": "33718:72:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "33355:442:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "33465:9:15",
														"nodeType": "YulTypedName",
														"src": "33465:9:15",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "33477:6:15",
														"nodeType": "YulTypedName",
														"src": "33477:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "33485:6:15",
														"nodeType": "YulTypedName",
														"src": "33485:6:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "33493:6:15",
														"nodeType": "YulTypedName",
														"src": "33493:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "33504:4:15",
														"nodeType": "YulTypedName",
														"src": "33504:4:15",
														"type": ""
													}
												],
												"src": "33355:442:15"
											},
											{
												"body": {
													"nativeSrc": "33957:288:15",
													"nodeType": "YulBlock",
													"src": "33957:288:15",
													"statements": [
														{
															"nativeSrc": "33967:26:15",
															"nodeType": "YulAssignment",
															"src": "33967:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "33979:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "33979:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "33990:2:15",
																		"nodeType": "YulLiteral",
																		"src": "33990:2:15",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "33975:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "33975:3:15"
																},
																"nativeSrc": "33975:18:15",
																"nodeType": "YulFunctionCall",
																"src": "33975:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "33967:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "33967:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "34047:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "34047:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "34060:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "34060:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "34071:1:15",
																				"nodeType": "YulLiteral",
																				"src": "34071:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "34056:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "34056:3:15"
																		},
																		"nativeSrc": "34056:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "34056:17:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "34003:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "34003:43:15"
																},
																"nativeSrc": "34003:71:15",
																"nodeType": "YulFunctionCall",
																"src": "34003:71:15"
															},
															"nativeSrc": "34003:71:15",
															"nodeType": "YulExpressionStatement",
															"src": "34003:71:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "34128:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "34128:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "34141:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "34141:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "34152:2:15",
																				"nodeType": "YulLiteral",
																				"src": "34152:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "34137:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "34137:3:15"
																		},
																		"nativeSrc": "34137:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "34137:18:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "34084:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "34084:43:15"
																},
																"nativeSrc": "34084:72:15",
																"nodeType": "YulFunctionCall",
																"src": "34084:72:15"
															},
															"nativeSrc": "34084:72:15",
															"nodeType": "YulExpressionStatement",
															"src": "34084:72:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "34210:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "34210:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "34223:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "34223:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "34234:2:15",
																				"nodeType": "YulLiteral",
																				"src": "34234:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "34219:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "34219:3:15"
																		},
																		"nativeSrc": "34219:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "34219:18:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "34166:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "34166:43:15"
																},
																"nativeSrc": "34166:72:15",
																"nodeType": "YulFunctionCall",
																"src": "34166:72:15"
															},
															"nativeSrc": "34166:72:15",
															"nodeType": "YulExpressionStatement",
															"src": "34166:72:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "33803:442:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "33913:9:15",
														"nodeType": "YulTypedName",
														"src": "33913:9:15",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "33925:6:15",
														"nodeType": "YulTypedName",
														"src": "33925:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "33933:6:15",
														"nodeType": "YulTypedName",
														"src": "33933:6:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "33941:6:15",
														"nodeType": "YulTypedName",
														"src": "33941:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "33952:4:15",
														"nodeType": "YulTypedName",
														"src": "33952:4:15",
														"type": ""
													}
												],
												"src": "33803:442:15"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC20_$561_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC20_$561_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$561_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$561__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$561_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    // uint256[]\n    function abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_uint256(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // uint256[]\n    function abi_decode_t_array$_t_uint256_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 128))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value4 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bytes4_to_t_bytes4_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes4(value))\n    }\n\n    function abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes4_to_t_bytes4_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function validator_revert_t_uint8(value) {\n        if iszero(eq(value, cleanup_t_uint8(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint8(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint8(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256t_uint8(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint8(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function convert_t_contract$_IERC1155_$360_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC1155_$360_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC1155_$360_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC1155_$360__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC1155_$360_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 128))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value4 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_aa29b780b68936bfd0a853c44e2650b3d0dacee32c7f0cdc2421e6a8638fa1b4(memPtr) {\n\n        mstore(add(memPtr, 0), \"insuffcient amount\")\n\n    }\n\n    function abi_encode_t_stringliteral_aa29b780b68936bfd0a853c44e2650b3d0dacee32c7f0cdc2421e6a8638fa1b4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 18)\n        store_literal_in_memory_aa29b780b68936bfd0a853c44e2650b3d0dacee32c7f0cdc2421e6a8638fa1b4(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_aa29b780b68936bfd0a853c44e2650b3d0dacee32c7f0cdc2421e6a8638fa1b4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_aa29b780b68936bfd0a853c44e2650b3d0dacee32c7f0cdc2421e6a8638fa1b4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(memPtr) {\n\n    }\n\n    function abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, 0)\n        store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(pos)\n        end := add(pos, 0)\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos ) -> end {\n\n        pos := abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_743f341dbd5b34a8c4b55eb3374eeb8e53791ae693ac55d74c0130afb734375d(memPtr) {\n\n        mstore(add(memPtr, 0), \"unable to withdraw matic\")\n\n    }\n\n    function abi_encode_t_stringliteral_743f341dbd5b34a8c4b55eb3374eeb8e53791ae693ac55d74c0130afb734375d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_743f341dbd5b34a8c4b55eb3374eeb8e53791ae693ac55d74c0130afb734375d(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_743f341dbd5b34a8c4b55eb3374eeb8e53791ae693ac55d74c0130afb734375d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_743f341dbd5b34a8c4b55eb3374eeb8e53791ae693ac55d74c0130afb734375d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_e5a68e1890c06b08dae31f764e95e8f1a2c25fa5fd06a39f1ed4630ab3d8317c(memPtr) {\n\n        mstore(add(memPtr, 0), \"price is not set yet\")\n\n    }\n\n    function abi_encode_t_stringliteral_e5a68e1890c06b08dae31f764e95e8f1a2c25fa5fd06a39f1ed4630ab3d8317c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_e5a68e1890c06b08dae31f764e95e8f1a2c25fa5fd06a39f1ed4630ab3d8317c(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e5a68e1890c06b08dae31f764e95e8f1a2c25fa5fd06a39f1ed4630ab3d8317c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e5a68e1890c06b08dae31f764e95e8f1a2c25fa5fd06a39f1ed4630ab3d8317c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_8177479f5ad9c40bafd12e1ed3db40c887baca8cbfff268a90cc65968008dcac(memPtr) {\n\n        mstore(add(memPtr, 0), \"amount not enough\")\n\n    }\n\n    function abi_encode_t_stringliteral_8177479f5ad9c40bafd12e1ed3db40c887baca8cbfff268a90cc65968008dcac_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 17)\n        store_literal_in_memory_8177479f5ad9c40bafd12e1ed3db40c887baca8cbfff268a90cc65968008dcac(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_8177479f5ad9c40bafd12e1ed3db40c887baca8cbfff268a90cc65968008dcac__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8177479f5ad9c40bafd12e1ed3db40c887baca8cbfff268a90cc65968008dcac_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_e111634b261d696158fb58291ba33104cff741f79f092956e352cd551909642b(memPtr) {\n\n        mstore(add(memPtr, 0), \"balance is not enough\")\n\n    }\n\n    function abi_encode_t_stringliteral_e111634b261d696158fb58291ba33104cff741f79f092956e352cd551909642b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_e111634b261d696158fb58291ba33104cff741f79f092956e352cd551909642b(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e111634b261d696158fb58291ba33104cff741f79f092956e352cd551909642b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e111634b261d696158fb58291ba33104cff741f79f092956e352cd551909642b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_49886143fed4f67f7143b146962ea8b8925c2fdc5341127d3966dea0fe25a8b9(memPtr) {\n\n        mstore(add(memPtr, 0), \"insufficient token\")\n\n    }\n\n    function abi_encode_t_stringliteral_49886143fed4f67f7143b146962ea8b8925c2fdc5341127d3966dea0fe25a8b9_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 18)\n        store_literal_in_memory_49886143fed4f67f7143b146962ea8b8925c2fdc5341127d3966dea0fe25a8b9(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_49886143fed4f67f7143b146962ea8b8925c2fdc5341127d3966dea0fe25a8b9__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_49886143fed4f67f7143b146962ea8b8925c2fdc5341127d3966dea0fe25a8b9_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_12559359288c4fce39d17fa0f1324f72a3da45512a522d92ebf3218fb243f801(memPtr) {\n\n        mstore(add(memPtr, 0), \"insufficient token approval\")\n\n    }\n\n    function abi_encode_t_stringliteral_12559359288c4fce39d17fa0f1324f72a3da45512a522d92ebf3218fb243f801_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 27)\n        store_literal_in_memory_12559359288c4fce39d17fa0f1324f72a3da45512a522d92ebf3218fb243f801(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_12559359288c4fce39d17fa0f1324f72a3da45512a522d92ebf3218fb243f801__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_12559359288c4fce39d17fa0f1324f72a3da45512a522d92ebf3218fb243f801_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function convert_t_uint8_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint8(value)))\n    }\n\n    function abi_encode_t_uint8_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, convert_t_uint8_to_t_uint256(value))\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, 0)\n        store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(pos)\n        end := add(pos, 0)\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_uint8_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint8_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        mstore(add(headStart, 128), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint8_t_uint256__to_t_uint256_t_uint256_t_uint8_t_uint256__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function store_literal_in_memory_248afc2f7838f28c4e3e8b4422d9aefd390d276ca06a0ae623456964600f75f2(memPtr) {\n\n        mstore(add(memPtr, 0), \"price not enough\")\n\n    }\n\n    function abi_encode_t_stringliteral_248afc2f7838f28c4e3e8b4422d9aefd390d276ca06a0ae623456964600f75f2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 16)\n        store_literal_in_memory_248afc2f7838f28c4e3e8b4422d9aefd390d276ca06a0ae623456964600f75f2(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_248afc2f7838f28c4e3e8b4422d9aefd390d276ca06a0ae623456964600f75f2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_248afc2f7838f28c4e3e8b4422d9aefd390d276ca06a0ae623456964600f75f2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_594ff2dfc35e5b8979a04d047bc1811cd0832013e67a9ef5bc97a173e7a27efb(memPtr) {\n\n        mstore(add(memPtr, 0), \"mint failed\")\n\n    }\n\n    function abi_encode_t_stringliteral_594ff2dfc35e5b8979a04d047bc1811cd0832013e67a9ef5bc97a173e7a27efb_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 11)\n        store_literal_in_memory_594ff2dfc35e5b8979a04d047bc1811cd0832013e67a9ef5bc97a173e7a27efb(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_594ff2dfc35e5b8979a04d047bc1811cd0832013e67a9ef5bc97a173e7a27efb__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_594ff2dfc35e5b8979a04d047bc1811cd0832013e67a9ef5bc97a173e7a27efb_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_58b0c597f29dac8001964c5c8f94457e37567080fbc7198aa316b42b6379f65b(memPtr) {\n\n        mstore(add(memPtr, 0), \"incorrect sender\")\n\n    }\n\n    function abi_encode_t_stringliteral_58b0c597f29dac8001964c5c8f94457e37567080fbc7198aa316b42b6379f65b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 16)\n        store_literal_in_memory_58b0c597f29dac8001964c5c8f94457e37567080fbc7198aa316b42b6379f65b(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_58b0c597f29dac8001964c5c8f94457e37567080fbc7198aa316b42b6379f65b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_58b0c597f29dac8001964c5c8f94457e37567080fbc7198aa316b42b6379f65b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_4c1122224259dd0b02fff95af769f256a8450d91cf0444f02e6c136dce106f44(memPtr) {\n\n        mstore(add(memPtr, 0), \"quantity is zero\")\n\n    }\n\n    function abi_encode_t_stringliteral_4c1122224259dd0b02fff95af769f256a8450d91cf0444f02e6c136dce106f44_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 16)\n        store_literal_in_memory_4c1122224259dd0b02fff95af769f256a8450d91cf0444f02e6c136dce106f44(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_4c1122224259dd0b02fff95af769f256a8450d91cf0444f02e6c136dce106f44__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4c1122224259dd0b02fff95af769f256a8450d91cf0444f02e6c136dce106f44_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_uint256__to_t_address_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function store_literal_in_memory_240c2a2420364d9260a9d9de5c0bdeaef40ae9271ae29d4c186edd83349afc50(memPtr) {\n\n        mstore(add(memPtr, 0), \"tokenId is zero\")\n\n    }\n\n    function abi_encode_t_stringliteral_240c2a2420364d9260a9d9de5c0bdeaef40ae9271ae29d4c186edd83349afc50_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 15)\n        store_literal_in_memory_240c2a2420364d9260a9d9de5c0bdeaef40ae9271ae29d4c186edd83349afc50(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_240c2a2420364d9260a9d9de5c0bdeaef40ae9271ae29d4c186edd83349afc50__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_240c2a2420364d9260a9d9de5c0bdeaef40ae9271ae29d4c186edd83349afc50_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_ee8b0754ac04b271c493c71118fe013f51611851aeb777bded224dc19d7cd48c(memPtr) {\n\n        mstore(add(memPtr, 0), \"price is zero\")\n\n    }\n\n    function abi_encode_t_stringliteral_ee8b0754ac04b271c493c71118fe013f51611851aeb777bded224dc19d7cd48c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 13)\n        store_literal_in_memory_ee8b0754ac04b271c493c71118fe013f51611851aeb777bded224dc19d7cd48c(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ee8b0754ac04b271c493c71118fe013f51611851aeb777bded224dc19d7cd48c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ee8b0754ac04b271c493c71118fe013f51611851aeb777bded224dc19d7cd48c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n}\n",
									"id": 15,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106100dc575f3560e01c8063d407cee71161007e578063edca914c11610058578063edca914c14610290578063f23a6e611461029a578063f2fde38b146102d6578063f7d97577146102fe576100dc565b8063d407cee714610202578063d4ddce8a1461022a578063ea75aa8f14610266576100dc565b80633ccfd60b116100ba5780633ccfd60b14610170578063715018a6146101865780638da5cb5b1461019c578063bc197c81146101c6576100dc565b806301ffc9a7146100e057806312065fe01461011c5780632c1449e114610146575b5f80fd5b3480156100eb575f80fd5b50610106600480360381019061010191906111e2565b610326565b6040516101139190611227565b60405180910390f35b348015610127575f80fd5b5061013061039f565b60405161013d9190611258565b60405180910390f35b348015610151575f80fd5b5061015a6103a6565b60405161016791906112eb565b60405180910390f35b34801561017b575f80fd5b506101846103cb565b005b348015610191575f80fd5b5061019a610505565b005b3480156101a7575f80fd5b506101b0610518565b6040516101bd9190611324565b60405180910390f35b3480156101d1575f80fd5b506101ec60048036038101906101e79190611591565b61053f565b6040516101f9919061166b565b60405180910390f35b34801561020d575f80fd5b50610228600480360381019061022391906116ba565b610553565b005b348015610235575f80fd5b50610250600480360381019061024b919061170a565b6109df565b60405161025d9190611258565b60405180910390f35b348015610271575f80fd5b5061027a6109f4565b6040516102879190611755565b60405180910390f35b610298610a19565b005b3480156102a5575f80fd5b506102c060048036038101906102bb919061176e565b610c20565b6040516102cd919061166b565b60405180910390f35b3480156102e1575f80fd5b506102fc60048036038101906102f79190611801565b610d42565b005b348015610309575f80fd5b50610324600480360381019061031f919061182c565b610dc6565b005b5f7f4e2312e0000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480610398575061039782610ea7565b5b9050919050565b5f47905090565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6103d3610f10565b5f6103dc61039f565b90505f8103610420576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610417906118c4565b60405180910390fd5b5f3373ffffffffffffffffffffffffffffffffffffffff16826040516104459061190f565b5f6040518083038185875af1925050503d805f811461047f576040519150601f19603f3d011682016040523d82523d5f602084013e610484565b606091505b50509050806104c8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104bf9061196d565b60405180910390fd5b7f884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a942436433836040516104f992919061198b565b60405180910390a15050565b61050d610f10565b6105165f610f97565b565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b5f63bc197c8160e01b905095945050505050565b5f3390505f60035f8681526020019081526020015f2054036105aa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105a1906119fc565b60405180910390fd5b8160ff1660035f8681526020019081526020015f20546105ca9190611a47565b83101561060c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060390611ad2565b60405180910390fd5b8160ff1660025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1662fdd58e30876040518363ffffffff1660e01b815260040161066b92919061198b565b602060405180830381865afa158015610686573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906106aa9190611b04565b10156106eb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106e290611b79565b60405180910390fd5b8260015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231836040518263ffffffff1660e01b81526004016107469190611324565b602060405180830381865afa158015610761573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906107859190611b04565b10156107c6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107bd90611be1565b60405180910390fd5b8260015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e83306040518363ffffffff1660e01b8152600401610823929190611bff565b602060405180830381865afa15801561083e573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906108629190611b04565b10156108a3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161089a90611c70565b60405180910390fd5b6108f8816108af610518565b8560015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16611058909392919063ffffffff16565b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f242432a308387866040518563ffffffff1660e01b81526004016109589493929190611cee565b5f604051808303815f87803b15801561096f575f80fd5b505af1158015610981573d5f803e3d5ffd5b505050508073ffffffffffffffffffffffffffffffffffffffff167fb911d7e2ec7c85dd17dc5dbf9c086e0ade9a12a268015519a2a5f93ce5754fea858585426040516109d19493929190611d53565b60405180910390a250505050565b6003602052805f5260405f205f915090505481565b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b662386f26fc10000341015610a63576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a5a90611de0565b60405180910390fd5b5f60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16337001000000000000000000000000000000006001604051602401610ac393929190611dfe565b6040516020818303038152906040527f156e29f6000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050604051610b4d9190611e7b565b5f604051808303815f865af19150503d805f8114610b86576040519150601f19603f3d011682016040523d82523d5f602084013e610b8b565b606091505b5050905080610bcf576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bc690611edb565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff167f2a3164428cba5dad15f5ffe47e10cbefdcbbe9e269fd482753982ee8b2648c3e42604051610c159190611258565b60405180910390a250565b5f60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610cb0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ca790611f43565b60405180910390fd5b5f8303610cf2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ce990611fab565b60405180910390fd5b7f1650d49bac940346e34bac1dde642598b57ba618d7a0c005a91257851cae2c2486868686604051610d279493929190611fc9565b60405180910390a163f23a6e6160e01b905095945050505050565b610d4a610f10565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610dba575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610db19190611324565b60405180910390fd5b610dc381610f97565b50565b610dce610f10565b5f8203610e10576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e0790612056565b60405180910390fd5b5f8103610e52576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e49906120be565b60405180910390fd5b8060035f8481526020019081526020015f20819055507f18e75bb8c091a6448c12a2023f055b2714c151b941a91df8b9938788769ffe13828242604051610e9b939291906120dc565b60405180910390a15050565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b610f186110da565b73ffffffffffffffffffffffffffffffffffffffff16610f36610518565b73ffffffffffffffffffffffffffffffffffffffff1614610f9557610f596110da565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610f8c9190611324565b60405180910390fd5b565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6110d4848573ffffffffffffffffffffffffffffffffffffffff166323b872dd86868660405160240161108d93929190612111565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506110e1565b50505050565b5f33905090565b5f8060205f8451602086015f885af180611100576040513d5f823e3d81fd5b3d92505f519150505f8214611119576001811415611134565b5f8473ffffffffffffffffffffffffffffffffffffffff163b145b1561117657836040517f5274afe700000000000000000000000000000000000000000000000000000000815260040161116d9190611324565b60405180910390fd5b50505050565b5f604051905090565b5f80fd5b5f80fd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6111c18161118d565b81146111cb575f80fd5b50565b5f813590506111dc816111b8565b92915050565b5f602082840312156111f7576111f6611185565b5b5f611204848285016111ce565b91505092915050565b5f8115159050919050565b6112218161120d565b82525050565b5f60208201905061123a5f830184611218565b92915050565b5f819050919050565b61125281611240565b82525050565b5f60208201905061126b5f830184611249565b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f819050919050565b5f6112b36112ae6112a984611271565b611290565b611271565b9050919050565b5f6112c482611299565b9050919050565b5f6112d5826112ba565b9050919050565b6112e5816112cb565b82525050565b5f6020820190506112fe5f8301846112dc565b92915050565b5f61130e82611271565b9050919050565b61131e81611304565b82525050565b5f6020820190506113375f830184611315565b92915050565b61134681611304565b8114611350575f80fd5b50565b5f813590506113618161133d565b92915050565b5f80fd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b6113b18261136b565b810181811067ffffffffffffffff821117156113d0576113cf61137b565b5b80604052505050565b5f6113e261117c565b90506113ee82826113a8565b919050565b5f67ffffffffffffffff82111561140d5761140c61137b565b5b602082029050602081019050919050565b5f80fd5b61142b81611240565b8114611435575f80fd5b50565b5f8135905061144681611422565b92915050565b5f61145e611459846113f3565b6113d9565b905080838252602082019050602084028301858111156114815761148061141e565b5b835b818110156114aa57806114968882611438565b845260208401935050602081019050611483565b5050509392505050565b5f82601f8301126114c8576114c7611367565b5b81356114d884826020860161144c565b91505092915050565b5f80fd5b5f67ffffffffffffffff8211156114ff576114fe61137b565b5b6115088261136b565b9050602081019050919050565b828183375f83830152505050565b5f611535611530846114e5565b6113d9565b905082815260208101848484011115611551576115506114e1565b5b61155c848285611515565b509392505050565b5f82601f83011261157857611577611367565b5b8135611588848260208601611523565b91505092915050565b5f805f805f60a086880312156115aa576115a9611185565b5b5f6115b788828901611353565b95505060206115c888828901611353565b945050604086013567ffffffffffffffff8111156115e9576115e8611189565b5b6115f5888289016114b4565b935050606086013567ffffffffffffffff81111561161657611615611189565b5b611622888289016114b4565b925050608086013567ffffffffffffffff81111561164357611642611189565b5b61164f88828901611564565b9150509295509295909350565b6116658161118d565b82525050565b5f60208201905061167e5f83018461165c565b92915050565b5f60ff82169050919050565b61169981611684565b81146116a3575f80fd5b50565b5f813590506116b481611690565b92915050565b5f805f606084860312156116d1576116d0611185565b5b5f6116de86828701611438565b93505060206116ef86828701611438565b9250506040611700868287016116a6565b9150509250925092565b5f6020828403121561171f5761171e611185565b5b5f61172c84828501611438565b91505092915050565b5f61173f826112ba565b9050919050565b61174f81611735565b82525050565b5f6020820190506117685f830184611746565b92915050565b5f805f805f60a0868803121561178757611786611185565b5b5f61179488828901611353565b95505060206117a588828901611353565b94505060406117b688828901611438565b93505060606117c788828901611438565b925050608086013567ffffffffffffffff8111156117e8576117e7611189565b5b6117f488828901611564565b9150509295509295909350565b5f6020828403121561181657611815611185565b5b5f61182384828501611353565b91505092915050565b5f806040838503121561184257611841611185565b5b5f61184f85828601611438565b925050602061186085828601611438565b9150509250929050565b5f82825260208201905092915050565b7f696e737566666369656e7420616d6f756e7400000000000000000000000000005f82015250565b5f6118ae60128361186a565b91506118b98261187a565b602082019050919050565b5f6020820190508181035f8301526118db816118a2565b9050919050565b5f81905092915050565b50565b5f6118fa5f836118e2565b9150611905826118ec565b5f82019050919050565b5f611919826118ef565b9150819050919050565b7f756e61626c6520746f207769746864726177206d6174696300000000000000005f82015250565b5f61195760188361186a565b915061196282611923565b602082019050919050565b5f6020820190508181035f8301526119848161194b565b9050919050565b5f60408201905061199e5f830185611315565b6119ab6020830184611249565b9392505050565b7f7072696365206973206e6f7420736574207965740000000000000000000000005f82015250565b5f6119e660148361186a565b91506119f1826119b2565b602082019050919050565b5f6020820190508181035f830152611a13816119da565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f611a5182611240565b9150611a5c83611240565b9250828202611a6a81611240565b91508282048414831517611a8157611a80611a1a565b5b5092915050565b7f616d6f756e74206e6f7420656e6f7567680000000000000000000000000000005f82015250565b5f611abc60118361186a565b9150611ac782611a88565b602082019050919050565b5f6020820190508181035f830152611ae981611ab0565b9050919050565b5f81519050611afe81611422565b92915050565b5f60208284031215611b1957611b18611185565b5b5f611b2684828501611af0565b91505092915050565b7f62616c616e6365206973206e6f7420656e6f75676800000000000000000000005f82015250565b5f611b6360158361186a565b9150611b6e82611b2f565b602082019050919050565b5f6020820190508181035f830152611b9081611b57565b9050919050565b7f696e73756666696369656e7420746f6b656e00000000000000000000000000005f82015250565b5f611bcb60128361186a565b9150611bd682611b97565b602082019050919050565b5f6020820190508181035f830152611bf881611bbf565b9050919050565b5f604082019050611c125f830185611315565b611c1f6020830184611315565b9392505050565b7f696e73756666696369656e7420746f6b656e20617070726f76616c00000000005f82015250565b5f611c5a601b8361186a565b9150611c6582611c26565b602082019050919050565b5f6020820190508181035f830152611c8781611c4e565b9050919050565b5f611ca8611ca3611c9e84611684565b611290565b611240565b9050919050565b611cb881611c8e565b82525050565b5f82825260208201905092915050565b5f611cd95f83611cbe565b9150611ce4826118ec565b5f82019050919050565b5f60a082019050611d015f830187611315565b611d0e6020830186611315565b611d1b6040830185611249565b611d286060830184611caf565b8181036080830152611d3981611cce565b905095945050505050565b611d4d81611684565b82525050565b5f608082019050611d665f830187611249565b611d736020830186611249565b611d806040830185611d44565b611d8d6060830184611249565b95945050505050565b7f7072696365206e6f7420656e6f756768000000000000000000000000000000005f82015250565b5f611dca60108361186a565b9150611dd582611d96565b602082019050919050565b5f6020820190508181035f830152611df781611dbe565b9050919050565b5f606082019050611e115f830186611315565b611e1e6020830185611249565b611e2b6040830184611249565b949350505050565b5f81519050919050565b8281835e5f83830152505050565b5f611e5582611e33565b611e5f81856118e2565b9350611e6f818560208601611e3d565b80840191505092915050565b5f611e868284611e4b565b915081905092915050565b7f6d696e74206661696c65640000000000000000000000000000000000000000005f82015250565b5f611ec5600b8361186a565b9150611ed082611e91565b602082019050919050565b5f6020820190508181035f830152611ef281611eb9565b9050919050565b7f696e636f72726563742073656e646572000000000000000000000000000000005f82015250565b5f611f2d60108361186a565b9150611f3882611ef9565b602082019050919050565b5f6020820190508181035f830152611f5a81611f21565b9050919050565b7f7175616e74697479206973207a65726f000000000000000000000000000000005f82015250565b5f611f9560108361186a565b9150611fa082611f61565b602082019050919050565b5f6020820190508181035f830152611fc281611f89565b9050919050565b5f608082019050611fdc5f830187611315565b611fe96020830186611315565b611ff66040830185611249565b6120036060830184611249565b95945050505050565b7f746f6b656e4964206973207a65726f00000000000000000000000000000000005f82015250565b5f612040600f8361186a565b915061204b8261200c565b602082019050919050565b5f6020820190508181035f83015261206d81612034565b9050919050565b7f7072696365206973207a65726f000000000000000000000000000000000000005f82015250565b5f6120a8600d8361186a565b91506120b382612074565b602082019050919050565b5f6020820190508181035f8301526120d58161209c565b9050919050565b5f6060820190506120ef5f830186611249565b6120fc6020830185611249565b6121096040830184611249565b949350505050565b5f6060820190506121245f830186611315565b6121316020830185611315565b61213e6040830184611249565b94935050505056fea264697066735822122098e28633849d2e62da14111fe0c7e3b6bf16866c563c6fc9e0820b8008563ffe64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xDC JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xD407CEE7 GT PUSH2 0x7E JUMPI DUP1 PUSH4 0xEDCA914C GT PUSH2 0x58 JUMPI DUP1 PUSH4 0xEDCA914C EQ PUSH2 0x290 JUMPI DUP1 PUSH4 0xF23A6E61 EQ PUSH2 0x29A JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x2D6 JUMPI DUP1 PUSH4 0xF7D97577 EQ PUSH2 0x2FE JUMPI PUSH2 0xDC JUMP JUMPDEST DUP1 PUSH4 0xD407CEE7 EQ PUSH2 0x202 JUMPI DUP1 PUSH4 0xD4DDCE8A EQ PUSH2 0x22A JUMPI DUP1 PUSH4 0xEA75AA8F EQ PUSH2 0x266 JUMPI PUSH2 0xDC JUMP JUMPDEST DUP1 PUSH4 0x3CCFD60B GT PUSH2 0xBA JUMPI DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x170 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x186 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x19C JUMPI DUP1 PUSH4 0xBC197C81 EQ PUSH2 0x1C6 JUMPI PUSH2 0xDC JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xE0 JUMPI DUP1 PUSH4 0x12065FE0 EQ PUSH2 0x11C JUMPI DUP1 PUSH4 0x2C1449E1 EQ PUSH2 0x146 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xEB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x106 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x101 SWAP2 SWAP1 PUSH2 0x11E2 JUMP JUMPDEST PUSH2 0x326 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x113 SWAP2 SWAP1 PUSH2 0x1227 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x127 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x130 PUSH2 0x39F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13D SWAP2 SWAP1 PUSH2 0x1258 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x151 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x15A PUSH2 0x3A6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x167 SWAP2 SWAP1 PUSH2 0x12EB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x17B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x184 PUSH2 0x3CB JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x191 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x19A PUSH2 0x505 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1A7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B0 PUSH2 0x518 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BD SWAP2 SWAP1 PUSH2 0x1324 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1EC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E7 SWAP2 SWAP1 PUSH2 0x1591 JUMP JUMPDEST PUSH2 0x53F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F9 SWAP2 SWAP1 PUSH2 0x166B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x20D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x228 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x223 SWAP2 SWAP1 PUSH2 0x16BA JUMP JUMPDEST PUSH2 0x553 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x235 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x250 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x24B SWAP2 SWAP1 PUSH2 0x170A JUMP JUMPDEST PUSH2 0x9DF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25D SWAP2 SWAP1 PUSH2 0x1258 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x271 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x27A PUSH2 0x9F4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x287 SWAP2 SWAP1 PUSH2 0x1755 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x298 PUSH2 0xA19 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2BB SWAP2 SWAP1 PUSH2 0x176E JUMP JUMPDEST PUSH2 0xC20 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2CD SWAP2 SWAP1 PUSH2 0x166B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2FC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F7 SWAP2 SWAP1 PUSH2 0x1801 JUMP JUMPDEST PUSH2 0xD42 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x309 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x324 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x31F SWAP2 SWAP1 PUSH2 0x182C JUMP JUMPDEST PUSH2 0xDC6 JUMP JUMPDEST STOP JUMPDEST PUSH0 PUSH32 0x4E2312E000000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x398 JUMPI POP PUSH2 0x397 DUP3 PUSH2 0xEA7 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 SELFBALANCE SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x3D3 PUSH2 0xF10 JUMP JUMPDEST PUSH0 PUSH2 0x3DC PUSH2 0x39F JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 SUB PUSH2 0x420 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x417 SWAP1 PUSH2 0x18C4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0x445 SWAP1 PUSH2 0x190F JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x47F JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x484 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x4C8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4BF SWAP1 PUSH2 0x196D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x884EDAD9CE6FA2440D8A54CC123490EB96D2768479D49FF9C7366125A9424364 CALLER DUP4 PUSH1 0x40 MLOAD PUSH2 0x4F9 SWAP3 SWAP2 SWAP1 PUSH2 0x198B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH2 0x50D PUSH2 0xF10 JUMP JUMPDEST PUSH2 0x516 PUSH0 PUSH2 0xF97 JUMP JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH4 0xBC197C81 PUSH1 0xE0 SHL SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP PUSH0 PUSH1 0x3 PUSH0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SUB PUSH2 0x5AA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5A1 SWAP1 PUSH2 0x19FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0xFF AND PUSH1 0x3 PUSH0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x5CA SWAP2 SWAP1 PUSH2 0x1A47 JUMP JUMPDEST DUP4 LT ISZERO PUSH2 0x60C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x603 SWAP1 PUSH2 0x1AD2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0xFF AND PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH3 0xFDD58E ADDRESS DUP8 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x66B SWAP3 SWAP2 SWAP1 PUSH2 0x198B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x686 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6AA SWAP2 SWAP1 PUSH2 0x1B04 JUMP JUMPDEST LT ISZERO PUSH2 0x6EB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6E2 SWAP1 PUSH2 0x1B79 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x746 SWAP2 SWAP1 PUSH2 0x1324 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x761 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x785 SWAP2 SWAP1 PUSH2 0x1B04 JUMP JUMPDEST LT ISZERO PUSH2 0x7C6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7BD SWAP1 PUSH2 0x1BE1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDD62ED3E DUP4 ADDRESS PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x823 SWAP3 SWAP2 SWAP1 PUSH2 0x1BFF JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x83E JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x862 SWAP2 SWAP1 PUSH2 0x1B04 JUMP JUMPDEST LT ISZERO PUSH2 0x8A3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x89A SWAP1 PUSH2 0x1C70 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8F8 DUP2 PUSH2 0x8AF PUSH2 0x518 JUMP JUMPDEST DUP6 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1058 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF242432A ADDRESS DUP4 DUP8 DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x958 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1CEE JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x96F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x981 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xB911D7E2EC7C85DD17DC5DBF9C086E0ADE9A12A268015519A2A5F93CE5754FEA DUP6 DUP6 DUP6 TIMESTAMP PUSH1 0x40 MLOAD PUSH2 0x9D1 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1D53 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH7 0x2386F26FC10000 CALLVALUE LT ISZERO PUSH2 0xA63 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA5A SWAP1 PUSH2 0x1DE0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH17 0x100000000000000000000000000000000 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0xAC3 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1DFE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH32 0x156E29F600000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD PUSH2 0xB4D SWAP2 SWAP1 PUSH2 0x1E7B JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0xB86 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xB8B JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0xBCF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBC6 SWAP1 PUSH2 0x1EDB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x2A3164428CBA5DAD15F5FFE47E10CBEFDCBBE9E269FD482753982EE8B2648C3E TIMESTAMP PUSH1 0x40 MLOAD PUSH2 0xC15 SWAP2 SWAP1 PUSH2 0x1258 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xCB0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCA7 SWAP1 PUSH2 0x1F43 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP4 SUB PUSH2 0xCF2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCE9 SWAP1 PUSH2 0x1FAB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x1650D49BAC940346E34BAC1DDE642598B57BA618D7A0C005A91257851CAE2C24 DUP7 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0xD27 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1FC9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH4 0xF23A6E61 PUSH1 0xE0 SHL SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0xD4A PUSH2 0xF10 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xDBA JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDB1 SWAP2 SWAP1 PUSH2 0x1324 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xDC3 DUP2 PUSH2 0xF97 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xDCE PUSH2 0xF10 JUMP JUMPDEST PUSH0 DUP3 SUB PUSH2 0xE10 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE07 SWAP1 PUSH2 0x2056 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 SUB PUSH2 0xE52 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE49 SWAP1 PUSH2 0x20BE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH32 0x18E75BB8C091A6448C12A2023F055B2714C151B941A91DF8B9938788769FFE13 DUP3 DUP3 TIMESTAMP PUSH1 0x40 MLOAD PUSH2 0xE9B SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x20DC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF18 PUSH2 0x10DA JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xF36 PUSH2 0x518 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xF95 JUMPI PUSH2 0xF59 PUSH2 0x10DA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF8C SWAP2 SWAP1 PUSH2 0x1324 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x10D4 DUP5 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x108D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2111 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x10E1 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x20 PUSH0 DUP5 MLOAD PUSH1 0x20 DUP7 ADD PUSH0 DUP9 GAS CALL DUP1 PUSH2 0x1100 JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE DUP2 REVERT JUMPDEST RETURNDATASIZE SWAP3 POP PUSH0 MLOAD SWAP2 POP POP PUSH0 DUP3 EQ PUSH2 0x1119 JUMPI PUSH1 0x1 DUP2 EQ ISZERO PUSH2 0x1134 JUMP JUMPDEST PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x1176 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x116D SWAP2 SWAP1 PUSH2 0x1324 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x11C1 DUP2 PUSH2 0x118D JUMP JUMPDEST DUP2 EQ PUSH2 0x11CB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x11DC DUP2 PUSH2 0x11B8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x11F7 JUMPI PUSH2 0x11F6 PUSH2 0x1185 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1204 DUP5 DUP3 DUP6 ADD PUSH2 0x11CE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1221 DUP2 PUSH2 0x120D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x123A PUSH0 DUP4 ADD DUP5 PUSH2 0x1218 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1252 DUP2 PUSH2 0x1240 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x126B PUSH0 DUP4 ADD DUP5 PUSH2 0x1249 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x12B3 PUSH2 0x12AE PUSH2 0x12A9 DUP5 PUSH2 0x1271 JUMP JUMPDEST PUSH2 0x1290 JUMP JUMPDEST PUSH2 0x1271 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x12C4 DUP3 PUSH2 0x1299 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x12D5 DUP3 PUSH2 0x12BA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x12E5 DUP2 PUSH2 0x12CB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x12FE PUSH0 DUP4 ADD DUP5 PUSH2 0x12DC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x130E DUP3 PUSH2 0x1271 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x131E DUP2 PUSH2 0x1304 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1337 PUSH0 DUP4 ADD DUP5 PUSH2 0x1315 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1346 DUP2 PUSH2 0x1304 JUMP JUMPDEST DUP2 EQ PUSH2 0x1350 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1361 DUP2 PUSH2 0x133D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x13B1 DUP3 PUSH2 0x136B JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x13D0 JUMPI PUSH2 0x13CF PUSH2 0x137B JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x13E2 PUSH2 0x117C JUMP JUMPDEST SWAP1 POP PUSH2 0x13EE DUP3 DUP3 PUSH2 0x13A8 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x140D JUMPI PUSH2 0x140C PUSH2 0x137B JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x142B DUP2 PUSH2 0x1240 JUMP JUMPDEST DUP2 EQ PUSH2 0x1435 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1446 DUP2 PUSH2 0x1422 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x145E PUSH2 0x1459 DUP5 PUSH2 0x13F3 JUMP JUMPDEST PUSH2 0x13D9 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x1481 JUMPI PUSH2 0x1480 PUSH2 0x141E JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x14AA JUMPI DUP1 PUSH2 0x1496 DUP9 DUP3 PUSH2 0x1438 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1483 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x14C8 JUMPI PUSH2 0x14C7 PUSH2 0x1367 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x14D8 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x144C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x14FF JUMPI PUSH2 0x14FE PUSH2 0x137B JUMP JUMPDEST JUMPDEST PUSH2 0x1508 DUP3 PUSH2 0x136B JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1535 PUSH2 0x1530 DUP5 PUSH2 0x14E5 JUMP JUMPDEST PUSH2 0x13D9 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1551 JUMPI PUSH2 0x1550 PUSH2 0x14E1 JUMP JUMPDEST JUMPDEST PUSH2 0x155C DUP5 DUP3 DUP6 PUSH2 0x1515 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1578 JUMPI PUSH2 0x1577 PUSH2 0x1367 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1588 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1523 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x15AA JUMPI PUSH2 0x15A9 PUSH2 0x1185 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x15B7 DUP9 DUP3 DUP10 ADD PUSH2 0x1353 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x15C8 DUP9 DUP3 DUP10 ADD PUSH2 0x1353 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x15E9 JUMPI PUSH2 0x15E8 PUSH2 0x1189 JUMP JUMPDEST JUMPDEST PUSH2 0x15F5 DUP9 DUP3 DUP10 ADD PUSH2 0x14B4 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1616 JUMPI PUSH2 0x1615 PUSH2 0x1189 JUMP JUMPDEST JUMPDEST PUSH2 0x1622 DUP9 DUP3 DUP10 ADD PUSH2 0x14B4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1643 JUMPI PUSH2 0x1642 PUSH2 0x1189 JUMP JUMPDEST JUMPDEST PUSH2 0x164F DUP9 DUP3 DUP10 ADD PUSH2 0x1564 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH2 0x1665 DUP2 PUSH2 0x118D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x167E PUSH0 DUP4 ADD DUP5 PUSH2 0x165C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1699 DUP2 PUSH2 0x1684 JUMP JUMPDEST DUP2 EQ PUSH2 0x16A3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x16B4 DUP2 PUSH2 0x1690 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x16D1 JUMPI PUSH2 0x16D0 PUSH2 0x1185 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x16DE DUP7 DUP3 DUP8 ADD PUSH2 0x1438 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x16EF DUP7 DUP3 DUP8 ADD PUSH2 0x1438 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1700 DUP7 DUP3 DUP8 ADD PUSH2 0x16A6 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x171F JUMPI PUSH2 0x171E PUSH2 0x1185 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x172C DUP5 DUP3 DUP6 ADD PUSH2 0x1438 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x173F DUP3 PUSH2 0x12BA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x174F DUP2 PUSH2 0x1735 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1768 PUSH0 DUP4 ADD DUP5 PUSH2 0x1746 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1787 JUMPI PUSH2 0x1786 PUSH2 0x1185 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1794 DUP9 DUP3 DUP10 ADD PUSH2 0x1353 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x17A5 DUP9 DUP3 DUP10 ADD PUSH2 0x1353 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x17B6 DUP9 DUP3 DUP10 ADD PUSH2 0x1438 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x17C7 DUP9 DUP3 DUP10 ADD PUSH2 0x1438 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x17E8 JUMPI PUSH2 0x17E7 PUSH2 0x1189 JUMP JUMPDEST JUMPDEST PUSH2 0x17F4 DUP9 DUP3 DUP10 ADD PUSH2 0x1564 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1816 JUMPI PUSH2 0x1815 PUSH2 0x1185 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1823 DUP5 DUP3 DUP6 ADD PUSH2 0x1353 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1842 JUMPI PUSH2 0x1841 PUSH2 0x1185 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x184F DUP6 DUP3 DUP7 ADD PUSH2 0x1438 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1860 DUP6 DUP3 DUP7 ADD PUSH2 0x1438 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x696E737566666369656E7420616D6F756E740000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x18AE PUSH1 0x12 DUP4 PUSH2 0x186A JUMP JUMPDEST SWAP2 POP PUSH2 0x18B9 DUP3 PUSH2 0x187A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x18DB DUP2 PUSH2 0x18A2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0x18FA PUSH0 DUP4 PUSH2 0x18E2 JUMP JUMPDEST SWAP2 POP PUSH2 0x1905 DUP3 PUSH2 0x18EC JUMP JUMPDEST PUSH0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1919 DUP3 PUSH2 0x18EF JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x756E61626C6520746F207769746864726177206D617469630000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1957 PUSH1 0x18 DUP4 PUSH2 0x186A JUMP JUMPDEST SWAP2 POP PUSH2 0x1962 DUP3 PUSH2 0x1923 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1984 DUP2 PUSH2 0x194B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x199E PUSH0 DUP4 ADD DUP6 PUSH2 0x1315 JUMP JUMPDEST PUSH2 0x19AB PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1249 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x7072696365206973206E6F742073657420796574000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x19E6 PUSH1 0x14 DUP4 PUSH2 0x186A JUMP JUMPDEST SWAP2 POP PUSH2 0x19F1 DUP3 PUSH2 0x19B2 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1A13 DUP2 PUSH2 0x19DA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1A51 DUP3 PUSH2 0x1240 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A5C DUP4 PUSH2 0x1240 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1A6A DUP2 PUSH2 0x1240 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1A81 JUMPI PUSH2 0x1A80 PUSH2 0x1A1A JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x616D6F756E74206E6F7420656E6F756768000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1ABC PUSH1 0x11 DUP4 PUSH2 0x186A JUMP JUMPDEST SWAP2 POP PUSH2 0x1AC7 DUP3 PUSH2 0x1A88 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1AE9 DUP2 PUSH2 0x1AB0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1AFE DUP2 PUSH2 0x1422 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B19 JUMPI PUSH2 0x1B18 PUSH2 0x1185 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1B26 DUP5 DUP3 DUP6 ADD PUSH2 0x1AF0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x62616C616E6365206973206E6F7420656E6F7567680000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1B63 PUSH1 0x15 DUP4 PUSH2 0x186A JUMP JUMPDEST SWAP2 POP PUSH2 0x1B6E DUP3 PUSH2 0x1B2F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1B90 DUP2 PUSH2 0x1B57 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x696E73756666696369656E7420746F6B656E0000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1BCB PUSH1 0x12 DUP4 PUSH2 0x186A JUMP JUMPDEST SWAP2 POP PUSH2 0x1BD6 DUP3 PUSH2 0x1B97 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1BF8 DUP2 PUSH2 0x1BBF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1C12 PUSH0 DUP4 ADD DUP6 PUSH2 0x1315 JUMP JUMPDEST PUSH2 0x1C1F PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1315 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x696E73756666696369656E7420746F6B656E20617070726F76616C0000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1C5A PUSH1 0x1B DUP4 PUSH2 0x186A JUMP JUMPDEST SWAP2 POP PUSH2 0x1C65 DUP3 PUSH2 0x1C26 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1C87 DUP2 PUSH2 0x1C4E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1CA8 PUSH2 0x1CA3 PUSH2 0x1C9E DUP5 PUSH2 0x1684 JUMP JUMPDEST PUSH2 0x1290 JUMP JUMPDEST PUSH2 0x1240 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1CB8 DUP2 PUSH2 0x1C8E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1CD9 PUSH0 DUP4 PUSH2 0x1CBE JUMP JUMPDEST SWAP2 POP PUSH2 0x1CE4 DUP3 PUSH2 0x18EC JUMP JUMPDEST PUSH0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x1D01 PUSH0 DUP4 ADD DUP8 PUSH2 0x1315 JUMP JUMPDEST PUSH2 0x1D0E PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1315 JUMP JUMPDEST PUSH2 0x1D1B PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1249 JUMP JUMPDEST PUSH2 0x1D28 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x1CAF JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x1D39 DUP2 PUSH2 0x1CCE JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1D4D DUP2 PUSH2 0x1684 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1D66 PUSH0 DUP4 ADD DUP8 PUSH2 0x1249 JUMP JUMPDEST PUSH2 0x1D73 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1249 JUMP JUMPDEST PUSH2 0x1D80 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1D44 JUMP JUMPDEST PUSH2 0x1D8D PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x1249 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x7072696365206E6F7420656E6F75676800000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1DCA PUSH1 0x10 DUP4 PUSH2 0x186A JUMP JUMPDEST SWAP2 POP PUSH2 0x1DD5 DUP3 PUSH2 0x1D96 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1DF7 DUP2 PUSH2 0x1DBE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1E11 PUSH0 DUP4 ADD DUP7 PUSH2 0x1315 JUMP JUMPDEST PUSH2 0x1E1E PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1249 JUMP JUMPDEST PUSH2 0x1E2B PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1249 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1E55 DUP3 PUSH2 0x1E33 JUMP JUMPDEST PUSH2 0x1E5F DUP2 DUP6 PUSH2 0x18E2 JUMP JUMPDEST SWAP4 POP PUSH2 0x1E6F DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1E3D JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1E86 DUP3 DUP5 PUSH2 0x1E4B JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x6D696E74206661696C6564000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1EC5 PUSH1 0xB DUP4 PUSH2 0x186A JUMP JUMPDEST SWAP2 POP PUSH2 0x1ED0 DUP3 PUSH2 0x1E91 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1EF2 DUP2 PUSH2 0x1EB9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x696E636F72726563742073656E64657200000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1F2D PUSH1 0x10 DUP4 PUSH2 0x186A JUMP JUMPDEST SWAP2 POP PUSH2 0x1F38 DUP3 PUSH2 0x1EF9 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1F5A DUP2 PUSH2 0x1F21 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x7175616E74697479206973207A65726F00000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1F95 PUSH1 0x10 DUP4 PUSH2 0x186A JUMP JUMPDEST SWAP2 POP PUSH2 0x1FA0 DUP3 PUSH2 0x1F61 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1FC2 DUP2 PUSH2 0x1F89 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1FDC PUSH0 DUP4 ADD DUP8 PUSH2 0x1315 JUMP JUMPDEST PUSH2 0x1FE9 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1315 JUMP JUMPDEST PUSH2 0x1FF6 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1249 JUMP JUMPDEST PUSH2 0x2003 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x1249 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x746F6B656E4964206973207A65726F0000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2040 PUSH1 0xF DUP4 PUSH2 0x186A JUMP JUMPDEST SWAP2 POP PUSH2 0x204B DUP3 PUSH2 0x200C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x206D DUP2 PUSH2 0x2034 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x7072696365206973207A65726F00000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x20A8 PUSH1 0xD DUP4 PUSH2 0x186A JUMP JUMPDEST SWAP2 POP PUSH2 0x20B3 DUP3 PUSH2 0x2074 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x20D5 DUP2 PUSH2 0x209C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x20EF PUSH0 DUP4 ADD DUP7 PUSH2 0x1249 JUMP JUMPDEST PUSH2 0x20FC PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1249 JUMP JUMPDEST PUSH2 0x2109 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1249 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2124 PUSH0 DUP4 ADD DUP7 PUSH2 0x1315 JUMP JUMPDEST PUSH2 0x2131 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1315 JUMP JUMPDEST PUSH2 0x213E PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1249 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP9 0xE2 DUP7 CALLER DUP5 SWAP14 0x2E PUSH3 0xDA1411 0x1F 0xE0 0xC7 0xE3 0xB6 0xBF AND DUP7 PUSH13 0x563C6FC9E0820B8008563FFE64 PUSH20 0x6F6C634300081A00330000000000000000000000 ",
							"sourceMap": "319:6282:14:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;650:221:6;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5863:99:14;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;513:26;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5970:304;;;;;;;;;;;;;:::i;:::-;;2293:101:0;;;;;;;;;;;;;:::i;:::-;;1638:85;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1102:247:6;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4010:1028:14;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;892:45;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;589:27;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5046:809;;;:::i;:::-;;2074:1928;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2543:215:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;6282:315:14;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;650:221:6;752:4;790:34;775:49;;;:11;:49;;;;:89;;;;828:36;852:11;828:23;:36::i;:::-;775:89;768:96;;650:221;;;:::o;5863:99:14:-;5906:7;5933:21;5926:28;;5863:99;:::o;513:26::-;;;;;;;;;;;;;:::o;5970:304::-;1531:13:0;:11;:13::i;:::-;6022:14:14::1;6039:12;:10;:12::i;:::-;6022:29;;6080:1;6070:6;:11:::0;6062:42:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;6116:12;6133:10;:15;;6156:6;6133:34;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6115:52;;;6186:7;6178:44;;;;;;;;;;;;:::i;:::-;;;;;;;;;6238:28;6247:10;6259:6;6238:28;;;;;;;:::i;:::-;;;;;;;;6011:263;;5970:304::o:0;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1638:85::-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;1102:247:6:-;1281:6;1306:36;;;1299:43;;1102:247;;;;;;;:::o;4010:1028:14:-;4130:13;4146:10;4130:26;;4198:1;4175:10;:19;4186:7;4175:19;;;;;;;;;;;;:24;4167:57;;;;;;;;;;;;:::i;:::-;;;;;;;;;4275:8;4253:30;;:10;:19;4264:7;4253:19;;;;;;;;;;;;:30;;;;:::i;:::-;4243:6;:40;;4235:70;;;;;;;;;;;;:::i;:::-;;;;;;;;;4387:8;4338:57;;:11;;;;;;;;;;;:21;;;4368:4;4375:7;4338:45;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:57;;4316:128;;;;;;;;;;;;:::i;:::-;;;;;;;;;4496:6;4463:12;;;;;;;;;;;:22;;;4486:5;4463:29;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:39;;4455:70;;;;;;;;;;;;:::i;:::-;;;;;;;;;4606:6;4558:12;;;;;;;;;;;:22;;;4581:5;4596:4;4558:44;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:54;;4536:131;;;;;;;;;;;;:::i;:::-;;;;;;;;;4678:53;4708:5;4715:7;:5;:7::i;:::-;4724:6;4678:12;;;;;;;;;;;:29;;;;:53;;;;;;:::i;:::-;4807:11;;;;;;;;;;;:28;;;4858:4;4878:5;4898:7;4920:8;4807:149;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4980:5;4972:58;;;4987:7;4996:6;5004:8;5014:15;4972:58;;;;;;;;;:::i;:::-;;;;;;;;4119:919;4010:1028;;;:::o;892:45::-;;;;;;;;;;;;;;;;;:::o;589:27::-;;;;;;;;;;;;;:::o;5046:809::-;739:10;5103:9;:25;;5095:54;;;;;;;;;;;;:::i;:::-;;;;;;;;;5480:12;5505:11;;;;;;;;;;;5497:25;;5653:10;844:39;799:1;5537:203;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5497:254;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5479:272;;;5770:7;5762:31;;;;;;;;;;;;:::i;:::-;;;;;;;;;5819:10;5809:38;;;5831:15;5809:38;;;;;;:::i;:::-;;;;;;;;5084:771;5046:809::o;2074:1928::-;2485:6;2974:11;;;;;;;;;;;2952:34;;:10;:34;;;2944:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;3248:1;3239:5;:10;3231:39;;;;;;;;;;;;:::i;:::-;;;;;;;;;3385:52;3411:8;3421:4;3427:2;3431:5;3385:52;;;;;;;;;:::i;:::-;;;;;;;;3673:31;;;3666:38;;2074:1928;;;;;;;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;6282:315:14:-;1531:13:0;:11;:13::i;:::-;6380:1:14::1;6369:7;:12:::0;6361:40:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;6429:1;6420:5;:10:::0;6412:36:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;6481:5;6459:10;:19;6470:7;6459:19;;;;;;;;;;;:27;;;;6502:41;6511:7;6520:5;6527:15;6502:41;;;;;;;;:::i;:::-;;;;;;;;6282:315:::0;;:::o;763:146:12:-;839:4;877:25;862:40;;;:11;:40;;;;855:47;;763:146;;;:::o;1796:162:0:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2912:187::-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;1670:188:8:-;1770:81;1790:5;1812;:18;;;1833:4;1839:2;1843:5;1797:53;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1770:19;:81::i;:::-;1670:188;;;;:::o;656:96:10:-;709:7;735:10;728:17;;656:96;:::o;7738:720:8:-;7818:18;7846:19;7984:4;7981:1;7974:4;7968:11;7961:4;7955;7951:15;7948:1;7941:5;7934;7929:60;8041:7;8031:176;;8085:4;8079:11;8130:16;8127:1;8122:3;8107:40;8176:16;8171:3;8164:29;8031:176;8234:16;8220:30;;8284:1;8278:8;8263:23;;7900:396;8324:1;8310:10;:15;:68;;8377:1;8362:11;:16;;8310:68;;;8358:1;8336:5;8328:26;;;:31;8310:68;8306:146;;;8434:5;8401:40;;;;;;;;;;;:::i;:::-;;;;;;;;8306:146;7808:650;;7738:720;;:::o;7:75:15:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:77::-;1555:7;1584:5;1573:16;;1518:77;;;:::o;1601:118::-;1688:24;1706:5;1688:24;:::i;:::-;1683:3;1676:37;1601:118;;:::o;1725:222::-;1818:4;1856:2;1845:9;1841:18;1833:26;;1869:71;1937:1;1926:9;1922:17;1913:6;1869:71;:::i;:::-;1725:222;;;;:::o;1953:126::-;1990:7;2030:42;2023:5;2019:54;2008:65;;1953:126;;;:::o;2085:60::-;2113:3;2134:5;2127:12;;2085:60;;;:::o;2151:142::-;2201:9;2234:53;2252:34;2261:24;2279:5;2261:24;:::i;:::-;2252:34;:::i;:::-;2234:53;:::i;:::-;2221:66;;2151:142;;;:::o;2299:126::-;2349:9;2382:37;2413:5;2382:37;:::i;:::-;2369:50;;2299:126;;;:::o;2431:140::-;2495:9;2528:37;2559:5;2528:37;:::i;:::-;2515:50;;2431:140;;;:::o;2577:159::-;2678:51;2723:5;2678:51;:::i;:::-;2673:3;2666:64;2577:159;;:::o;2742:250::-;2849:4;2887:2;2876:9;2872:18;2864:26;;2900:85;2982:1;2971:9;2967:17;2958:6;2900:85;:::i;:::-;2742:250;;;;:::o;2998:96::-;3035:7;3064:24;3082:5;3064:24;:::i;:::-;3053:35;;2998:96;;;:::o;3100:118::-;3187:24;3205:5;3187:24;:::i;:::-;3182:3;3175:37;3100:118;;:::o;3224:222::-;3317:4;3355:2;3344:9;3340:18;3332:26;;3368:71;3436:1;3425:9;3421:17;3412:6;3368:71;:::i;:::-;3224:222;;;;:::o;3452:122::-;3525:24;3543:5;3525:24;:::i;:::-;3518:5;3515:35;3505:63;;3564:1;3561;3554:12;3505:63;3452:122;:::o;3580:139::-;3626:5;3664:6;3651:20;3642:29;;3680:33;3707:5;3680:33;:::i;:::-;3580:139;;;;:::o;3725:117::-;3834:1;3831;3824:12;3848:102;3889:6;3940:2;3936:7;3931:2;3924:5;3920:14;3916:28;3906:38;;3848:102;;;:::o;3956:180::-;4004:77;4001:1;3994:88;4101:4;4098:1;4091:15;4125:4;4122:1;4115:15;4142:281;4225:27;4247:4;4225:27;:::i;:::-;4217:6;4213:40;4355:6;4343:10;4340:22;4319:18;4307:10;4304:34;4301:62;4298:88;;;4366:18;;:::i;:::-;4298:88;4406:10;4402:2;4395:22;4185:238;4142:281;;:::o;4429:129::-;4463:6;4490:20;;:::i;:::-;4480:30;;4519:33;4547:4;4539:6;4519:33;:::i;:::-;4429:129;;;:::o;4564:311::-;4641:4;4731:18;4723:6;4720:30;4717:56;;;4753:18;;:::i;:::-;4717:56;4803:4;4795:6;4791:17;4783:25;;4863:4;4857;4853:15;4845:23;;4564:311;;;:::o;4881:117::-;4990:1;4987;4980:12;5004:122;5077:24;5095:5;5077:24;:::i;:::-;5070:5;5067:35;5057:63;;5116:1;5113;5106:12;5057:63;5004:122;:::o;5132:139::-;5178:5;5216:6;5203:20;5194:29;;5232:33;5259:5;5232:33;:::i;:::-;5132:139;;;;:::o;5294:710::-;5390:5;5415:81;5431:64;5488:6;5431:64;:::i;:::-;5415:81;:::i;:::-;5406:90;;5516:5;5545:6;5538:5;5531:21;5579:4;5572:5;5568:16;5561:23;;5632:4;5624:6;5620:17;5612:6;5608:30;5661:3;5653:6;5650:15;5647:122;;;5680:79;;:::i;:::-;5647:122;5795:6;5778:220;5812:6;5807:3;5804:15;5778:220;;;5887:3;5916:37;5949:3;5937:10;5916:37;:::i;:::-;5911:3;5904:50;5983:4;5978:3;5974:14;5967:21;;5854:144;5838:4;5833:3;5829:14;5822:21;;5778:220;;;5782:21;5396:608;;5294:710;;;;;:::o;6027:370::-;6098:5;6147:3;6140:4;6132:6;6128:17;6124:27;6114:122;;6155:79;;:::i;:::-;6114:122;6272:6;6259:20;6297:94;6387:3;6379:6;6372:4;6364:6;6360:17;6297:94;:::i;:::-;6288:103;;6104:293;6027:370;;;;:::o;6403:117::-;6512:1;6509;6502:12;6526:307;6587:4;6677:18;6669:6;6666:30;6663:56;;;6699:18;;:::i;:::-;6663:56;6737:29;6759:6;6737:29;:::i;:::-;6729:37;;6821:4;6815;6811:15;6803:23;;6526:307;;;:::o;6839:148::-;6937:6;6932:3;6927;6914:30;6978:1;6969:6;6964:3;6960:16;6953:27;6839:148;;;:::o;6993:423::-;7070:5;7095:65;7111:48;7152:6;7111:48;:::i;:::-;7095:65;:::i;:::-;7086:74;;7183:6;7176:5;7169:21;7221:4;7214:5;7210:16;7259:3;7250:6;7245:3;7241:16;7238:25;7235:112;;;7266:79;;:::i;:::-;7235:112;7356:54;7403:6;7398:3;7393;7356:54;:::i;:::-;7076:340;6993:423;;;;;:::o;7435:338::-;7490:5;7539:3;7532:4;7524:6;7520:17;7516:27;7506:122;;7547:79;;:::i;:::-;7506:122;7664:6;7651:20;7689:78;7763:3;7755:6;7748:4;7740:6;7736:17;7689:78;:::i;:::-;7680:87;;7496:277;7435:338;;;;:::o;7779:1509::-;7933:6;7941;7949;7957;7965;8014:3;8002:9;7993:7;7989:23;7985:33;7982:120;;;8021:79;;:::i;:::-;7982:120;8141:1;8166:53;8211:7;8202:6;8191:9;8187:22;8166:53;:::i;:::-;8156:63;;8112:117;8268:2;8294:53;8339:7;8330:6;8319:9;8315:22;8294:53;:::i;:::-;8284:63;;8239:118;8424:2;8413:9;8409:18;8396:32;8455:18;8447:6;8444:30;8441:117;;;8477:79;;:::i;:::-;8441:117;8582:78;8652:7;8643:6;8632:9;8628:22;8582:78;:::i;:::-;8572:88;;8367:303;8737:2;8726:9;8722:18;8709:32;8768:18;8760:6;8757:30;8754:117;;;8790:79;;:::i;:::-;8754:117;8895:78;8965:7;8956:6;8945:9;8941:22;8895:78;:::i;:::-;8885:88;;8680:303;9050:3;9039:9;9035:19;9022:33;9082:18;9074:6;9071:30;9068:117;;;9104:79;;:::i;:::-;9068:117;9209:62;9263:7;9254:6;9243:9;9239:22;9209:62;:::i;:::-;9199:72;;8993:288;7779:1509;;;;;;;;:::o;9294:115::-;9379:23;9396:5;9379:23;:::i;:::-;9374:3;9367:36;9294:115;;:::o;9415:218::-;9506:4;9544:2;9533:9;9529:18;9521:26;;9557:69;9623:1;9612:9;9608:17;9599:6;9557:69;:::i;:::-;9415:218;;;;:::o;9639:86::-;9674:7;9714:4;9707:5;9703:16;9692:27;;9639:86;;;:::o;9731:118::-;9802:22;9818:5;9802:22;:::i;:::-;9795:5;9792:33;9782:61;;9839:1;9836;9829:12;9782:61;9731:118;:::o;9855:135::-;9899:5;9937:6;9924:20;9915:29;;9953:31;9978:5;9953:31;:::i;:::-;9855:135;;;;:::o;9996:615::-;10071:6;10079;10087;10136:2;10124:9;10115:7;10111:23;10107:32;10104:119;;;10142:79;;:::i;:::-;10104:119;10262:1;10287:53;10332:7;10323:6;10312:9;10308:22;10287:53;:::i;:::-;10277:63;;10233:117;10389:2;10415:53;10460:7;10451:6;10440:9;10436:22;10415:53;:::i;:::-;10405:63;;10360:118;10517:2;10543:51;10586:7;10577:6;10566:9;10562:22;10543:51;:::i;:::-;10533:61;;10488:116;9996:615;;;;;:::o;10617:329::-;10676:6;10725:2;10713:9;10704:7;10700:23;10696:32;10693:119;;;10731:79;;:::i;:::-;10693:119;10851:1;10876:53;10921:7;10912:6;10901:9;10897:22;10876:53;:::i;:::-;10866:63;;10822:117;10617:329;;;;:::o;10952:142::-;11018:9;11051:37;11082:5;11051:37;:::i;:::-;11038:50;;10952:142;;;:::o;11100:163::-;11203:53;11250:5;11203:53;:::i;:::-;11198:3;11191:66;11100:163;;:::o;11269:254::-;11378:4;11416:2;11405:9;11401:18;11393:26;;11429:87;11513:1;11502:9;11498:17;11489:6;11429:87;:::i;:::-;11269:254;;;;:::o;11529:1089::-;11633:6;11641;11649;11657;11665;11714:3;11702:9;11693:7;11689:23;11685:33;11682:120;;;11721:79;;:::i;:::-;11682:120;11841:1;11866:53;11911:7;11902:6;11891:9;11887:22;11866:53;:::i;:::-;11856:63;;11812:117;11968:2;11994:53;12039:7;12030:6;12019:9;12015:22;11994:53;:::i;:::-;11984:63;;11939:118;12096:2;12122:53;12167:7;12158:6;12147:9;12143:22;12122:53;:::i;:::-;12112:63;;12067:118;12224:2;12250:53;12295:7;12286:6;12275:9;12271:22;12250:53;:::i;:::-;12240:63;;12195:118;12380:3;12369:9;12365:19;12352:33;12412:18;12404:6;12401:30;12398:117;;;12434:79;;:::i;:::-;12398:117;12539:62;12593:7;12584:6;12573:9;12569:22;12539:62;:::i;:::-;12529:72;;12323:288;11529:1089;;;;;;;;:::o;12624:329::-;12683:6;12732:2;12720:9;12711:7;12707:23;12703:32;12700:119;;;12738:79;;:::i;:::-;12700:119;12858:1;12883:53;12928:7;12919:6;12908:9;12904:22;12883:53;:::i;:::-;12873:63;;12829:117;12624:329;;;;:::o;12959:474::-;13027:6;13035;13084:2;13072:9;13063:7;13059:23;13055:32;13052:119;;;13090:79;;:::i;:::-;13052:119;13210:1;13235:53;13280:7;13271:6;13260:9;13256:22;13235:53;:::i;:::-;13225:63;;13181:117;13337:2;13363:53;13408:7;13399:6;13388:9;13384:22;13363:53;:::i;:::-;13353:63;;13308:118;12959:474;;;;;:::o;13439:169::-;13523:11;13557:6;13552:3;13545:19;13597:4;13592:3;13588:14;13573:29;;13439:169;;;;:::o;13614:168::-;13754:20;13750:1;13742:6;13738:14;13731:44;13614:168;:::o;13788:366::-;13930:3;13951:67;14015:2;14010:3;13951:67;:::i;:::-;13944:74;;14027:93;14116:3;14027:93;:::i;:::-;14145:2;14140:3;14136:12;14129:19;;13788:366;;;:::o;14160:419::-;14326:4;14364:2;14353:9;14349:18;14341:26;;14413:9;14407:4;14403:20;14399:1;14388:9;14384:17;14377:47;14441:131;14567:4;14441:131;:::i;:::-;14433:139;;14160:419;;;:::o;14585:147::-;14686:11;14723:3;14708:18;;14585:147;;;;:::o;14738:114::-;;:::o;14858:398::-;15017:3;15038:83;15119:1;15114:3;15038:83;:::i;:::-;15031:90;;15130:93;15219:3;15130:93;:::i;:::-;15248:1;15243:3;15239:11;15232:18;;14858:398;;;:::o;15262:379::-;15446:3;15468:147;15611:3;15468:147;:::i;:::-;15461:154;;15632:3;15625:10;;15262:379;;;:::o;15647:174::-;15787:26;15783:1;15775:6;15771:14;15764:50;15647:174;:::o;15827:366::-;15969:3;15990:67;16054:2;16049:3;15990:67;:::i;:::-;15983:74;;16066:93;16155:3;16066:93;:::i;:::-;16184:2;16179:3;16175:12;16168:19;;15827:366;;;:::o;16199:419::-;16365:4;16403:2;16392:9;16388:18;16380:26;;16452:9;16446:4;16442:20;16438:1;16427:9;16423:17;16416:47;16480:131;16606:4;16480:131;:::i;:::-;16472:139;;16199:419;;;:::o;16624:332::-;16745:4;16783:2;16772:9;16768:18;16760:26;;16796:71;16864:1;16853:9;16849:17;16840:6;16796:71;:::i;:::-;16877:72;16945:2;16934:9;16930:18;16921:6;16877:72;:::i;:::-;16624:332;;;;;:::o;16962:170::-;17102:22;17098:1;17090:6;17086:14;17079:46;16962:170;:::o;17138:366::-;17280:3;17301:67;17365:2;17360:3;17301:67;:::i;:::-;17294:74;;17377:93;17466:3;17377:93;:::i;:::-;17495:2;17490:3;17486:12;17479:19;;17138:366;;;:::o;17510:419::-;17676:4;17714:2;17703:9;17699:18;17691:26;;17763:9;17757:4;17753:20;17749:1;17738:9;17734:17;17727:47;17791:131;17917:4;17791:131;:::i;:::-;17783:139;;17510:419;;;:::o;17935:180::-;17983:77;17980:1;17973:88;18080:4;18077:1;18070:15;18104:4;18101:1;18094:15;18121:410;18161:7;18184:20;18202:1;18184:20;:::i;:::-;18179:25;;18218:20;18236:1;18218:20;:::i;:::-;18213:25;;18273:1;18270;18266:9;18295:30;18313:11;18295:30;:::i;:::-;18284:41;;18474:1;18465:7;18461:15;18458:1;18455:22;18435:1;18428:9;18408:83;18385:139;;18504:18;;:::i;:::-;18385:139;18169:362;18121:410;;;;:::o;18537:167::-;18677:19;18673:1;18665:6;18661:14;18654:43;18537:167;:::o;18710:366::-;18852:3;18873:67;18937:2;18932:3;18873:67;:::i;:::-;18866:74;;18949:93;19038:3;18949:93;:::i;:::-;19067:2;19062:3;19058:12;19051:19;;18710:366;;;:::o;19082:419::-;19248:4;19286:2;19275:9;19271:18;19263:26;;19335:9;19329:4;19325:20;19321:1;19310:9;19306:17;19299:47;19363:131;19489:4;19363:131;:::i;:::-;19355:139;;19082:419;;;:::o;19507:143::-;19564:5;19595:6;19589:13;19580:22;;19611:33;19638:5;19611:33;:::i;:::-;19507:143;;;;:::o;19656:351::-;19726:6;19775:2;19763:9;19754:7;19750:23;19746:32;19743:119;;;19781:79;;:::i;:::-;19743:119;19901:1;19926:64;19982:7;19973:6;19962:9;19958:22;19926:64;:::i;:::-;19916:74;;19872:128;19656:351;;;;:::o;20013:171::-;20153:23;20149:1;20141:6;20137:14;20130:47;20013:171;:::o;20190:366::-;20332:3;20353:67;20417:2;20412:3;20353:67;:::i;:::-;20346:74;;20429:93;20518:3;20429:93;:::i;:::-;20547:2;20542:3;20538:12;20531:19;;20190:366;;;:::o;20562:419::-;20728:4;20766:2;20755:9;20751:18;20743:26;;20815:9;20809:4;20805:20;20801:1;20790:9;20786:17;20779:47;20843:131;20969:4;20843:131;:::i;:::-;20835:139;;20562:419;;;:::o;20987:168::-;21127:20;21123:1;21115:6;21111:14;21104:44;20987:168;:::o;21161:366::-;21303:3;21324:67;21388:2;21383:3;21324:67;:::i;:::-;21317:74;;21400:93;21489:3;21400:93;:::i;:::-;21518:2;21513:3;21509:12;21502:19;;21161:366;;;:::o;21533:419::-;21699:4;21737:2;21726:9;21722:18;21714:26;;21786:9;21780:4;21776:20;21772:1;21761:9;21757:17;21750:47;21814:131;21940:4;21814:131;:::i;:::-;21806:139;;21533:419;;;:::o;21958:332::-;22079:4;22117:2;22106:9;22102:18;22094:26;;22130:71;22198:1;22187:9;22183:17;22174:6;22130:71;:::i;:::-;22211:72;22279:2;22268:9;22264:18;22255:6;22211:72;:::i;:::-;21958:332;;;;;:::o;22296:177::-;22436:29;22432:1;22424:6;22420:14;22413:53;22296:177;:::o;22479:366::-;22621:3;22642:67;22706:2;22701:3;22642:67;:::i;:::-;22635:74;;22718:93;22807:3;22718:93;:::i;:::-;22836:2;22831:3;22827:12;22820:19;;22479:366;;;:::o;22851:419::-;23017:4;23055:2;23044:9;23040:18;23032:26;;23104:9;23098:4;23094:20;23090:1;23079:9;23075:17;23068:47;23132:131;23258:4;23132:131;:::i;:::-;23124:139;;22851:419;;;:::o;23276:138::-;23324:9;23357:51;23375:32;23384:22;23400:5;23384:22;:::i;:::-;23375:32;:::i;:::-;23357:51;:::i;:::-;23344:64;;23276:138;;;:::o;23420:127::-;23505:35;23534:5;23505:35;:::i;:::-;23500:3;23493:48;23420:127;;:::o;23553:168::-;23636:11;23670:6;23665:3;23658:19;23710:4;23705:3;23701:14;23686:29;;23553:168;;;;:::o;23727:362::-;23868:3;23889:65;23952:1;23947:3;23889:65;:::i;:::-;23882:72;;23963:93;24052:3;23963:93;:::i;:::-;24081:1;24076:3;24072:11;24065:18;;23727:362;;;:::o;24095:855::-;24370:4;24408:3;24397:9;24393:19;24385:27;;24422:71;24490:1;24479:9;24475:17;24466:6;24422:71;:::i;:::-;24503:72;24571:2;24560:9;24556:18;24547:6;24503:72;:::i;:::-;24585;24653:2;24642:9;24638:18;24629:6;24585:72;:::i;:::-;24667:70;24733:2;24722:9;24718:18;24709:6;24667:70;:::i;:::-;24785:9;24779:4;24775:20;24769:3;24758:9;24754:19;24747:49;24813:130;24938:4;24813:130;:::i;:::-;24805:138;;24095:855;;;;;;;:::o;24956:112::-;25039:22;25055:5;25039:22;:::i;:::-;25034:3;25027:35;24956:112;;:::o;25074:545::-;25247:4;25285:3;25274:9;25270:19;25262:27;;25299:71;25367:1;25356:9;25352:17;25343:6;25299:71;:::i;:::-;25380:72;25448:2;25437:9;25433:18;25424:6;25380:72;:::i;:::-;25462:68;25526:2;25515:9;25511:18;25502:6;25462:68;:::i;:::-;25540:72;25608:2;25597:9;25593:18;25584:6;25540:72;:::i;:::-;25074:545;;;;;;;:::o;25625:166::-;25765:18;25761:1;25753:6;25749:14;25742:42;25625:166;:::o;25797:366::-;25939:3;25960:67;26024:2;26019:3;25960:67;:::i;:::-;25953:74;;26036:93;26125:3;26036:93;:::i;:::-;26154:2;26149:3;26145:12;26138:19;;25797:366;;;:::o;26169:419::-;26335:4;26373:2;26362:9;26358:18;26350:26;;26422:9;26416:4;26412:20;26408:1;26397:9;26393:17;26386:47;26450:131;26576:4;26450:131;:::i;:::-;26442:139;;26169:419;;;:::o;26594:442::-;26743:4;26781:2;26770:9;26766:18;26758:26;;26794:71;26862:1;26851:9;26847:17;26838:6;26794:71;:::i;:::-;26875:72;26943:2;26932:9;26928:18;26919:6;26875:72;:::i;:::-;26957;27025:2;27014:9;27010:18;27001:6;26957:72;:::i;:::-;26594:442;;;;;;:::o;27042:98::-;27093:6;27127:5;27121:12;27111:22;;27042:98;;;:::o;27146:139::-;27235:6;27230:3;27225;27219:23;27276:1;27267:6;27262:3;27258:16;27251:27;27146:139;;;:::o;27291:386::-;27395:3;27423:38;27455:5;27423:38;:::i;:::-;27477:88;27558:6;27553:3;27477:88;:::i;:::-;27470:95;;27574:65;27632:6;27627:3;27620:4;27613:5;27609:16;27574:65;:::i;:::-;27664:6;27659:3;27655:16;27648:23;;27399:278;27291:386;;;;:::o;27683:271::-;27813:3;27835:93;27924:3;27915:6;27835:93;:::i;:::-;27828:100;;27945:3;27938:10;;27683:271;;;;:::o;27960:161::-;28100:13;28096:1;28088:6;28084:14;28077:37;27960:161;:::o;28127:366::-;28269:3;28290:67;28354:2;28349:3;28290:67;:::i;:::-;28283:74;;28366:93;28455:3;28366:93;:::i;:::-;28484:2;28479:3;28475:12;28468:19;;28127:366;;;:::o;28499:419::-;28665:4;28703:2;28692:9;28688:18;28680:26;;28752:9;28746:4;28742:20;28738:1;28727:9;28723:17;28716:47;28780:131;28906:4;28780:131;:::i;:::-;28772:139;;28499:419;;;:::o;28924:166::-;29064:18;29060:1;29052:6;29048:14;29041:42;28924:166;:::o;29096:366::-;29238:3;29259:67;29323:2;29318:3;29259:67;:::i;:::-;29252:74;;29335:93;29424:3;29335:93;:::i;:::-;29453:2;29448:3;29444:12;29437:19;;29096:366;;;:::o;29468:419::-;29634:4;29672:2;29661:9;29657:18;29649:26;;29721:9;29715:4;29711:20;29707:1;29696:9;29692:17;29685:47;29749:131;29875:4;29749:131;:::i;:::-;29741:139;;29468:419;;;:::o;29893:166::-;30033:18;30029:1;30021:6;30017:14;30010:42;29893:166;:::o;30065:366::-;30207:3;30228:67;30292:2;30287:3;30228:67;:::i;:::-;30221:74;;30304:93;30393:3;30304:93;:::i;:::-;30422:2;30417:3;30413:12;30406:19;;30065:366;;;:::o;30437:419::-;30603:4;30641:2;30630:9;30626:18;30618:26;;30690:9;30684:4;30680:20;30676:1;30665:9;30661:17;30654:47;30718:131;30844:4;30718:131;:::i;:::-;30710:139;;30437:419;;;:::o;30862:553::-;31039:4;31077:3;31066:9;31062:19;31054:27;;31091:71;31159:1;31148:9;31144:17;31135:6;31091:71;:::i;:::-;31172:72;31240:2;31229:9;31225:18;31216:6;31172:72;:::i;:::-;31254;31322:2;31311:9;31307:18;31298:6;31254:72;:::i;:::-;31336;31404:2;31393:9;31389:18;31380:6;31336:72;:::i;:::-;30862:553;;;;;;;:::o;31421:165::-;31561:17;31557:1;31549:6;31545:14;31538:41;31421:165;:::o;31592:366::-;31734:3;31755:67;31819:2;31814:3;31755:67;:::i;:::-;31748:74;;31831:93;31920:3;31831:93;:::i;:::-;31949:2;31944:3;31940:12;31933:19;;31592:366;;;:::o;31964:419::-;32130:4;32168:2;32157:9;32153:18;32145:26;;32217:9;32211:4;32207:20;32203:1;32192:9;32188:17;32181:47;32245:131;32371:4;32245:131;:::i;:::-;32237:139;;31964:419;;;:::o;32389:163::-;32529:15;32525:1;32517:6;32513:14;32506:39;32389:163;:::o;32558:366::-;32700:3;32721:67;32785:2;32780:3;32721:67;:::i;:::-;32714:74;;32797:93;32886:3;32797:93;:::i;:::-;32915:2;32910:3;32906:12;32899:19;;32558:366;;;:::o;32930:419::-;33096:4;33134:2;33123:9;33119:18;33111:26;;33183:9;33177:4;33173:20;33169:1;33158:9;33154:17;33147:47;33211:131;33337:4;33211:131;:::i;:::-;33203:139;;32930:419;;;:::o;33355:442::-;33504:4;33542:2;33531:9;33527:18;33519:26;;33555:71;33623:1;33612:9;33608:17;33599:6;33555:71;:::i;:::-;33636:72;33704:2;33693:9;33689:18;33680:6;33636:72;:::i;:::-;33718;33786:2;33775:9;33771:18;33762:6;33718:72;:::i;:::-;33355:442;;;;;;:::o;33803:::-;33952:4;33990:2;33979:9;33975:18;33967:26;;34003:71;34071:1;34060:9;34056:17;34047:6;34003:71;:::i;:::-;34084:72;34152:2;34141:9;34137:18;34128:6;34084:72;:::i;:::-;34166;34234:2;34223:9;34219:18;34210:6;34166:72;:::i;:::-;33803:442;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1714400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"buyItem(uint256,uint256,uint8)": "infinite",
								"buyTicket()": "infinite",
								"getBalance()": "380",
								"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": "infinite",
								"onERC1155Received(address,address,uint256,uint256,bytes)": "infinite",
								"owner()": "2582",
								"renounceOwnership()": "infinite",
								"setPrice(uint256,uint256)": "infinite",
								"snowmenGame()": "infinite",
								"snowmenToken()": "infinite",
								"supportsInterface(bytes4)": "741",
								"tokenPrice(uint256)": "infinite",
								"transferOwnership(address)": "infinite",
								"withdraw()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 319,
									"end": 6601,
									"name": "PUSH",
									"source": 14,
									"value": "80"
								},
								{
									"begin": 319,
									"end": 6601,
									"name": "PUSH",
									"source": 14,
									"value": "40"
								},
								{
									"begin": 319,
									"end": 6601,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 1647,
									"end": 2066,
									"name": "CALLVALUE",
									"source": 14
								},
								{
									"begin": 1647,
									"end": 2066,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 1647,
									"end": 2066,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 1647,
									"end": 2066,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 1647,
									"end": 2066,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 1647,
									"end": 2066,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 1647,
									"end": 2066,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 1647,
									"end": 2066,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 1647,
									"end": 2066,
									"name": "tag",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 1647,
									"end": 2066,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1647,
									"end": 2066,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1647,
									"end": 2066,
									"name": "PUSH",
									"source": 14,
									"value": "40"
								},
								{
									"begin": 1647,
									"end": 2066,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 1647,
									"end": 2066,
									"name": "PUSHSIZE",
									"source": 14
								},
								{
									"begin": 1647,
									"end": 2066,
									"name": "CODESIZE",
									"source": 14
								},
								{
									"begin": 1647,
									"end": 2066,
									"name": "SUB",
									"source": 14
								},
								{
									"begin": 1647,
									"end": 2066,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 1647,
									"end": 2066,
									"name": "PUSHSIZE",
									"source": 14
								},
								{
									"begin": 1647,
									"end": 2066,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 1647,
									"end": 2066,
									"name": "CODECOPY",
									"source": 14
								},
								{
									"begin": 1647,
									"end": 2066,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 1647,
									"end": 2066,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 1647,
									"end": 2066,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 1647,
									"end": 2066,
									"name": "PUSH",
									"source": 14,
									"value": "40"
								},
								{
									"begin": 1647,
									"end": 2066,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 1647,
									"end": 2066,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 1647,
									"end": 2066,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 1647,
									"end": 2066,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 1647,
									"end": 2066,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "2"
								},
								{
									"begin": 1647,
									"end": 2066,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 1647,
									"end": 2066,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 1647,
									"end": 2066,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "3"
								},
								{
									"begin": 1647,
									"end": 2066,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 1647,
									"end": 2066,
									"name": "tag",
									"source": 14,
									"value": "2"
								},
								{
									"begin": 1647,
									"end": 2066,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1713,
									"end": 1725,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "5"
								},
								{
									"begin": 1713,
									"end": 1723,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "6"
								},
								{
									"begin": 1713,
									"end": 1723,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 1713,
									"end": 1723,
									"name": "SHL",
									"source": 14
								},
								{
									"begin": 1713,
									"end": 1725,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 1713,
									"end": 1725,
									"name": "SHR",
									"source": 14
								},
								{
									"begin": 1713,
									"end": 1725,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 1713,
									"end": 1725,
									"name": "tag",
									"source": 14,
									"value": "5"
								},
								{
									"begin": 1713,
									"end": 1725,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1997,
									"end": 2011,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 1974,
									"end": 1985,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 14,
									"value": "2"
								},
								{
									"begin": 1974,
									"end": 1985,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 1974,
									"end": 2012,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 14,
									"value": "100"
								},
								{
									"begin": 1974,
									"end": 2012,
									"modifierDepth": 1,
									"name": "EXP",
									"source": 14
								},
								{
									"begin": 1974,
									"end": 2012,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 1974,
									"end": 2012,
									"modifierDepth": 1,
									"name": "SLOAD",
									"source": 14
								},
								{
									"begin": 1974,
									"end": 2012,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 1974,
									"end": 2012,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 14,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1974,
									"end": 2012,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 14
								},
								{
									"begin": 1974,
									"end": 2012,
									"modifierDepth": 1,
									"name": "NOT",
									"source": 14
								},
								{
									"begin": 1974,
									"end": 2012,
									"modifierDepth": 1,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 1974,
									"end": 2012,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 1974,
									"end": 2012,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 1974,
									"end": 2012,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 14,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1974,
									"end": 2012,
									"modifierDepth": 1,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 1974,
									"end": 2012,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 14
								},
								{
									"begin": 1974,
									"end": 2012,
									"modifierDepth": 1,
									"name": "OR",
									"source": 14
								},
								{
									"begin": 1974,
									"end": 2012,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 1974,
									"end": 2012,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 14
								},
								{
									"begin": 1974,
									"end": 2012,
									"modifierDepth": 1,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 2045,
									"end": 2057,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 2023,
									"end": 2035,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 2023,
									"end": 2035,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 2023,
									"end": 2058,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 14,
									"value": "100"
								},
								{
									"begin": 2023,
									"end": 2058,
									"modifierDepth": 1,
									"name": "EXP",
									"source": 14
								},
								{
									"begin": 2023,
									"end": 2058,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 2023,
									"end": 2058,
									"modifierDepth": 1,
									"name": "SLOAD",
									"source": 14
								},
								{
									"begin": 2023,
									"end": 2058,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 2023,
									"end": 2058,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 14,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2023,
									"end": 2058,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 14
								},
								{
									"begin": 2023,
									"end": 2058,
									"modifierDepth": 1,
									"name": "NOT",
									"source": 14
								},
								{
									"begin": 2023,
									"end": 2058,
									"modifierDepth": 1,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 2023,
									"end": 2058,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 2023,
									"end": 2058,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 2023,
									"end": 2058,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 14,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2023,
									"end": 2058,
									"modifierDepth": 1,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 2023,
									"end": 2058,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 14
								},
								{
									"begin": 2023,
									"end": 2058,
									"modifierDepth": 1,
									"name": "OR",
									"source": 14
								},
								{
									"begin": 2023,
									"end": 2058,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 2023,
									"end": 2058,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 14
								},
								{
									"begin": 2023,
									"end": 2058,
									"modifierDepth": 1,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1647,
									"end": 2066,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1647,
									"end": 2066,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 319,
									"end": 6601,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "15"
								},
								{
									"begin": 319,
									"end": 6601,
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 656,
									"end": 752,
									"name": "tag",
									"source": 10,
									"value": "6"
								},
								{
									"begin": 656,
									"end": 752,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 709,
									"end": 716,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 735,
									"end": 745,
									"name": "CALLER",
									"source": 10
								},
								{
									"begin": 728,
									"end": 745,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 728,
									"end": 745,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 656,
									"end": 752,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 656,
									"end": 752,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 15,
									"value": "19"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 15
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 15,
									"value": "21"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 15,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 15
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 15,
									"value": "22"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "32"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "21"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 15,
									"value": "32"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 15,
									"value": "23"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "34"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "22"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 15,
									"value": "34"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 15
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "35"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 15
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 15,
									"value": "35"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 15,
									"value": "24"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 15
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "37"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "23"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 15,
									"value": "37"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 15
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "tag",
									"source": 15,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 924,
									"end": 930,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 932,
									"end": 938,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 981,
									"end": 983,
									"name": "PUSH",
									"source": 15,
									"value": "40"
								},
								{
									"begin": 969,
									"end": 978,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 960,
									"end": 967,
									"name": "DUP6",
									"source": 15
								},
								{
									"begin": 956,
									"end": 979,
									"name": "SUB",
									"source": 15
								},
								{
									"begin": 952,
									"end": 984,
									"name": "SLT",
									"source": 15
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "ISZERO",
									"source": 15
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "39"
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "40"
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "19"
								},
								{
									"begin": 987,
									"end": 1066,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "tag",
									"source": 15,
									"value": "40"
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "tag",
									"source": 15,
									"value": "39"
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1107,
									"end": 1108,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "41"
								},
								{
									"begin": 1188,
									"end": 1195,
									"name": "DUP6",
									"source": 15
								},
								{
									"begin": 1179,
									"end": 1185,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 1168,
									"end": 1177,
									"name": "DUP7",
									"source": 15
								},
								{
									"begin": 1164,
									"end": 1186,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "24"
								},
								{
									"begin": 1132,
									"end": 1196,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "tag",
									"source": 15,
									"value": "41"
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1122,
									"end": 1196,
									"name": "SWAP3",
									"source": 15
								},
								{
									"begin": 1122,
									"end": 1196,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1078,
									"end": 1206,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1245,
									"end": 1247,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "42"
								},
								{
									"begin": 1327,
									"end": 1334,
									"name": "DUP6",
									"source": 15
								},
								{
									"begin": 1318,
									"end": 1324,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 1307,
									"end": 1316,
									"name": "DUP7",
									"source": 15
								},
								{
									"begin": 1303,
									"end": 1325,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "24"
								},
								{
									"begin": 1271,
									"end": 1335,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "tag",
									"source": 15,
									"value": "42"
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1261,
									"end": 1335,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 1261,
									"end": 1335,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1216,
									"end": 1345,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "SWAP3",
									"source": 15
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "SWAP3",
									"source": 15
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 845,
									"end": 1352,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 1358,
									"end": 1476,
									"name": "tag",
									"source": 15,
									"value": "25"
								},
								{
									"begin": 1358,
									"end": 1476,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1445,
									"end": 1469,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "44"
								},
								{
									"begin": 1463,
									"end": 1468,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 1445,
									"end": 1469,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "22"
								},
								{
									"begin": 1445,
									"end": 1469,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 1445,
									"end": 1469,
									"name": "tag",
									"source": 15,
									"value": "44"
								},
								{
									"begin": 1445,
									"end": 1469,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1440,
									"end": 1443,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 1433,
									"end": 1470,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 1358,
									"end": 1476,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1358,
									"end": 1476,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1358,
									"end": 1476,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 1482,
									"end": 1704,
									"name": "tag",
									"source": 15,
									"value": "11"
								},
								{
									"begin": 1482,
									"end": 1704,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1575,
									"end": 1579,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 1613,
									"end": 1615,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 1602,
									"end": 1611,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 1598,
									"end": 1616,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 1590,
									"end": 1616,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 1590,
									"end": 1616,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1626,
									"end": 1697,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "46"
								},
								{
									"begin": 1694,
									"end": 1695,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 1683,
									"end": 1692,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 1679,
									"end": 1696,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 1670,
									"end": 1676,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 1626,
									"end": 1697,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "25"
								},
								{
									"begin": 1626,
									"end": 1697,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 1626,
									"end": 1697,
									"name": "tag",
									"source": 15,
									"value": "46"
								},
								{
									"begin": 1626,
									"end": 1697,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1482,
									"end": 1704,
									"name": "SWAP3",
									"source": 15
								},
								{
									"begin": 1482,
									"end": 1704,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 1482,
									"end": 1704,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1482,
									"end": 1704,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1482,
									"end": 1704,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 319,
									"end": 6601,
									"name": "tag",
									"source": 14,
									"value": "15"
								},
								{
									"begin": 319,
									"end": 6601,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 319,
									"end": 6601,
									"name": "PUSH #[$]",
									"source": 14,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 319,
									"end": 6601,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 319,
									"end": 6601,
									"name": "PUSH [$]",
									"source": 14,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 319,
									"end": 6601,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 319,
									"end": 6601,
									"name": "CODECOPY",
									"source": 14
								},
								{
									"begin": 319,
									"end": 6601,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 319,
									"end": 6601,
									"name": "RETURN",
									"source": 14
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122098e28633849d2e62da14111fe0c7e3b6bf16866c563c6fc9e0820b8008563ffe64736f6c634300081a0033",
									".code": [
										{
											"begin": 319,
											"end": 6601,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 319,
											"end": 6601,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 319,
											"end": 6601,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 319,
											"end": 6601,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 319,
											"end": 6601,
											"name": "CALLDATASIZE",
											"source": 14
										},
										{
											"begin": 319,
											"end": 6601,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 319,
											"end": 6601,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 319,
											"end": 6601,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 319,
											"end": 6601,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 319,
											"end": 6601,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 319,
											"end": 6601,
											"name": "PUSH",
											"source": 14,
											"value": "E0"
										},
										{
											"begin": 319,
											"end": 6601,
											"name": "SHR",
											"source": 14
										},
										{
											"begin": 319,
											"end": 6601,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 319,
											"end": 6601,
											"name": "PUSH",
											"source": 14,
											"value": "D407CEE7"
										},
										{
											"begin": 319,
											"end": 6601,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 319,
											"end": 6601,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "16"
										},
										{
											"begin": 319,
											"end": 6601,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 319,
											"end": 6601,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 319,
											"end": 6601,
											"name": "PUSH",
											"source": 14,
											"value": "EDCA914C"
										},
										{
											"begin": 319,
											"end": 6601,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 319,
											"end": 6601,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "17"
										},
										{
											"begin": 319,
											"end": 6601,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 319,
											"end": 6601,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 319,
											"end": 6601,
											"name": "PUSH",
											"source": 14,
											"value": "EDCA914C"
										},
										{
											"begin": 319,
											"end": 6601,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 319,
											"end": 6601,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "12"
										},
										{
											"begin": 319,
											"end": 6601,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 319,
											"end": 6601,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 319,
											"end": 6601,
											"name": "PUSH",
											"source": 14,
											"value": "F23A6E61"
										},
										{
											"begin": 319,
											"end": 6601,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 319,
											"end": 6601,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "13"
										},
										{
											"begin": 319,
											"end": 6601,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 319,
											"end": 6601,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 319,
											"end": 6601,
											"name": "PUSH",
											"source": 14,
											"value": "F2FDE38B"
										},
										{
											"begin": 319,
											"end": 6601,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 319,
											"end": 6601,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "14"
										},
										{
											"begin": 319,
											"end": 6601,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 319,
											"end": 6601,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 319,
											"end": 6601,
											"name": "PUSH",
											"source": 14,
											"value": "F7D97577"
										},
										{
											"begin": 319,
											"end": 6601,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 319,
											"end": 6601,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "15"
										},
										{
											"begin": 319,
											"end": 6601,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 319,
											"end": 6601,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 319,
											"end": 6601,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 319,
											"end": 6601,
											"name": "tag",
											"source": 14,
											"value": "17"
										},
										{
											"begin": 319,
											"end": 6601,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 319,
											"end": 6601,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 319,
											"end": 6601,
											"name": "PUSH",
											"source": 14,
											"value": "D407CEE7"
										},
										{
											"begin": 319,
											"end": 6601,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 319,
											"end": 6601,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "9"
										},
										{
											"begin": 319,
											"end": 6601,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 319,
											"end": 6601,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 319,
											"end": 6601,
											"name": "PUSH",
											"source": 14,
											"value": "D4DDCE8A"
										},
										{
											"begin": 319,
											"end": 6601,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 319,
											"end": 6601,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "10"
										},
										{
											"begin": 319,
											"end": 6601,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 319,
											"end": 6601,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 319,
											"end": 6601,
											"name": "PUSH",
											"source": 14,
											"value": "EA75AA8F"
										},
										{
											"begin": 319,
											"end": 6601,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 319,
											"end": 6601,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "11"
										},
										{
											"begin": 319,
											"end": 6601,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 319,
											"end": 6601,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 319,
											"end": 6601,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 319,
											"end": 6601,
											"name": "tag",
											"source": 14,
											"value": "16"
										},
										{
											"begin": 319,
											"end": 6601,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 319,
											"end": 6601,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 319,
											"end": 6601,
											"name": "PUSH",
											"source": 14,
											"value": "3CCFD60B"
										},
										{
											"begin": 319,
											"end": 6601,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 319,
											"end": 6601,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "18"
										},
										{
											"begin": 319,
											"end": 6601,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 319,
											"end": 6601,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 319,
											"end": 6601,
											"name": "PUSH",
											"source": 14,
											"value": "3CCFD60B"
										},
										{
											"begin": 319,
											"end": 6601,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 319,
											"end": 6601,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "5"
										},
										{
											"begin": 319,
											"end": 6601,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 319,
											"end": 6601,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 319,
											"end": 6601,
											"name": "PUSH",
											"source": 14,
											"value": "715018A6"
										},
										{
											"begin": 319,
											"end": 6601,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 319,
											"end": 6601,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "6"
										},
										{
											"begin": 319,
											"end": 6601,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 319,
											"end": 6601,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 319,
											"end": 6601,
											"name": "PUSH",
											"source": 14,
											"value": "8DA5CB5B"
										},
										{
											"begin": 319,
											"end": 6601,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 319,
											"end": 6601,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "7"
										},
										{
											"begin": 319,
											"end": 6601,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 319,
											"end": 6601,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 319,
											"end": 6601,
											"name": "PUSH",
											"source": 14,
											"value": "BC197C81"
										},
										{
											"begin": 319,
											"end": 6601,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 319,
											"end": 6601,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "8"
										},
										{
											"begin": 319,
											"end": 6601,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 319,
											"end": 6601,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 319,
											"end": 6601,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 319,
											"end": 6601,
											"name": "tag",
											"source": 14,
											"value": "18"
										},
										{
											"begin": 319,
											"end": 6601,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 319,
											"end": 6601,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 319,
											"end": 6601,
											"name": "PUSH",
											"source": 14,
											"value": "1FFC9A7"
										},
										{
											"begin": 319,
											"end": 6601,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 319,
											"end": 6601,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 319,
											"end": 6601,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 319,
											"end": 6601,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 319,
											"end": 6601,
											"name": "PUSH",
											"source": 14,
											"value": "12065FE0"
										},
										{
											"begin": 319,
											"end": 6601,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 319,
											"end": 6601,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "3"
										},
										{
											"begin": 319,
											"end": 6601,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 319,
											"end": 6601,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 319,
											"end": 6601,
											"name": "PUSH",
											"source": 14,
											"value": "2C1449E1"
										},
										{
											"begin": 319,
											"end": 6601,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 319,
											"end": 6601,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 319,
											"end": 6601,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 319,
											"end": 6601,
											"name": "tag",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 319,
											"end": 6601,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 319,
											"end": 6601,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 319,
											"end": 6601,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 319,
											"end": 6601,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 650,
											"end": 871,
											"name": "tag",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 650,
											"end": 871,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 650,
											"end": 871,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 650,
											"end": 871,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 650,
											"end": 871,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 650,
											"end": 871,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 650,
											"end": 871,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 650,
											"end": 871,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 650,
											"end": 871,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 650,
											"end": 871,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 650,
											"end": 871,
											"name": "tag",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 650,
											"end": 871,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 650,
											"end": 871,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 650,
											"end": 871,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 650,
											"end": 871,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 650,
											"end": 871,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 650,
											"end": 871,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 650,
											"end": 871,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 650,
											"end": 871,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 650,
											"end": 871,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 650,
											"end": 871,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 650,
											"end": 871,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 650,
											"end": 871,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 650,
											"end": 871,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 650,
											"end": 871,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 650,
											"end": 871,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 650,
											"end": 871,
											"name": "tag",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 650,
											"end": 871,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 650,
											"end": 871,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 650,
											"end": 871,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 650,
											"end": 871,
											"name": "tag",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 650,
											"end": 871,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 650,
											"end": 871,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 650,
											"end": 871,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 650,
											"end": 871,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 650,
											"end": 871,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 650,
											"end": 871,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 650,
											"end": 871,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 650,
											"end": 871,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 650,
											"end": 871,
											"name": "tag",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 650,
											"end": 871,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 650,
											"end": 871,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 650,
											"end": 871,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 650,
											"end": 871,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 650,
											"end": 871,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 650,
											"end": 871,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 650,
											"end": 871,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 650,
											"end": 871,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 5863,
											"end": 5962,
											"name": "tag",
											"source": 14,
											"value": "3"
										},
										{
											"begin": 5863,
											"end": 5962,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5863,
											"end": 5962,
											"name": "CALLVALUE",
											"source": 14
										},
										{
											"begin": 5863,
											"end": 5962,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 5863,
											"end": 5962,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 5863,
											"end": 5962,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "26"
										},
										{
											"begin": 5863,
											"end": 5962,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 5863,
											"end": 5962,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5863,
											"end": 5962,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 5863,
											"end": 5962,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 5863,
											"end": 5962,
											"name": "tag",
											"source": 14,
											"value": "26"
										},
										{
											"begin": 5863,
											"end": 5962,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5863,
											"end": 5962,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5863,
											"end": 5962,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "27"
										},
										{
											"begin": 5863,
											"end": 5962,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "28"
										},
										{
											"begin": 5863,
											"end": 5962,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5863,
											"end": 5962,
											"name": "tag",
											"source": 14,
											"value": "27"
										},
										{
											"begin": 5863,
											"end": 5962,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5863,
											"end": 5962,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 5863,
											"end": 5962,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 5863,
											"end": 5962,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "29"
										},
										{
											"begin": 5863,
											"end": 5962,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 5863,
											"end": 5962,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5863,
											"end": 5962,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "30"
										},
										{
											"begin": 5863,
											"end": 5962,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5863,
											"end": 5962,
											"name": "tag",
											"source": 14,
											"value": "29"
										},
										{
											"begin": 5863,
											"end": 5962,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5863,
											"end": 5962,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 5863,
											"end": 5962,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 5863,
											"end": 5962,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 5863,
											"end": 5962,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 5863,
											"end": 5962,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 5863,
											"end": 5962,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5863,
											"end": 5962,
											"name": "RETURN",
											"source": 14
										},
										{
											"begin": 513,
											"end": 539,
											"name": "tag",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 513,
											"end": 539,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 513,
											"end": 539,
											"name": "CALLVALUE",
											"source": 14
										},
										{
											"begin": 513,
											"end": 539,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 513,
											"end": 539,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 513,
											"end": 539,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "31"
										},
										{
											"begin": 513,
											"end": 539,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 513,
											"end": 539,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 513,
											"end": 539,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 513,
											"end": 539,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 513,
											"end": 539,
											"name": "tag",
											"source": 14,
											"value": "31"
										},
										{
											"begin": 513,
											"end": 539,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 513,
											"end": 539,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 513,
											"end": 539,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "32"
										},
										{
											"begin": 513,
											"end": 539,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "33"
										},
										{
											"begin": 513,
											"end": 539,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 513,
											"end": 539,
											"name": "tag",
											"source": 14,
											"value": "32"
										},
										{
											"begin": 513,
											"end": 539,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 513,
											"end": 539,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 513,
											"end": 539,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 513,
											"end": 539,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "34"
										},
										{
											"begin": 513,
											"end": 539,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 513,
											"end": 539,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 513,
											"end": 539,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "35"
										},
										{
											"begin": 513,
											"end": 539,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 513,
											"end": 539,
											"name": "tag",
											"source": 14,
											"value": "34"
										},
										{
											"begin": 513,
											"end": 539,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 513,
											"end": 539,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 513,
											"end": 539,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 513,
											"end": 539,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 513,
											"end": 539,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 513,
											"end": 539,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 513,
											"end": 539,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 513,
											"end": 539,
											"name": "RETURN",
											"source": 14
										},
										{
											"begin": 5970,
											"end": 6274,
											"name": "tag",
											"source": 14,
											"value": "5"
										},
										{
											"begin": 5970,
											"end": 6274,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5970,
											"end": 6274,
											"name": "CALLVALUE",
											"source": 14
										},
										{
											"begin": 5970,
											"end": 6274,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 5970,
											"end": 6274,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 5970,
											"end": 6274,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "36"
										},
										{
											"begin": 5970,
											"end": 6274,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 5970,
											"end": 6274,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5970,
											"end": 6274,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 5970,
											"end": 6274,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 5970,
											"end": 6274,
											"name": "tag",
											"source": 14,
											"value": "36"
										},
										{
											"begin": 5970,
											"end": 6274,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5970,
											"end": 6274,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5970,
											"end": 6274,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "37"
										},
										{
											"begin": 5970,
											"end": 6274,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "38"
										},
										{
											"begin": 5970,
											"end": 6274,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5970,
											"end": 6274,
											"name": "tag",
											"source": 14,
											"value": "37"
										},
										{
											"begin": 5970,
											"end": 6274,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5970,
											"end": 6274,
											"name": "STOP",
											"source": 14
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1102,
											"end": 1349,
											"name": "tag",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 1102,
											"end": 1349,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1102,
											"end": 1349,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 1102,
											"end": 1349,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1102,
											"end": 1349,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1102,
											"end": 1349,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "47"
										},
										{
											"begin": 1102,
											"end": 1349,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1102,
											"end": 1349,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1102,
											"end": 1349,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1102,
											"end": 1349,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1102,
											"end": 1349,
											"name": "tag",
											"source": 6,
											"value": "47"
										},
										{
											"begin": 1102,
											"end": 1349,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1102,
											"end": 1349,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1102,
											"end": 1349,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "48"
										},
										{
											"begin": 1102,
											"end": 1349,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1102,
											"end": 1349,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1102,
											"end": 1349,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1102,
											"end": 1349,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1102,
											"end": 1349,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1102,
											"end": 1349,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1102,
											"end": 1349,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1102,
											"end": 1349,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 1102,
											"end": 1349,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1102,
											"end": 1349,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1102,
											"end": 1349,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "50"
										},
										{
											"begin": 1102,
											"end": 1349,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1102,
											"end": 1349,
											"name": "tag",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 1102,
											"end": 1349,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1102,
											"end": 1349,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "51"
										},
										{
											"begin": 1102,
											"end": 1349,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1102,
											"end": 1349,
											"name": "tag",
											"source": 6,
											"value": "48"
										},
										{
											"begin": 1102,
											"end": 1349,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1102,
											"end": 1349,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1102,
											"end": 1349,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1102,
											"end": 1349,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "52"
										},
										{
											"begin": 1102,
											"end": 1349,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1102,
											"end": 1349,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1102,
											"end": 1349,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 1102,
											"end": 1349,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1102,
											"end": 1349,
											"name": "tag",
											"source": 6,
											"value": "52"
										},
										{
											"begin": 1102,
											"end": 1349,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1102,
											"end": 1349,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1102,
											"end": 1349,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1102,
											"end": 1349,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1102,
											"end": 1349,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1102,
											"end": 1349,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1102,
											"end": 1349,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1102,
											"end": 1349,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 4010,
											"end": 5038,
											"name": "tag",
											"source": 14,
											"value": "9"
										},
										{
											"begin": 4010,
											"end": 5038,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4010,
											"end": 5038,
											"name": "CALLVALUE",
											"source": 14
										},
										{
											"begin": 4010,
											"end": 5038,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4010,
											"end": 5038,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 4010,
											"end": 5038,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "54"
										},
										{
											"begin": 4010,
											"end": 5038,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 4010,
											"end": 5038,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4010,
											"end": 5038,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4010,
											"end": 5038,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 4010,
											"end": 5038,
											"name": "tag",
											"source": 14,
											"value": "54"
										},
										{
											"begin": 4010,
											"end": 5038,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4010,
											"end": 5038,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4010,
											"end": 5038,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "55"
										},
										{
											"begin": 4010,
											"end": 5038,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 4010,
											"end": 5038,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4010,
											"end": 5038,
											"name": "CALLDATASIZE",
											"source": 14
										},
										{
											"begin": 4010,
											"end": 5038,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 4010,
											"end": 5038,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4010,
											"end": 5038,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4010,
											"end": 5038,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4010,
											"end": 5038,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "56"
										},
										{
											"begin": 4010,
											"end": 5038,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4010,
											"end": 5038,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4010,
											"end": 5038,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "57"
										},
										{
											"begin": 4010,
											"end": 5038,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4010,
											"end": 5038,
											"name": "tag",
											"source": 14,
											"value": "56"
										},
										{
											"begin": 4010,
											"end": 5038,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4010,
											"end": 5038,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "58"
										},
										{
											"begin": 4010,
											"end": 5038,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4010,
											"end": 5038,
											"name": "tag",
											"source": 14,
											"value": "55"
										},
										{
											"begin": 4010,
											"end": 5038,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4010,
											"end": 5038,
											"name": "STOP",
											"source": 14
										},
										{
											"begin": 892,
											"end": 937,
											"name": "tag",
											"source": 14,
											"value": "10"
										},
										{
											"begin": 892,
											"end": 937,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 892,
											"end": 937,
											"name": "CALLVALUE",
											"source": 14
										},
										{
											"begin": 892,
											"end": 937,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 892,
											"end": 937,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 892,
											"end": 937,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "59"
										},
										{
											"begin": 892,
											"end": 937,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 892,
											"end": 937,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 892,
											"end": 937,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 892,
											"end": 937,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 892,
											"end": 937,
											"name": "tag",
											"source": 14,
											"value": "59"
										},
										{
											"begin": 892,
											"end": 937,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 892,
											"end": 937,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 892,
											"end": 937,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 892,
											"end": 937,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 892,
											"end": 937,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 892,
											"end": 937,
											"name": "CALLDATASIZE",
											"source": 14
										},
										{
											"begin": 892,
											"end": 937,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 892,
											"end": 937,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 892,
											"end": 937,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 892,
											"end": 937,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 892,
											"end": 937,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "61"
										},
										{
											"begin": 892,
											"end": 937,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 892,
											"end": 937,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 892,
											"end": 937,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "62"
										},
										{
											"begin": 892,
											"end": 937,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 892,
											"end": 937,
											"name": "tag",
											"source": 14,
											"value": "61"
										},
										{
											"begin": 892,
											"end": 937,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 892,
											"end": 937,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "63"
										},
										{
											"begin": 892,
											"end": 937,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 892,
											"end": 937,
											"name": "tag",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 892,
											"end": 937,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 892,
											"end": 937,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 892,
											"end": 937,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 892,
											"end": 937,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "64"
										},
										{
											"begin": 892,
											"end": 937,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 892,
											"end": 937,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 892,
											"end": 937,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "30"
										},
										{
											"begin": 892,
											"end": 937,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 892,
											"end": 937,
											"name": "tag",
											"source": 14,
											"value": "64"
										},
										{
											"begin": 892,
											"end": 937,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 892,
											"end": 937,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 892,
											"end": 937,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 892,
											"end": 937,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 892,
											"end": 937,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 892,
											"end": 937,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 892,
											"end": 937,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 892,
											"end": 937,
											"name": "RETURN",
											"source": 14
										},
										{
											"begin": 589,
											"end": 616,
											"name": "tag",
											"source": 14,
											"value": "11"
										},
										{
											"begin": 589,
											"end": 616,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 589,
											"end": 616,
											"name": "CALLVALUE",
											"source": 14
										},
										{
											"begin": 589,
											"end": 616,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 589,
											"end": 616,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 589,
											"end": 616,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "65"
										},
										{
											"begin": 589,
											"end": 616,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 589,
											"end": 616,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 589,
											"end": 616,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 589,
											"end": 616,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 589,
											"end": 616,
											"name": "tag",
											"source": 14,
											"value": "65"
										},
										{
											"begin": 589,
											"end": 616,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 589,
											"end": 616,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 589,
											"end": 616,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "66"
										},
										{
											"begin": 589,
											"end": 616,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "67"
										},
										{
											"begin": 589,
											"end": 616,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 589,
											"end": 616,
											"name": "tag",
											"source": 14,
											"value": "66"
										},
										{
											"begin": 589,
											"end": 616,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 589,
											"end": 616,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 589,
											"end": 616,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 589,
											"end": 616,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "68"
										},
										{
											"begin": 589,
											"end": 616,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 589,
											"end": 616,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 589,
											"end": 616,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "69"
										},
										{
											"begin": 589,
											"end": 616,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 589,
											"end": 616,
											"name": "tag",
											"source": 14,
											"value": "68"
										},
										{
											"begin": 589,
											"end": 616,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 589,
											"end": 616,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 589,
											"end": 616,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 589,
											"end": 616,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 589,
											"end": 616,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 589,
											"end": 616,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 589,
											"end": 616,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 589,
											"end": 616,
											"name": "RETURN",
											"source": 14
										},
										{
											"begin": 5046,
											"end": 5855,
											"name": "tag",
											"source": 14,
											"value": "12"
										},
										{
											"begin": 5046,
											"end": 5855,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5046,
											"end": 5855,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "70"
										},
										{
											"begin": 5046,
											"end": 5855,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "71"
										},
										{
											"begin": 5046,
											"end": 5855,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5046,
											"end": 5855,
											"name": "tag",
											"source": 14,
											"value": "70"
										},
										{
											"begin": 5046,
											"end": 5855,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5046,
											"end": 5855,
											"name": "STOP",
											"source": 14
										},
										{
											"begin": 2074,
											"end": 4002,
											"name": "tag",
											"source": 14,
											"value": "13"
										},
										{
											"begin": 2074,
											"end": 4002,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2074,
											"end": 4002,
											"name": "CALLVALUE",
											"source": 14
										},
										{
											"begin": 2074,
											"end": 4002,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2074,
											"end": 4002,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 2074,
											"end": 4002,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "72"
										},
										{
											"begin": 2074,
											"end": 4002,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 2074,
											"end": 4002,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2074,
											"end": 4002,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2074,
											"end": 4002,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 2074,
											"end": 4002,
											"name": "tag",
											"source": 14,
											"value": "72"
										},
										{
											"begin": 2074,
											"end": 4002,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2074,
											"end": 4002,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2074,
											"end": 4002,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "73"
										},
										{
											"begin": 2074,
											"end": 4002,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 2074,
											"end": 4002,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2074,
											"end": 4002,
											"name": "CALLDATASIZE",
											"source": 14
										},
										{
											"begin": 2074,
											"end": 4002,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 2074,
											"end": 4002,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2074,
											"end": 4002,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2074,
											"end": 4002,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2074,
											"end": 4002,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "74"
										},
										{
											"begin": 2074,
											"end": 4002,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2074,
											"end": 4002,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2074,
											"end": 4002,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "75"
										},
										{
											"begin": 2074,
											"end": 4002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2074,
											"end": 4002,
											"name": "tag",
											"source": 14,
											"value": "74"
										},
										{
											"begin": 2074,
											"end": 4002,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2074,
											"end": 4002,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "76"
										},
										{
											"begin": 2074,
											"end": 4002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2074,
											"end": 4002,
											"name": "tag",
											"source": 14,
											"value": "73"
										},
										{
											"begin": 2074,
											"end": 4002,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2074,
											"end": 4002,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 2074,
											"end": 4002,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 2074,
											"end": 4002,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "77"
										},
										{
											"begin": 2074,
											"end": 4002,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2074,
											"end": 4002,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2074,
											"end": 4002,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "53"
										},
										{
											"begin": 2074,
											"end": 4002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2074,
											"end": 4002,
											"name": "tag",
											"source": 14,
											"value": "77"
										},
										{
											"begin": 2074,
											"end": 4002,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2074,
											"end": 4002,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 2074,
											"end": 4002,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 2074,
											"end": 4002,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2074,
											"end": 4002,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2074,
											"end": 4002,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 2074,
											"end": 4002,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2074,
											"end": 4002,
											"name": "RETURN",
											"source": 14
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 6282,
											"end": 6597,
											"name": "tag",
											"source": 14,
											"value": "15"
										},
										{
											"begin": 6282,
											"end": 6597,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6282,
											"end": 6597,
											"name": "CALLVALUE",
											"source": 14
										},
										{
											"begin": 6282,
											"end": 6597,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 6282,
											"end": 6597,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 6282,
											"end": 6597,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "83"
										},
										{
											"begin": 6282,
											"end": 6597,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 6282,
											"end": 6597,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 6282,
											"end": 6597,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 6282,
											"end": 6597,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 6282,
											"end": 6597,
											"name": "tag",
											"source": 14,
											"value": "83"
										},
										{
											"begin": 6282,
											"end": 6597,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6282,
											"end": 6597,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6282,
											"end": 6597,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "84"
										},
										{
											"begin": 6282,
											"end": 6597,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 6282,
											"end": 6597,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 6282,
											"end": 6597,
											"name": "CALLDATASIZE",
											"source": 14
										},
										{
											"begin": 6282,
											"end": 6597,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 6282,
											"end": 6597,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 6282,
											"end": 6597,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6282,
											"end": 6597,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 6282,
											"end": 6597,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "85"
										},
										{
											"begin": 6282,
											"end": 6597,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 6282,
											"end": 6597,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 6282,
											"end": 6597,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "86"
										},
										{
											"begin": 6282,
											"end": 6597,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6282,
											"end": 6597,
											"name": "tag",
											"source": 14,
											"value": "85"
										},
										{
											"begin": 6282,
											"end": 6597,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6282,
											"end": 6597,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "87"
										},
										{
											"begin": 6282,
											"end": 6597,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6282,
											"end": 6597,
											"name": "tag",
											"source": 14,
											"value": "84"
										},
										{
											"begin": 6282,
											"end": 6597,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6282,
											"end": 6597,
											"name": "STOP",
											"source": 14
										},
										{
											"begin": 650,
											"end": 871,
											"name": "tag",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 650,
											"end": 871,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 752,
											"end": 756,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 790,
											"end": 824,
											"name": "PUSH",
											"source": 6,
											"value": "4E2312E000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 775,
											"end": 824,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 775,
											"end": 824,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 775,
											"end": 824,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 775,
											"end": 786,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 775,
											"end": 824,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 775,
											"end": 824,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 775,
											"end": 824,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 775,
											"end": 824,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 775,
											"end": 864,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 775,
											"end": 864,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "89"
										},
										{
											"begin": 775,
											"end": 864,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 775,
											"end": 864,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 828,
											"end": 864,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "90"
										},
										{
											"begin": 852,
											"end": 863,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 828,
											"end": 851,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "91"
										},
										{
											"begin": 828,
											"end": 864,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 828,
											"end": 864,
											"name": "tag",
											"source": 6,
											"value": "90"
										},
										{
											"begin": 828,
											"end": 864,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 775,
											"end": 864,
											"name": "tag",
											"source": 6,
											"value": "89"
										},
										{
											"begin": 775,
											"end": 864,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 768,
											"end": 864,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 768,
											"end": 864,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 650,
											"end": 871,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 650,
											"end": 871,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 650,
											"end": 871,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 650,
											"end": 871,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5863,
											"end": 5962,
											"name": "tag",
											"source": 14,
											"value": "28"
										},
										{
											"begin": 5863,
											"end": 5962,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5906,
											"end": 5913,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5933,
											"end": 5954,
											"name": "SELFBALANCE",
											"source": 14
										},
										{
											"begin": 5926,
											"end": 5954,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5926,
											"end": 5954,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5863,
											"end": 5962,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5863,
											"end": 5962,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 513,
											"end": 539,
											"name": "tag",
											"source": 14,
											"value": "33"
										},
										{
											"begin": 513,
											"end": 539,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 513,
											"end": 539,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 513,
											"end": 539,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 513,
											"end": 539,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 513,
											"end": 539,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 513,
											"end": 539,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 513,
											"end": 539,
											"name": "PUSH",
											"source": 14,
											"value": "100"
										},
										{
											"begin": 513,
											"end": 539,
											"name": "EXP",
											"source": 14
										},
										{
											"begin": 513,
											"end": 539,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 513,
											"end": 539,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 513,
											"end": 539,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 513,
											"end": 539,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 513,
											"end": 539,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 513,
											"end": 539,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5970,
											"end": 6274,
											"name": "tag",
											"source": 14,
											"value": "38"
										},
										{
											"begin": 5970,
											"end": 6274,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6022,
											"end": 6036,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 6039,
											"end": 6051,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "97"
										},
										{
											"begin": 6039,
											"end": 6049,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "28"
										},
										{
											"begin": 6039,
											"end": 6051,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6039,
											"end": 6051,
											"modifierDepth": 1,
											"name": "tag",
											"source": 14,
											"value": "97"
										},
										{
											"begin": 6039,
											"end": 6051,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6022,
											"end": 6051,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 6022,
											"end": 6051,
											"modifierDepth": 1,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6080,
											"end": 6081,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 6070,
											"end": 6076,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 6070,
											"end": 6081,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 6062,
											"end": 6104,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "98"
										},
										{
											"begin": 6062,
											"end": 6104,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 6062,
											"end": 6104,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 6062,
											"end": 6104,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 6062,
											"end": 6104,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6062,
											"end": 6104,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 6062,
											"end": 6104,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 6062,
											"end": 6104,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 6062,
											"end": 6104,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6062,
											"end": 6104,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "99"
										},
										{
											"begin": 6062,
											"end": 6104,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 6062,
											"end": 6104,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "100"
										},
										{
											"begin": 6062,
											"end": 6104,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6062,
											"end": 6104,
											"modifierDepth": 1,
											"name": "tag",
											"source": 14,
											"value": "99"
										},
										{
											"begin": 6062,
											"end": 6104,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6062,
											"end": 6104,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 6062,
											"end": 6104,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 6062,
											"end": 6104,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 6062,
											"end": 6104,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 6062,
											"end": 6104,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 6062,
											"end": 6104,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 6062,
											"end": 6104,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 6062,
											"end": 6104,
											"modifierDepth": 1,
											"name": "tag",
											"source": 14,
											"value": "98"
										},
										{
											"begin": 6062,
											"end": 6104,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6116,
											"end": 6128,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 6133,
											"end": 6143,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 14
										},
										{
											"begin": 6133,
											"end": 6148,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6133,
											"end": 6148,
											"modifierDepth": 1,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 6156,
											"end": 6162,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6133,
											"end": 6167,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 6133,
											"end": 6167,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 6133,
											"end": 6167,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "101"
										},
										{
											"begin": 6133,
											"end": 6167,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 6133,
											"end": 6167,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "102"
										},
										{
											"begin": 6133,
											"end": 6167,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6133,
											"end": 6167,
											"modifierDepth": 1,
											"name": "tag",
											"source": 14,
											"value": "101"
										},
										{
											"begin": 6133,
											"end": 6167,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6133,
											"end": 6167,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 6133,
											"end": 6167,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 6133,
											"end": 6167,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 6133,
											"end": 6167,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 6133,
											"end": 6167,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 6133,
											"end": 6167,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 6133,
											"end": 6167,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 6133,
											"end": 6167,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 6133,
											"end": 6167,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 6133,
											"end": 6167,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 14
										},
										{
											"begin": 6133,
											"end": 6167,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 14
										},
										{
											"begin": 6133,
											"end": 6167,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 6133,
											"end": 6167,
											"modifierDepth": 1,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6133,
											"end": 6167,
											"modifierDepth": 1,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6133,
											"end": 6167,
											"modifierDepth": 1,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6133,
											"end": 6167,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 6133,
											"end": 6167,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 6133,
											"end": 6167,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 6133,
											"end": 6167,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 6133,
											"end": 6167,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 6133,
											"end": 6167,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "105"
										},
										{
											"begin": 6133,
											"end": 6167,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 6133,
											"end": 6167,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 6133,
											"end": 6167,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 6133,
											"end": 6167,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 6133,
											"end": 6167,
											"modifierDepth": 1,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6133,
											"end": 6167,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 6133,
											"end": 6167,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 14
										},
										{
											"begin": 6133,
											"end": 6167,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "3F"
										},
										{
											"begin": 6133,
											"end": 6167,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 6133,
											"end": 6167,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6133,
											"end": 6167,
											"modifierDepth": 1,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 6133,
											"end": 6167,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6133,
											"end": 6167,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6133,
											"end": 6167,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 6133,
											"end": 6167,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 6133,
											"end": 6167,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 6133,
											"end": 6167,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6133,
											"end": 6167,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 6133,
											"end": 6167,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 6133,
											"end": 6167,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 6133,
											"end": 6167,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 6133,
											"end": 6167,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 6133,
											"end": 6167,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6133,
											"end": 6167,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 14
										},
										{
											"begin": 6133,
											"end": 6167,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "104"
										},
										{
											"begin": 6133,
											"end": 6167,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6133,
											"end": 6167,
											"modifierDepth": 1,
											"name": "tag",
											"source": 14,
											"value": "105"
										},
										{
											"begin": 6133,
											"end": 6167,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6133,
											"end": 6167,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 6133,
											"end": 6167,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 6133,
											"end": 6167,
											"modifierDepth": 1,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6133,
											"end": 6167,
											"modifierDepth": 1,
											"name": "tag",
											"source": 14,
											"value": "104"
										},
										{
											"begin": 6133,
											"end": 6167,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6133,
											"end": 6167,
											"modifierDepth": 1,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6115,
											"end": 6167,
											"modifierDepth": 1,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6115,
											"end": 6167,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 6115,
											"end": 6167,
											"modifierDepth": 1,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6186,
											"end": 6193,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 6178,
											"end": 6222,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "106"
										},
										{
											"begin": 6178,
											"end": 6222,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 6178,
											"end": 6222,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 6178,
											"end": 6222,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 6178,
											"end": 6222,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6178,
											"end": 6222,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 6178,
											"end": 6222,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 6178,
											"end": 6222,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 6178,
											"end": 6222,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6178,
											"end": 6222,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "107"
										},
										{
											"begin": 6178,
											"end": 6222,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 6178,
											"end": 6222,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "108"
										},
										{
											"begin": 6178,
											"end": 6222,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6178,
											"end": 6222,
											"modifierDepth": 1,
											"name": "tag",
											"source": 14,
											"value": "107"
										},
										{
											"begin": 6178,
											"end": 6222,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6178,
											"end": 6222,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 6178,
											"end": 6222,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 6178,
											"end": 6222,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 6178,
											"end": 6222,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 6178,
											"end": 6222,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 6178,
											"end": 6222,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 6178,
											"end": 6222,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 6178,
											"end": 6222,
											"modifierDepth": 1,
											"name": "tag",
											"source": 14,
											"value": "106"
										},
										{
											"begin": 6178,
											"end": 6222,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6238,
											"end": 6266,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "884EDAD9CE6FA2440D8A54CC123490EB96D2768479D49FF9C7366125A9424364"
										},
										{
											"begin": 6247,
											"end": 6257,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 14
										},
										{
											"begin": 6259,
											"end": 6265,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 6238,
											"end": 6266,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 6238,
											"end": 6266,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 6238,
											"end": 6266,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "109"
										},
										{
											"begin": 6238,
											"end": 6266,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 6238,
											"end": 6266,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 6238,
											"end": 6266,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 6238,
											"end": 6266,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "110"
										},
										{
											"begin": 6238,
											"end": 6266,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6238,
											"end": 6266,
											"modifierDepth": 1,
											"name": "tag",
											"source": 14,
											"value": "109"
										},
										{
											"begin": 6238,
											"end": 6266,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6238,
											"end": 6266,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 6238,
											"end": 6266,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 6238,
											"end": 6266,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 6238,
											"end": 6266,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 6238,
											"end": 6266,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 6238,
											"end": 6266,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 6238,
											"end": 6266,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 14
										},
										{
											"begin": 6011,
											"end": 6274,
											"modifierDepth": 1,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6011,
											"end": 6274,
											"modifierDepth": 1,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5970,
											"end": 6274,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1102,
											"end": 1349,
											"name": "tag",
											"source": 6,
											"value": "51"
										},
										{
											"begin": 1102,
											"end": 1349,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1281,
											"end": 1287,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1306,
											"end": 1342,
											"name": "PUSH",
											"source": 6,
											"value": "BC197C81"
										},
										{
											"begin": 1306,
											"end": 1342,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 1306,
											"end": 1342,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 1299,
											"end": 1342,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1299,
											"end": 1342,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1102,
											"end": 1349,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 1102,
											"end": 1349,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 1102,
											"end": 1349,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1102,
											"end": 1349,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1102,
											"end": 1349,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1102,
											"end": 1349,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1102,
											"end": 1349,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1102,
											"end": 1349,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4010,
											"end": 5038,
											"name": "tag",
											"source": 14,
											"value": "58"
										},
										{
											"begin": 4010,
											"end": 5038,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4130,
											"end": 4143,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4146,
											"end": 4156,
											"name": "CALLER",
											"source": 14
										},
										{
											"begin": 4130,
											"end": 4156,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4130,
											"end": 4156,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4198,
											"end": 4199,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4175,
											"end": 4185,
											"name": "PUSH",
											"source": 14,
											"value": "3"
										},
										{
											"begin": 4175,
											"end": 4194,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4186,
											"end": 4193,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 4175,
											"end": 4194,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4175,
											"end": 4194,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 4175,
											"end": 4194,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 4175,
											"end": 4194,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4175,
											"end": 4194,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4175,
											"end": 4194,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4175,
											"end": 4194,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 4175,
											"end": 4194,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 4175,
											"end": 4194,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4175,
											"end": 4194,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4175,
											"end": 4194,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 4175,
											"end": 4194,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 4175,
											"end": 4199,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 4167,
											"end": 4224,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "119"
										},
										{
											"begin": 4167,
											"end": 4224,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 4167,
											"end": 4224,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 4167,
											"end": 4224,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 4167,
											"end": 4224,
											"name": "PUSH",
											"source": 14,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4167,
											"end": 4224,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4167,
											"end": 4224,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 4167,
											"end": 4224,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 4167,
											"end": 4224,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4167,
											"end": 4224,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "120"
										},
										{
											"begin": 4167,
											"end": 4224,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4167,
											"end": 4224,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "121"
										},
										{
											"begin": 4167,
											"end": 4224,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4167,
											"end": 4224,
											"name": "tag",
											"source": 14,
											"value": "120"
										},
										{
											"begin": 4167,
											"end": 4224,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4167,
											"end": 4224,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 4167,
											"end": 4224,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 4167,
											"end": 4224,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4167,
											"end": 4224,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4167,
											"end": 4224,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 4167,
											"end": 4224,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4167,
											"end": 4224,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 4167,
											"end": 4224,
											"name": "tag",
											"source": 14,
											"value": "119"
										},
										{
											"begin": 4167,
											"end": 4224,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4275,
											"end": 4283,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4253,
											"end": 4283,
											"name": "PUSH",
											"source": 14,
											"value": "FF"
										},
										{
											"begin": 4253,
											"end": 4283,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 4253,
											"end": 4263,
											"name": "PUSH",
											"source": 14,
											"value": "3"
										},
										{
											"begin": 4253,
											"end": 4272,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4264,
											"end": 4271,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 4253,
											"end": 4272,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4253,
											"end": 4272,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 4253,
											"end": 4272,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 4253,
											"end": 4272,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4253,
											"end": 4272,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4253,
											"end": 4272,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4253,
											"end": 4272,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 4253,
											"end": 4272,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 4253,
											"end": 4272,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4253,
											"end": 4272,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4253,
											"end": 4272,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 4253,
											"end": 4272,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 4253,
											"end": 4283,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "122"
										},
										{
											"begin": 4253,
											"end": 4283,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4253,
											"end": 4283,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4253,
											"end": 4283,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "123"
										},
										{
											"begin": 4253,
											"end": 4283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4253,
											"end": 4283,
											"name": "tag",
											"source": 14,
											"value": "122"
										},
										{
											"begin": 4253,
											"end": 4283,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4243,
											"end": 4249,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 4243,
											"end": 4283,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 4243,
											"end": 4283,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 4235,
											"end": 4305,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "124"
										},
										{
											"begin": 4235,
											"end": 4305,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 4235,
											"end": 4305,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 4235,
											"end": 4305,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 4235,
											"end": 4305,
											"name": "PUSH",
											"source": 14,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4235,
											"end": 4305,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4235,
											"end": 4305,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 4235,
											"end": 4305,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 4235,
											"end": 4305,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4235,
											"end": 4305,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "125"
										},
										{
											"begin": 4235,
											"end": 4305,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4235,
											"end": 4305,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "126"
										},
										{
											"begin": 4235,
											"end": 4305,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4235,
											"end": 4305,
											"name": "tag",
											"source": 14,
											"value": "125"
										},
										{
											"begin": 4235,
											"end": 4305,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4235,
											"end": 4305,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 4235,
											"end": 4305,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 4235,
											"end": 4305,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4235,
											"end": 4305,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4235,
											"end": 4305,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 4235,
											"end": 4305,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4235,
											"end": 4305,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 4235,
											"end": 4305,
											"name": "tag",
											"source": 14,
											"value": "124"
										},
										{
											"begin": 4235,
											"end": 4305,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4387,
											"end": 4395,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4338,
											"end": 4395,
											"name": "PUSH",
											"source": 14,
											"value": "FF"
										},
										{
											"begin": 4338,
											"end": 4395,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 4338,
											"end": 4349,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 4338,
											"end": 4349,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4338,
											"end": 4349,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4338,
											"end": 4349,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 4338,
											"end": 4349,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4338,
											"end": 4349,
											"name": "PUSH",
											"source": 14,
											"value": "100"
										},
										{
											"begin": 4338,
											"end": 4349,
											"name": "EXP",
											"source": 14
										},
										{
											"begin": 4338,
											"end": 4349,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4338,
											"end": 4349,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 4338,
											"end": 4349,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4338,
											"end": 4349,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 4338,
											"end": 4359,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4338,
											"end": 4359,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 4338,
											"end": 4359,
											"name": "PUSH",
											"source": 14,
											"value": "FDD58E"
										},
										{
											"begin": 4368,
											"end": 4372,
											"name": "ADDRESS",
											"source": 14
										},
										{
											"begin": 4375,
											"end": 4382,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 4338,
											"end": 4383,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 4338,
											"end": 4383,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 4338,
											"end": 4383,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 4338,
											"end": 4383,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4338,
											"end": 4383,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 4338,
											"end": 4383,
											"name": "PUSH",
											"source": 14,
											"value": "E0"
										},
										{
											"begin": 4338,
											"end": 4383,
											"name": "SHL",
											"source": 14
										},
										{
											"begin": 4338,
											"end": 4383,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4338,
											"end": 4383,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 4338,
											"end": 4383,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 4338,
											"end": 4383,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4338,
											"end": 4383,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "127"
										},
										{
											"begin": 4338,
											"end": 4383,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 4338,
											"end": 4383,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4338,
											"end": 4383,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4338,
											"end": 4383,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "110"
										},
										{
											"begin": 4338,
											"end": 4383,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4338,
											"end": 4383,
											"name": "tag",
											"source": 14,
											"value": "127"
										},
										{
											"begin": 4338,
											"end": 4383,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4338,
											"end": 4383,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 4338,
											"end": 4383,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 4338,
											"end": 4383,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 4338,
											"end": 4383,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4338,
											"end": 4383,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 4338,
											"end": 4383,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 4338,
											"end": 4383,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4338,
											"end": 4383,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 4338,
											"end": 4383,
											"name": "GAS",
											"source": 14
										},
										{
											"begin": 4338,
											"end": 4383,
											"name": "STATICCALL",
											"source": 14
										},
										{
											"begin": 4338,
											"end": 4383,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 4338,
											"end": 4383,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4338,
											"end": 4383,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 4338,
											"end": 4383,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "129"
										},
										{
											"begin": 4338,
											"end": 4383,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 4338,
											"end": 4383,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 4338,
											"end": 4383,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4338,
											"end": 4383,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4338,
											"end": 4383,
											"name": "RETURNDATACOPY",
											"source": 14
										},
										{
											"begin": 4338,
											"end": 4383,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 4338,
											"end": 4383,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4338,
											"end": 4383,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 4338,
											"end": 4383,
											"name": "tag",
											"source": 14,
											"value": "129"
										},
										{
											"begin": 4338,
											"end": 4383,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4338,
											"end": 4383,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4338,
											"end": 4383,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4338,
											"end": 4383,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4338,
											"end": 4383,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4338,
											"end": 4383,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 4338,
											"end": 4383,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 4338,
											"end": 4383,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 4338,
											"end": 4383,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 4338,
											"end": 4383,
											"name": "NOT",
											"source": 14
										},
										{
											"begin": 4338,
											"end": 4383,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 4338,
											"end": 4383,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4338,
											"end": 4383,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4338,
											"end": 4383,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 4338,
											"end": 4383,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4338,
											"end": 4383,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4338,
											"end": 4383,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4338,
											"end": 4383,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 4338,
											"end": 4383,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 4338,
											"end": 4383,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4338,
											"end": 4383,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4338,
											"end": 4383,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4338,
											"end": 4383,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4338,
											"end": 4383,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "130"
										},
										{
											"begin": 4338,
											"end": 4383,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4338,
											"end": 4383,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4338,
											"end": 4383,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "131"
										},
										{
											"begin": 4338,
											"end": 4383,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4338,
											"end": 4383,
											"name": "tag",
											"source": 14,
											"value": "130"
										},
										{
											"begin": 4338,
											"end": 4383,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4338,
											"end": 4395,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 4338,
											"end": 4395,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 4316,
											"end": 4444,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "132"
										},
										{
											"begin": 4316,
											"end": 4444,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 4316,
											"end": 4444,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 4316,
											"end": 4444,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 4316,
											"end": 4444,
											"name": "PUSH",
											"source": 14,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4316,
											"end": 4444,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4316,
											"end": 4444,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 4316,
											"end": 4444,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 4316,
											"end": 4444,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4316,
											"end": 4444,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "133"
										},
										{
											"begin": 4316,
											"end": 4444,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4316,
											"end": 4444,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "134"
										},
										{
											"begin": 4316,
											"end": 4444,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4316,
											"end": 4444,
											"name": "tag",
											"source": 14,
											"value": "133"
										},
										{
											"begin": 4316,
											"end": 4444,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4316,
											"end": 4444,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 4316,
											"end": 4444,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 4316,
											"end": 4444,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4316,
											"end": 4444,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4316,
											"end": 4444,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 4316,
											"end": 4444,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4316,
											"end": 4444,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 4316,
											"end": 4444,
											"name": "tag",
											"source": 14,
											"value": "132"
										},
										{
											"begin": 4316,
											"end": 4444,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4496,
											"end": 4502,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4463,
											"end": 4475,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 4463,
											"end": 4475,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4463,
											"end": 4475,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4463,
											"end": 4475,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 4463,
											"end": 4475,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4463,
											"end": 4475,
											"name": "PUSH",
											"source": 14,
											"value": "100"
										},
										{
											"begin": 4463,
											"end": 4475,
											"name": "EXP",
											"source": 14
										},
										{
											"begin": 4463,
											"end": 4475,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4463,
											"end": 4475,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 4463,
											"end": 4475,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4463,
											"end": 4475,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 4463,
											"end": 4485,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4463,
											"end": 4485,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 4463,
											"end": 4485,
											"name": "PUSH",
											"source": 14,
											"value": "70A08231"
										},
										{
											"begin": 4486,
											"end": 4491,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 4463,
											"end": 4492,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 4463,
											"end": 4492,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 4463,
											"end": 4492,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4463,
											"end": 4492,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4463,
											"end": 4492,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 4463,
											"end": 4492,
											"name": "PUSH",
											"source": 14,
											"value": "E0"
										},
										{
											"begin": 4463,
											"end": 4492,
											"name": "SHL",
											"source": 14
										},
										{
											"begin": 4463,
											"end": 4492,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4463,
											"end": 4492,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 4463,
											"end": 4492,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 4463,
											"end": 4492,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4463,
											"end": 4492,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "135"
										},
										{
											"begin": 4463,
											"end": 4492,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4463,
											"end": 4492,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4463,
											"end": 4492,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "46"
										},
										{
											"begin": 4463,
											"end": 4492,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4463,
											"end": 4492,
											"name": "tag",
											"source": 14,
											"value": "135"
										},
										{
											"begin": 4463,
											"end": 4492,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4463,
											"end": 4492,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 4463,
											"end": 4492,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 4463,
											"end": 4492,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 4463,
											"end": 4492,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4463,
											"end": 4492,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 4463,
											"end": 4492,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 4463,
											"end": 4492,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4463,
											"end": 4492,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 4463,
											"end": 4492,
											"name": "GAS",
											"source": 14
										},
										{
											"begin": 4463,
											"end": 4492,
											"name": "STATICCALL",
											"source": 14
										},
										{
											"begin": 4463,
											"end": 4492,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 4463,
											"end": 4492,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4463,
											"end": 4492,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 4463,
											"end": 4492,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "137"
										},
										{
											"begin": 4463,
											"end": 4492,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 4463,
											"end": 4492,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 4463,
											"end": 4492,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4463,
											"end": 4492,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4463,
											"end": 4492,
											"name": "RETURNDATACOPY",
											"source": 14
										},
										{
											"begin": 4463,
											"end": 4492,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 4463,
											"end": 4492,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4463,
											"end": 4492,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 4463,
											"end": 4492,
											"name": "tag",
											"source": 14,
											"value": "137"
										},
										{
											"begin": 4463,
											"end": 4492,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4463,
											"end": 4492,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4463,
											"end": 4492,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4463,
											"end": 4492,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4463,
											"end": 4492,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4463,
											"end": 4492,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 4463,
											"end": 4492,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 4463,
											"end": 4492,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 4463,
											"end": 4492,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 4463,
											"end": 4492,
											"name": "NOT",
											"source": 14
										},
										{
											"begin": 4463,
											"end": 4492,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 4463,
											"end": 4492,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4463,
											"end": 4492,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4463,
											"end": 4492,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 4463,
											"end": 4492,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4463,
											"end": 4492,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4463,
											"end": 4492,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4463,
											"end": 4492,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 4463,
											"end": 4492,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 4463,
											"end": 4492,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4463,
											"end": 4492,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4463,
											"end": 4492,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4463,
											"end": 4492,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4463,
											"end": 4492,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "138"
										},
										{
											"begin": 4463,
											"end": 4492,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4463,
											"end": 4492,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4463,
											"end": 4492,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "131"
										},
										{
											"begin": 4463,
											"end": 4492,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4463,
											"end": 4492,
											"name": "tag",
											"source": 14,
											"value": "138"
										},
										{
											"begin": 4463,
											"end": 4492,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4463,
											"end": 4502,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 4463,
											"end": 4502,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 4455,
											"end": 4525,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "139"
										},
										{
											"begin": 4455,
											"end": 4525,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 4455,
											"end": 4525,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 4455,
											"end": 4525,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 4455,
											"end": 4525,
											"name": "PUSH",
											"source": 14,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4455,
											"end": 4525,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4455,
											"end": 4525,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 4455,
											"end": 4525,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 4455,
											"end": 4525,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4455,
											"end": 4525,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "140"
										},
										{
											"begin": 4455,
											"end": 4525,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4455,
											"end": 4525,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "141"
										},
										{
											"begin": 4455,
											"end": 4525,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4455,
											"end": 4525,
											"name": "tag",
											"source": 14,
											"value": "140"
										},
										{
											"begin": 4455,
											"end": 4525,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4455,
											"end": 4525,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 4455,
											"end": 4525,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 4455,
											"end": 4525,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4455,
											"end": 4525,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4455,
											"end": 4525,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 4455,
											"end": 4525,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4455,
											"end": 4525,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 4455,
											"end": 4525,
											"name": "tag",
											"source": 14,
											"value": "139"
										},
										{
											"begin": 4455,
											"end": 4525,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4606,
											"end": 4612,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4558,
											"end": 4570,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 4558,
											"end": 4570,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4558,
											"end": 4570,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4558,
											"end": 4570,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 4558,
											"end": 4570,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4558,
											"end": 4570,
											"name": "PUSH",
											"source": 14,
											"value": "100"
										},
										{
											"begin": 4558,
											"end": 4570,
											"name": "EXP",
											"source": 14
										},
										{
											"begin": 4558,
											"end": 4570,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4558,
											"end": 4570,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 4558,
											"end": 4570,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4558,
											"end": 4570,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 4558,
											"end": 4580,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4558,
											"end": 4580,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 4558,
											"end": 4580,
											"name": "PUSH",
											"source": 14,
											"value": "DD62ED3E"
										},
										{
											"begin": 4581,
											"end": 4586,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 4596,
											"end": 4600,
											"name": "ADDRESS",
											"source": 14
										},
										{
											"begin": 4558,
											"end": 4602,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 4558,
											"end": 4602,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 4558,
											"end": 4602,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 4558,
											"end": 4602,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4558,
											"end": 4602,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 4558,
											"end": 4602,
											"name": "PUSH",
											"source": 14,
											"value": "E0"
										},
										{
											"begin": 4558,
											"end": 4602,
											"name": "SHL",
											"source": 14
										},
										{
											"begin": 4558,
											"end": 4602,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4558,
											"end": 4602,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 4558,
											"end": 4602,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 4558,
											"end": 4602,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4558,
											"end": 4602,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "142"
										},
										{
											"begin": 4558,
											"end": 4602,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 4558,
											"end": 4602,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4558,
											"end": 4602,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4558,
											"end": 4602,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "143"
										},
										{
											"begin": 4558,
											"end": 4602,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4558,
											"end": 4602,
											"name": "tag",
											"source": 14,
											"value": "142"
										},
										{
											"begin": 4558,
											"end": 4602,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4558,
											"end": 4602,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 4558,
											"end": 4602,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 4558,
											"end": 4602,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 4558,
											"end": 4602,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4558,
											"end": 4602,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 4558,
											"end": 4602,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 4558,
											"end": 4602,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4558,
											"end": 4602,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 4558,
											"end": 4602,
											"name": "GAS",
											"source": 14
										},
										{
											"begin": 4558,
											"end": 4602,
											"name": "STATICCALL",
											"source": 14
										},
										{
											"begin": 4558,
											"end": 4602,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 4558,
											"end": 4602,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4558,
											"end": 4602,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 4558,
											"end": 4602,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "145"
										},
										{
											"begin": 4558,
											"end": 4602,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 4558,
											"end": 4602,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 4558,
											"end": 4602,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4558,
											"end": 4602,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4558,
											"end": 4602,
											"name": "RETURNDATACOPY",
											"source": 14
										},
										{
											"begin": 4558,
											"end": 4602,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 4558,
											"end": 4602,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4558,
											"end": 4602,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 4558,
											"end": 4602,
											"name": "tag",
											"source": 14,
											"value": "145"
										},
										{
											"begin": 4558,
											"end": 4602,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4558,
											"end": 4602,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4558,
											"end": 4602,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4558,
											"end": 4602,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4558,
											"end": 4602,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4558,
											"end": 4602,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 4558,
											"end": 4602,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 4558,
											"end": 4602,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 4558,
											"end": 4602,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 4558,
											"end": 4602,
											"name": "NOT",
											"source": 14
										},
										{
											"begin": 4558,
											"end": 4602,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 4558,
											"end": 4602,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4558,
											"end": 4602,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4558,
											"end": 4602,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 4558,
											"end": 4602,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4558,
											"end": 4602,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4558,
											"end": 4602,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4558,
											"end": 4602,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 4558,
											"end": 4602,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 4558,
											"end": 4602,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4558,
											"end": 4602,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4558,
											"end": 4602,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4558,
											"end": 4602,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4558,
											"end": 4602,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "146"
										},
										{
											"begin": 4558,
											"end": 4602,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4558,
											"end": 4602,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4558,
											"end": 4602,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "131"
										},
										{
											"begin": 4558,
											"end": 4602,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4558,
											"end": 4602,
											"name": "tag",
											"source": 14,
											"value": "146"
										},
										{
											"begin": 4558,
											"end": 4602,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4558,
											"end": 4612,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 4558,
											"end": 4612,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 4536,
											"end": 4667,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "147"
										},
										{
											"begin": 4536,
											"end": 4667,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 4536,
											"end": 4667,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 4536,
											"end": 4667,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 4536,
											"end": 4667,
											"name": "PUSH",
											"source": 14,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4536,
											"end": 4667,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4536,
											"end": 4667,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 4536,
											"end": 4667,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 4536,
											"end": 4667,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4536,
											"end": 4667,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "148"
										},
										{
											"begin": 4536,
											"end": 4667,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4536,
											"end": 4667,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "149"
										},
										{
											"begin": 4536,
											"end": 4667,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4536,
											"end": 4667,
											"name": "tag",
											"source": 14,
											"value": "148"
										},
										{
											"begin": 4536,
											"end": 4667,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4536,
											"end": 4667,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 4536,
											"end": 4667,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 4536,
											"end": 4667,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4536,
											"end": 4667,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4536,
											"end": 4667,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 4536,
											"end": 4667,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4536,
											"end": 4667,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 4536,
											"end": 4667,
											"name": "tag",
											"source": 14,
											"value": "147"
										},
										{
											"begin": 4536,
											"end": 4667,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4678,
											"end": 4731,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "150"
										},
										{
											"begin": 4708,
											"end": 4713,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4715,
											"end": 4722,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "151"
										},
										{
											"begin": 4715,
											"end": 4720,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "44"
										},
										{
											"begin": 4715,
											"end": 4722,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4715,
											"end": 4722,
											"name": "tag",
											"source": 14,
											"value": "151"
										},
										{
											"begin": 4715,
											"end": 4722,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4724,
											"end": 4730,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 4678,
											"end": 4690,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 4678,
											"end": 4690,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4678,
											"end": 4690,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4678,
											"end": 4690,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 4678,
											"end": 4690,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4678,
											"end": 4690,
											"name": "PUSH",
											"source": 14,
											"value": "100"
										},
										{
											"begin": 4678,
											"end": 4690,
											"name": "EXP",
											"source": 14
										},
										{
											"begin": 4678,
											"end": 4690,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4678,
											"end": 4690,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 4678,
											"end": 4690,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4678,
											"end": 4690,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 4678,
											"end": 4707,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4678,
											"end": 4707,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 4678,
											"end": 4707,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "152"
										},
										{
											"begin": 4678,
											"end": 4707,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4678,
											"end": 4731,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 4678,
											"end": 4731,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 4678,
											"end": 4731,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4678,
											"end": 4731,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4678,
											"end": 4731,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4678,
											"end": 4731,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 4678,
											"end": 4731,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4678,
											"end": 4731,
											"name": "tag",
											"source": 14,
											"value": "150"
										},
										{
											"begin": 4678,
											"end": 4731,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4807,
											"end": 4818,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 4807,
											"end": 4818,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4807,
											"end": 4818,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4807,
											"end": 4818,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 4807,
											"end": 4818,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4807,
											"end": 4818,
											"name": "PUSH",
											"source": 14,
											"value": "100"
										},
										{
											"begin": 4807,
											"end": 4818,
											"name": "EXP",
											"source": 14
										},
										{
											"begin": 4807,
											"end": 4818,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4807,
											"end": 4818,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 4807,
											"end": 4818,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4807,
											"end": 4818,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 4807,
											"end": 4835,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4807,
											"end": 4835,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 4807,
											"end": 4835,
											"name": "PUSH",
											"source": 14,
											"value": "F242432A"
										},
										{
											"begin": 4858,
											"end": 4862,
											"name": "ADDRESS",
											"source": 14
										},
										{
											"begin": 4878,
											"end": 4883,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 4898,
											"end": 4905,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 4920,
											"end": 4928,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 4807,
											"end": 4956,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 4807,
											"end": 4956,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 4807,
											"end": 4956,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 4807,
											"end": 4956,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4807,
											"end": 4956,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 4807,
											"end": 4956,
											"name": "PUSH",
											"source": 14,
											"value": "E0"
										},
										{
											"begin": 4807,
											"end": 4956,
											"name": "SHL",
											"source": 14
										},
										{
											"begin": 4807,
											"end": 4956,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4807,
											"end": 4956,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 4807,
											"end": 4956,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 4807,
											"end": 4956,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4807,
											"end": 4956,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "153"
										},
										{
											"begin": 4807,
											"end": 4956,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 4807,
											"end": 4956,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 4807,
											"end": 4956,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 4807,
											"end": 4956,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4807,
											"end": 4956,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4807,
											"end": 4956,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "154"
										},
										{
											"begin": 4807,
											"end": 4956,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4807,
											"end": 4956,
											"name": "tag",
											"source": 14,
											"value": "153"
										},
										{
											"begin": 4807,
											"end": 4956,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4807,
											"end": 4956,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4807,
											"end": 4956,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 4807,
											"end": 4956,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 4807,
											"end": 4956,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4807,
											"end": 4956,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 4807,
											"end": 4956,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 4807,
											"end": 4956,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4807,
											"end": 4956,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4807,
											"end": 4956,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 4807,
											"end": 4956,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4807,
											"end": 4956,
											"name": "EXTCODESIZE",
											"source": 14
										},
										{
											"begin": 4807,
											"end": 4956,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 4807,
											"end": 4956,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4807,
											"end": 4956,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 4807,
											"end": 4956,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "155"
										},
										{
											"begin": 4807,
											"end": 4956,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 4807,
											"end": 4956,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4807,
											"end": 4956,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4807,
											"end": 4956,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 4807,
											"end": 4956,
											"name": "tag",
											"source": 14,
											"value": "155"
										},
										{
											"begin": 4807,
											"end": 4956,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4807,
											"end": 4956,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4807,
											"end": 4956,
											"name": "GAS",
											"source": 14
										},
										{
											"begin": 4807,
											"end": 4956,
											"name": "CALL",
											"source": 14
										},
										{
											"begin": 4807,
											"end": 4956,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 4807,
											"end": 4956,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4807,
											"end": 4956,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 4807,
											"end": 4956,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "157"
										},
										{
											"begin": 4807,
											"end": 4956,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 4807,
											"end": 4956,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 4807,
											"end": 4956,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4807,
											"end": 4956,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4807,
											"end": 4956,
											"name": "RETURNDATACOPY",
											"source": 14
										},
										{
											"begin": 4807,
											"end": 4956,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 4807,
											"end": 4956,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4807,
											"end": 4956,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 4807,
											"end": 4956,
											"name": "tag",
											"source": 14,
											"value": "157"
										},
										{
											"begin": 4807,
											"end": 4956,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4807,
											"end": 4956,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4807,
											"end": 4956,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4807,
											"end": 4956,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4807,
											"end": 4956,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4980,
											"end": 4985,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4972,
											"end": 5030,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4972,
											"end": 5030,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 4972,
											"end": 5030,
											"name": "PUSH",
											"source": 14,
											"value": "B911D7E2EC7C85DD17DC5DBF9C086E0ADE9A12A268015519A2A5F93CE5754FEA"
										},
										{
											"begin": 4987,
											"end": 4994,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 4996,
											"end": 5002,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 5004,
											"end": 5012,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 5014,
											"end": 5029,
											"name": "TIMESTAMP",
											"source": 14
										},
										{
											"begin": 4972,
											"end": 5030,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 4972,
											"end": 5030,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 4972,
											"end": 5030,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "158"
										},
										{
											"begin": 4972,
											"end": 5030,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 4972,
											"end": 5030,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 4972,
											"end": 5030,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 4972,
											"end": 5030,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4972,
											"end": 5030,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4972,
											"end": 5030,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "159"
										},
										{
											"begin": 4972,
											"end": 5030,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4972,
											"end": 5030,
											"name": "tag",
											"source": 14,
											"value": "158"
										},
										{
											"begin": 4972,
											"end": 5030,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4972,
											"end": 5030,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 4972,
											"end": 5030,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 4972,
											"end": 5030,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4972,
											"end": 5030,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4972,
											"end": 5030,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 4972,
											"end": 5030,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4972,
											"end": 5030,
											"name": "LOG2",
											"source": 14
										},
										{
											"begin": 4119,
											"end": 5038,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4010,
											"end": 5038,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4010,
											"end": 5038,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4010,
											"end": 5038,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4010,
											"end": 5038,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 892,
											"end": 937,
											"name": "tag",
											"source": 14,
											"value": "63"
										},
										{
											"begin": 892,
											"end": 937,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 892,
											"end": 937,
											"name": "PUSH",
											"source": 14,
											"value": "3"
										},
										{
											"begin": 892,
											"end": 937,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 892,
											"end": 937,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 892,
											"end": 937,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 892,
											"end": 937,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 892,
											"end": 937,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 892,
											"end": 937,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 892,
											"end": 937,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 892,
											"end": 937,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 892,
											"end": 937,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 892,
											"end": 937,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 892,
											"end": 937,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 892,
											"end": 937,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 892,
											"end": 937,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 892,
											"end": 937,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 892,
											"end": 937,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 892,
											"end": 937,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 589,
											"end": 616,
											"name": "tag",
											"source": 14,
											"value": "67"
										},
										{
											"begin": 589,
											"end": 616,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 589,
											"end": 616,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 589,
											"end": 616,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 589,
											"end": 616,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 589,
											"end": 616,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 589,
											"end": 616,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 589,
											"end": 616,
											"name": "PUSH",
											"source": 14,
											"value": "100"
										},
										{
											"begin": 589,
											"end": 616,
											"name": "EXP",
											"source": 14
										},
										{
											"begin": 589,
											"end": 616,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 589,
											"end": 616,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 589,
											"end": 616,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 589,
											"end": 616,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 589,
											"end": 616,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 589,
											"end": 616,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5046,
											"end": 5855,
											"name": "tag",
											"source": 14,
											"value": "71"
										},
										{
											"begin": 5046,
											"end": 5855,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 739,
											"end": 749,
											"name": "PUSH",
											"source": 14,
											"value": "2386F26FC10000"
										},
										{
											"begin": 5103,
											"end": 5112,
											"name": "CALLVALUE",
											"source": 14
										},
										{
											"begin": 5103,
											"end": 5128,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 5103,
											"end": 5128,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 5095,
											"end": 5149,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "161"
										},
										{
											"begin": 5095,
											"end": 5149,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 5095,
											"end": 5149,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 5095,
											"end": 5149,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 5095,
											"end": 5149,
											"name": "PUSH",
											"source": 14,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5095,
											"end": 5149,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 5095,
											"end": 5149,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 5095,
											"end": 5149,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 5095,
											"end": 5149,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5095,
											"end": 5149,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "162"
										},
										{
											"begin": 5095,
											"end": 5149,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5095,
											"end": 5149,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "163"
										},
										{
											"begin": 5095,
											"end": 5149,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5095,
											"end": 5149,
											"name": "tag",
											"source": 14,
											"value": "162"
										},
										{
											"begin": 5095,
											"end": 5149,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5095,
											"end": 5149,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 5095,
											"end": 5149,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 5095,
											"end": 5149,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 5095,
											"end": 5149,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 5095,
											"end": 5149,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 5095,
											"end": 5149,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5095,
											"end": 5149,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 5095,
											"end": 5149,
											"name": "tag",
											"source": 14,
											"value": "161"
										},
										{
											"begin": 5095,
											"end": 5149,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5480,
											"end": 5492,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5505,
											"end": 5516,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 5505,
											"end": 5516,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5505,
											"end": 5516,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5505,
											"end": 5516,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 5505,
											"end": 5516,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5505,
											"end": 5516,
											"name": "PUSH",
											"source": 14,
											"value": "100"
										},
										{
											"begin": 5505,
											"end": 5516,
											"name": "EXP",
											"source": 14
										},
										{
											"begin": 5505,
											"end": 5516,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5505,
											"end": 5516,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 5505,
											"end": 5516,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5505,
											"end": 5516,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 5497,
											"end": 5522,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5497,
											"end": 5522,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 5653,
											"end": 5663,
											"name": "CALLER",
											"source": 14
										},
										{
											"begin": 844,
											"end": 883,
											"name": "PUSH",
											"source": 14,
											"value": "100000000000000000000000000000000"
										},
										{
											"begin": 799,
											"end": 800,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 5537,
											"end": 5740,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 5537,
											"end": 5740,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 5537,
											"end": 5740,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 5537,
											"end": 5740,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5537,
											"end": 5740,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "164"
										},
										{
											"begin": 5537,
											"end": 5740,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 5537,
											"end": 5740,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 5537,
											"end": 5740,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 5537,
											"end": 5740,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5537,
											"end": 5740,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "165"
										},
										{
											"begin": 5537,
											"end": 5740,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5537,
											"end": 5740,
											"name": "tag",
											"source": 14,
											"value": "164"
										},
										{
											"begin": 5537,
											"end": 5740,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5537,
											"end": 5740,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 5537,
											"end": 5740,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 5537,
											"end": 5740,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 5537,
											"end": 5740,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 5537,
											"end": 5740,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 5537,
											"end": 5740,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 5537,
											"end": 5740,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 5537,
											"end": 5740,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 5537,
											"end": 5740,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 5537,
											"end": 5740,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5537,
											"end": 5740,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 5537,
											"end": 5740,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 5537,
											"end": 5740,
											"name": "PUSH",
											"source": 14,
											"value": "156E29F600000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5537,
											"end": 5740,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5537,
											"end": 5740,
											"name": "NOT",
											"source": 14
										},
										{
											"begin": 5537,
											"end": 5740,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 5537,
											"end": 5740,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 5537,
											"end": 5740,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5537,
											"end": 5740,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5537,
											"end": 5740,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 5537,
											"end": 5740,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 5537,
											"end": 5740,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5537,
											"end": 5740,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 5537,
											"end": 5740,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 5537,
											"end": 5740,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 5537,
											"end": 5740,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 5537,
											"end": 5740,
											"name": "OR",
											"source": 14
										},
										{
											"begin": 5537,
											"end": 5740,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 5537,
											"end": 5740,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 5537,
											"end": 5740,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5537,
											"end": 5740,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5537,
											"end": 5740,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5537,
											"end": 5740,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5497,
											"end": 5751,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 5497,
											"end": 5751,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 5497,
											"end": 5751,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "166"
										},
										{
											"begin": 5497,
											"end": 5751,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 5497,
											"end": 5751,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5497,
											"end": 5751,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "167"
										},
										{
											"begin": 5497,
											"end": 5751,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5497,
											"end": 5751,
											"name": "tag",
											"source": 14,
											"value": "166"
										},
										{
											"begin": 5497,
											"end": 5751,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5497,
											"end": 5751,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5497,
											"end": 5751,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 5497,
											"end": 5751,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 5497,
											"end": 5751,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 5497,
											"end": 5751,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 5497,
											"end": 5751,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 5497,
											"end": 5751,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 5497,
											"end": 5751,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5497,
											"end": 5751,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 5497,
											"end": 5751,
											"name": "GAS",
											"source": 14
										},
										{
											"begin": 5497,
											"end": 5751,
											"name": "CALL",
											"source": 14
										},
										{
											"begin": 5497,
											"end": 5751,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 5497,
											"end": 5751,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5497,
											"end": 5751,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5497,
											"end": 5751,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 5497,
											"end": 5751,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 5497,
											"end": 5751,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5497,
											"end": 5751,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 5497,
											"end": 5751,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 5497,
											"end": 5751,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "170"
										},
										{
											"begin": 5497,
											"end": 5751,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 5497,
											"end": 5751,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 5497,
											"end": 5751,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 5497,
											"end": 5751,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 5497,
											"end": 5751,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5497,
											"end": 5751,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 5497,
											"end": 5751,
											"name": "NOT",
											"source": 14
										},
										{
											"begin": 5497,
											"end": 5751,
											"name": "PUSH",
											"source": 14,
											"value": "3F"
										},
										{
											"begin": 5497,
											"end": 5751,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 5497,
											"end": 5751,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5497,
											"end": 5751,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 5497,
											"end": 5751,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5497,
											"end": 5751,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5497,
											"end": 5751,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 5497,
											"end": 5751,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 5497,
											"end": 5751,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 5497,
											"end": 5751,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5497,
											"end": 5751,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 5497,
											"end": 5751,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 5497,
											"end": 5751,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5497,
											"end": 5751,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 5497,
											"end": 5751,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 5497,
											"end": 5751,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5497,
											"end": 5751,
											"name": "RETURNDATACOPY",
											"source": 14
										},
										{
											"begin": 5497,
											"end": 5751,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "169"
										},
										{
											"begin": 5497,
											"end": 5751,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5497,
											"end": 5751,
											"name": "tag",
											"source": 14,
											"value": "170"
										},
										{
											"begin": 5497,
											"end": 5751,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5497,
											"end": 5751,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 5497,
											"end": 5751,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 5497,
											"end": 5751,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5497,
											"end": 5751,
											"name": "tag",
											"source": 14,
											"value": "169"
										},
										{
											"begin": 5497,
											"end": 5751,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5497,
											"end": 5751,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5479,
											"end": 5751,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5479,
											"end": 5751,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5479,
											"end": 5751,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5770,
											"end": 5777,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 5762,
											"end": 5793,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "171"
										},
										{
											"begin": 5762,
											"end": 5793,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 5762,
											"end": 5793,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 5762,
											"end": 5793,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 5762,
											"end": 5793,
											"name": "PUSH",
											"source": 14,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5762,
											"end": 5793,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 5762,
											"end": 5793,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 5762,
											"end": 5793,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 5762,
											"end": 5793,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5762,
											"end": 5793,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "172"
										},
										{
											"begin": 5762,
											"end": 5793,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5762,
											"end": 5793,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "173"
										},
										{
											"begin": 5762,
											"end": 5793,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5762,
											"end": 5793,
											"name": "tag",
											"source": 14,
											"value": "172"
										},
										{
											"begin": 5762,
											"end": 5793,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5762,
											"end": 5793,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 5762,
											"end": 5793,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 5762,
											"end": 5793,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 5762,
											"end": 5793,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 5762,
											"end": 5793,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 5762,
											"end": 5793,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5762,
											"end": 5793,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 5762,
											"end": 5793,
											"name": "tag",
											"source": 14,
											"value": "171"
										},
										{
											"begin": 5762,
											"end": 5793,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5819,
											"end": 5829,
											"name": "CALLER",
											"source": 14
										},
										{
											"begin": 5809,
											"end": 5847,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5809,
											"end": 5847,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 5809,
											"end": 5847,
											"name": "PUSH",
											"source": 14,
											"value": "2A3164428CBA5DAD15F5FFE47E10CBEFDCBBE9E269FD482753982EE8B2648C3E"
										},
										{
											"begin": 5831,
											"end": 5846,
											"name": "TIMESTAMP",
											"source": 14
										},
										{
											"begin": 5809,
											"end": 5847,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 5809,
											"end": 5847,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 5809,
											"end": 5847,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "174"
										},
										{
											"begin": 5809,
											"end": 5847,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 5809,
											"end": 5847,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5809,
											"end": 5847,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "30"
										},
										{
											"begin": 5809,
											"end": 5847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5809,
											"end": 5847,
											"name": "tag",
											"source": 14,
											"value": "174"
										},
										{
											"begin": 5809,
											"end": 5847,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5809,
											"end": 5847,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 5809,
											"end": 5847,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 5809,
											"end": 5847,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 5809,
											"end": 5847,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 5809,
											"end": 5847,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 5809,
											"end": 5847,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5809,
											"end": 5847,
											"name": "LOG2",
											"source": 14
										},
										{
											"begin": 5084,
											"end": 5855,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5046,
											"end": 5855,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2074,
											"end": 4002,
											"name": "tag",
											"source": 14,
											"value": "76"
										},
										{
											"begin": 2074,
											"end": 4002,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2485,
											"end": 2491,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2974,
											"end": 2985,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 2974,
											"end": 2985,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2974,
											"end": 2985,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2974,
											"end": 2985,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 2974,
											"end": 2985,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2974,
											"end": 2985,
											"name": "PUSH",
											"source": 14,
											"value": "100"
										},
										{
											"begin": 2974,
											"end": 2985,
											"name": "EXP",
											"source": 14
										},
										{
											"begin": 2974,
											"end": 2985,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2974,
											"end": 2985,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 2974,
											"end": 2985,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2974,
											"end": 2985,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 2952,
											"end": 2986,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2952,
											"end": 2986,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 2952,
											"end": 2962,
											"name": "CALLER",
											"source": 14
										},
										{
											"begin": 2952,
											"end": 2986,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2952,
											"end": 2986,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 2952,
											"end": 2986,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 2944,
											"end": 3007,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "176"
										},
										{
											"begin": 2944,
											"end": 3007,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 2944,
											"end": 3007,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 2944,
											"end": 3007,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 2944,
											"end": 3007,
											"name": "PUSH",
											"source": 14,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2944,
											"end": 3007,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2944,
											"end": 3007,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 2944,
											"end": 3007,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 2944,
											"end": 3007,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2944,
											"end": 3007,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "177"
										},
										{
											"begin": 2944,
											"end": 3007,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2944,
											"end": 3007,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "178"
										},
										{
											"begin": 2944,
											"end": 3007,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2944,
											"end": 3007,
											"name": "tag",
											"source": 14,
											"value": "177"
										},
										{
											"begin": 2944,
											"end": 3007,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2944,
											"end": 3007,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 2944,
											"end": 3007,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 2944,
											"end": 3007,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2944,
											"end": 3007,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2944,
											"end": 3007,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 2944,
											"end": 3007,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2944,
											"end": 3007,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 2944,
											"end": 3007,
											"name": "tag",
											"source": 14,
											"value": "176"
										},
										{
											"begin": 2944,
											"end": 3007,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3248,
											"end": 3249,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3239,
											"end": 3244,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 3239,
											"end": 3249,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 3231,
											"end": 3270,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "179"
										},
										{
											"begin": 3231,
											"end": 3270,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 3231,
											"end": 3270,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 3231,
											"end": 3270,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 3231,
											"end": 3270,
											"name": "PUSH",
											"source": 14,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3231,
											"end": 3270,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3231,
											"end": 3270,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 3231,
											"end": 3270,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 3231,
											"end": 3270,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3231,
											"end": 3270,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "180"
										},
										{
											"begin": 3231,
											"end": 3270,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3231,
											"end": 3270,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "181"
										},
										{
											"begin": 3231,
											"end": 3270,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3231,
											"end": 3270,
											"name": "tag",
											"source": 14,
											"value": "180"
										},
										{
											"begin": 3231,
											"end": 3270,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3231,
											"end": 3270,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 3231,
											"end": 3270,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 3231,
											"end": 3270,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3231,
											"end": 3270,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3231,
											"end": 3270,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 3231,
											"end": 3270,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3231,
											"end": 3270,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 3231,
											"end": 3270,
											"name": "tag",
											"source": 14,
											"value": "179"
										},
										{
											"begin": 3231,
											"end": 3270,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3385,
											"end": 3437,
											"name": "PUSH",
											"source": 14,
											"value": "1650D49BAC940346E34BAC1DDE642598B57BA618D7A0C005A91257851CAE2C24"
										},
										{
											"begin": 3411,
											"end": 3419,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 3421,
											"end": 3425,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 3427,
											"end": 3429,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 3431,
											"end": 3436,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 3385,
											"end": 3437,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 3385,
											"end": 3437,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 3385,
											"end": 3437,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "182"
										},
										{
											"begin": 3385,
											"end": 3437,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 3385,
											"end": 3437,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 3385,
											"end": 3437,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 3385,
											"end": 3437,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3385,
											"end": 3437,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3385,
											"end": 3437,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "183"
										},
										{
											"begin": 3385,
											"end": 3437,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3385,
											"end": 3437,
											"name": "tag",
											"source": 14,
											"value": "182"
										},
										{
											"begin": 3385,
											"end": 3437,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3385,
											"end": 3437,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 3385,
											"end": 3437,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 3385,
											"end": 3437,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3385,
											"end": 3437,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3385,
											"end": 3437,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 3385,
											"end": 3437,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3385,
											"end": 3437,
											"name": "LOG1",
											"source": 14
										},
										{
											"begin": 3673,
											"end": 3704,
											"name": "PUSH",
											"source": 14,
											"value": "F23A6E61"
										},
										{
											"begin": 3673,
											"end": 3704,
											"name": "PUSH",
											"source": 14,
											"value": "E0"
										},
										{
											"begin": 3673,
											"end": 3704,
											"name": "SHL",
											"source": 14
										},
										{
											"begin": 3666,
											"end": 3704,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3666,
											"end": 3704,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2074,
											"end": 4002,
											"name": "SWAP6",
											"source": 14
										},
										{
											"begin": 2074,
											"end": 4002,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 2074,
											"end": 4002,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2074,
											"end": 4002,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2074,
											"end": 4002,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2074,
											"end": 4002,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2074,
											"end": 4002,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2074,
											"end": 4002,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6282,
											"end": 6597,
											"name": "tag",
											"source": 14,
											"value": "87"
										},
										{
											"begin": 6282,
											"end": 6597,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6380,
											"end": 6381,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 6369,
											"end": 6376,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6369,
											"end": 6381,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 6361,
											"end": 6401,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "193"
										},
										{
											"begin": 6361,
											"end": 6401,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 6361,
											"end": 6401,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 6361,
											"end": 6401,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 6361,
											"end": 6401,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6361,
											"end": 6401,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 6361,
											"end": 6401,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 6361,
											"end": 6401,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 6361,
											"end": 6401,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6361,
											"end": 6401,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "194"
										},
										{
											"begin": 6361,
											"end": 6401,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 6361,
											"end": 6401,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "195"
										},
										{
											"begin": 6361,
											"end": 6401,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6361,
											"end": 6401,
											"modifierDepth": 1,
											"name": "tag",
											"source": 14,
											"value": "194"
										},
										{
											"begin": 6361,
											"end": 6401,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6361,
											"end": 6401,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 6361,
											"end": 6401,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 6361,
											"end": 6401,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 6361,
											"end": 6401,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 6361,
											"end": 6401,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 6361,
											"end": 6401,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 6361,
											"end": 6401,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 6361,
											"end": 6401,
											"modifierDepth": 1,
											"name": "tag",
											"source": 14,
											"value": "193"
										},
										{
											"begin": 6361,
											"end": 6401,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6429,
											"end": 6430,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 6420,
											"end": 6425,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 6420,
											"end": 6430,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 6412,
											"end": 6448,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "196"
										},
										{
											"begin": 6412,
											"end": 6448,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 6412,
											"end": 6448,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 6412,
											"end": 6448,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 6412,
											"end": 6448,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6412,
											"end": 6448,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 6412,
											"end": 6448,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 6412,
											"end": 6448,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 6412,
											"end": 6448,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6412,
											"end": 6448,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "197"
										},
										{
											"begin": 6412,
											"end": 6448,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 6412,
											"end": 6448,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "198"
										},
										{
											"begin": 6412,
											"end": 6448,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6412,
											"end": 6448,
											"modifierDepth": 1,
											"name": "tag",
											"source": 14,
											"value": "197"
										},
										{
											"begin": 6412,
											"end": 6448,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6412,
											"end": 6448,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 6412,
											"end": 6448,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 6412,
											"end": 6448,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 6412,
											"end": 6448,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 6412,
											"end": 6448,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 6412,
											"end": 6448,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 6412,
											"end": 6448,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 6412,
											"end": 6448,
											"modifierDepth": 1,
											"name": "tag",
											"source": 14,
											"value": "196"
										},
										{
											"begin": 6412,
											"end": 6448,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6481,
											"end": 6486,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 6459,
											"end": 6469,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "3"
										},
										{
											"begin": 6459,
											"end": 6478,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 6470,
											"end": 6477,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 6459,
											"end": 6478,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 6459,
											"end": 6478,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 6459,
											"end": 6478,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 6459,
											"end": 6478,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6459,
											"end": 6478,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 6459,
											"end": 6478,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 6459,
											"end": 6478,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 6459,
											"end": 6478,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 6459,
											"end": 6478,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6459,
											"end": 6478,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 6459,
											"end": 6478,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 6459,
											"end": 6486,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 6459,
											"end": 6486,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 6459,
											"end": 6486,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": 6459,
											"end": 6486,
											"modifierDepth": 1,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6502,
											"end": 6543,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "18E75BB8C091A6448C12A2023F055B2714C151B941A91DF8B9938788769FFE13"
										},
										{
											"begin": 6511,
											"end": 6518,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6520,
											"end": 6525,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6527,
											"end": 6542,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 14
										},
										{
											"begin": 6502,
											"end": 6543,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 6502,
											"end": 6543,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 6502,
											"end": 6543,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "199"
										},
										{
											"begin": 6502,
											"end": 6543,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 6502,
											"end": 6543,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 6502,
											"end": 6543,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 6502,
											"end": 6543,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 6502,
											"end": 6543,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "200"
										},
										{
											"begin": 6502,
											"end": 6543,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6502,
											"end": 6543,
											"modifierDepth": 1,
											"name": "tag",
											"source": 14,
											"value": "199"
										},
										{
											"begin": 6502,
											"end": 6543,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6502,
											"end": 6543,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 6502,
											"end": 6543,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 6502,
											"end": 6543,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 6502,
											"end": 6543,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 6502,
											"end": 6543,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 6502,
											"end": 6543,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 6502,
											"end": 6543,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 14
										},
										{
											"begin": 6282,
											"end": 6597,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6282,
											"end": 6597,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6282,
											"end": 6597,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 763,
											"end": 909,
											"name": "tag",
											"source": 12,
											"value": "91"
										},
										{
											"begin": 763,
											"end": 909,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 839,
											"end": 843,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 877,
											"end": 902,
											"name": "PUSH",
											"source": 12,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 862,
											"end": 902,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 862,
											"end": 902,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 862,
											"end": 902,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 862,
											"end": 873,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 862,
											"end": 902,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 862,
											"end": 902,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 862,
											"end": 902,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 862,
											"end": 902,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 855,
											"end": 902,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 855,
											"end": 902,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 763,
											"end": 909,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 763,
											"end": 909,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 763,
											"end": 909,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 763,
											"end": 909,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1670,
											"end": 1858,
											"name": "tag",
											"source": 8,
											"value": "152"
										},
										{
											"begin": 1670,
											"end": 1858,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1770,
											"end": 1851,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "211"
										},
										{
											"begin": 1790,
											"end": 1795,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1812,
											"end": 1817,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1812,
											"end": 1830,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1812,
											"end": 1830,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1812,
											"end": 1830,
											"name": "PUSH",
											"source": 8,
											"value": "23B872DD"
										},
										{
											"begin": 1833,
											"end": 1837,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 1839,
											"end": 1841,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 1843,
											"end": 1848,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "212"
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "213"
										},
										{
											"begin": 1797,
											"end": 1850,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "tag",
											"source": 8,
											"value": "212"
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1770,
											"end": 1789,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "214"
										},
										{
											"begin": 1770,
											"end": 1851,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1770,
											"end": 1851,
											"name": "tag",
											"source": 8,
											"value": "211"
										},
										{
											"begin": 1770,
											"end": 1851,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1670,
											"end": 1858,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1670,
											"end": 1858,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1670,
											"end": 1858,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1670,
											"end": 1858,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1670,
											"end": 1858,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 10,
											"value": "204"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7738,
											"end": 8458,
											"name": "tag",
											"source": 8,
											"value": "214"
										},
										{
											"begin": 7738,
											"end": 8458,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7818,
											"end": 7836,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7846,
											"end": 7865,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7984,
											"end": 7988,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7981,
											"end": 7982,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7974,
											"end": 7978,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 7968,
											"end": 7979,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 7961,
											"end": 7965,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7955,
											"end": 7959,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 7951,
											"end": 7966,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7948,
											"end": 7949,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7941,
											"end": 7946,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 7934,
											"end": 7939,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 7929,
											"end": 7989,
											"name": "CALL",
											"source": 8
										},
										{
											"begin": 8041,
											"end": 8048,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 8031,
											"end": 8207,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "217"
										},
										{
											"begin": 8031,
											"end": 8207,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 8085,
											"end": 8089,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 8079,
											"end": 8090,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 8130,
											"end": 8146,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 8127,
											"end": 8128,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8122,
											"end": 8125,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8107,
											"end": 8147,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 8176,
											"end": 8192,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 8171,
											"end": 8174,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8164,
											"end": 8193,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 8031,
											"end": 8207,
											"name": "tag",
											"source": 8,
											"value": "217"
										},
										{
											"begin": 8031,
											"end": 8207,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8234,
											"end": 8250,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 8220,
											"end": 8250,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 8220,
											"end": 8250,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8284,
											"end": 8285,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8278,
											"end": 8286,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 8263,
											"end": 8286,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8263,
											"end": 8286,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7900,
											"end": 8296,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8324,
											"end": 8325,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8310,
											"end": 8320,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8310,
											"end": 8325,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 8310,
											"end": 8378,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "218"
										},
										{
											"begin": 8310,
											"end": 8378,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 8377,
											"end": 8378,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 8362,
											"end": 8373,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8362,
											"end": 8378,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 8362,
											"end": 8378,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 8310,
											"end": 8378,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "219"
										},
										{
											"begin": 8310,
											"end": 8378,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8310,
											"end": 8378,
											"name": "tag",
											"source": 8,
											"value": "218"
										},
										{
											"begin": 8310,
											"end": 8378,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8358,
											"end": 8359,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8336,
											"end": 8341,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 8328,
											"end": 8354,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8328,
											"end": 8354,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 8328,
											"end": 8354,
											"name": "EXTCODESIZE",
											"source": 8
										},
										{
											"begin": 8328,
											"end": 8359,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 8310,
											"end": 8378,
											"name": "tag",
											"source": 8,
											"value": "219"
										},
										{
											"begin": 8310,
											"end": 8378,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8306,
											"end": 8452,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 8306,
											"end": 8452,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "220"
										},
										{
											"begin": 8306,
											"end": 8452,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 8434,
											"end": 8439,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "PUSH",
											"source": 8,
											"value": "5274AFE700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "221"
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "46"
										},
										{
											"begin": 8401,
											"end": 8441,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "tag",
											"source": 8,
											"value": "221"
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 8306,
											"end": 8452,
											"name": "tag",
											"source": 8,
											"value": "220"
										},
										{
											"begin": 8306,
											"end": 8452,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7808,
											"end": 8458,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7808,
											"end": 8458,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7738,
											"end": 8458,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7738,
											"end": 8458,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7738,
											"end": 8458,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7,
											"end": 82,
											"name": "tag",
											"source": 15,
											"value": "222"
										},
										{
											"begin": 7,
											"end": 82,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 40,
											"end": 46,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 75,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 67,
											"end": 76,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 57,
											"end": 76,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 57,
											"end": 76,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7,
											"end": 82,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 7,
											"end": 82,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 15,
											"value": "223"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 15,
											"value": "224"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 334,
											"end": 483,
											"name": "tag",
											"source": 15,
											"value": "225"
										},
										{
											"begin": 334,
											"end": 483,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 370,
											"end": 377,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 410,
											"end": 476,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 403,
											"end": 408,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 399,
											"end": 477,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 388,
											"end": 477,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 388,
											"end": 477,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 334,
											"end": 483,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 334,
											"end": 483,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 489,
											"end": 609,
											"name": "tag",
											"source": 15,
											"value": "226"
										},
										{
											"begin": 489,
											"end": 609,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "310"
										},
										{
											"begin": 578,
											"end": 583,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "225"
										},
										{
											"begin": 561,
											"end": 584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 561,
											"end": 584,
											"name": "tag",
											"source": 15,
											"value": "310"
										},
										{
											"begin": 561,
											"end": 584,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 554,
											"end": 559,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 551,
											"end": 585,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 541,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "311"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 599,
											"end": 600,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 596,
											"end": 597,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 589,
											"end": 601,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 541,
											"end": 603,
											"name": "tag",
											"source": 15,
											"value": "311"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 489,
											"end": 609,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 489,
											"end": 609,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 615,
											"end": 752,
											"name": "tag",
											"source": 15,
											"value": "227"
										},
										{
											"begin": 615,
											"end": 752,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 660,
											"end": 665,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 704,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 685,
											"end": 705,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 676,
											"end": 705,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 676,
											"end": 705,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "313"
										},
										{
											"begin": 740,
											"end": 745,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "226"
										},
										{
											"begin": 714,
											"end": 746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 714,
											"end": 746,
											"name": "tag",
											"source": 15,
											"value": "313"
										},
										{
											"begin": 714,
											"end": 746,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 615,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "tag",
											"source": 15,
											"value": "22"
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 816,
											"end": 822,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 865,
											"end": 867,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 853,
											"end": 862,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 844,
											"end": 851,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 840,
											"end": 863,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 836,
											"end": 868,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 833,
											"end": 952,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 833,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "315"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "316"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "223"
										},
										{
											"begin": 871,
											"end": 950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 871,
											"end": 950,
											"name": "tag",
											"source": 15,
											"value": "316"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 833,
											"end": 952,
											"name": "tag",
											"source": 15,
											"value": "315"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 991,
											"end": 992,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "317"
										},
										{
											"begin": 1060,
											"end": 1067,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 1051,
											"end": 1057,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1040,
											"end": 1049,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 1036,
											"end": 1058,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "227"
										},
										{
											"begin": 1016,
											"end": 1068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "tag",
											"source": 15,
											"value": "317"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 962,
											"end": 1078,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 758,
											"end": 1085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "tag",
											"source": 15,
											"value": "228"
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1125,
											"end": 1132,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1168,
											"end": 1173,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1161,
											"end": 1174,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 1154,
											"end": 1175,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1091,
											"end": 1181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "tag",
											"source": 15,
											"value": "229"
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "320"
										},
										{
											"begin": 1283,
											"end": 1288,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "228"
										},
										{
											"begin": 1268,
											"end": 1289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "tag",
											"source": 15,
											"value": "320"
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1263,
											"end": 1266,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1256,
											"end": 1290,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1187,
											"end": 1296,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "tag",
											"source": 15,
											"value": "25"
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1389,
											"end": 1393,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1427,
											"end": 1429,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1416,
											"end": 1425,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1412,
											"end": 1430,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "322"
										},
										{
											"begin": 1502,
											"end": 1503,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1491,
											"end": 1500,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 1487,
											"end": 1504,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1478,
											"end": 1484,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "229"
										},
										{
											"begin": 1440,
											"end": 1505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "tag",
											"source": 15,
											"value": "322"
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1302,
											"end": 1512,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1518,
											"end": 1595,
											"name": "tag",
											"source": 15,
											"value": "230"
										},
										{
											"begin": 1518,
											"end": 1595,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1555,
											"end": 1562,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1584,
											"end": 1589,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1573,
											"end": 1589,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1573,
											"end": 1589,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1518,
											"end": 1595,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1518,
											"end": 1595,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1518,
											"end": 1595,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1518,
											"end": 1595,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1601,
											"end": 1719,
											"name": "tag",
											"source": 15,
											"value": "231"
										},
										{
											"begin": 1601,
											"end": 1719,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1688,
											"end": 1712,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "325"
										},
										{
											"begin": 1706,
											"end": 1711,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1688,
											"end": 1712,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "230"
										},
										{
											"begin": 1688,
											"end": 1712,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1688,
											"end": 1712,
											"name": "tag",
											"source": 15,
											"value": "325"
										},
										{
											"begin": 1688,
											"end": 1712,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1683,
											"end": 1686,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1676,
											"end": 1713,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1601,
											"end": 1719,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1601,
											"end": 1719,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1601,
											"end": 1719,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1725,
											"end": 1947,
											"name": "tag",
											"source": 15,
											"value": "30"
										},
										{
											"begin": 1725,
											"end": 1947,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1818,
											"end": 1822,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1856,
											"end": 1858,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1845,
											"end": 1854,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1841,
											"end": 1859,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1833,
											"end": 1859,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1833,
											"end": 1859,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1869,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "327"
										},
										{
											"begin": 1937,
											"end": 1938,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1926,
											"end": 1935,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 1922,
											"end": 1939,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1913,
											"end": 1919,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 1869,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "231"
										},
										{
											"begin": 1869,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1869,
											"end": 1940,
											"name": "tag",
											"source": 15,
											"value": "327"
										},
										{
											"begin": 1869,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1725,
											"end": 1947,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 1725,
											"end": 1947,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1725,
											"end": 1947,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1725,
											"end": 1947,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1725,
											"end": 1947,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1953,
											"end": 2079,
											"name": "tag",
											"source": 15,
											"value": "232"
										},
										{
											"begin": 1953,
											"end": 2079,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1990,
											"end": 1997,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2030,
											"end": 2072,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2023,
											"end": 2028,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 2019,
											"end": 2073,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 2008,
											"end": 2073,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2008,
											"end": 2073,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1953,
											"end": 2079,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1953,
											"end": 2079,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1953,
											"end": 2079,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1953,
											"end": 2079,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2085,
											"end": 2145,
											"name": "tag",
											"source": 15,
											"value": "233"
										},
										{
											"begin": 2085,
											"end": 2145,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2113,
											"end": 2116,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2134,
											"end": 2139,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2127,
											"end": 2139,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2127,
											"end": 2139,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2085,
											"end": 2145,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2085,
											"end": 2145,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2085,
											"end": 2145,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2085,
											"end": 2145,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2151,
											"end": 2293,
											"name": "tag",
											"source": 15,
											"value": "234"
										},
										{
											"begin": 2151,
											"end": 2293,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2201,
											"end": 2210,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2234,
											"end": 2287,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "331"
										},
										{
											"begin": 2252,
											"end": 2286,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "332"
										},
										{
											"begin": 2261,
											"end": 2285,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "333"
										},
										{
											"begin": 2279,
											"end": 2284,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 2261,
											"end": 2285,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "232"
										},
										{
											"begin": 2261,
											"end": 2285,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2261,
											"end": 2285,
											"name": "tag",
											"source": 15,
											"value": "333"
										},
										{
											"begin": 2261,
											"end": 2285,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2252,
											"end": 2286,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "233"
										},
										{
											"begin": 2252,
											"end": 2286,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2252,
											"end": 2286,
											"name": "tag",
											"source": 15,
											"value": "332"
										},
										{
											"begin": 2252,
											"end": 2286,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2234,
											"end": 2287,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "232"
										},
										{
											"begin": 2234,
											"end": 2287,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2234,
											"end": 2287,
											"name": "tag",
											"source": 15,
											"value": "331"
										},
										{
											"begin": 2234,
											"end": 2287,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2221,
											"end": 2287,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2221,
											"end": 2287,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2151,
											"end": 2293,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2151,
											"end": 2293,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2151,
											"end": 2293,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2151,
											"end": 2293,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2299,
											"end": 2425,
											"name": "tag",
											"source": 15,
											"value": "235"
										},
										{
											"begin": 2299,
											"end": 2425,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2349,
											"end": 2358,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2382,
											"end": 2419,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "335"
										},
										{
											"begin": 2413,
											"end": 2418,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 2382,
											"end": 2419,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "234"
										},
										{
											"begin": 2382,
											"end": 2419,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2382,
											"end": 2419,
											"name": "tag",
											"source": 15,
											"value": "335"
										},
										{
											"begin": 2382,
											"end": 2419,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2369,
											"end": 2419,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2369,
											"end": 2419,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2299,
											"end": 2425,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2299,
											"end": 2425,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2299,
											"end": 2425,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2299,
											"end": 2425,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2431,
											"end": 2571,
											"name": "tag",
											"source": 15,
											"value": "236"
										},
										{
											"begin": 2431,
											"end": 2571,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2495,
											"end": 2504,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2528,
											"end": 2565,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "337"
										},
										{
											"begin": 2559,
											"end": 2564,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 2528,
											"end": 2565,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "235"
										},
										{
											"begin": 2528,
											"end": 2565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2528,
											"end": 2565,
											"name": "tag",
											"source": 15,
											"value": "337"
										},
										{
											"begin": 2528,
											"end": 2565,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2515,
											"end": 2565,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2515,
											"end": 2565,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2431,
											"end": 2571,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2431,
											"end": 2571,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2431,
											"end": 2571,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2431,
											"end": 2571,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2577,
											"end": 2736,
											"name": "tag",
											"source": 15,
											"value": "237"
										},
										{
											"begin": 2577,
											"end": 2736,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2678,
											"end": 2729,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "339"
										},
										{
											"begin": 2723,
											"end": 2728,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2678,
											"end": 2729,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "236"
										},
										{
											"begin": 2678,
											"end": 2729,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2678,
											"end": 2729,
											"name": "tag",
											"source": 15,
											"value": "339"
										},
										{
											"begin": 2678,
											"end": 2729,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2673,
											"end": 2676,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 2666,
											"end": 2730,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 2577,
											"end": 2736,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2577,
											"end": 2736,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2577,
											"end": 2736,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2742,
											"end": 2992,
											"name": "tag",
											"source": 15,
											"value": "35"
										},
										{
											"begin": 2742,
											"end": 2992,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2849,
											"end": 2853,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2887,
											"end": 2889,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 2876,
											"end": 2885,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 2872,
											"end": 2890,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2864,
											"end": 2890,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2864,
											"end": 2890,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2900,
											"end": 2985,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "341"
										},
										{
											"begin": 2982,
											"end": 2983,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2971,
											"end": 2980,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 2967,
											"end": 2984,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2958,
											"end": 2964,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 2900,
											"end": 2985,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "237"
										},
										{
											"begin": 2900,
											"end": 2985,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2900,
											"end": 2985,
											"name": "tag",
											"source": 15,
											"value": "341"
										},
										{
											"begin": 2900,
											"end": 2985,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2742,
											"end": 2992,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 2742,
											"end": 2992,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2742,
											"end": 2992,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2742,
											"end": 2992,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2742,
											"end": 2992,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2998,
											"end": 3094,
											"name": "tag",
											"source": 15,
											"value": "238"
										},
										{
											"begin": 2998,
											"end": 3094,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3035,
											"end": 3042,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3064,
											"end": 3088,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "343"
										},
										{
											"begin": 3082,
											"end": 3087,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 3064,
											"end": 3088,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "232"
										},
										{
											"begin": 3064,
											"end": 3088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3064,
											"end": 3088,
											"name": "tag",
											"source": 15,
											"value": "343"
										},
										{
											"begin": 3064,
											"end": 3088,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3053,
											"end": 3088,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3053,
											"end": 3088,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2998,
											"end": 3094,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2998,
											"end": 3094,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2998,
											"end": 3094,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2998,
											"end": 3094,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3100,
											"end": 3218,
											"name": "tag",
											"source": 15,
											"value": "239"
										},
										{
											"begin": 3100,
											"end": 3218,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3187,
											"end": 3211,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "345"
										},
										{
											"begin": 3205,
											"end": 3210,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3187,
											"end": 3211,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "238"
										},
										{
											"begin": 3187,
											"end": 3211,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3187,
											"end": 3211,
											"name": "tag",
											"source": 15,
											"value": "345"
										},
										{
											"begin": 3187,
											"end": 3211,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3182,
											"end": 3185,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 3175,
											"end": 3212,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 3100,
											"end": 3218,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3100,
											"end": 3218,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3100,
											"end": 3218,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3224,
											"end": 3446,
											"name": "tag",
											"source": 15,
											"value": "46"
										},
										{
											"begin": 3224,
											"end": 3446,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3317,
											"end": 3321,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3355,
											"end": 3357,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 3344,
											"end": 3353,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 3340,
											"end": 3358,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3332,
											"end": 3358,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3332,
											"end": 3358,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3368,
											"end": 3439,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "347"
										},
										{
											"begin": 3436,
											"end": 3437,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3425,
											"end": 3434,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 3421,
											"end": 3438,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3412,
											"end": 3418,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 3368,
											"end": 3439,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "239"
										},
										{
											"begin": 3368,
											"end": 3439,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3368,
											"end": 3439,
											"name": "tag",
											"source": 15,
											"value": "347"
										},
										{
											"begin": 3368,
											"end": 3439,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3224,
											"end": 3446,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 3224,
											"end": 3446,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 3224,
											"end": 3446,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3224,
											"end": 3446,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3224,
											"end": 3446,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3452,
											"end": 3574,
											"name": "tag",
											"source": 15,
											"value": "240"
										},
										{
											"begin": 3452,
											"end": 3574,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3525,
											"end": 3549,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "349"
										},
										{
											"begin": 3543,
											"end": 3548,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3525,
											"end": 3549,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "238"
										},
										{
											"begin": 3525,
											"end": 3549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3525,
											"end": 3549,
											"name": "tag",
											"source": 15,
											"value": "349"
										},
										{
											"begin": 3525,
											"end": 3549,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3518,
											"end": 3523,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3515,
											"end": 3550,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 3505,
											"end": 3568,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "350"
										},
										{
											"begin": 3505,
											"end": 3568,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 3564,
											"end": 3565,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3561,
											"end": 3562,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 3554,
											"end": 3566,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 3505,
											"end": 3568,
											"name": "tag",
											"source": 15,
											"value": "350"
										},
										{
											"begin": 3505,
											"end": 3568,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3452,
											"end": 3574,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3452,
											"end": 3574,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3580,
											"end": 3719,
											"name": "tag",
											"source": 15,
											"value": "241"
										},
										{
											"begin": 3580,
											"end": 3719,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3626,
											"end": 3631,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3664,
											"end": 3670,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3651,
											"end": 3671,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 3642,
											"end": 3671,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3642,
											"end": 3671,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3680,
											"end": 3713,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "352"
										},
										{
											"begin": 3707,
											"end": 3712,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3680,
											"end": 3713,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "240"
										},
										{
											"begin": 3680,
											"end": 3713,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3680,
											"end": 3713,
											"name": "tag",
											"source": 15,
											"value": "352"
										},
										{
											"begin": 3680,
											"end": 3713,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3580,
											"end": 3719,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 3580,
											"end": 3719,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 3580,
											"end": 3719,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3580,
											"end": 3719,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3580,
											"end": 3719,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3725,
											"end": 3842,
											"name": "tag",
											"source": 15,
											"value": "242"
										},
										{
											"begin": 3725,
											"end": 3842,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3834,
											"end": 3835,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3831,
											"end": 3832,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 3824,
											"end": 3836,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 3848,
											"end": 3950,
											"name": "tag",
											"source": 15,
											"value": "243"
										},
										{
											"begin": 3848,
											"end": 3950,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3889,
											"end": 3895,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3940,
											"end": 3942,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 3936,
											"end": 3943,
											"name": "NOT",
											"source": 15
										},
										{
											"begin": 3931,
											"end": 3933,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 3924,
											"end": 3929,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 3920,
											"end": 3934,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3916,
											"end": 3944,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 3906,
											"end": 3944,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3906,
											"end": 3944,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3848,
											"end": 3950,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 3848,
											"end": 3950,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3848,
											"end": 3950,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3848,
											"end": 3950,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3956,
											"end": 4136,
											"name": "tag",
											"source": 15,
											"value": "244"
										},
										{
											"begin": 3956,
											"end": 4136,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4004,
											"end": 4081,
											"name": "PUSH",
											"source": 15,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4001,
											"end": 4002,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3994,
											"end": 4082,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 4101,
											"end": 4105,
											"name": "PUSH",
											"source": 15,
											"value": "41"
										},
										{
											"begin": 4098,
											"end": 4099,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 4091,
											"end": 4106,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 4125,
											"end": 4129,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 4122,
											"end": 4123,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4115,
											"end": 4130,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 4142,
											"end": 4423,
											"name": "tag",
											"source": 15,
											"value": "245"
										},
										{
											"begin": 4142,
											"end": 4423,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4225,
											"end": 4252,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "357"
										},
										{
											"begin": 4247,
											"end": 4251,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 4225,
											"end": 4252,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "243"
										},
										{
											"begin": 4225,
											"end": 4252,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4225,
											"end": 4252,
											"name": "tag",
											"source": 15,
											"value": "357"
										},
										{
											"begin": 4225,
											"end": 4252,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4217,
											"end": 4223,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4213,
											"end": 4253,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4355,
											"end": 4361,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4343,
											"end": 4353,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4340,
											"end": 4362,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 4319,
											"end": 4337,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4307,
											"end": 4317,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 4304,
											"end": 4338,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 4301,
											"end": 4363,
											"name": "OR",
											"source": 15
										},
										{
											"begin": 4298,
											"end": 4386,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 4298,
											"end": 4386,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "358"
										},
										{
											"begin": 4298,
											"end": 4386,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 4366,
											"end": 4384,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "359"
										},
										{
											"begin": 4366,
											"end": 4384,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "244"
										},
										{
											"begin": 4366,
											"end": 4384,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4366,
											"end": 4384,
											"name": "tag",
											"source": 15,
											"value": "359"
										},
										{
											"begin": 4366,
											"end": 4384,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4298,
											"end": 4386,
											"name": "tag",
											"source": 15,
											"value": "358"
										},
										{
											"begin": 4298,
											"end": 4386,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4406,
											"end": 4416,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 4402,
											"end": 4404,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 4395,
											"end": 4417,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 4185,
											"end": 4423,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4142,
											"end": 4423,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4142,
											"end": 4423,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4142,
											"end": 4423,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4429,
											"end": 4558,
											"name": "tag",
											"source": 15,
											"value": "246"
										},
										{
											"begin": 4429,
											"end": 4558,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4463,
											"end": 4469,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4490,
											"end": 4510,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "361"
										},
										{
											"begin": 4490,
											"end": 4510,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "222"
										},
										{
											"begin": 4490,
											"end": 4510,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4490,
											"end": 4510,
											"name": "tag",
											"source": 15,
											"value": "361"
										},
										{
											"begin": 4490,
											"end": 4510,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4480,
											"end": 4510,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4480,
											"end": 4510,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4519,
											"end": 4552,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "362"
										},
										{
											"begin": 4547,
											"end": 4551,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 4539,
											"end": 4545,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 4519,
											"end": 4552,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "245"
										},
										{
											"begin": 4519,
											"end": 4552,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4519,
											"end": 4552,
											"name": "tag",
											"source": 15,
											"value": "362"
										},
										{
											"begin": 4519,
											"end": 4552,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4429,
											"end": 4558,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 4429,
											"end": 4558,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4429,
											"end": 4558,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4429,
											"end": 4558,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4564,
											"end": 4875,
											"name": "tag",
											"source": 15,
											"value": "247"
										},
										{
											"begin": 4564,
											"end": 4875,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4641,
											"end": 4645,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4731,
											"end": 4749,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4723,
											"end": 4729,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 4720,
											"end": 4750,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 4717,
											"end": 4773,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 4717,
											"end": 4773,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "364"
										},
										{
											"begin": 4717,
											"end": 4773,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 4753,
											"end": 4771,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "365"
										},
										{
											"begin": 4753,
											"end": 4771,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "244"
										},
										{
											"begin": 4753,
											"end": 4771,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4753,
											"end": 4771,
											"name": "tag",
											"source": 15,
											"value": "365"
										},
										{
											"begin": 4753,
											"end": 4771,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4717,
											"end": 4773,
											"name": "tag",
											"source": 15,
											"value": "364"
										},
										{
											"begin": 4717,
											"end": 4773,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4803,
											"end": 4807,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 4795,
											"end": 4801,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 4791,
											"end": 4808,
											"name": "MUL",
											"source": 15
										},
										{
											"begin": 4783,
											"end": 4808,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4783,
											"end": 4808,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4863,
											"end": 4867,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 4857,
											"end": 4861,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4853,
											"end": 4868,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4845,
											"end": 4868,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4845,
											"end": 4868,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4564,
											"end": 4875,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 4564,
											"end": 4875,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4564,
											"end": 4875,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4564,
											"end": 4875,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4881,
											"end": 4998,
											"name": "tag",
											"source": 15,
											"value": "248"
										},
										{
											"begin": 4881,
											"end": 4998,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4990,
											"end": 4991,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4987,
											"end": 4988,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 4980,
											"end": 4992,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 5004,
											"end": 5126,
											"name": "tag",
											"source": 15,
											"value": "249"
										},
										{
											"begin": 5004,
											"end": 5126,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5077,
											"end": 5101,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "368"
										},
										{
											"begin": 5095,
											"end": 5100,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 5077,
											"end": 5101,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "230"
										},
										{
											"begin": 5077,
											"end": 5101,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5077,
											"end": 5101,
											"name": "tag",
											"source": 15,
											"value": "368"
										},
										{
											"begin": 5077,
											"end": 5101,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5070,
											"end": 5075,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 5067,
											"end": 5102,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 5057,
											"end": 5120,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "369"
										},
										{
											"begin": 5057,
											"end": 5120,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 5116,
											"end": 5117,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 5113,
											"end": 5114,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 5106,
											"end": 5118,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 5057,
											"end": 5120,
											"name": "tag",
											"source": 15,
											"value": "369"
										},
										{
											"begin": 5057,
											"end": 5120,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5004,
											"end": 5126,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5004,
											"end": 5126,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5132,
											"end": 5271,
											"name": "tag",
											"source": 15,
											"value": "250"
										},
										{
											"begin": 5132,
											"end": 5271,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5178,
											"end": 5183,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 5216,
											"end": 5222,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 5203,
											"end": 5223,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 5194,
											"end": 5223,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 5194,
											"end": 5223,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5232,
											"end": 5265,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "371"
										},
										{
											"begin": 5259,
											"end": 5264,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 5232,
											"end": 5265,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "249"
										},
										{
											"begin": 5232,
											"end": 5265,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5232,
											"end": 5265,
											"name": "tag",
											"source": 15,
											"value": "371"
										},
										{
											"begin": 5232,
											"end": 5265,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5132,
											"end": 5271,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 5132,
											"end": 5271,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 5132,
											"end": 5271,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5132,
											"end": 5271,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5132,
											"end": 5271,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5294,
											"end": 6004,
											"name": "tag",
											"source": 15,
											"value": "251"
										},
										{
											"begin": 5294,
											"end": 6004,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5390,
											"end": 5395,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 5415,
											"end": 5496,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "373"
										},
										{
											"begin": 5431,
											"end": 5495,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "374"
										},
										{
											"begin": 5488,
											"end": 5494,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 5431,
											"end": 5495,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "247"
										},
										{
											"begin": 5431,
											"end": 5495,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5431,
											"end": 5495,
											"name": "tag",
											"source": 15,
											"value": "374"
										},
										{
											"begin": 5431,
											"end": 5495,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5415,
											"end": 5496,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "246"
										},
										{
											"begin": 5415,
											"end": 5496,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5415,
											"end": 5496,
											"name": "tag",
											"source": 15,
											"value": "373"
										},
										{
											"begin": 5415,
											"end": 5496,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5406,
											"end": 5496,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 5406,
											"end": 5496,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5516,
											"end": 5521,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 5545,
											"end": 5551,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 5538,
											"end": 5543,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5531,
											"end": 5552,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 5579,
											"end": 5583,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 5572,
											"end": 5577,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5568,
											"end": 5584,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5561,
											"end": 5584,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 5561,
											"end": 5584,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5632,
											"end": 5636,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 5624,
											"end": 5630,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 5620,
											"end": 5637,
											"name": "MUL",
											"source": 15
										},
										{
											"begin": 5612,
											"end": 5618,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 5608,
											"end": 5638,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5661,
											"end": 5664,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 5653,
											"end": 5659,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 5650,
											"end": 5665,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 5647,
											"end": 5769,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 5647,
											"end": 5769,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "375"
										},
										{
											"begin": 5647,
											"end": 5769,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 5680,
											"end": 5759,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "376"
										},
										{
											"begin": 5680,
											"end": 5759,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "248"
										},
										{
											"begin": 5680,
											"end": 5759,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5680,
											"end": 5759,
											"name": "tag",
											"source": 15,
											"value": "376"
										},
										{
											"begin": 5680,
											"end": 5759,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5647,
											"end": 5769,
											"name": "tag",
											"source": 15,
											"value": "375"
										},
										{
											"begin": 5647,
											"end": 5769,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5795,
											"end": 5801,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 5778,
											"end": 5998,
											"name": "tag",
											"source": 15,
											"value": "377"
										},
										{
											"begin": 5778,
											"end": 5998,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5812,
											"end": 5818,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 5807,
											"end": 5810,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 5804,
											"end": 5819,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 5778,
											"end": 5998,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 5778,
											"end": 5998,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "379"
										},
										{
											"begin": 5778,
											"end": 5998,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 5887,
											"end": 5890,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 5916,
											"end": 5953,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "380"
										},
										{
											"begin": 5949,
											"end": 5952,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 5937,
											"end": 5947,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5916,
											"end": 5953,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "250"
										},
										{
											"begin": 5916,
											"end": 5953,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5916,
											"end": 5953,
											"name": "tag",
											"source": 15,
											"value": "380"
										},
										{
											"begin": 5916,
											"end": 5953,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5911,
											"end": 5914,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 5904,
											"end": 5954,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 5983,
											"end": 5987,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 5978,
											"end": 5981,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 5974,
											"end": 5988,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5967,
											"end": 5988,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 5967,
											"end": 5988,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5854,
											"end": 5998,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5838,
											"end": 5842,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 5833,
											"end": 5836,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 5829,
											"end": 5843,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5822,
											"end": 5843,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 5822,
											"end": 5843,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5778,
											"end": 5998,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "377"
										},
										{
											"begin": 5778,
											"end": 5998,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5778,
											"end": 5998,
											"name": "tag",
											"source": 15,
											"value": "379"
										},
										{
											"begin": 5778,
											"end": 5998,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5782,
											"end": 5803,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5396,
											"end": 6004,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5396,
											"end": 6004,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5294,
											"end": 6004,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 5294,
											"end": 6004,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 5294,
											"end": 6004,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5294,
											"end": 6004,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5294,
											"end": 6004,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5294,
											"end": 6004,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6027,
											"end": 6397,
											"name": "tag",
											"source": 15,
											"value": "252"
										},
										{
											"begin": 6027,
											"end": 6397,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6098,
											"end": 6103,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 6147,
											"end": 6150,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6140,
											"end": 6144,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 6132,
											"end": 6138,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 6128,
											"end": 6145,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6124,
											"end": 6151,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 6114,
											"end": 6236,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "382"
										},
										{
											"begin": 6114,
											"end": 6236,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 6155,
											"end": 6234,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "383"
										},
										{
											"begin": 6155,
											"end": 6234,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "242"
										},
										{
											"begin": 6155,
											"end": 6234,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6155,
											"end": 6234,
											"name": "tag",
											"source": 15,
											"value": "383"
										},
										{
											"begin": 6155,
											"end": 6234,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6114,
											"end": 6236,
											"name": "tag",
											"source": 15,
											"value": "382"
										},
										{
											"begin": 6114,
											"end": 6236,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6272,
											"end": 6278,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 6259,
											"end": 6279,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 6297,
											"end": 6391,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "384"
										},
										{
											"begin": 6387,
											"end": 6390,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 6379,
											"end": 6385,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6372,
											"end": 6376,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 6364,
											"end": 6370,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 6360,
											"end": 6377,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6297,
											"end": 6391,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "251"
										},
										{
											"begin": 6297,
											"end": 6391,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6297,
											"end": 6391,
											"name": "tag",
											"source": 15,
											"value": "384"
										},
										{
											"begin": 6297,
											"end": 6391,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6288,
											"end": 6391,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 6288,
											"end": 6391,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6104,
											"end": 6397,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6027,
											"end": 6397,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 6027,
											"end": 6397,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 6027,
											"end": 6397,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6027,
											"end": 6397,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6027,
											"end": 6397,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6403,
											"end": 6520,
											"name": "tag",
											"source": 15,
											"value": "253"
										},
										{
											"begin": 6403,
											"end": 6520,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6512,
											"end": 6513,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 6509,
											"end": 6510,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 6502,
											"end": 6514,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 6526,
											"end": 6833,
											"name": "tag",
											"source": 15,
											"value": "254"
										},
										{
											"begin": 6526,
											"end": 6833,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6587,
											"end": 6591,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 6677,
											"end": 6695,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6669,
											"end": 6675,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6666,
											"end": 6696,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 6663,
											"end": 6719,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 6663,
											"end": 6719,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "387"
										},
										{
											"begin": 6663,
											"end": 6719,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 6699,
											"end": 6717,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "388"
										},
										{
											"begin": 6699,
											"end": 6717,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "244"
										},
										{
											"begin": 6699,
											"end": 6717,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6699,
											"end": 6717,
											"name": "tag",
											"source": 15,
											"value": "388"
										},
										{
											"begin": 6699,
											"end": 6717,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6663,
											"end": 6719,
											"name": "tag",
											"source": 15,
											"value": "387"
										},
										{
											"begin": 6663,
											"end": 6719,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6737,
											"end": 6766,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "389"
										},
										{
											"begin": 6759,
											"end": 6765,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6737,
											"end": 6766,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "243"
										},
										{
											"begin": 6737,
											"end": 6766,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6737,
											"end": 6766,
											"name": "tag",
											"source": 15,
											"value": "389"
										},
										{
											"begin": 6737,
											"end": 6766,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6729,
											"end": 6766,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 6729,
											"end": 6766,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6821,
											"end": 6825,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 6815,
											"end": 6819,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 6811,
											"end": 6826,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6803,
											"end": 6826,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 6803,
											"end": 6826,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6526,
											"end": 6833,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 6526,
											"end": 6833,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 6526,
											"end": 6833,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6526,
											"end": 6833,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6839,
											"end": 6987,
											"name": "tag",
											"source": 15,
											"value": "255"
										},
										{
											"begin": 6839,
											"end": 6987,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6937,
											"end": 6943,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6932,
											"end": 6935,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 6927,
											"end": 6930,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 6914,
											"end": 6944,
											"name": "CALLDATACOPY",
											"source": 15
										},
										{
											"begin": 6978,
											"end": 6979,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 6969,
											"end": 6975,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 6964,
											"end": 6967,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 6960,
											"end": 6976,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6953,
											"end": 6980,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 6839,
											"end": 6987,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6839,
											"end": 6987,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6839,
											"end": 6987,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6839,
											"end": 6987,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6993,
											"end": 7416,
											"name": "tag",
											"source": 15,
											"value": "256"
										},
										{
											"begin": 6993,
											"end": 7416,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7070,
											"end": 7075,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 7095,
											"end": 7160,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "392"
										},
										{
											"begin": 7111,
											"end": 7159,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "393"
										},
										{
											"begin": 7152,
											"end": 7158,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 7111,
											"end": 7159,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "254"
										},
										{
											"begin": 7111,
											"end": 7159,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7111,
											"end": 7159,
											"name": "tag",
											"source": 15,
											"value": "393"
										},
										{
											"begin": 7111,
											"end": 7159,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7095,
											"end": 7160,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "246"
										},
										{
											"begin": 7095,
											"end": 7160,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7095,
											"end": 7160,
											"name": "tag",
											"source": 15,
											"value": "392"
										},
										{
											"begin": 7095,
											"end": 7160,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7086,
											"end": 7160,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 7086,
											"end": 7160,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7183,
											"end": 7189,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 7176,
											"end": 7181,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 7169,
											"end": 7190,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 7221,
											"end": 7225,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 7214,
											"end": 7219,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 7210,
											"end": 7226,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 7259,
											"end": 7262,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 7250,
											"end": 7256,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 7245,
											"end": 7248,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 7241,
											"end": 7257,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 7238,
											"end": 7263,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 7235,
											"end": 7347,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 7235,
											"end": 7347,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "394"
										},
										{
											"begin": 7235,
											"end": 7347,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 7266,
											"end": 7345,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "395"
										},
										{
											"begin": 7266,
											"end": 7345,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "253"
										},
										{
											"begin": 7266,
											"end": 7345,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7266,
											"end": 7345,
											"name": "tag",
											"source": 15,
											"value": "395"
										},
										{
											"begin": 7266,
											"end": 7345,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7235,
											"end": 7347,
											"name": "tag",
											"source": 15,
											"value": "394"
										},
										{
											"begin": 7235,
											"end": 7347,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7356,
											"end": 7410,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "396"
										},
										{
											"begin": 7403,
											"end": 7409,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 7398,
											"end": 7401,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 7393,
											"end": 7396,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 7356,
											"end": 7410,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "255"
										},
										{
											"begin": 7356,
											"end": 7410,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7356,
											"end": 7410,
											"name": "tag",
											"source": 15,
											"value": "396"
										},
										{
											"begin": 7356,
											"end": 7410,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7076,
											"end": 7416,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6993,
											"end": 7416,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 6993,
											"end": 7416,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 6993,
											"end": 7416,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6993,
											"end": 7416,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6993,
											"end": 7416,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6993,
											"end": 7416,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7435,
											"end": 7773,
											"name": "tag",
											"source": 15,
											"value": "257"
										},
										{
											"begin": 7435,
											"end": 7773,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7490,
											"end": 7495,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 7539,
											"end": 7542,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 7532,
											"end": 7536,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 7524,
											"end": 7530,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 7520,
											"end": 7537,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 7516,
											"end": 7543,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 7506,
											"end": 7628,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "398"
										},
										{
											"begin": 7506,
											"end": 7628,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 7547,
											"end": 7626,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "399"
										},
										{
											"begin": 7547,
											"end": 7626,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "242"
										},
										{
											"begin": 7547,
											"end": 7626,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7547,
											"end": 7626,
											"name": "tag",
											"source": 15,
											"value": "399"
										},
										{
											"begin": 7547,
											"end": 7626,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7506,
											"end": 7628,
											"name": "tag",
											"source": 15,
											"value": "398"
										},
										{
											"begin": 7506,
											"end": 7628,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7664,
											"end": 7670,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 7651,
											"end": 7671,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 7689,
											"end": 7767,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "400"
										},
										{
											"begin": 7763,
											"end": 7766,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 7755,
											"end": 7761,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 7748,
											"end": 7752,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 7740,
											"end": 7746,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 7736,
											"end": 7753,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 7689,
											"end": 7767,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "256"
										},
										{
											"begin": 7689,
											"end": 7767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7689,
											"end": 7767,
											"name": "tag",
											"source": 15,
											"value": "400"
										},
										{
											"begin": 7689,
											"end": 7767,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7680,
											"end": 7767,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 7680,
											"end": 7767,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7496,
											"end": 7773,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7435,
											"end": 7773,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 7435,
											"end": 7773,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 7435,
											"end": 7773,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7435,
											"end": 7773,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7435,
											"end": 7773,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7779,
											"end": 9288,
											"name": "tag",
											"source": 15,
											"value": "50"
										},
										{
											"begin": 7779,
											"end": 9288,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7933,
											"end": 7939,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 7941,
											"end": 7947,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 7949,
											"end": 7955,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 7957,
											"end": 7963,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 7965,
											"end": 7971,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 8014,
											"end": 8017,
											"name": "PUSH",
											"source": 15,
											"value": "A0"
										},
										{
											"begin": 8002,
											"end": 8011,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 7993,
											"end": 8000,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 7989,
											"end": 8012,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 7985,
											"end": 8018,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 7982,
											"end": 8102,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 7982,
											"end": 8102,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "402"
										},
										{
											"begin": 7982,
											"end": 8102,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 8021,
											"end": 8100,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "403"
										},
										{
											"begin": 8021,
											"end": 8100,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "223"
										},
										{
											"begin": 8021,
											"end": 8100,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8021,
											"end": 8100,
											"name": "tag",
											"source": 15,
											"value": "403"
										},
										{
											"begin": 8021,
											"end": 8100,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7982,
											"end": 8102,
											"name": "tag",
											"source": 15,
											"value": "402"
										},
										{
											"begin": 7982,
											"end": 8102,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8141,
											"end": 8142,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 8166,
											"end": 8219,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "404"
										},
										{
											"begin": 8211,
											"end": 8218,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 8202,
											"end": 8208,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 8191,
											"end": 8200,
											"name": "DUP10",
											"source": 15
										},
										{
											"begin": 8187,
											"end": 8209,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8166,
											"end": 8219,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "241"
										},
										{
											"begin": 8166,
											"end": 8219,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8166,
											"end": 8219,
											"name": "tag",
											"source": 15,
											"value": "404"
										},
										{
											"begin": 8166,
											"end": 8219,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8156,
											"end": 8219,
											"name": "SWAP6",
											"source": 15
										},
										{
											"begin": 8156,
											"end": 8219,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8112,
											"end": 8229,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8268,
											"end": 8270,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 8294,
											"end": 8347,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "405"
										},
										{
											"begin": 8339,
											"end": 8346,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 8330,
											"end": 8336,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 8319,
											"end": 8328,
											"name": "DUP10",
											"source": 15
										},
										{
											"begin": 8315,
											"end": 8337,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8294,
											"end": 8347,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "241"
										},
										{
											"begin": 8294,
											"end": 8347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8294,
											"end": 8347,
											"name": "tag",
											"source": 15,
											"value": "405"
										},
										{
											"begin": 8294,
											"end": 8347,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8284,
											"end": 8347,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 8284,
											"end": 8347,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8239,
											"end": 8357,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8424,
											"end": 8426,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 8413,
											"end": 8422,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 8409,
											"end": 8427,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8396,
											"end": 8428,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 8455,
											"end": 8473,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8447,
											"end": 8453,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 8444,
											"end": 8474,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 8441,
											"end": 8558,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 8441,
											"end": 8558,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "406"
										},
										{
											"begin": 8441,
											"end": 8558,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 8477,
											"end": 8556,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "407"
										},
										{
											"begin": 8477,
											"end": 8556,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "224"
										},
										{
											"begin": 8477,
											"end": 8556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8477,
											"end": 8556,
											"name": "tag",
											"source": 15,
											"value": "407"
										},
										{
											"begin": 8477,
											"end": 8556,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8441,
											"end": 8558,
											"name": "tag",
											"source": 15,
											"value": "406"
										},
										{
											"begin": 8441,
											"end": 8558,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8582,
											"end": 8660,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "408"
										},
										{
											"begin": 8652,
											"end": 8659,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 8643,
											"end": 8649,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 8632,
											"end": 8641,
											"name": "DUP10",
											"source": 15
										},
										{
											"begin": 8628,
											"end": 8650,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8582,
											"end": 8660,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "252"
										},
										{
											"begin": 8582,
											"end": 8660,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8582,
											"end": 8660,
											"name": "tag",
											"source": 15,
											"value": "408"
										},
										{
											"begin": 8582,
											"end": 8660,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8572,
											"end": 8660,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 8572,
											"end": 8660,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8367,
											"end": 8670,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8737,
											"end": 8739,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 8726,
											"end": 8735,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 8722,
											"end": 8740,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8709,
											"end": 8741,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 8768,
											"end": 8786,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8760,
											"end": 8766,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 8757,
											"end": 8787,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 8754,
											"end": 8871,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 8754,
											"end": 8871,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "409"
										},
										{
											"begin": 8754,
											"end": 8871,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 8790,
											"end": 8869,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "410"
										},
										{
											"begin": 8790,
											"end": 8869,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "224"
										},
										{
											"begin": 8790,
											"end": 8869,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8790,
											"end": 8869,
											"name": "tag",
											"source": 15,
											"value": "410"
										},
										{
											"begin": 8790,
											"end": 8869,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8754,
											"end": 8871,
											"name": "tag",
											"source": 15,
											"value": "409"
										},
										{
											"begin": 8754,
											"end": 8871,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8895,
											"end": 8973,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "411"
										},
										{
											"begin": 8965,
											"end": 8972,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 8956,
											"end": 8962,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 8945,
											"end": 8954,
											"name": "DUP10",
											"source": 15
										},
										{
											"begin": 8941,
											"end": 8963,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8895,
											"end": 8973,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "252"
										},
										{
											"begin": 8895,
											"end": 8973,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8895,
											"end": 8973,
											"name": "tag",
											"source": 15,
											"value": "411"
										},
										{
											"begin": 8895,
											"end": 8973,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8885,
											"end": 8973,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 8885,
											"end": 8973,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8680,
											"end": 8983,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9050,
											"end": 9053,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 9039,
											"end": 9048,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 9035,
											"end": 9054,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 9022,
											"end": 9055,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 9082,
											"end": 9100,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9074,
											"end": 9080,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 9071,
											"end": 9101,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 9068,
											"end": 9185,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 9068,
											"end": 9185,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "412"
										},
										{
											"begin": 9068,
											"end": 9185,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 9104,
											"end": 9183,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "413"
										},
										{
											"begin": 9104,
											"end": 9183,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "224"
										},
										{
											"begin": 9104,
											"end": 9183,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 9104,
											"end": 9183,
											"name": "tag",
											"source": 15,
											"value": "413"
										},
										{
											"begin": 9104,
											"end": 9183,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9068,
											"end": 9185,
											"name": "tag",
											"source": 15,
											"value": "412"
										},
										{
											"begin": 9068,
											"end": 9185,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9209,
											"end": 9271,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "414"
										},
										{
											"begin": 9263,
											"end": 9270,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 9254,
											"end": 9260,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 9243,
											"end": 9252,
											"name": "DUP10",
											"source": 15
										},
										{
											"begin": 9239,
											"end": 9261,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 9209,
											"end": 9271,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "257"
										},
										{
											"begin": 9209,
											"end": 9271,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 9209,
											"end": 9271,
											"name": "tag",
											"source": 15,
											"value": "414"
										},
										{
											"begin": 9209,
											"end": 9271,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9199,
											"end": 9271,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 9199,
											"end": 9271,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8993,
											"end": 9281,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7779,
											"end": 9288,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 7779,
											"end": 9288,
											"name": "SWAP6",
											"source": 15
										},
										{
											"begin": 7779,
											"end": 9288,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7779,
											"end": 9288,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 7779,
											"end": 9288,
											"name": "SWAP6",
											"source": 15
										},
										{
											"begin": 7779,
											"end": 9288,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 7779,
											"end": 9288,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 7779,
											"end": 9288,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7779,
											"end": 9288,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 9294,
											"end": 9409,
											"name": "tag",
											"source": 15,
											"value": "258"
										},
										{
											"begin": 9294,
											"end": 9409,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9379,
											"end": 9402,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "416"
										},
										{
											"begin": 9396,
											"end": 9401,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 9379,
											"end": 9402,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "225"
										},
										{
											"begin": 9379,
											"end": 9402,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 9379,
											"end": 9402,
											"name": "tag",
											"source": 15,
											"value": "416"
										},
										{
											"begin": 9379,
											"end": 9402,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9374,
											"end": 9377,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 9367,
											"end": 9403,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 9294,
											"end": 9409,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9294,
											"end": 9409,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9294,
											"end": 9409,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 9415,
											"end": 9633,
											"name": "tag",
											"source": 15,
											"value": "53"
										},
										{
											"begin": 9415,
											"end": 9633,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9506,
											"end": 9510,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 9544,
											"end": 9546,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 9533,
											"end": 9542,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 9529,
											"end": 9547,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 9521,
											"end": 9547,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 9521,
											"end": 9547,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9557,
											"end": 9626,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "418"
										},
										{
											"begin": 9623,
											"end": 9624,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 9612,
											"end": 9621,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 9608,
											"end": 9625,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 9599,
											"end": 9605,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 9557,
											"end": 9626,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "258"
										},
										{
											"begin": 9557,
											"end": 9626,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 9557,
											"end": 9626,
											"name": "tag",
											"source": 15,
											"value": "418"
										},
										{
											"begin": 9557,
											"end": 9626,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9415,
											"end": 9633,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 9415,
											"end": 9633,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 9415,
											"end": 9633,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9415,
											"end": 9633,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9415,
											"end": 9633,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 9639,
											"end": 9725,
											"name": "tag",
											"source": 15,
											"value": "259"
										},
										{
											"begin": 9639,
											"end": 9725,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9674,
											"end": 9681,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 9714,
											"end": 9718,
											"name": "PUSH",
											"source": 15,
											"value": "FF"
										},
										{
											"begin": 9707,
											"end": 9712,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 9703,
											"end": 9719,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 9692,
											"end": 9719,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 9692,
											"end": 9719,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9639,
											"end": 9725,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 9639,
											"end": 9725,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 9639,
											"end": 9725,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9639,
											"end": 9725,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 9731,
											"end": 9849,
											"name": "tag",
											"source": 15,
											"value": "260"
										},
										{
											"begin": 9731,
											"end": 9849,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9802,
											"end": 9824,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "421"
										},
										{
											"begin": 9818,
											"end": 9823,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 9802,
											"end": 9824,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "259"
										},
										{
											"begin": 9802,
											"end": 9824,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 9802,
											"end": 9824,
											"name": "tag",
											"source": 15,
											"value": "421"
										},
										{
											"begin": 9802,
											"end": 9824,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9795,
											"end": 9800,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 9792,
											"end": 9825,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 9782,
											"end": 9843,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "422"
										},
										{
											"begin": 9782,
											"end": 9843,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 9839,
											"end": 9840,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 9836,
											"end": 9837,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 9829,
											"end": 9841,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 9782,
											"end": 9843,
											"name": "tag",
											"source": 15,
											"value": "422"
										},
										{
											"begin": 9782,
											"end": 9843,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9731,
											"end": 9849,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9731,
											"end": 9849,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 9855,
											"end": 9990,
											"name": "tag",
											"source": 15,
											"value": "261"
										},
										{
											"begin": 9855,
											"end": 9990,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9899,
											"end": 9904,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 9937,
											"end": 9943,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 9924,
											"end": 9944,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 9915,
											"end": 9944,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 9915,
											"end": 9944,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9953,
											"end": 9984,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "424"
										},
										{
											"begin": 9978,
											"end": 9983,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 9953,
											"end": 9984,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "260"
										},
										{
											"begin": 9953,
											"end": 9984,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 9953,
											"end": 9984,
											"name": "tag",
											"source": 15,
											"value": "424"
										},
										{
											"begin": 9953,
											"end": 9984,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9855,
											"end": 9990,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 9855,
											"end": 9990,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 9855,
											"end": 9990,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9855,
											"end": 9990,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9855,
											"end": 9990,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 9996,
											"end": 10611,
											"name": "tag",
											"source": 15,
											"value": "57"
										},
										{
											"begin": 9996,
											"end": 10611,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10071,
											"end": 10077,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 10079,
											"end": 10085,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 10087,
											"end": 10093,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 10136,
											"end": 10138,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 10124,
											"end": 10133,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 10115,
											"end": 10122,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 10111,
											"end": 10134,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 10107,
											"end": 10139,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 10104,
											"end": 10223,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 10104,
											"end": 10223,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "426"
										},
										{
											"begin": 10104,
											"end": 10223,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 10142,
											"end": 10221,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "427"
										},
										{
											"begin": 10142,
											"end": 10221,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "223"
										},
										{
											"begin": 10142,
											"end": 10221,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 10142,
											"end": 10221,
											"name": "tag",
											"source": 15,
											"value": "427"
										},
										{
											"begin": 10142,
											"end": 10221,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10104,
											"end": 10223,
											"name": "tag",
											"source": 15,
											"value": "426"
										},
										{
											"begin": 10104,
											"end": 10223,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10262,
											"end": 10263,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 10287,
											"end": 10340,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "428"
										},
										{
											"begin": 10332,
											"end": 10339,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 10323,
											"end": 10329,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 10312,
											"end": 10321,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 10308,
											"end": 10330,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 10287,
											"end": 10340,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "250"
										},
										{
											"begin": 10287,
											"end": 10340,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 10287,
											"end": 10340,
											"name": "tag",
											"source": 15,
											"value": "428"
										},
										{
											"begin": 10287,
											"end": 10340,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10277,
											"end": 10340,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 10277,
											"end": 10340,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10233,
											"end": 10350,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10389,
											"end": 10391,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 10415,
											"end": 10468,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "429"
										},
										{
											"begin": 10460,
											"end": 10467,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 10451,
											"end": 10457,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 10440,
											"end": 10449,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 10436,
											"end": 10458,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 10415,
											"end": 10468,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "250"
										},
										{
											"begin": 10415,
											"end": 10468,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 10415,
											"end": 10468,
											"name": "tag",
											"source": 15,
											"value": "429"
										},
										{
											"begin": 10415,
											"end": 10468,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10405,
											"end": 10468,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 10405,
											"end": 10468,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10360,
											"end": 10478,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10517,
											"end": 10519,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 10543,
											"end": 10594,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "430"
										},
										{
											"begin": 10586,
											"end": 10593,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 10577,
											"end": 10583,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 10566,
											"end": 10575,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 10562,
											"end": 10584,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 10543,
											"end": 10594,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "261"
										},
										{
											"begin": 10543,
											"end": 10594,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 10543,
											"end": 10594,
											"name": "tag",
											"source": 15,
											"value": "430"
										},
										{
											"begin": 10543,
											"end": 10594,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10533,
											"end": 10594,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 10533,
											"end": 10594,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10488,
											"end": 10604,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9996,
											"end": 10611,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 9996,
											"end": 10611,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9996,
											"end": 10611,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 9996,
											"end": 10611,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9996,
											"end": 10611,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 9996,
											"end": 10611,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 10617,
											"end": 10946,
											"name": "tag",
											"source": 15,
											"value": "62"
										},
										{
											"begin": 10617,
											"end": 10946,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10676,
											"end": 10682,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 10725,
											"end": 10727,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 10713,
											"end": 10722,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 10704,
											"end": 10711,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 10700,
											"end": 10723,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 10696,
											"end": 10728,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 10693,
											"end": 10812,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 10693,
											"end": 10812,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "432"
										},
										{
											"begin": 10693,
											"end": 10812,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 10731,
											"end": 10810,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "433"
										},
										{
											"begin": 10731,
											"end": 10810,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "223"
										},
										{
											"begin": 10731,
											"end": 10810,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 10731,
											"end": 10810,
											"name": "tag",
											"source": 15,
											"value": "433"
										},
										{
											"begin": 10731,
											"end": 10810,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10693,
											"end": 10812,
											"name": "tag",
											"source": 15,
											"value": "432"
										},
										{
											"begin": 10693,
											"end": 10812,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10851,
											"end": 10852,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 10876,
											"end": 10929,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "434"
										},
										{
											"begin": 10921,
											"end": 10928,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 10912,
											"end": 10918,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 10901,
											"end": 10910,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 10897,
											"end": 10919,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 10876,
											"end": 10929,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "250"
										},
										{
											"begin": 10876,
											"end": 10929,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 10876,
											"end": 10929,
											"name": "tag",
											"source": 15,
											"value": "434"
										},
										{
											"begin": 10876,
											"end": 10929,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10866,
											"end": 10929,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 10866,
											"end": 10929,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10822,
											"end": 10939,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10617,
											"end": 10946,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 10617,
											"end": 10946,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 10617,
											"end": 10946,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10617,
											"end": 10946,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10617,
											"end": 10946,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 10952,
											"end": 11094,
											"name": "tag",
											"source": 15,
											"value": "262"
										},
										{
											"begin": 10952,
											"end": 11094,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11018,
											"end": 11027,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 11051,
											"end": 11088,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "436"
										},
										{
											"begin": 11082,
											"end": 11087,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 11051,
											"end": 11088,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "235"
										},
										{
											"begin": 11051,
											"end": 11088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 11051,
											"end": 11088,
											"name": "tag",
											"source": 15,
											"value": "436"
										},
										{
											"begin": 11051,
											"end": 11088,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11038,
											"end": 11088,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 11038,
											"end": 11088,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10952,
											"end": 11094,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 10952,
											"end": 11094,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 10952,
											"end": 11094,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10952,
											"end": 11094,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 11100,
											"end": 11263,
											"name": "tag",
											"source": 15,
											"value": "263"
										},
										{
											"begin": 11100,
											"end": 11263,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11203,
											"end": 11256,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "438"
										},
										{
											"begin": 11250,
											"end": 11255,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 11203,
											"end": 11256,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "262"
										},
										{
											"begin": 11203,
											"end": 11256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 11203,
											"end": 11256,
											"name": "tag",
											"source": 15,
											"value": "438"
										},
										{
											"begin": 11203,
											"end": 11256,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11198,
											"end": 11201,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 11191,
											"end": 11257,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 11100,
											"end": 11263,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11100,
											"end": 11263,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11100,
											"end": 11263,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 11269,
											"end": 11523,
											"name": "tag",
											"source": 15,
											"value": "69"
										},
										{
											"begin": 11269,
											"end": 11523,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11378,
											"end": 11382,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 11416,
											"end": 11418,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 11405,
											"end": 11414,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 11401,
											"end": 11419,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 11393,
											"end": 11419,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 11393,
											"end": 11419,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11429,
											"end": 11516,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "440"
										},
										{
											"begin": 11513,
											"end": 11514,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 11502,
											"end": 11511,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 11498,
											"end": 11515,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 11489,
											"end": 11495,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 11429,
											"end": 11516,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "263"
										},
										{
											"begin": 11429,
											"end": 11516,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 11429,
											"end": 11516,
											"name": "tag",
											"source": 15,
											"value": "440"
										},
										{
											"begin": 11429,
											"end": 11516,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11269,
											"end": 11523,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 11269,
											"end": 11523,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 11269,
											"end": 11523,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11269,
											"end": 11523,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11269,
											"end": 11523,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 11529,
											"end": 12618,
											"name": "tag",
											"source": 15,
											"value": "75"
										},
										{
											"begin": 11529,
											"end": 12618,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11633,
											"end": 11639,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 11641,
											"end": 11647,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 11649,
											"end": 11655,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 11657,
											"end": 11663,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 11665,
											"end": 11671,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 11714,
											"end": 11717,
											"name": "PUSH",
											"source": 15,
											"value": "A0"
										},
										{
											"begin": 11702,
											"end": 11711,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 11693,
											"end": 11700,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 11689,
											"end": 11712,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 11685,
											"end": 11718,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 11682,
											"end": 11802,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 11682,
											"end": 11802,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "442"
										},
										{
											"begin": 11682,
											"end": 11802,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 11721,
											"end": 11800,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "443"
										},
										{
											"begin": 11721,
											"end": 11800,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "223"
										},
										{
											"begin": 11721,
											"end": 11800,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 11721,
											"end": 11800,
											"name": "tag",
											"source": 15,
											"value": "443"
										},
										{
											"begin": 11721,
											"end": 11800,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11682,
											"end": 11802,
											"name": "tag",
											"source": 15,
											"value": "442"
										},
										{
											"begin": 11682,
											"end": 11802,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11841,
											"end": 11842,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 11866,
											"end": 11919,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "444"
										},
										{
											"begin": 11911,
											"end": 11918,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 11902,
											"end": 11908,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 11891,
											"end": 11900,
											"name": "DUP10",
											"source": 15
										},
										{
											"begin": 11887,
											"end": 11909,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 11866,
											"end": 11919,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "241"
										},
										{
											"begin": 11866,
											"end": 11919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 11866,
											"end": 11919,
											"name": "tag",
											"source": 15,
											"value": "444"
										},
										{
											"begin": 11866,
											"end": 11919,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11856,
											"end": 11919,
											"name": "SWAP6",
											"source": 15
										},
										{
											"begin": 11856,
											"end": 11919,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11812,
											"end": 11929,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11968,
											"end": 11970,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 11994,
											"end": 12047,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "445"
										},
										{
											"begin": 12039,
											"end": 12046,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 12030,
											"end": 12036,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 12019,
											"end": 12028,
											"name": "DUP10",
											"source": 15
										},
										{
											"begin": 12015,
											"end": 12037,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 11994,
											"end": 12047,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "241"
										},
										{
											"begin": 11994,
											"end": 12047,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 11994,
											"end": 12047,
											"name": "tag",
											"source": 15,
											"value": "445"
										},
										{
											"begin": 11994,
											"end": 12047,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11984,
											"end": 12047,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 11984,
											"end": 12047,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11939,
											"end": 12057,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12096,
											"end": 12098,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 12122,
											"end": 12175,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "446"
										},
										{
											"begin": 12167,
											"end": 12174,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 12158,
											"end": 12164,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 12147,
											"end": 12156,
											"name": "DUP10",
											"source": 15
										},
										{
											"begin": 12143,
											"end": 12165,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 12122,
											"end": 12175,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "250"
										},
										{
											"begin": 12122,
											"end": 12175,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 12122,
											"end": 12175,
											"name": "tag",
											"source": 15,
											"value": "446"
										},
										{
											"begin": 12122,
											"end": 12175,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12112,
											"end": 12175,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 12112,
											"end": 12175,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12067,
											"end": 12185,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12224,
											"end": 12226,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 12250,
											"end": 12303,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "447"
										},
										{
											"begin": 12295,
											"end": 12302,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 12286,
											"end": 12292,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 12275,
											"end": 12284,
											"name": "DUP10",
											"source": 15
										},
										{
											"begin": 12271,
											"end": 12293,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 12250,
											"end": 12303,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "250"
										},
										{
											"begin": 12250,
											"end": 12303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 12250,
											"end": 12303,
											"name": "tag",
											"source": 15,
											"value": "447"
										},
										{
											"begin": 12250,
											"end": 12303,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12240,
											"end": 12303,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 12240,
											"end": 12303,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12195,
											"end": 12313,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12380,
											"end": 12383,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 12369,
											"end": 12378,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 12365,
											"end": 12384,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 12352,
											"end": 12385,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 12412,
											"end": 12430,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12404,
											"end": 12410,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 12401,
											"end": 12431,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 12398,
											"end": 12515,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 12398,
											"end": 12515,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "448"
										},
										{
											"begin": 12398,
											"end": 12515,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 12434,
											"end": 12513,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "449"
										},
										{
											"begin": 12434,
											"end": 12513,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "224"
										},
										{
											"begin": 12434,
											"end": 12513,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 12434,
											"end": 12513,
											"name": "tag",
											"source": 15,
											"value": "449"
										},
										{
											"begin": 12434,
											"end": 12513,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12398,
											"end": 12515,
											"name": "tag",
											"source": 15,
											"value": "448"
										},
										{
											"begin": 12398,
											"end": 12515,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12539,
											"end": 12601,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "450"
										},
										{
											"begin": 12593,
											"end": 12600,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 12584,
											"end": 12590,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 12573,
											"end": 12582,
											"name": "DUP10",
											"source": 15
										},
										{
											"begin": 12569,
											"end": 12591,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 12539,
											"end": 12601,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "257"
										},
										{
											"begin": 12539,
											"end": 12601,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 12539,
											"end": 12601,
											"name": "tag",
											"source": 15,
											"value": "450"
										},
										{
											"begin": 12539,
											"end": 12601,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12529,
											"end": 12601,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 12529,
											"end": 12601,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12323,
											"end": 12611,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11529,
											"end": 12618,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 11529,
											"end": 12618,
											"name": "SWAP6",
											"source": 15
										},
										{
											"begin": 11529,
											"end": 12618,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11529,
											"end": 12618,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 11529,
											"end": 12618,
											"name": "SWAP6",
											"source": 15
										},
										{
											"begin": 11529,
											"end": 12618,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 11529,
											"end": 12618,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 11529,
											"end": 12618,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11529,
											"end": 12618,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 12624,
											"end": 12953,
											"name": "tag",
											"source": 15,
											"value": "81"
										},
										{
											"begin": 12624,
											"end": 12953,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12683,
											"end": 12689,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 12732,
											"end": 12734,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 12720,
											"end": 12729,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 12711,
											"end": 12718,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 12707,
											"end": 12730,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 12703,
											"end": 12735,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 12700,
											"end": 12819,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 12700,
											"end": 12819,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "452"
										},
										{
											"begin": 12700,
											"end": 12819,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 12738,
											"end": 12817,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "453"
										},
										{
											"begin": 12738,
											"end": 12817,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "223"
										},
										{
											"begin": 12738,
											"end": 12817,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 12738,
											"end": 12817,
											"name": "tag",
											"source": 15,
											"value": "453"
										},
										{
											"begin": 12738,
											"end": 12817,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12700,
											"end": 12819,
											"name": "tag",
											"source": 15,
											"value": "452"
										},
										{
											"begin": 12700,
											"end": 12819,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12858,
											"end": 12859,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 12883,
											"end": 12936,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "454"
										},
										{
											"begin": 12928,
											"end": 12935,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 12919,
											"end": 12925,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 12908,
											"end": 12917,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 12904,
											"end": 12926,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 12883,
											"end": 12936,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "241"
										},
										{
											"begin": 12883,
											"end": 12936,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 12883,
											"end": 12936,
											"name": "tag",
											"source": 15,
											"value": "454"
										},
										{
											"begin": 12883,
											"end": 12936,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12873,
											"end": 12936,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 12873,
											"end": 12936,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12829,
											"end": 12946,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12624,
											"end": 12953,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 12624,
											"end": 12953,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 12624,
											"end": 12953,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12624,
											"end": 12953,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12624,
											"end": 12953,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 12959,
											"end": 13433,
											"name": "tag",
											"source": 15,
											"value": "86"
										},
										{
											"begin": 12959,
											"end": 13433,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 13027,
											"end": 13033,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 13035,
											"end": 13041,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 13084,
											"end": 13086,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 13072,
											"end": 13081,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 13063,
											"end": 13070,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 13059,
											"end": 13082,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 13055,
											"end": 13087,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 13052,
											"end": 13171,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 13052,
											"end": 13171,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "456"
										},
										{
											"begin": 13052,
											"end": 13171,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 13090,
											"end": 13169,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "457"
										},
										{
											"begin": 13090,
											"end": 13169,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "223"
										},
										{
											"begin": 13090,
											"end": 13169,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 13090,
											"end": 13169,
											"name": "tag",
											"source": 15,
											"value": "457"
										},
										{
											"begin": 13090,
											"end": 13169,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 13052,
											"end": 13171,
											"name": "tag",
											"source": 15,
											"value": "456"
										},
										{
											"begin": 13052,
											"end": 13171,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 13210,
											"end": 13211,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 13235,
											"end": 13288,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "458"
										},
										{
											"begin": 13280,
											"end": 13287,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 13271,
											"end": 13277,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 13260,
											"end": 13269,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 13256,
											"end": 13278,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 13235,
											"end": 13288,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "250"
										},
										{
											"begin": 13235,
											"end": 13288,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 13235,
											"end": 13288,
											"name": "tag",
											"source": 15,
											"value": "458"
										},
										{
											"begin": 13235,
											"end": 13288,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 13225,
											"end": 13288,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 13225,
											"end": 13288,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13181,
											"end": 13298,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13337,
											"end": 13339,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 13363,
											"end": 13416,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "459"
										},
										{
											"begin": 13408,
											"end": 13415,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 13399,
											"end": 13405,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 13388,
											"end": 13397,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 13384,
											"end": 13406,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 13363,
											"end": 13416,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "250"
										},
										{
											"begin": 13363,
											"end": 13416,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 13363,
											"end": 13416,
											"name": "tag",
											"source": 15,
											"value": "459"
										},
										{
											"begin": 13363,
											"end": 13416,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 13353,
											"end": 13416,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 13353,
											"end": 13416,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13308,
											"end": 13426,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12959,
											"end": 13433,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 12959,
											"end": 13433,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12959,
											"end": 13433,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 12959,
											"end": 13433,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 12959,
											"end": 13433,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12959,
											"end": 13433,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 13439,
											"end": 13608,
											"name": "tag",
											"source": 15,
											"value": "264"
										},
										{
											"begin": 13439,
											"end": 13608,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 13523,
											"end": 13534,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 13557,
											"end": 13563,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 13552,
											"end": 13555,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 13545,
											"end": 13564,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 13597,
											"end": 13601,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 13592,
											"end": 13595,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 13588,
											"end": 13602,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 13573,
											"end": 13602,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 13573,
											"end": 13602,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13439,
											"end": 13608,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 13439,
											"end": 13608,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 13439,
											"end": 13608,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13439,
											"end": 13608,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13439,
											"end": 13608,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 13614,
											"end": 13782,
											"name": "tag",
											"source": 15,
											"value": "265"
										},
										{
											"begin": 13614,
											"end": 13782,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 13754,
											"end": 13774,
											"name": "PUSH",
											"source": 15,
											"value": "696E737566666369656E7420616D6F756E740000000000000000000000000000"
										},
										{
											"begin": 13750,
											"end": 13751,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 13742,
											"end": 13748,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 13738,
											"end": 13752,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 13731,
											"end": 13775,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 13614,
											"end": 13782,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13614,
											"end": 13782,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 13788,
											"end": 14154,
											"name": "tag",
											"source": 15,
											"value": "266"
										},
										{
											"begin": 13788,
											"end": 14154,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 13930,
											"end": 13933,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 13951,
											"end": 14018,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "463"
										},
										{
											"begin": 14015,
											"end": 14017,
											"name": "PUSH",
											"source": 15,
											"value": "12"
										},
										{
											"begin": 14010,
											"end": 14013,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 13951,
											"end": 14018,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "264"
										},
										{
											"begin": 13951,
											"end": 14018,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 13951,
											"end": 14018,
											"name": "tag",
											"source": 15,
											"value": "463"
										},
										{
											"begin": 13951,
											"end": 14018,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 13944,
											"end": 14018,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 13944,
											"end": 14018,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 14027,
											"end": 14120,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "464"
										},
										{
											"begin": 14116,
											"end": 14119,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 14027,
											"end": 14120,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "265"
										},
										{
											"begin": 14027,
											"end": 14120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 14027,
											"end": 14120,
											"name": "tag",
											"source": 15,
											"value": "464"
										},
										{
											"begin": 14027,
											"end": 14120,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 14145,
											"end": 14147,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 14140,
											"end": 14143,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 14136,
											"end": 14148,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 14129,
											"end": 14148,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 14129,
											"end": 14148,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13788,
											"end": 14154,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 13788,
											"end": 14154,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 13788,
											"end": 14154,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13788,
											"end": 14154,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 14160,
											"end": 14579,
											"name": "tag",
											"source": 15,
											"value": "100"
										},
										{
											"begin": 14160,
											"end": 14579,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 14326,
											"end": 14330,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 14364,
											"end": 14366,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 14353,
											"end": 14362,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 14349,
											"end": 14367,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 14341,
											"end": 14367,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 14341,
											"end": 14367,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 14413,
											"end": 14422,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 14407,
											"end": 14411,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 14403,
											"end": 14423,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 14399,
											"end": 14400,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 14388,
											"end": 14397,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 14384,
											"end": 14401,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 14377,
											"end": 14424,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 14441,
											"end": 14572,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "466"
										},
										{
											"begin": 14567,
											"end": 14571,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 14441,
											"end": 14572,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "266"
										},
										{
											"begin": 14441,
											"end": 14572,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 14441,
											"end": 14572,
											"name": "tag",
											"source": 15,
											"value": "466"
										},
										{
											"begin": 14441,
											"end": 14572,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 14433,
											"end": 14572,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 14433,
											"end": 14572,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 14160,
											"end": 14579,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 14160,
											"end": 14579,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 14160,
											"end": 14579,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 14160,
											"end": 14579,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 14585,
											"end": 14732,
											"name": "tag",
											"source": 15,
											"value": "267"
										},
										{
											"begin": 14585,
											"end": 14732,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 14686,
											"end": 14697,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 14723,
											"end": 14726,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 14708,
											"end": 14726,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 14708,
											"end": 14726,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 14585,
											"end": 14732,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 14585,
											"end": 14732,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 14585,
											"end": 14732,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 14585,
											"end": 14732,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 14585,
											"end": 14732,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 14738,
											"end": 14852,
											"name": "tag",
											"source": 15,
											"value": "268"
										},
										{
											"begin": 14738,
											"end": 14852,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 14738,
											"end": 14852,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 14738,
											"end": 14852,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 14858,
											"end": 15256,
											"name": "tag",
											"source": 15,
											"value": "269"
										},
										{
											"begin": 14858,
											"end": 15256,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 15017,
											"end": 15020,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 15038,
											"end": 15121,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "470"
										},
										{
											"begin": 15119,
											"end": 15120,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 15114,
											"end": 15117,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 15038,
											"end": 15121,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "267"
										},
										{
											"begin": 15038,
											"end": 15121,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 15038,
											"end": 15121,
											"name": "tag",
											"source": 15,
											"value": "470"
										},
										{
											"begin": 15038,
											"end": 15121,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 15031,
											"end": 15121,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 15031,
											"end": 15121,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 15130,
											"end": 15223,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "471"
										},
										{
											"begin": 15219,
											"end": 15222,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 15130,
											"end": 15223,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "268"
										},
										{
											"begin": 15130,
											"end": 15223,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 15130,
											"end": 15223,
											"name": "tag",
											"source": 15,
											"value": "471"
										},
										{
											"begin": 15130,
											"end": 15223,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 15248,
											"end": 15249,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 15243,
											"end": 15246,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 15239,
											"end": 15250,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 15232,
											"end": 15250,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 15232,
											"end": 15250,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 14858,
											"end": 15256,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 14858,
											"end": 15256,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 14858,
											"end": 15256,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 14858,
											"end": 15256,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 15262,
											"end": 15641,
											"name": "tag",
											"source": 15,
											"value": "102"
										},
										{
											"begin": 15262,
											"end": 15641,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 15446,
											"end": 15449,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 15468,
											"end": 15615,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "473"
										},
										{
											"begin": 15611,
											"end": 15614,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 15468,
											"end": 15615,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "269"
										},
										{
											"begin": 15468,
											"end": 15615,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 15468,
											"end": 15615,
											"name": "tag",
											"source": 15,
											"value": "473"
										},
										{
											"begin": 15468,
											"end": 15615,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 15461,
											"end": 15615,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 15461,
											"end": 15615,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 15632,
											"end": 15635,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 15625,
											"end": 15635,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 15625,
											"end": 15635,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 15262,
											"end": 15641,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 15262,
											"end": 15641,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 15262,
											"end": 15641,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 15262,
											"end": 15641,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 15647,
											"end": 15821,
											"name": "tag",
											"source": 15,
											"value": "270"
										},
										{
											"begin": 15647,
											"end": 15821,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 15787,
											"end": 15813,
											"name": "PUSH",
											"source": 15,
											"value": "756E61626C6520746F207769746864726177206D617469630000000000000000"
										},
										{
											"begin": 15783,
											"end": 15784,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 15775,
											"end": 15781,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 15771,
											"end": 15785,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 15764,
											"end": 15814,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 15647,
											"end": 15821,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 15647,
											"end": 15821,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 15827,
											"end": 16193,
											"name": "tag",
											"source": 15,
											"value": "271"
										},
										{
											"begin": 15827,
											"end": 16193,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 15969,
											"end": 15972,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 15990,
											"end": 16057,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "476"
										},
										{
											"begin": 16054,
											"end": 16056,
											"name": "PUSH",
											"source": 15,
											"value": "18"
										},
										{
											"begin": 16049,
											"end": 16052,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 15990,
											"end": 16057,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "264"
										},
										{
											"begin": 15990,
											"end": 16057,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 15990,
											"end": 16057,
											"name": "tag",
											"source": 15,
											"value": "476"
										},
										{
											"begin": 15990,
											"end": 16057,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 15983,
											"end": 16057,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 15983,
											"end": 16057,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 16066,
											"end": 16159,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "477"
										},
										{
											"begin": 16155,
											"end": 16158,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 16066,
											"end": 16159,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "270"
										},
										{
											"begin": 16066,
											"end": 16159,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 16066,
											"end": 16159,
											"name": "tag",
											"source": 15,
											"value": "477"
										},
										{
											"begin": 16066,
											"end": 16159,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 16184,
											"end": 16186,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 16179,
											"end": 16182,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 16175,
											"end": 16187,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 16168,
											"end": 16187,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 16168,
											"end": 16187,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 15827,
											"end": 16193,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 15827,
											"end": 16193,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 15827,
											"end": 16193,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 15827,
											"end": 16193,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 16199,
											"end": 16618,
											"name": "tag",
											"source": 15,
											"value": "108"
										},
										{
											"begin": 16199,
											"end": 16618,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 16365,
											"end": 16369,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 16403,
											"end": 16405,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 16392,
											"end": 16401,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 16388,
											"end": 16406,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 16380,
											"end": 16406,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 16380,
											"end": 16406,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 16452,
											"end": 16461,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 16446,
											"end": 16450,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 16442,
											"end": 16462,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 16438,
											"end": 16439,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 16427,
											"end": 16436,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 16423,
											"end": 16440,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 16416,
											"end": 16463,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 16480,
											"end": 16611,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "479"
										},
										{
											"begin": 16606,
											"end": 16610,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 16480,
											"end": 16611,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "271"
										},
										{
											"begin": 16480,
											"end": 16611,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 16480,
											"end": 16611,
											"name": "tag",
											"source": 15,
											"value": "479"
										},
										{
											"begin": 16480,
											"end": 16611,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 16472,
											"end": 16611,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 16472,
											"end": 16611,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 16199,
											"end": 16618,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 16199,
											"end": 16618,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 16199,
											"end": 16618,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 16199,
											"end": 16618,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 16624,
											"end": 16956,
											"name": "tag",
											"source": 15,
											"value": "110"
										},
										{
											"begin": 16624,
											"end": 16956,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 16745,
											"end": 16749,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 16783,
											"end": 16785,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 16772,
											"end": 16781,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 16768,
											"end": 16786,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 16760,
											"end": 16786,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 16760,
											"end": 16786,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 16796,
											"end": 16867,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "481"
										},
										{
											"begin": 16864,
											"end": 16865,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 16853,
											"end": 16862,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 16849,
											"end": 16866,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 16840,
											"end": 16846,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 16796,
											"end": 16867,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "239"
										},
										{
											"begin": 16796,
											"end": 16867,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 16796,
											"end": 16867,
											"name": "tag",
											"source": 15,
											"value": "481"
										},
										{
											"begin": 16796,
											"end": 16867,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 16877,
											"end": 16949,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "482"
										},
										{
											"begin": 16945,
											"end": 16947,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 16934,
											"end": 16943,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 16930,
											"end": 16948,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 16921,
											"end": 16927,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 16877,
											"end": 16949,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "231"
										},
										{
											"begin": 16877,
											"end": 16949,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 16877,
											"end": 16949,
											"name": "tag",
											"source": 15,
											"value": "482"
										},
										{
											"begin": 16877,
											"end": 16949,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 16624,
											"end": 16956,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 16624,
											"end": 16956,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 16624,
											"end": 16956,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 16624,
											"end": 16956,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 16624,
											"end": 16956,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 16624,
											"end": 16956,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 16962,
											"end": 17132,
											"name": "tag",
											"source": 15,
											"value": "272"
										},
										{
											"begin": 16962,
											"end": 17132,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 17102,
											"end": 17124,
											"name": "PUSH",
											"source": 15,
											"value": "7072696365206973206E6F742073657420796574000000000000000000000000"
										},
										{
											"begin": 17098,
											"end": 17099,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 17090,
											"end": 17096,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 17086,
											"end": 17100,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 17079,
											"end": 17125,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 16962,
											"end": 17132,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 16962,
											"end": 17132,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 17138,
											"end": 17504,
											"name": "tag",
											"source": 15,
											"value": "273"
										},
										{
											"begin": 17138,
											"end": 17504,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 17280,
											"end": 17283,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 17301,
											"end": 17368,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "485"
										},
										{
											"begin": 17365,
											"end": 17367,
											"name": "PUSH",
											"source": 15,
											"value": "14"
										},
										{
											"begin": 17360,
											"end": 17363,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 17301,
											"end": 17368,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "264"
										},
										{
											"begin": 17301,
											"end": 17368,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 17301,
											"end": 17368,
											"name": "tag",
											"source": 15,
											"value": "485"
										},
										{
											"begin": 17301,
											"end": 17368,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 17294,
											"end": 17368,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 17294,
											"end": 17368,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 17377,
											"end": 17470,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "486"
										},
										{
											"begin": 17466,
											"end": 17469,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 17377,
											"end": 17470,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "272"
										},
										{
											"begin": 17377,
											"end": 17470,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 17377,
											"end": 17470,
											"name": "tag",
											"source": 15,
											"value": "486"
										},
										{
											"begin": 17377,
											"end": 17470,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 17495,
											"end": 17497,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 17490,
											"end": 17493,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 17486,
											"end": 17498,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 17479,
											"end": 17498,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 17479,
											"end": 17498,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 17138,
											"end": 17504,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 17138,
											"end": 17504,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 17138,
											"end": 17504,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 17138,
											"end": 17504,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 17510,
											"end": 17929,
											"name": "tag",
											"source": 15,
											"value": "121"
										},
										{
											"begin": 17510,
											"end": 17929,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 17676,
											"end": 17680,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 17714,
											"end": 17716,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 17703,
											"end": 17712,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 17699,
											"end": 17717,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 17691,
											"end": 17717,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 17691,
											"end": 17717,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 17763,
											"end": 17772,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 17757,
											"end": 17761,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 17753,
											"end": 17773,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 17749,
											"end": 17750,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 17738,
											"end": 17747,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 17734,
											"end": 17751,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 17727,
											"end": 17774,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 17791,
											"end": 17922,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "488"
										},
										{
											"begin": 17917,
											"end": 17921,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 17791,
											"end": 17922,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "273"
										},
										{
											"begin": 17791,
											"end": 17922,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 17791,
											"end": 17922,
											"name": "tag",
											"source": 15,
											"value": "488"
										},
										{
											"begin": 17791,
											"end": 17922,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 17783,
											"end": 17922,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 17783,
											"end": 17922,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 17510,
											"end": 17929,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 17510,
											"end": 17929,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 17510,
											"end": 17929,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 17510,
											"end": 17929,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 17935,
											"end": 18115,
											"name": "tag",
											"source": 15,
											"value": "274"
										},
										{
											"begin": 17935,
											"end": 18115,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 17983,
											"end": 18060,
											"name": "PUSH",
											"source": 15,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17980,
											"end": 17981,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 17973,
											"end": 18061,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 18080,
											"end": 18084,
											"name": "PUSH",
											"source": 15,
											"value": "11"
										},
										{
											"begin": 18077,
											"end": 18078,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 18070,
											"end": 18085,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 18104,
											"end": 18108,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 18101,
											"end": 18102,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 18094,
											"end": 18109,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 18121,
											"end": 18531,
											"name": "tag",
											"source": 15,
											"value": "123"
										},
										{
											"begin": 18121,
											"end": 18531,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 18161,
											"end": 18168,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 18184,
											"end": 18204,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "491"
										},
										{
											"begin": 18202,
											"end": 18203,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 18184,
											"end": 18204,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "230"
										},
										{
											"begin": 18184,
											"end": 18204,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 18184,
											"end": 18204,
											"name": "tag",
											"source": 15,
											"value": "491"
										},
										{
											"begin": 18184,
											"end": 18204,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 18179,
											"end": 18204,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 18179,
											"end": 18204,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 18218,
											"end": 18238,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "492"
										},
										{
											"begin": 18236,
											"end": 18237,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 18218,
											"end": 18238,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "230"
										},
										{
											"begin": 18218,
											"end": 18238,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 18218,
											"end": 18238,
											"name": "tag",
											"source": 15,
											"value": "492"
										},
										{
											"begin": 18218,
											"end": 18238,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 18213,
											"end": 18238,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 18213,
											"end": 18238,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 18273,
											"end": 18274,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 18270,
											"end": 18271,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 18266,
											"end": 18275,
											"name": "MUL",
											"source": 15
										},
										{
											"begin": 18295,
											"end": 18325,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "493"
										},
										{
											"begin": 18313,
											"end": 18324,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 18295,
											"end": 18325,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "230"
										},
										{
											"begin": 18295,
											"end": 18325,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 18295,
											"end": 18325,
											"name": "tag",
											"source": 15,
											"value": "493"
										},
										{
											"begin": 18295,
											"end": 18325,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 18284,
											"end": 18325,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 18284,
											"end": 18325,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 18474,
											"end": 18475,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 18465,
											"end": 18472,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 18461,
											"end": 18476,
											"name": "DIV",
											"source": 15
										},
										{
											"begin": 18458,
											"end": 18459,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 18455,
											"end": 18477,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 18435,
											"end": 18436,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 18428,
											"end": 18437,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 18408,
											"end": 18491,
											"name": "OR",
											"source": 15
										},
										{
											"begin": 18385,
											"end": 18524,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "494"
										},
										{
											"begin": 18385,
											"end": 18524,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 18504,
											"end": 18522,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "495"
										},
										{
											"begin": 18504,
											"end": 18522,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "274"
										},
										{
											"begin": 18504,
											"end": 18522,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 18504,
											"end": 18522,
											"name": "tag",
											"source": 15,
											"value": "495"
										},
										{
											"begin": 18504,
											"end": 18522,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 18385,
											"end": 18524,
											"name": "tag",
											"source": 15,
											"value": "494"
										},
										{
											"begin": 18385,
											"end": 18524,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 18169,
											"end": 18531,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 18121,
											"end": 18531,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 18121,
											"end": 18531,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 18121,
											"end": 18531,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 18121,
											"end": 18531,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 18121,
											"end": 18531,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 18537,
											"end": 18704,
											"name": "tag",
											"source": 15,
											"value": "275"
										},
										{
											"begin": 18537,
											"end": 18704,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 18677,
											"end": 18696,
											"name": "PUSH",
											"source": 15,
											"value": "616D6F756E74206E6F7420656E6F756768000000000000000000000000000000"
										},
										{
											"begin": 18673,
											"end": 18674,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 18665,
											"end": 18671,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 18661,
											"end": 18675,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 18654,
											"end": 18697,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 18537,
											"end": 18704,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 18537,
											"end": 18704,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 18710,
											"end": 19076,
											"name": "tag",
											"source": 15,
											"value": "276"
										},
										{
											"begin": 18710,
											"end": 19076,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 18852,
											"end": 18855,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 18873,
											"end": 18940,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "498"
										},
										{
											"begin": 18937,
											"end": 18939,
											"name": "PUSH",
											"source": 15,
											"value": "11"
										},
										{
											"begin": 18932,
											"end": 18935,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 18873,
											"end": 18940,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "264"
										},
										{
											"begin": 18873,
											"end": 18940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 18873,
											"end": 18940,
											"name": "tag",
											"source": 15,
											"value": "498"
										},
										{
											"begin": 18873,
											"end": 18940,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 18866,
											"end": 18940,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 18866,
											"end": 18940,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 18949,
											"end": 19042,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "499"
										},
										{
											"begin": 19038,
											"end": 19041,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 18949,
											"end": 19042,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "275"
										},
										{
											"begin": 18949,
											"end": 19042,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 18949,
											"end": 19042,
											"name": "tag",
											"source": 15,
											"value": "499"
										},
										{
											"begin": 18949,
											"end": 19042,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 19067,
											"end": 19069,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 19062,
											"end": 19065,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 19058,
											"end": 19070,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 19051,
											"end": 19070,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 19051,
											"end": 19070,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 18710,
											"end": 19076,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 18710,
											"end": 19076,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 18710,
											"end": 19076,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 18710,
											"end": 19076,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 19082,
											"end": 19501,
											"name": "tag",
											"source": 15,
											"value": "126"
										},
										{
											"begin": 19082,
											"end": 19501,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 19248,
											"end": 19252,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 19286,
											"end": 19288,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 19275,
											"end": 19284,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 19271,
											"end": 19289,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 19263,
											"end": 19289,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 19263,
											"end": 19289,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 19335,
											"end": 19344,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 19329,
											"end": 19333,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 19325,
											"end": 19345,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 19321,
											"end": 19322,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 19310,
											"end": 19319,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 19306,
											"end": 19323,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 19299,
											"end": 19346,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 19363,
											"end": 19494,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "501"
										},
										{
											"begin": 19489,
											"end": 19493,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 19363,
											"end": 19494,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "276"
										},
										{
											"begin": 19363,
											"end": 19494,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 19363,
											"end": 19494,
											"name": "tag",
											"source": 15,
											"value": "501"
										},
										{
											"begin": 19363,
											"end": 19494,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 19355,
											"end": 19494,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 19355,
											"end": 19494,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 19082,
											"end": 19501,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 19082,
											"end": 19501,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 19082,
											"end": 19501,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 19082,
											"end": 19501,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 19507,
											"end": 19650,
											"name": "tag",
											"source": 15,
											"value": "277"
										},
										{
											"begin": 19507,
											"end": 19650,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 19564,
											"end": 19569,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 19595,
											"end": 19601,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 19589,
											"end": 19602,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 19580,
											"end": 19602,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 19580,
											"end": 19602,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 19611,
											"end": 19644,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "503"
										},
										{
											"begin": 19638,
											"end": 19643,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 19611,
											"end": 19644,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "249"
										},
										{
											"begin": 19611,
											"end": 19644,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 19611,
											"end": 19644,
											"name": "tag",
											"source": 15,
											"value": "503"
										},
										{
											"begin": 19611,
											"end": 19644,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 19507,
											"end": 19650,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 19507,
											"end": 19650,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 19507,
											"end": 19650,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 19507,
											"end": 19650,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 19507,
											"end": 19650,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 19656,
											"end": 20007,
											"name": "tag",
											"source": 15,
											"value": "131"
										},
										{
											"begin": 19656,
											"end": 20007,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 19726,
											"end": 19732,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 19775,
											"end": 19777,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 19763,
											"end": 19772,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 19754,
											"end": 19761,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 19750,
											"end": 19773,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 19746,
											"end": 19778,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 19743,
											"end": 19862,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 19743,
											"end": 19862,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "505"
										},
										{
											"begin": 19743,
											"end": 19862,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 19781,
											"end": 19860,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "506"
										},
										{
											"begin": 19781,
											"end": 19860,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "223"
										},
										{
											"begin": 19781,
											"end": 19860,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 19781,
											"end": 19860,
											"name": "tag",
											"source": 15,
											"value": "506"
										},
										{
											"begin": 19781,
											"end": 19860,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 19743,
											"end": 19862,
											"name": "tag",
											"source": 15,
											"value": "505"
										},
										{
											"begin": 19743,
											"end": 19862,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 19901,
											"end": 19902,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 19926,
											"end": 19990,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "507"
										},
										{
											"begin": 19982,
											"end": 19989,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 19973,
											"end": 19979,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 19962,
											"end": 19971,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 19958,
											"end": 19980,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 19926,
											"end": 19990,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "277"
										},
										{
											"begin": 19926,
											"end": 19990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 19926,
											"end": 19990,
											"name": "tag",
											"source": 15,
											"value": "507"
										},
										{
											"begin": 19926,
											"end": 19990,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 19916,
											"end": 19990,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 19916,
											"end": 19990,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 19872,
											"end": 20000,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 19656,
											"end": 20007,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 19656,
											"end": 20007,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 19656,
											"end": 20007,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 19656,
											"end": 20007,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 19656,
											"end": 20007,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 20013,
											"end": 20184,
											"name": "tag",
											"source": 15,
											"value": "278"
										},
										{
											"begin": 20013,
											"end": 20184,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 20153,
											"end": 20176,
											"name": "PUSH",
											"source": 15,
											"value": "62616C616E6365206973206E6F7420656E6F7567680000000000000000000000"
										},
										{
											"begin": 20149,
											"end": 20150,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 20141,
											"end": 20147,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 20137,
											"end": 20151,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 20130,
											"end": 20177,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 20013,
											"end": 20184,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 20013,
											"end": 20184,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 20190,
											"end": 20556,
											"name": "tag",
											"source": 15,
											"value": "279"
										},
										{
											"begin": 20190,
											"end": 20556,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 20332,
											"end": 20335,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 20353,
											"end": 20420,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "510"
										},
										{
											"begin": 20417,
											"end": 20419,
											"name": "PUSH",
											"source": 15,
											"value": "15"
										},
										{
											"begin": 20412,
											"end": 20415,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 20353,
											"end": 20420,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "264"
										},
										{
											"begin": 20353,
											"end": 20420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 20353,
											"end": 20420,
											"name": "tag",
											"source": 15,
											"value": "510"
										},
										{
											"begin": 20353,
											"end": 20420,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 20346,
											"end": 20420,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 20346,
											"end": 20420,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 20429,
											"end": 20522,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "511"
										},
										{
											"begin": 20518,
											"end": 20521,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 20429,
											"end": 20522,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "278"
										},
										{
											"begin": 20429,
											"end": 20522,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 20429,
											"end": 20522,
											"name": "tag",
											"source": 15,
											"value": "511"
										},
										{
											"begin": 20429,
											"end": 20522,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 20547,
											"end": 20549,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 20542,
											"end": 20545,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 20538,
											"end": 20550,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 20531,
											"end": 20550,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 20531,
											"end": 20550,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 20190,
											"end": 20556,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 20190,
											"end": 20556,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 20190,
											"end": 20556,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 20190,
											"end": 20556,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 20562,
											"end": 20981,
											"name": "tag",
											"source": 15,
											"value": "134"
										},
										{
											"begin": 20562,
											"end": 20981,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 20728,
											"end": 20732,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 20766,
											"end": 20768,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 20755,
											"end": 20764,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 20751,
											"end": 20769,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 20743,
											"end": 20769,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 20743,
											"end": 20769,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 20815,
											"end": 20824,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 20809,
											"end": 20813,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 20805,
											"end": 20825,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 20801,
											"end": 20802,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 20790,
											"end": 20799,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 20786,
											"end": 20803,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 20779,
											"end": 20826,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 20843,
											"end": 20974,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "513"
										},
										{
											"begin": 20969,
											"end": 20973,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 20843,
											"end": 20974,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "279"
										},
										{
											"begin": 20843,
											"end": 20974,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 20843,
											"end": 20974,
											"name": "tag",
											"source": 15,
											"value": "513"
										},
										{
											"begin": 20843,
											"end": 20974,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 20835,
											"end": 20974,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 20835,
											"end": 20974,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 20562,
											"end": 20981,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 20562,
											"end": 20981,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 20562,
											"end": 20981,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 20562,
											"end": 20981,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 20987,
											"end": 21155,
											"name": "tag",
											"source": 15,
											"value": "280"
										},
										{
											"begin": 20987,
											"end": 21155,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 21127,
											"end": 21147,
											"name": "PUSH",
											"source": 15,
											"value": "696E73756666696369656E7420746F6B656E0000000000000000000000000000"
										},
										{
											"begin": 21123,
											"end": 21124,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 21115,
											"end": 21121,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 21111,
											"end": 21125,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 21104,
											"end": 21148,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 20987,
											"end": 21155,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 20987,
											"end": 21155,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 21161,
											"end": 21527,
											"name": "tag",
											"source": 15,
											"value": "281"
										},
										{
											"begin": 21161,
											"end": 21527,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 21303,
											"end": 21306,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 21324,
											"end": 21391,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "516"
										},
										{
											"begin": 21388,
											"end": 21390,
											"name": "PUSH",
											"source": 15,
											"value": "12"
										},
										{
											"begin": 21383,
											"end": 21386,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 21324,
											"end": 21391,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "264"
										},
										{
											"begin": 21324,
											"end": 21391,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 21324,
											"end": 21391,
											"name": "tag",
											"source": 15,
											"value": "516"
										},
										{
											"begin": 21324,
											"end": 21391,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 21317,
											"end": 21391,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 21317,
											"end": 21391,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 21400,
											"end": 21493,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "517"
										},
										{
											"begin": 21489,
											"end": 21492,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 21400,
											"end": 21493,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "280"
										},
										{
											"begin": 21400,
											"end": 21493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 21400,
											"end": 21493,
											"name": "tag",
											"source": 15,
											"value": "517"
										},
										{
											"begin": 21400,
											"end": 21493,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 21518,
											"end": 21520,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 21513,
											"end": 21516,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 21509,
											"end": 21521,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 21502,
											"end": 21521,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 21502,
											"end": 21521,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 21161,
											"end": 21527,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 21161,
											"end": 21527,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 21161,
											"end": 21527,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 21161,
											"end": 21527,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 21533,
											"end": 21952,
											"name": "tag",
											"source": 15,
											"value": "141"
										},
										{
											"begin": 21533,
											"end": 21952,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 21699,
											"end": 21703,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 21737,
											"end": 21739,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 21726,
											"end": 21735,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 21722,
											"end": 21740,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 21714,
											"end": 21740,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 21714,
											"end": 21740,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 21786,
											"end": 21795,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 21780,
											"end": 21784,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 21776,
											"end": 21796,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 21772,
											"end": 21773,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 21761,
											"end": 21770,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 21757,
											"end": 21774,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 21750,
											"end": 21797,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 21814,
											"end": 21945,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "519"
										},
										{
											"begin": 21940,
											"end": 21944,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 21814,
											"end": 21945,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "281"
										},
										{
											"begin": 21814,
											"end": 21945,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 21814,
											"end": 21945,
											"name": "tag",
											"source": 15,
											"value": "519"
										},
										{
											"begin": 21814,
											"end": 21945,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 21806,
											"end": 21945,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 21806,
											"end": 21945,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 21533,
											"end": 21952,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 21533,
											"end": 21952,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 21533,
											"end": 21952,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 21533,
											"end": 21952,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 21958,
											"end": 22290,
											"name": "tag",
											"source": 15,
											"value": "143"
										},
										{
											"begin": 21958,
											"end": 22290,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 22079,
											"end": 22083,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 22117,
											"end": 22119,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 22106,
											"end": 22115,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 22102,
											"end": 22120,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 22094,
											"end": 22120,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 22094,
											"end": 22120,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 22130,
											"end": 22201,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "521"
										},
										{
											"begin": 22198,
											"end": 22199,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 22187,
											"end": 22196,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 22183,
											"end": 22200,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 22174,
											"end": 22180,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 22130,
											"end": 22201,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "239"
										},
										{
											"begin": 22130,
											"end": 22201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 22130,
											"end": 22201,
											"name": "tag",
											"source": 15,
											"value": "521"
										},
										{
											"begin": 22130,
											"end": 22201,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 22211,
											"end": 22283,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "522"
										},
										{
											"begin": 22279,
											"end": 22281,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 22268,
											"end": 22277,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 22264,
											"end": 22282,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 22255,
											"end": 22261,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 22211,
											"end": 22283,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "239"
										},
										{
											"begin": 22211,
											"end": 22283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 22211,
											"end": 22283,
											"name": "tag",
											"source": 15,
											"value": "522"
										},
										{
											"begin": 22211,
											"end": 22283,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 21958,
											"end": 22290,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 21958,
											"end": 22290,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 21958,
											"end": 22290,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 21958,
											"end": 22290,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 21958,
											"end": 22290,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 21958,
											"end": 22290,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 22296,
											"end": 22473,
											"name": "tag",
											"source": 15,
											"value": "282"
										},
										{
											"begin": 22296,
											"end": 22473,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 22436,
											"end": 22465,
											"name": "PUSH",
											"source": 15,
											"value": "696E73756666696369656E7420746F6B656E20617070726F76616C0000000000"
										},
										{
											"begin": 22432,
											"end": 22433,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 22424,
											"end": 22430,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 22420,
											"end": 22434,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 22413,
											"end": 22466,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 22296,
											"end": 22473,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 22296,
											"end": 22473,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 22479,
											"end": 22845,
											"name": "tag",
											"source": 15,
											"value": "283"
										},
										{
											"begin": 22479,
											"end": 22845,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 22621,
											"end": 22624,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 22642,
											"end": 22709,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "525"
										},
										{
											"begin": 22706,
											"end": 22708,
											"name": "PUSH",
											"source": 15,
											"value": "1B"
										},
										{
											"begin": 22701,
											"end": 22704,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 22642,
											"end": 22709,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "264"
										},
										{
											"begin": 22642,
											"end": 22709,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 22642,
											"end": 22709,
											"name": "tag",
											"source": 15,
											"value": "525"
										},
										{
											"begin": 22642,
											"end": 22709,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 22635,
											"end": 22709,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 22635,
											"end": 22709,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 22718,
											"end": 22811,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "526"
										},
										{
											"begin": 22807,
											"end": 22810,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 22718,
											"end": 22811,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "282"
										},
										{
											"begin": 22718,
											"end": 22811,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 22718,
											"end": 22811,
											"name": "tag",
											"source": 15,
											"value": "526"
										},
										{
											"begin": 22718,
											"end": 22811,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 22836,
											"end": 22838,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 22831,
											"end": 22834,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 22827,
											"end": 22839,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 22820,
											"end": 22839,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 22820,
											"end": 22839,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 22479,
											"end": 22845,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 22479,
											"end": 22845,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 22479,
											"end": 22845,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 22479,
											"end": 22845,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 22851,
											"end": 23270,
											"name": "tag",
											"source": 15,
											"value": "149"
										},
										{
											"begin": 22851,
											"end": 23270,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 23017,
											"end": 23021,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 23055,
											"end": 23057,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 23044,
											"end": 23053,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 23040,
											"end": 23058,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 23032,
											"end": 23058,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 23032,
											"end": 23058,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 23104,
											"end": 23113,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 23098,
											"end": 23102,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 23094,
											"end": 23114,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 23090,
											"end": 23091,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 23079,
											"end": 23088,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 23075,
											"end": 23092,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 23068,
											"end": 23115,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 23132,
											"end": 23263,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "528"
										},
										{
											"begin": 23258,
											"end": 23262,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 23132,
											"end": 23263,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "283"
										},
										{
											"begin": 23132,
											"end": 23263,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 23132,
											"end": 23263,
											"name": "tag",
											"source": 15,
											"value": "528"
										},
										{
											"begin": 23132,
											"end": 23263,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 23124,
											"end": 23263,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 23124,
											"end": 23263,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 22851,
											"end": 23270,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 22851,
											"end": 23270,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 22851,
											"end": 23270,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 22851,
											"end": 23270,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 23276,
											"end": 23414,
											"name": "tag",
											"source": 15,
											"value": "284"
										},
										{
											"begin": 23276,
											"end": 23414,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 23324,
											"end": 23333,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 23357,
											"end": 23408,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "530"
										},
										{
											"begin": 23375,
											"end": 23407,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "531"
										},
										{
											"begin": 23384,
											"end": 23406,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "532"
										},
										{
											"begin": 23400,
											"end": 23405,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 23384,
											"end": 23406,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "259"
										},
										{
											"begin": 23384,
											"end": 23406,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 23384,
											"end": 23406,
											"name": "tag",
											"source": 15,
											"value": "532"
										},
										{
											"begin": 23384,
											"end": 23406,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 23375,
											"end": 23407,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "233"
										},
										{
											"begin": 23375,
											"end": 23407,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 23375,
											"end": 23407,
											"name": "tag",
											"source": 15,
											"value": "531"
										},
										{
											"begin": 23375,
											"end": 23407,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 23357,
											"end": 23408,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "230"
										},
										{
											"begin": 23357,
											"end": 23408,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 23357,
											"end": 23408,
											"name": "tag",
											"source": 15,
											"value": "530"
										},
										{
											"begin": 23357,
											"end": 23408,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 23344,
											"end": 23408,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 23344,
											"end": 23408,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 23276,
											"end": 23414,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 23276,
											"end": 23414,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 23276,
											"end": 23414,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 23276,
											"end": 23414,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 23420,
											"end": 23547,
											"name": "tag",
											"source": 15,
											"value": "285"
										},
										{
											"begin": 23420,
											"end": 23547,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 23505,
											"end": 23540,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "534"
										},
										{
											"begin": 23534,
											"end": 23539,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 23505,
											"end": 23540,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "284"
										},
										{
											"begin": 23505,
											"end": 23540,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 23505,
											"end": 23540,
											"name": "tag",
											"source": 15,
											"value": "534"
										},
										{
											"begin": 23505,
											"end": 23540,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 23500,
											"end": 23503,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 23493,
											"end": 23541,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 23420,
											"end": 23547,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 23420,
											"end": 23547,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 23420,
											"end": 23547,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 23553,
											"end": 23721,
											"name": "tag",
											"source": 15,
											"value": "286"
										},
										{
											"begin": 23553,
											"end": 23721,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 23636,
											"end": 23647,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 23670,
											"end": 23676,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 23665,
											"end": 23668,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 23658,
											"end": 23677,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 23710,
											"end": 23714,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 23705,
											"end": 23708,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 23701,
											"end": 23715,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 23686,
											"end": 23715,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 23686,
											"end": 23715,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 23553,
											"end": 23721,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 23553,
											"end": 23721,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 23553,
											"end": 23721,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 23553,
											"end": 23721,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 23553,
											"end": 23721,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 23727,
											"end": 24089,
											"name": "tag",
											"source": 15,
											"value": "287"
										},
										{
											"begin": 23727,
											"end": 24089,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 23868,
											"end": 23871,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 23889,
											"end": 23954,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "537"
										},
										{
											"begin": 23952,
											"end": 23953,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 23947,
											"end": 23950,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 23889,
											"end": 23954,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "286"
										},
										{
											"begin": 23889,
											"end": 23954,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 23889,
											"end": 23954,
											"name": "tag",
											"source": 15,
											"value": "537"
										},
										{
											"begin": 23889,
											"end": 23954,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 23882,
											"end": 23954,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 23882,
											"end": 23954,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 23963,
											"end": 24056,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "538"
										},
										{
											"begin": 24052,
											"end": 24055,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 23963,
											"end": 24056,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "268"
										},
										{
											"begin": 23963,
											"end": 24056,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 23963,
											"end": 24056,
											"name": "tag",
											"source": 15,
											"value": "538"
										},
										{
											"begin": 23963,
											"end": 24056,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 24081,
											"end": 24082,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 24076,
											"end": 24079,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 24072,
											"end": 24083,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 24065,
											"end": 24083,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 24065,
											"end": 24083,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 23727,
											"end": 24089,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 23727,
											"end": 24089,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 23727,
											"end": 24089,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 23727,
											"end": 24089,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 24095,
											"end": 24950,
											"name": "tag",
											"source": 15,
											"value": "154"
										},
										{
											"begin": 24095,
											"end": 24950,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 24370,
											"end": 24374,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 24408,
											"end": 24411,
											"name": "PUSH",
											"source": 15,
											"value": "A0"
										},
										{
											"begin": 24397,
											"end": 24406,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 24393,
											"end": 24412,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 24385,
											"end": 24412,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 24385,
											"end": 24412,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 24422,
											"end": 24493,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "540"
										},
										{
											"begin": 24490,
											"end": 24491,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 24479,
											"end": 24488,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 24475,
											"end": 24492,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 24466,
											"end": 24472,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 24422,
											"end": 24493,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "239"
										},
										{
											"begin": 24422,
											"end": 24493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 24422,
											"end": 24493,
											"name": "tag",
											"source": 15,
											"value": "540"
										},
										{
											"begin": 24422,
											"end": 24493,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 24503,
											"end": 24575,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "541"
										},
										{
											"begin": 24571,
											"end": 24573,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 24560,
											"end": 24569,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 24556,
											"end": 24574,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 24547,
											"end": 24553,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 24503,
											"end": 24575,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "239"
										},
										{
											"begin": 24503,
											"end": 24575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 24503,
											"end": 24575,
											"name": "tag",
											"source": 15,
											"value": "541"
										},
										{
											"begin": 24503,
											"end": 24575,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 24585,
											"end": 24657,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "542"
										},
										{
											"begin": 24653,
											"end": 24655,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 24642,
											"end": 24651,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 24638,
											"end": 24656,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 24629,
											"end": 24635,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 24585,
											"end": 24657,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "231"
										},
										{
											"begin": 24585,
											"end": 24657,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 24585,
											"end": 24657,
											"name": "tag",
											"source": 15,
											"value": "542"
										},
										{
											"begin": 24585,
											"end": 24657,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 24667,
											"end": 24737,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "543"
										},
										{
											"begin": 24733,
											"end": 24735,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 24722,
											"end": 24731,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 24718,
											"end": 24736,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 24709,
											"end": 24715,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 24667,
											"end": 24737,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "285"
										},
										{
											"begin": 24667,
											"end": 24737,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 24667,
											"end": 24737,
											"name": "tag",
											"source": 15,
											"value": "543"
										},
										{
											"begin": 24667,
											"end": 24737,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 24785,
											"end": 24794,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 24779,
											"end": 24783,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 24775,
											"end": 24795,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 24769,
											"end": 24772,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 24758,
											"end": 24767,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 24754,
											"end": 24773,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 24747,
											"end": 24796,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 24813,
											"end": 24943,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "544"
										},
										{
											"begin": 24938,
											"end": 24942,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 24813,
											"end": 24943,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "287"
										},
										{
											"begin": 24813,
											"end": 24943,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 24813,
											"end": 24943,
											"name": "tag",
											"source": 15,
											"value": "544"
										},
										{
											"begin": 24813,
											"end": 24943,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 24805,
											"end": 24943,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 24805,
											"end": 24943,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 24095,
											"end": 24950,
											"name": "SWAP6",
											"source": 15
										},
										{
											"begin": 24095,
											"end": 24950,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 24095,
											"end": 24950,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 24095,
											"end": 24950,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 24095,
											"end": 24950,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 24095,
											"end": 24950,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 24095,
											"end": 24950,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 24095,
											"end": 24950,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 24956,
											"end": 25068,
											"name": "tag",
											"source": 15,
											"value": "288"
										},
										{
											"begin": 24956,
											"end": 25068,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 25039,
											"end": 25061,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "546"
										},
										{
											"begin": 25055,
											"end": 25060,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 25039,
											"end": 25061,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "259"
										},
										{
											"begin": 25039,
											"end": 25061,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 25039,
											"end": 25061,
											"name": "tag",
											"source": 15,
											"value": "546"
										},
										{
											"begin": 25039,
											"end": 25061,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 25034,
											"end": 25037,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 25027,
											"end": 25062,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 24956,
											"end": 25068,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 24956,
											"end": 25068,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 24956,
											"end": 25068,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 25074,
											"end": 25619,
											"name": "tag",
											"source": 15,
											"value": "159"
										},
										{
											"begin": 25074,
											"end": 25619,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 25247,
											"end": 25251,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 25285,
											"end": 25288,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 25274,
											"end": 25283,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 25270,
											"end": 25289,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 25262,
											"end": 25289,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 25262,
											"end": 25289,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 25299,
											"end": 25370,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "548"
										},
										{
											"begin": 25367,
											"end": 25368,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 25356,
											"end": 25365,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 25352,
											"end": 25369,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 25343,
											"end": 25349,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 25299,
											"end": 25370,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "231"
										},
										{
											"begin": 25299,
											"end": 25370,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 25299,
											"end": 25370,
											"name": "tag",
											"source": 15,
											"value": "548"
										},
										{
											"begin": 25299,
											"end": 25370,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 25380,
											"end": 25452,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "549"
										},
										{
											"begin": 25448,
											"end": 25450,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 25437,
											"end": 25446,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 25433,
											"end": 25451,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 25424,
											"end": 25430,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 25380,
											"end": 25452,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "231"
										},
										{
											"begin": 25380,
											"end": 25452,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 25380,
											"end": 25452,
											"name": "tag",
											"source": 15,
											"value": "549"
										},
										{
											"begin": 25380,
											"end": 25452,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 25462,
											"end": 25530,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "550"
										},
										{
											"begin": 25526,
											"end": 25528,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 25515,
											"end": 25524,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 25511,
											"end": 25529,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 25502,
											"end": 25508,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 25462,
											"end": 25530,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "288"
										},
										{
											"begin": 25462,
											"end": 25530,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 25462,
											"end": 25530,
											"name": "tag",
											"source": 15,
											"value": "550"
										},
										{
											"begin": 25462,
											"end": 25530,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 25540,
											"end": 25612,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "551"
										},
										{
											"begin": 25608,
											"end": 25610,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 25597,
											"end": 25606,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 25593,
											"end": 25611,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 25584,
											"end": 25590,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 25540,
											"end": 25612,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "231"
										},
										{
											"begin": 25540,
											"end": 25612,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 25540,
											"end": 25612,
											"name": "tag",
											"source": 15,
											"value": "551"
										},
										{
											"begin": 25540,
											"end": 25612,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 25074,
											"end": 25619,
											"name": "SWAP6",
											"source": 15
										},
										{
											"begin": 25074,
											"end": 25619,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 25074,
											"end": 25619,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 25074,
											"end": 25619,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 25074,
											"end": 25619,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 25074,
											"end": 25619,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 25074,
											"end": 25619,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 25074,
											"end": 25619,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 25625,
											"end": 25791,
											"name": "tag",
											"source": 15,
											"value": "289"
										},
										{
											"begin": 25625,
											"end": 25791,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 25765,
											"end": 25783,
											"name": "PUSH",
											"source": 15,
											"value": "7072696365206E6F7420656E6F75676800000000000000000000000000000000"
										},
										{
											"begin": 25761,
											"end": 25762,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 25753,
											"end": 25759,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 25749,
											"end": 25763,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 25742,
											"end": 25784,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 25625,
											"end": 25791,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 25625,
											"end": 25791,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 25797,
											"end": 26163,
											"name": "tag",
											"source": 15,
											"value": "290"
										},
										{
											"begin": 25797,
											"end": 26163,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 25939,
											"end": 25942,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 25960,
											"end": 26027,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "554"
										},
										{
											"begin": 26024,
											"end": 26026,
											"name": "PUSH",
											"source": 15,
											"value": "10"
										},
										{
											"begin": 26019,
											"end": 26022,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 25960,
											"end": 26027,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "264"
										},
										{
											"begin": 25960,
											"end": 26027,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 25960,
											"end": 26027,
											"name": "tag",
											"source": 15,
											"value": "554"
										},
										{
											"begin": 25960,
											"end": 26027,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 25953,
											"end": 26027,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 25953,
											"end": 26027,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 26036,
											"end": 26129,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "555"
										},
										{
											"begin": 26125,
											"end": 26128,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 26036,
											"end": 26129,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "289"
										},
										{
											"begin": 26036,
											"end": 26129,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 26036,
											"end": 26129,
											"name": "tag",
											"source": 15,
											"value": "555"
										},
										{
											"begin": 26036,
											"end": 26129,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 26154,
											"end": 26156,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 26149,
											"end": 26152,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 26145,
											"end": 26157,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 26138,
											"end": 26157,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 26138,
											"end": 26157,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 25797,
											"end": 26163,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 25797,
											"end": 26163,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 25797,
											"end": 26163,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 25797,
											"end": 26163,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 26169,
											"end": 26588,
											"name": "tag",
											"source": 15,
											"value": "163"
										},
										{
											"begin": 26169,
											"end": 26588,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 26335,
											"end": 26339,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 26373,
											"end": 26375,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 26362,
											"end": 26371,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 26358,
											"end": 26376,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 26350,
											"end": 26376,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 26350,
											"end": 26376,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 26422,
											"end": 26431,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 26416,
											"end": 26420,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 26412,
											"end": 26432,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 26408,
											"end": 26409,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 26397,
											"end": 26406,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 26393,
											"end": 26410,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 26386,
											"end": 26433,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 26450,
											"end": 26581,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "557"
										},
										{
											"begin": 26576,
											"end": 26580,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 26450,
											"end": 26581,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "290"
										},
										{
											"begin": 26450,
											"end": 26581,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 26450,
											"end": 26581,
											"name": "tag",
											"source": 15,
											"value": "557"
										},
										{
											"begin": 26450,
											"end": 26581,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 26442,
											"end": 26581,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 26442,
											"end": 26581,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 26169,
											"end": 26588,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 26169,
											"end": 26588,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 26169,
											"end": 26588,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 26169,
											"end": 26588,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 26594,
											"end": 27036,
											"name": "tag",
											"source": 15,
											"value": "165"
										},
										{
											"begin": 26594,
											"end": 27036,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 26743,
											"end": 26747,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 26781,
											"end": 26783,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 26770,
											"end": 26779,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 26766,
											"end": 26784,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 26758,
											"end": 26784,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 26758,
											"end": 26784,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 26794,
											"end": 26865,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "559"
										},
										{
											"begin": 26862,
											"end": 26863,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 26851,
											"end": 26860,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 26847,
											"end": 26864,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 26838,
											"end": 26844,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 26794,
											"end": 26865,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "239"
										},
										{
											"begin": 26794,
											"end": 26865,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 26794,
											"end": 26865,
											"name": "tag",
											"source": 15,
											"value": "559"
										},
										{
											"begin": 26794,
											"end": 26865,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 26875,
											"end": 26947,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "560"
										},
										{
											"begin": 26943,
											"end": 26945,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 26932,
											"end": 26941,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 26928,
											"end": 26946,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 26919,
											"end": 26925,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 26875,
											"end": 26947,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "231"
										},
										{
											"begin": 26875,
											"end": 26947,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 26875,
											"end": 26947,
											"name": "tag",
											"source": 15,
											"value": "560"
										},
										{
											"begin": 26875,
											"end": 26947,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 26957,
											"end": 27029,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "561"
										},
										{
											"begin": 27025,
											"end": 27027,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 27014,
											"end": 27023,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 27010,
											"end": 27028,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 27001,
											"end": 27007,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 26957,
											"end": 27029,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "231"
										},
										{
											"begin": 26957,
											"end": 27029,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 26957,
											"end": 27029,
											"name": "tag",
											"source": 15,
											"value": "561"
										},
										{
											"begin": 26957,
											"end": 27029,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 26594,
											"end": 27036,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 26594,
											"end": 27036,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 26594,
											"end": 27036,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 26594,
											"end": 27036,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 26594,
											"end": 27036,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 26594,
											"end": 27036,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 26594,
											"end": 27036,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 27042,
											"end": 27140,
											"name": "tag",
											"source": 15,
											"value": "291"
										},
										{
											"begin": 27042,
											"end": 27140,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 27093,
											"end": 27099,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 27127,
											"end": 27132,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 27121,
											"end": 27133,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 27111,
											"end": 27133,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 27111,
											"end": 27133,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 27042,
											"end": 27140,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 27042,
											"end": 27140,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 27042,
											"end": 27140,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 27042,
											"end": 27140,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 27146,
											"end": 27285,
											"name": "tag",
											"source": 15,
											"value": "292"
										},
										{
											"begin": 27146,
											"end": 27285,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 27235,
											"end": 27241,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 27230,
											"end": 27233,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 27225,
											"end": 27228,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 27219,
											"end": 27242,
											"name": "MCOPY",
											"source": 15
										},
										{
											"begin": 27276,
											"end": 27277,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 27267,
											"end": 27273,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 27262,
											"end": 27265,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 27258,
											"end": 27274,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 27251,
											"end": 27278,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 27146,
											"end": 27285,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 27146,
											"end": 27285,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 27146,
											"end": 27285,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 27146,
											"end": 27285,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 27291,
											"end": 27677,
											"name": "tag",
											"source": 15,
											"value": "293"
										},
										{
											"begin": 27291,
											"end": 27677,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 27395,
											"end": 27398,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 27423,
											"end": 27461,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "565"
										},
										{
											"begin": 27455,
											"end": 27460,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 27423,
											"end": 27461,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "291"
										},
										{
											"begin": 27423,
											"end": 27461,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 27423,
											"end": 27461,
											"name": "tag",
											"source": 15,
											"value": "565"
										},
										{
											"begin": 27423,
											"end": 27461,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 27477,
											"end": 27565,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "566"
										},
										{
											"begin": 27558,
											"end": 27564,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 27553,
											"end": 27556,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 27477,
											"end": 27565,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "267"
										},
										{
											"begin": 27477,
											"end": 27565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 27477,
											"end": 27565,
											"name": "tag",
											"source": 15,
											"value": "566"
										},
										{
											"begin": 27477,
											"end": 27565,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 27470,
											"end": 27565,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 27470,
											"end": 27565,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 27574,
											"end": 27639,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "567"
										},
										{
											"begin": 27632,
											"end": 27638,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 27627,
											"end": 27630,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 27620,
											"end": 27624,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 27613,
											"end": 27618,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 27609,
											"end": 27625,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 27574,
											"end": 27639,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "292"
										},
										{
											"begin": 27574,
											"end": 27639,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 27574,
											"end": 27639,
											"name": "tag",
											"source": 15,
											"value": "567"
										},
										{
											"begin": 27574,
											"end": 27639,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 27664,
											"end": 27670,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 27659,
											"end": 27662,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 27655,
											"end": 27671,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 27648,
											"end": 27671,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 27648,
											"end": 27671,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 27399,
											"end": 27677,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 27291,
											"end": 27677,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 27291,
											"end": 27677,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 27291,
											"end": 27677,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 27291,
											"end": 27677,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 27291,
											"end": 27677,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 27683,
											"end": 27954,
											"name": "tag",
											"source": 15,
											"value": "167"
										},
										{
											"begin": 27683,
											"end": 27954,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 27813,
											"end": 27816,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 27835,
											"end": 27928,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "569"
										},
										{
											"begin": 27924,
											"end": 27927,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 27915,
											"end": 27921,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 27835,
											"end": 27928,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "293"
										},
										{
											"begin": 27835,
											"end": 27928,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 27835,
											"end": 27928,
											"name": "tag",
											"source": 15,
											"value": "569"
										},
										{
											"begin": 27835,
											"end": 27928,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 27828,
											"end": 27928,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 27828,
											"end": 27928,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 27945,
											"end": 27948,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 27938,
											"end": 27948,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 27938,
											"end": 27948,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 27683,
											"end": 27954,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 27683,
											"end": 27954,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 27683,
											"end": 27954,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 27683,
											"end": 27954,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 27683,
											"end": 27954,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 27960,
											"end": 28121,
											"name": "tag",
											"source": 15,
											"value": "294"
										},
										{
											"begin": 27960,
											"end": 28121,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 28100,
											"end": 28113,
											"name": "PUSH",
											"source": 15,
											"value": "6D696E74206661696C6564000000000000000000000000000000000000000000"
										},
										{
											"begin": 28096,
											"end": 28097,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 28088,
											"end": 28094,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 28084,
											"end": 28098,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 28077,
											"end": 28114,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 27960,
											"end": 28121,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 27960,
											"end": 28121,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 28127,
											"end": 28493,
											"name": "tag",
											"source": 15,
											"value": "295"
										},
										{
											"begin": 28127,
											"end": 28493,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 28269,
											"end": 28272,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 28290,
											"end": 28357,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "572"
										},
										{
											"begin": 28354,
											"end": 28356,
											"name": "PUSH",
											"source": 15,
											"value": "B"
										},
										{
											"begin": 28349,
											"end": 28352,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 28290,
											"end": 28357,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "264"
										},
										{
											"begin": 28290,
											"end": 28357,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 28290,
											"end": 28357,
											"name": "tag",
											"source": 15,
											"value": "572"
										},
										{
											"begin": 28290,
											"end": 28357,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 28283,
											"end": 28357,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 28283,
											"end": 28357,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 28366,
											"end": 28459,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "573"
										},
										{
											"begin": 28455,
											"end": 28458,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 28366,
											"end": 28459,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "294"
										},
										{
											"begin": 28366,
											"end": 28459,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 28366,
											"end": 28459,
											"name": "tag",
											"source": 15,
											"value": "573"
										},
										{
											"begin": 28366,
											"end": 28459,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 28484,
											"end": 28486,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 28479,
											"end": 28482,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 28475,
											"end": 28487,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 28468,
											"end": 28487,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 28468,
											"end": 28487,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 28127,
											"end": 28493,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 28127,
											"end": 28493,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 28127,
											"end": 28493,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 28127,
											"end": 28493,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 28499,
											"end": 28918,
											"name": "tag",
											"source": 15,
											"value": "173"
										},
										{
											"begin": 28499,
											"end": 28918,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 28665,
											"end": 28669,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 28703,
											"end": 28705,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 28692,
											"end": 28701,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 28688,
											"end": 28706,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 28680,
											"end": 28706,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 28680,
											"end": 28706,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 28752,
											"end": 28761,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 28746,
											"end": 28750,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 28742,
											"end": 28762,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 28738,
											"end": 28739,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 28727,
											"end": 28736,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 28723,
											"end": 28740,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 28716,
											"end": 28763,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 28780,
											"end": 28911,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "575"
										},
										{
											"begin": 28906,
											"end": 28910,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 28780,
											"end": 28911,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "295"
										},
										{
											"begin": 28780,
											"end": 28911,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 28780,
											"end": 28911,
											"name": "tag",
											"source": 15,
											"value": "575"
										},
										{
											"begin": 28780,
											"end": 28911,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 28772,
											"end": 28911,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 28772,
											"end": 28911,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 28499,
											"end": 28918,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 28499,
											"end": 28918,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 28499,
											"end": 28918,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 28499,
											"end": 28918,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 28924,
											"end": 29090,
											"name": "tag",
											"source": 15,
											"value": "296"
										},
										{
											"begin": 28924,
											"end": 29090,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 29064,
											"end": 29082,
											"name": "PUSH",
											"source": 15,
											"value": "696E636F72726563742073656E64657200000000000000000000000000000000"
										},
										{
											"begin": 29060,
											"end": 29061,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 29052,
											"end": 29058,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 29048,
											"end": 29062,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 29041,
											"end": 29083,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 28924,
											"end": 29090,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 28924,
											"end": 29090,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 29096,
											"end": 29462,
											"name": "tag",
											"source": 15,
											"value": "297"
										},
										{
											"begin": 29096,
											"end": 29462,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 29238,
											"end": 29241,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 29259,
											"end": 29326,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "578"
										},
										{
											"begin": 29323,
											"end": 29325,
											"name": "PUSH",
											"source": 15,
											"value": "10"
										},
										{
											"begin": 29318,
											"end": 29321,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 29259,
											"end": 29326,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "264"
										},
										{
											"begin": 29259,
											"end": 29326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 29259,
											"end": 29326,
											"name": "tag",
											"source": 15,
											"value": "578"
										},
										{
											"begin": 29259,
											"end": 29326,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 29252,
											"end": 29326,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 29252,
											"end": 29326,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 29335,
											"end": 29428,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "579"
										},
										{
											"begin": 29424,
											"end": 29427,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 29335,
											"end": 29428,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "296"
										},
										{
											"begin": 29335,
											"end": 29428,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 29335,
											"end": 29428,
											"name": "tag",
											"source": 15,
											"value": "579"
										},
										{
											"begin": 29335,
											"end": 29428,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 29453,
											"end": 29455,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 29448,
											"end": 29451,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 29444,
											"end": 29456,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 29437,
											"end": 29456,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 29437,
											"end": 29456,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 29096,
											"end": 29462,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 29096,
											"end": 29462,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 29096,
											"end": 29462,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 29096,
											"end": 29462,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 29468,
											"end": 29887,
											"name": "tag",
											"source": 15,
											"value": "178"
										},
										{
											"begin": 29468,
											"end": 29887,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 29634,
											"end": 29638,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 29672,
											"end": 29674,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 29661,
											"end": 29670,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 29657,
											"end": 29675,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 29649,
											"end": 29675,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 29649,
											"end": 29675,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 29721,
											"end": 29730,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 29715,
											"end": 29719,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 29711,
											"end": 29731,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 29707,
											"end": 29708,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 29696,
											"end": 29705,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 29692,
											"end": 29709,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 29685,
											"end": 29732,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 29749,
											"end": 29880,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "581"
										},
										{
											"begin": 29875,
											"end": 29879,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 29749,
											"end": 29880,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "297"
										},
										{
											"begin": 29749,
											"end": 29880,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 29749,
											"end": 29880,
											"name": "tag",
											"source": 15,
											"value": "581"
										},
										{
											"begin": 29749,
											"end": 29880,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 29741,
											"end": 29880,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 29741,
											"end": 29880,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 29468,
											"end": 29887,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 29468,
											"end": 29887,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 29468,
											"end": 29887,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 29468,
											"end": 29887,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 29893,
											"end": 30059,
											"name": "tag",
											"source": 15,
											"value": "298"
										},
										{
											"begin": 29893,
											"end": 30059,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 30033,
											"end": 30051,
											"name": "PUSH",
											"source": 15,
											"value": "7175616E74697479206973207A65726F00000000000000000000000000000000"
										},
										{
											"begin": 30029,
											"end": 30030,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 30021,
											"end": 30027,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 30017,
											"end": 30031,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 30010,
											"end": 30052,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 29893,
											"end": 30059,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 29893,
											"end": 30059,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 30065,
											"end": 30431,
											"name": "tag",
											"source": 15,
											"value": "299"
										},
										{
											"begin": 30065,
											"end": 30431,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 30207,
											"end": 30210,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 30228,
											"end": 30295,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "584"
										},
										{
											"begin": 30292,
											"end": 30294,
											"name": "PUSH",
											"source": 15,
											"value": "10"
										},
										{
											"begin": 30287,
											"end": 30290,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 30228,
											"end": 30295,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "264"
										},
										{
											"begin": 30228,
											"end": 30295,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 30228,
											"end": 30295,
											"name": "tag",
											"source": 15,
											"value": "584"
										},
										{
											"begin": 30228,
											"end": 30295,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 30221,
											"end": 30295,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 30221,
											"end": 30295,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 30304,
											"end": 30397,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "585"
										},
										{
											"begin": 30393,
											"end": 30396,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 30304,
											"end": 30397,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "298"
										},
										{
											"begin": 30304,
											"end": 30397,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 30304,
											"end": 30397,
											"name": "tag",
											"source": 15,
											"value": "585"
										},
										{
											"begin": 30304,
											"end": 30397,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 30422,
											"end": 30424,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 30417,
											"end": 30420,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 30413,
											"end": 30425,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 30406,
											"end": 30425,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 30406,
											"end": 30425,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 30065,
											"end": 30431,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 30065,
											"end": 30431,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 30065,
											"end": 30431,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 30065,
											"end": 30431,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 30437,
											"end": 30856,
											"name": "tag",
											"source": 15,
											"value": "181"
										},
										{
											"begin": 30437,
											"end": 30856,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 30603,
											"end": 30607,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 30641,
											"end": 30643,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 30630,
											"end": 30639,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 30626,
											"end": 30644,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 30618,
											"end": 30644,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 30618,
											"end": 30644,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 30690,
											"end": 30699,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 30684,
											"end": 30688,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 30680,
											"end": 30700,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 30676,
											"end": 30677,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 30665,
											"end": 30674,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 30661,
											"end": 30678,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 30654,
											"end": 30701,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 30718,
											"end": 30849,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "587"
										},
										{
											"begin": 30844,
											"end": 30848,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 30718,
											"end": 30849,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "299"
										},
										{
											"begin": 30718,
											"end": 30849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 30718,
											"end": 30849,
											"name": "tag",
											"source": 15,
											"value": "587"
										},
										{
											"begin": 30718,
											"end": 30849,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 30710,
											"end": 30849,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 30710,
											"end": 30849,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 30437,
											"end": 30856,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 30437,
											"end": 30856,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 30437,
											"end": 30856,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 30437,
											"end": 30856,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 30862,
											"end": 31415,
											"name": "tag",
											"source": 15,
											"value": "183"
										},
										{
											"begin": 30862,
											"end": 31415,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 31039,
											"end": 31043,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 31077,
											"end": 31080,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 31066,
											"end": 31075,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 31062,
											"end": 31081,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 31054,
											"end": 31081,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 31054,
											"end": 31081,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 31091,
											"end": 31162,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "589"
										},
										{
											"begin": 31159,
											"end": 31160,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 31148,
											"end": 31157,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 31144,
											"end": 31161,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 31135,
											"end": 31141,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 31091,
											"end": 31162,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "239"
										},
										{
											"begin": 31091,
											"end": 31162,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 31091,
											"end": 31162,
											"name": "tag",
											"source": 15,
											"value": "589"
										},
										{
											"begin": 31091,
											"end": 31162,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 31172,
											"end": 31244,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "590"
										},
										{
											"begin": 31240,
											"end": 31242,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 31229,
											"end": 31238,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 31225,
											"end": 31243,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 31216,
											"end": 31222,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 31172,
											"end": 31244,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "239"
										},
										{
											"begin": 31172,
											"end": 31244,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 31172,
											"end": 31244,
											"name": "tag",
											"source": 15,
											"value": "590"
										},
										{
											"begin": 31172,
											"end": 31244,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 31254,
											"end": 31326,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "591"
										},
										{
											"begin": 31322,
											"end": 31324,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 31311,
											"end": 31320,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 31307,
											"end": 31325,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 31298,
											"end": 31304,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 31254,
											"end": 31326,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "231"
										},
										{
											"begin": 31254,
											"end": 31326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 31254,
											"end": 31326,
											"name": "tag",
											"source": 15,
											"value": "591"
										},
										{
											"begin": 31254,
											"end": 31326,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 31336,
											"end": 31408,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "592"
										},
										{
											"begin": 31404,
											"end": 31406,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 31393,
											"end": 31402,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 31389,
											"end": 31407,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 31380,
											"end": 31386,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 31336,
											"end": 31408,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "231"
										},
										{
											"begin": 31336,
											"end": 31408,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 31336,
											"end": 31408,
											"name": "tag",
											"source": 15,
											"value": "592"
										},
										{
											"begin": 31336,
											"end": 31408,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 30862,
											"end": 31415,
											"name": "SWAP6",
											"source": 15
										},
										{
											"begin": 30862,
											"end": 31415,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 30862,
											"end": 31415,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 30862,
											"end": 31415,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 30862,
											"end": 31415,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 30862,
											"end": 31415,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 30862,
											"end": 31415,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 30862,
											"end": 31415,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 31421,
											"end": 31586,
											"name": "tag",
											"source": 15,
											"value": "300"
										},
										{
											"begin": 31421,
											"end": 31586,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 31561,
											"end": 31578,
											"name": "PUSH",
											"source": 15,
											"value": "746F6B656E4964206973207A65726F0000000000000000000000000000000000"
										},
										{
											"begin": 31557,
											"end": 31558,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 31549,
											"end": 31555,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 31545,
											"end": 31559,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 31538,
											"end": 31579,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 31421,
											"end": 31586,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 31421,
											"end": 31586,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 31592,
											"end": 31958,
											"name": "tag",
											"source": 15,
											"value": "301"
										},
										{
											"begin": 31592,
											"end": 31958,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 31734,
											"end": 31737,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 31755,
											"end": 31822,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "595"
										},
										{
											"begin": 31819,
											"end": 31821,
											"name": "PUSH",
											"source": 15,
											"value": "F"
										},
										{
											"begin": 31814,
											"end": 31817,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 31755,
											"end": 31822,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "264"
										},
										{
											"begin": 31755,
											"end": 31822,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 31755,
											"end": 31822,
											"name": "tag",
											"source": 15,
											"value": "595"
										},
										{
											"begin": 31755,
											"end": 31822,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 31748,
											"end": 31822,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 31748,
											"end": 31822,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 31831,
											"end": 31924,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "596"
										},
										{
											"begin": 31920,
											"end": 31923,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 31831,
											"end": 31924,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "300"
										},
										{
											"begin": 31831,
											"end": 31924,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 31831,
											"end": 31924,
											"name": "tag",
											"source": 15,
											"value": "596"
										},
										{
											"begin": 31831,
											"end": 31924,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 31949,
											"end": 31951,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 31944,
											"end": 31947,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 31940,
											"end": 31952,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 31933,
											"end": 31952,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 31933,
											"end": 31952,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 31592,
											"end": 31958,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 31592,
											"end": 31958,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 31592,
											"end": 31958,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 31592,
											"end": 31958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 31964,
											"end": 32383,
											"name": "tag",
											"source": 15,
											"value": "195"
										},
										{
											"begin": 31964,
											"end": 32383,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 32130,
											"end": 32134,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 32168,
											"end": 32170,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 32157,
											"end": 32166,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 32153,
											"end": 32171,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 32145,
											"end": 32171,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 32145,
											"end": 32171,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 32217,
											"end": 32226,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 32211,
											"end": 32215,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 32207,
											"end": 32227,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 32203,
											"end": 32204,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 32192,
											"end": 32201,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 32188,
											"end": 32205,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 32181,
											"end": 32228,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 32245,
											"end": 32376,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "598"
										},
										{
											"begin": 32371,
											"end": 32375,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 32245,
											"end": 32376,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "301"
										},
										{
											"begin": 32245,
											"end": 32376,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 32245,
											"end": 32376,
											"name": "tag",
											"source": 15,
											"value": "598"
										},
										{
											"begin": 32245,
											"end": 32376,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 32237,
											"end": 32376,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 32237,
											"end": 32376,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 31964,
											"end": 32383,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 31964,
											"end": 32383,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 31964,
											"end": 32383,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 31964,
											"end": 32383,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 32389,
											"end": 32552,
											"name": "tag",
											"source": 15,
											"value": "302"
										},
										{
											"begin": 32389,
											"end": 32552,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 32529,
											"end": 32544,
											"name": "PUSH",
											"source": 15,
											"value": "7072696365206973207A65726F00000000000000000000000000000000000000"
										},
										{
											"begin": 32525,
											"end": 32526,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 32517,
											"end": 32523,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 32513,
											"end": 32527,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 32506,
											"end": 32545,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 32389,
											"end": 32552,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 32389,
											"end": 32552,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 32558,
											"end": 32924,
											"name": "tag",
											"source": 15,
											"value": "303"
										},
										{
											"begin": 32558,
											"end": 32924,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 32700,
											"end": 32703,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 32721,
											"end": 32788,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "601"
										},
										{
											"begin": 32785,
											"end": 32787,
											"name": "PUSH",
											"source": 15,
											"value": "D"
										},
										{
											"begin": 32780,
											"end": 32783,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 32721,
											"end": 32788,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "264"
										},
										{
											"begin": 32721,
											"end": 32788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 32721,
											"end": 32788,
											"name": "tag",
											"source": 15,
											"value": "601"
										},
										{
											"begin": 32721,
											"end": 32788,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 32714,
											"end": 32788,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 32714,
											"end": 32788,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 32797,
											"end": 32890,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "602"
										},
										{
											"begin": 32886,
											"end": 32889,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 32797,
											"end": 32890,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "302"
										},
										{
											"begin": 32797,
											"end": 32890,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 32797,
											"end": 32890,
											"name": "tag",
											"source": 15,
											"value": "602"
										},
										{
											"begin": 32797,
											"end": 32890,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 32915,
											"end": 32917,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 32910,
											"end": 32913,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 32906,
											"end": 32918,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 32899,
											"end": 32918,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 32899,
											"end": 32918,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 32558,
											"end": 32924,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 32558,
											"end": 32924,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 32558,
											"end": 32924,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 32558,
											"end": 32924,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 32930,
											"end": 33349,
											"name": "tag",
											"source": 15,
											"value": "198"
										},
										{
											"begin": 32930,
											"end": 33349,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 33096,
											"end": 33100,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 33134,
											"end": 33136,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 33123,
											"end": 33132,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 33119,
											"end": 33137,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 33111,
											"end": 33137,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 33111,
											"end": 33137,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 33183,
											"end": 33192,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 33177,
											"end": 33181,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 33173,
											"end": 33193,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 33169,
											"end": 33170,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 33158,
											"end": 33167,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 33154,
											"end": 33171,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 33147,
											"end": 33194,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 33211,
											"end": 33342,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "604"
										},
										{
											"begin": 33337,
											"end": 33341,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 33211,
											"end": 33342,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "303"
										},
										{
											"begin": 33211,
											"end": 33342,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 33211,
											"end": 33342,
											"name": "tag",
											"source": 15,
											"value": "604"
										},
										{
											"begin": 33211,
											"end": 33342,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 33203,
											"end": 33342,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 33203,
											"end": 33342,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 32930,
											"end": 33349,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 32930,
											"end": 33349,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 32930,
											"end": 33349,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 32930,
											"end": 33349,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 33355,
											"end": 33797,
											"name": "tag",
											"source": 15,
											"value": "200"
										},
										{
											"begin": 33355,
											"end": 33797,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 33504,
											"end": 33508,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 33542,
											"end": 33544,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 33531,
											"end": 33540,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 33527,
											"end": 33545,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 33519,
											"end": 33545,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 33519,
											"end": 33545,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 33555,
											"end": 33626,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "606"
										},
										{
											"begin": 33623,
											"end": 33624,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 33612,
											"end": 33621,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 33608,
											"end": 33625,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 33599,
											"end": 33605,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 33555,
											"end": 33626,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "231"
										},
										{
											"begin": 33555,
											"end": 33626,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 33555,
											"end": 33626,
											"name": "tag",
											"source": 15,
											"value": "606"
										},
										{
											"begin": 33555,
											"end": 33626,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 33636,
											"end": 33708,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "607"
										},
										{
											"begin": 33704,
											"end": 33706,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 33693,
											"end": 33702,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 33689,
											"end": 33707,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 33680,
											"end": 33686,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 33636,
											"end": 33708,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "231"
										},
										{
											"begin": 33636,
											"end": 33708,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 33636,
											"end": 33708,
											"name": "tag",
											"source": 15,
											"value": "607"
										},
										{
											"begin": 33636,
											"end": 33708,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 33718,
											"end": 33790,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "608"
										},
										{
											"begin": 33786,
											"end": 33788,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 33775,
											"end": 33784,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 33771,
											"end": 33789,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 33762,
											"end": 33768,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 33718,
											"end": 33790,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "231"
										},
										{
											"begin": 33718,
											"end": 33790,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 33718,
											"end": 33790,
											"name": "tag",
											"source": 15,
											"value": "608"
										},
										{
											"begin": 33718,
											"end": 33790,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 33355,
											"end": 33797,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 33355,
											"end": 33797,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 33355,
											"end": 33797,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 33355,
											"end": 33797,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 33355,
											"end": 33797,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 33355,
											"end": 33797,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 33355,
											"end": 33797,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 33803,
											"end": 34245,
											"name": "tag",
											"source": 15,
											"value": "213"
										},
										{
											"begin": 33803,
											"end": 34245,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 33952,
											"end": 33956,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 33990,
											"end": 33992,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 33979,
											"end": 33988,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 33975,
											"end": 33993,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 33967,
											"end": 33993,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 33967,
											"end": 33993,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 34003,
											"end": 34074,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "610"
										},
										{
											"begin": 34071,
											"end": 34072,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 34060,
											"end": 34069,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 34056,
											"end": 34073,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 34047,
											"end": 34053,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 34003,
											"end": 34074,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "239"
										},
										{
											"begin": 34003,
											"end": 34074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 34003,
											"end": 34074,
											"name": "tag",
											"source": 15,
											"value": "610"
										},
										{
											"begin": 34003,
											"end": 34074,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 34084,
											"end": 34156,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "611"
										},
										{
											"begin": 34152,
											"end": 34154,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 34141,
											"end": 34150,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 34137,
											"end": 34155,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 34128,
											"end": 34134,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 34084,
											"end": 34156,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "239"
										},
										{
											"begin": 34084,
											"end": 34156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 34084,
											"end": 34156,
											"name": "tag",
											"source": 15,
											"value": "611"
										},
										{
											"begin": 34084,
											"end": 34156,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 34166,
											"end": 34238,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "612"
										},
										{
											"begin": 34234,
											"end": 34236,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 34223,
											"end": 34232,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 34219,
											"end": 34237,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 34210,
											"end": 34216,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 34166,
											"end": 34238,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "231"
										},
										{
											"begin": 34166,
											"end": 34238,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 34166,
											"end": 34238,
											"name": "tag",
											"source": 15,
											"value": "612"
										},
										{
											"begin": 34166,
											"end": 34238,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 33803,
											"end": 34245,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 33803,
											"end": 34245,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 33803,
											"end": 34245,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 33803,
											"end": 34245,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 33803,
											"end": 34245,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 33803,
											"end": 34245,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 33803,
											"end": 34245,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
								"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
								"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"SnowmenSales.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"buyItem(uint256,uint256,uint8)": "d407cee7",
							"buyTicket()": "edca914c",
							"getBalance()": "12065fe0",
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": "bc197c81",
							"onERC1155Received(address,address,uint256,uint256,bytes)": "f23a6e61",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"setPrice(uint256,uint256)": "f7d97577",
							"snowmenGame()": "ea75aa8f",
							"snowmenToken()": "2c1449e1",
							"supportsInterface(bytes4)": "01ffc9a7",
							"tokenPrice(uint256)": "d4ddce8a",
							"transferOwnership(address)": "f2fde38b",
							"withdraw()": "3ccfd60b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"snowmenErc1155\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"snowmenErc20\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"quantity\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"BuyItem\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"BuyTicket\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"SetPrice\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"onERC1155ReceivedExecuted\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"quantity\",\"type\":\"uint8\"}],\"name\":\"buyItem\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"buyTicket\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"setPrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"snowmenGame\",\"outputs\":[{\"internalType\":\"contract IERC1155\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"snowmenToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"tokenPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"SnowmenSales.sol\":\"SnowmenSales\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x68d6fdbeb467192c3627a46aa7bf5cbb73267363b740abc511f521a5a41a446e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7ce608c19d5e917c60f9c8aa3e5f0eb05b326280ac0a235e8bb9a848a3a64a91\",\"dweb:/ipfs/QmdLPsWQJj7JvRae8MM13GEo4PBXaEFmD4b4heqcyMJNPG\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0x61a23d601c2ab69dd726ac55058604cbda98e1d728ba31a51c379a3f9eeea715\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d8cbb06152d82ebdd5ba1d33454e5759492040f309a82637c7e99c948a04fa20\",\"dweb:/ipfs/QmQQuLr6WSfLu97pMEh6XLefk99TSj9k5Qu1zXGPepwGiK\"]},\"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":{\"keccak256\":\"0xe103e95f854ef0cd1bba5f469175f67cd332f5c2561941f165e3dd65cee94d6d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6cf8cc5d07cf8003255f9d766fe8188b9f6e33b6240e126a605f0d061566b23e\",\"dweb:/ipfs/Qmd7okDCSoUt1L4G9hmb5c4W8kWUnfpAa2jyBKUp4xKErd\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xca2ae13e0610f6a99238dd00b97bd786bc92732dae6d6b9d61f573ec51018310\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75f8c71ce0c91c40dd5f249ace0b7d8270f8f1767231bcf71490f7157d6ba862\",\"dweb:/ipfs/QmYXgxeDyFHvz3JsXxLEYN6GNUR44ThHeFj5XkpkgMoG4w\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x9d8da059267bac779a2dbbb9a26c2acf00ca83085e105d62d5d4ef96054a47f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c78e2aa4313323cecd1ef12a8d6265b96beee1a199923abf55d9a2a9e291ad23\",\"dweb:/ipfs/QmUTs2KStXucZezzFo3EYeqYu47utu56qrF7jj1Gue65vb\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"SnowmenSales.sol\":{\"keccak256\":\"0xf866b6256b5d83b3842f39ea17d635cc14e0c8d30b1855d58458cecef7be3e36\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://03efb24ab295ae2abc5622a3001d83cd2521d4cf4b197b424f56db5fea624887\",\"dweb:/ipfs/QmdP3tSGY4ju92iBVHFhn2QTG6ohNoA34DmBEoyfvA45Yh\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "SnowmenSales.sol:SnowmenSales",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 1336,
								"contract": "SnowmenSales.sol:SnowmenSales",
								"label": "snowmenToken",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(IERC20)561"
							},
							{
								"astId": 1339,
								"contract": "SnowmenSales.sol:SnowmenSales",
								"label": "snowmenGame",
								"offset": 0,
								"slot": "2",
								"type": "t_contract(IERC1155)360"
							},
							{
								"astId": 1352,
								"contract": "SnowmenSales.sol:SnowmenSales",
								"label": "tokenPrice",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_uint256,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_contract(IERC1155)360": {
								"encoding": "inplace",
								"label": "contract IERC1155",
								"numberOfBytes": "20"
							},
							"t_contract(IERC20)561": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_mapping(t_uint256,t_uint256)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							1261
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 1262,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1261,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1261,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								1261
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1243,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1243,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC1363.sol",
					"exportedSymbols": {
						"IERC1363": [
							229
						],
						"IERC165": [
							1319
						],
						"IERC20": [
							561
						]
					},
					"id": 230,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 151,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 230,
							"sourceUnit": 238,
							"src": "133:36:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 150,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 561,
										"src": "141:6:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 153,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 230,
							"sourceUnit": 234,
							"src": "170:38:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 152,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1319,
										"src": "178:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 155,
										"name": "IERC20",
										"nameLocations": [
											"590:6:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 561,
										"src": "590:6:1"
									},
									"id": 156,
									"nodeType": "InheritanceSpecifier",
									"src": "590:6:1"
								},
								{
									"baseName": {
										"id": 157,
										"name": "IERC165",
										"nameLocations": [
											"598:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1319,
										"src": "598:7:1"
									},
									"id": 158,
									"nodeType": "InheritanceSpecifier",
									"src": "598:7:1"
								}
							],
							"canonicalName": "IERC1363",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 154,
								"nodeType": "StructuredDocumentation",
								"src": "210:357:1",
								"text": " @title IERC1363\n @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction."
							},
							"fullyImplemented": false,
							"id": 229,
							"linearizedBaseContracts": [
								229,
								1319,
								561
							],
							"name": "IERC1363",
							"nameLocation": "578:8:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 159,
										"nodeType": "StructuredDocumentation",
										"src": "1148:370:1",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "1296ee62",
									"id": 168,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCall",
									"nameLocation": "1532:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 161,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1556:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "1548:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 160,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1548:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 163,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1568:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "1560:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 162,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1560:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1547:27:1"
									},
									"returnParameters": {
										"id": 167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 166,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "1593:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 165,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1593:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1592:6:1"
									},
									"scope": 229,
									"src": "1523:76:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 169,
										"nodeType": "StructuredDocumentation",
										"src": "1605:453:1",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "4000aea0",
									"id": 180,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCall",
									"nameLocation": "2072:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2096:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2088:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 170,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2088:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 173,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2108:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2100:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 172,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2100:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 175,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2130:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2115:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 174,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2115:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2087:48:1"
									},
									"returnParameters": {
										"id": 179,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 178,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2154:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 177,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2154:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2153:6:1"
									},
									"scope": 229,
									"src": "2063:97:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 181,
										"nodeType": "StructuredDocumentation",
										"src": "2166:453:1",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "d8fbe994",
									"id": 192,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCall",
									"nameLocation": "2633:19:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 183,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2661:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "2653:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 182,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2653:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2675:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "2667:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 184,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2667:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2687:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "2679:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 186,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2679:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2652:41:1"
									},
									"returnParameters": {
										"id": 191,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 190,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "2712:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 189,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2712:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:6:1"
									},
									"scope": 229,
									"src": "2624:94:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 193,
										"nodeType": "StructuredDocumentation",
										"src": "2724:536:1",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "c1d34b89",
									"id": 206,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCall",
									"nameLocation": "3274:19:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3302:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3294:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 194,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3294:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 197,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3316:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3308:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 196,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3308:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 199,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3328:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3320:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 198,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3320:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3350:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3335:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 200,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3335:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3293:62:1"
									},
									"returnParameters": {
										"id": 205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3374:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 203,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3374:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3373:6:1"
									},
									"scope": 229,
									"src": "3265:115:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 207,
										"nodeType": "StructuredDocumentation",
										"src": "3386:390:1",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "3177029f",
									"id": 216,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCall",
									"nameLocation": "3790:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 212,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 209,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3813:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "3805:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 208,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3805:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 211,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3830:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "3822:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 210,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3822:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3804:32:1"
									},
									"returnParameters": {
										"id": 215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 214,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "3855:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 213,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3855:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3854:6:1"
									},
									"scope": 229,
									"src": "3781:80:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 217,
										"nodeType": "StructuredDocumentation",
										"src": "3867:478:1",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @param data Additional data with no specified format, sent in call to `spender`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "cae9ca51",
									"id": 228,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCall",
									"nameLocation": "4359:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 224,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4382:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "4374:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 218,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4374:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 221,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4399:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "4391:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 220,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4391:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 223,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4421:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "4406:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 222,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4406:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4373:53:1"
									},
									"returnParameters": {
										"id": 227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "4445:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 225,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4445:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4444:6:1"
									},
									"scope": 229,
									"src": "4350:101:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 230,
							"src": "568:3885:1",
							"usedErrors": [],
							"usedEvents": [
								495,
								504
							]
						}
					],
					"src": "107:4347:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1319
						]
					},
					"id": 234,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 231,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../utils/introspection/IERC165.sol",
							"id": 233,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 234,
							"sourceUnit": 1320,
							"src": "132:59:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 232,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1319,
										"src": "140:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "106:86:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/interfaces/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							561
						]
					},
					"id": 238,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 235,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../token/ERC20/IERC20.sol",
							"id": 237,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 238,
							"sourceUnit": 562,
							"src": "131:49:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 236,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 561,
										"src": "139:6:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "105:76:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC1155/IERC1155.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
					"exportedSymbols": {
						"IERC1155": [
							360
						],
						"IERC165": [
							1319
						]
					},
					"id": 361,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 239,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "110:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 241,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 361,
							"sourceUnit": 1320,
							"src": "136:62:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 240,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1319,
										"src": "144:7:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 243,
										"name": "IERC165",
										"nameLocations": [
											"359:7:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1319,
										"src": "359:7:4"
									},
									"id": 244,
									"nodeType": "InheritanceSpecifier",
									"src": "359:7:4"
								}
							],
							"canonicalName": "IERC1155",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 242,
								"nodeType": "StructuredDocumentation",
								"src": "200:136:4",
								"text": " @dev Required interface of an ERC-1155 compliant contract, as defined in the\n https://eips.ethereum.org/EIPS/eip-1155[ERC]."
							},
							"fullyImplemented": false,
							"id": 360,
							"linearizedBaseContracts": [
								360,
								1319
							],
							"name": "IERC1155",
							"nameLocation": "347:8:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 245,
										"nodeType": "StructuredDocumentation",
										"src": "373:125:4",
										"text": " @dev Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`."
									},
									"eventSelector": "c3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62",
									"id": 257,
									"name": "TransferSingle",
									"nameLocation": "509:14:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 256,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 247,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "540:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 257,
												"src": "524:24:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 246,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "524:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 249,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "566:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 257,
												"src": "550:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 248,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "550:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 251,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "588:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 257,
												"src": "572:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 250,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "572:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 253,
												"indexed": false,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "600:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 257,
												"src": "592:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 252,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "592:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 255,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "612:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 257,
												"src": "604:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 254,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "604:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "523:95:4"
									},
									"src": "503:116:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 258,
										"nodeType": "StructuredDocumentation",
										"src": "625:144:4",
										"text": " @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n transfers."
									},
									"eventSelector": "4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb",
									"id": 272,
									"name": "TransferBatch",
									"nameLocation": "780:13:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 271,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 260,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "819:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 272,
												"src": "803:24:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 259,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "803:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 262,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "853:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 272,
												"src": "837:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "837:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 264,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "883:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 272,
												"src": "867:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "867:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 267,
												"indexed": false,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "905:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 272,
												"src": "895:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 265,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "895:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 266,
													"nodeType": "ArrayTypeName",
													"src": "895:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 270,
												"indexed": false,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "928:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 272,
												"src": "918:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 268,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "918:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 269,
													"nodeType": "ArrayTypeName",
													"src": "918:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "793:147:4"
									},
									"src": "774:167:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 273,
										"nodeType": "StructuredDocumentation",
										"src": "947:147:4",
										"text": " @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n `approved`."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 281,
									"name": "ApprovalForAll",
									"nameLocation": "1105:14:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 280,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 275,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1136:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 281,
												"src": "1120:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 274,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1120:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 277,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "1161:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 281,
												"src": "1145:24:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 276,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1145:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 279,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "1176:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 281,
												"src": "1171:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 278,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1171:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1119:66:4"
									},
									"src": "1099:87:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 282,
										"nodeType": "StructuredDocumentation",
										"src": "1192:343:4",
										"text": " @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n If an {URI} event was emitted for `id`, the standard\n https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n returned by {IERC1155MetadataURI-uri}."
									},
									"eventSelector": "6bb7ff708619ba0610cba295a58592e0451dee2622938c8755667688daf3529b",
									"id": 288,
									"name": "URI",
									"nameLocation": "1546:3:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 287,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 284,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1557:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 288,
												"src": "1550:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 283,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1550:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 286,
												"indexed": true,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1580:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 288,
												"src": "1564:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 285,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1564:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1549:34:4"
									},
									"src": "1540:44:4"
								},
								{
									"documentation": {
										"id": 289,
										"nodeType": "StructuredDocumentation",
										"src": "1590:90:4",
										"text": " @dev Returns the value of tokens of token type `id` owned by `account`."
									},
									"functionSelector": "00fdd58e",
									"id": 298,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1694:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 294,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 291,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1712:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 298,
												"src": "1704:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 290,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1704:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 293,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1729:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 298,
												"src": "1721:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 292,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1721:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1703:29:4"
									},
									"returnParameters": {
										"id": 297,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 296,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 298,
												"src": "1756:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 295,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1756:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1755:9:4"
									},
									"scope": 360,
									"src": "1685:80:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 299,
										"nodeType": "StructuredDocumentation",
										"src": "1771:188:4",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n Requirements:\n - `accounts` and `ids` must have the same length."
									},
									"functionSelector": "4e1273f4",
									"id": 311,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOfBatch",
									"nameLocation": "1973:14:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 306,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 302,
												"mutability": "mutable",
												"name": "accounts",
												"nameLocation": "2016:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 311,
												"src": "1997:27:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 300,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1997:7:4",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 301,
													"nodeType": "ArrayTypeName",
													"src": "1997:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "2053:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 311,
												"src": "2034:22:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 303,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2034:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 304,
													"nodeType": "ArrayTypeName",
													"src": "2034:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1987:75:4"
									},
									"returnParameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 309,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 311,
												"src": "2086:16:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 307,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2086:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 308,
													"nodeType": "ArrayTypeName",
													"src": "2086:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2085:18:4"
									},
									"scope": 360,
									"src": "1964:140:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 312,
										"nodeType": "StructuredDocumentation",
										"src": "2110:254:4",
										"text": " @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n Emits an {ApprovalForAll} event.\n Requirements:\n - `operator` cannot be the zero address."
									},
									"functionSelector": "a22cb465",
									"id": 319,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "2378:17:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 317,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 314,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2404:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 319,
												"src": "2396:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 313,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2396:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 316,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "2419:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 319,
												"src": "2414:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 315,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2414:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2395:33:4"
									},
									"returnParameters": {
										"id": 318,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2437:0:4"
									},
									"scope": 360,
									"src": "2369:69:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 320,
										"nodeType": "StructuredDocumentation",
										"src": "2444:135:4",
										"text": " @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n See {setApprovalForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 329,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "2593:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 322,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2618:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 329,
												"src": "2610:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 321,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2610:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 324,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2635:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 329,
												"src": "2627:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 323,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2627:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2609:35:4"
									},
									"returnParameters": {
										"id": 328,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 327,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 329,
												"src": "2668:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 326,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2668:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2667:6:4"
									},
									"scope": 360,
									"src": "2584:90:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 330,
										"nodeType": "StructuredDocumentation",
										"src": "2680:910:4",
										"text": " @dev Transfers a `value` amount of tokens of type `id` from `from` to `to`.\n WARNING: This function can potentially allow a reentrancy attack when transferring tokens\n to an untrusted contract, when invoking {onERC1155Received} on the receiver.\n Ensure to follow the checks-effects-interactions pattern and consider employing\n reentrancy guards when interacting with untrusted contracts.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n - `from` must have a balance of tokens of type `id` of at least `value` amount.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."
									},
									"functionSelector": "f242432a",
									"id": 343,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "3604:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 332,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3629:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 343,
												"src": "3621:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 331,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3621:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 334,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3643:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 343,
												"src": "3635:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 333,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3635:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 336,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "3655:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 343,
												"src": "3647:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 335,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3647:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 338,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3667:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 343,
												"src": "3659:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 337,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3659:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3689:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 343,
												"src": "3674:19:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 339,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3674:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3620:74:4"
									},
									"returnParameters": {
										"id": 342,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3703:0:4"
									},
									"scope": 360,
									"src": "3595:109:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 344,
										"nodeType": "StructuredDocumentation",
										"src": "3710:814:4",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n WARNING: This function can potentially allow a reentrancy attack when transferring tokens\n to an untrusted contract, when invoking {onERC1155BatchReceived} on the receiver.\n Ensure to follow the checks-effects-interactions pattern and consider employing\n reentrancy guards when interacting with untrusted contracts.\n Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments.\n Requirements:\n - `ids` and `values` must have the same length.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."
									},
									"functionSelector": "2eb2c2d6",
									"id": 359,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeBatchTransferFrom",
									"nameLocation": "4538:21:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 357,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 346,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4577:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 359,
												"src": "4569:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 345,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4569:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 348,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4599:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 359,
												"src": "4591:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 347,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4591:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 351,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "4630:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 359,
												"src": "4611:22:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 349,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4611:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 350,
													"nodeType": "ArrayTypeName",
													"src": "4611:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 354,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "4662:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 359,
												"src": "4643:25:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 352,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4643:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 353,
													"nodeType": "ArrayTypeName",
													"src": "4643:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 356,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4693:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 359,
												"src": "4678:19:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 355,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4678:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4559:144:4"
									},
									"returnParameters": {
										"id": 358,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4712:0:4"
									},
									"scope": 360,
									"src": "4529:184:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 361,
							"src": "337:4378:4",
							"usedErrors": [],
							"usedEvents": [
								257,
								272,
								281,
								288
							]
						}
					],
					"src": "110:4606:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
					"exportedSymbols": {
						"IERC1155Receiver": [
							402
						],
						"IERC165": [
							1319
						]
					},
					"id": 403,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 362,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "118:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 364,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 403,
							"sourceUnit": 1320,
							"src": "144:62:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 363,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1319,
										"src": "152:7:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 366,
										"name": "IERC165",
										"nameLocations": [
											"357:7:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1319,
										"src": "357:7:5"
									},
									"id": 367,
									"nodeType": "InheritanceSpecifier",
									"src": "357:7:5"
								}
							],
							"canonicalName": "IERC1155Receiver",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 365,
								"nodeType": "StructuredDocumentation",
								"src": "208:118:5",
								"text": " @dev Interface that must be implemented by smart contracts in order to receive\n ERC-1155 token transfers."
							},
							"fullyImplemented": false,
							"id": 402,
							"linearizedBaseContracts": [
								402,
								1319
							],
							"name": "IERC1155Receiver",
							"nameLocation": "337:16:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 368,
										"nodeType": "StructuredDocumentation",
										"src": "371:827:5",
										"text": " @dev Handles the receipt of a single ERC-1155 token type. This function is\n called at the end of a `safeTransferFrom` after the balance has been updated.\n NOTE: To accept the transfer, this must return\n `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n (i.e. 0xf23a6e61, or its own function selector).\n @param operator The address which initiated the transfer (i.e. msg.sender)\n @param from The address which previously owned the token\n @param id The ID of the token being transferred\n @param value The amount of tokens being transferred\n @param data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"
									},
									"functionSelector": "f23a6e61",
									"id": 383,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC1155Received",
									"nameLocation": "1212:17:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 370,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "1247:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 383,
												"src": "1239:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 369,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1239:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 372,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1273:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 383,
												"src": "1265:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 371,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1265:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 374,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1295:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 383,
												"src": "1287:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 373,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1287:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 376,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1315:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 383,
												"src": "1307:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 375,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1307:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 378,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1345:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 383,
												"src": "1330:19:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 377,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1330:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1229:126:5"
									},
									"returnParameters": {
										"id": 382,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 381,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 383,
												"src": "1374:6:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 380,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1374:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1373:8:5"
									},
									"scope": 402,
									"src": "1203:179:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 384,
										"nodeType": "StructuredDocumentation",
										"src": "1388:995:5",
										"text": " @dev Handles the receipt of a multiple ERC-1155 token types. This function\n is called at the end of a `safeBatchTransferFrom` after the balances have\n been updated.\n NOTE: To accept the transfer(s), this must return\n `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n (i.e. 0xbc197c81, or its own function selector).\n @param operator The address which initiated the batch transfer (i.e. msg.sender)\n @param from The address which previously owned the token\n @param ids An array containing ids of each token being transferred (order and length must match values array)\n @param values An array containing amounts of each token being transferred (order and length must match ids array)\n @param data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"
									},
									"functionSelector": "bc197c81",
									"id": 401,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC1155BatchReceived",
									"nameLocation": "2397:22:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 397,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 386,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2437:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 401,
												"src": "2429:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 385,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2429:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2463:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 401,
												"src": "2455:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 387,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2455:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 391,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "2496:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 401,
												"src": "2477:22:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 389,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2477:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 390,
													"nodeType": "ArrayTypeName",
													"src": "2477:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 394,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "2528:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 401,
												"src": "2509:25:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 392,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2509:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 393,
													"nodeType": "ArrayTypeName",
													"src": "2509:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 396,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2559:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 401,
												"src": "2544:19:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 395,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2544:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2419:150:5"
									},
									"returnParameters": {
										"id": 400,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 399,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 401,
												"src": "2588:6:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 398,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2588:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2587:8:5"
									},
									"scope": 402,
									"src": "2388:208:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 403,
							"src": "327:2271:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "118:2481:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol",
					"exportedSymbols": {
						"ERC1155Holder": [
							483
						],
						"ERC165": [
							1307
						],
						"IERC1155Receiver": [
							402
						],
						"IERC165": [
							1319
						]
					},
					"id": 484,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 404,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "121:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
							"file": "../../../utils/introspection/ERC165.sol",
							"id": 407,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 484,
							"sourceUnit": 1308,
							"src": "147:72:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 405,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1319,
										"src": "155:7:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								},
								{
									"foreign": {
										"id": 406,
										"name": "ERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1307,
										"src": "164:6:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
							"file": "../IERC1155Receiver.sol",
							"id": 409,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 484,
							"sourceUnit": 403,
							"src": "220:57:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 408,
										"name": "IERC1155Receiver",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 402,
										"src": "228:16:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 411,
										"name": "ERC165",
										"nameLocations": [
											"558:6:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1307,
										"src": "558:6:6"
									},
									"id": 412,
									"nodeType": "InheritanceSpecifier",
									"src": "558:6:6"
								},
								{
									"baseName": {
										"id": 413,
										"name": "IERC1155Receiver",
										"nameLocations": [
											"566:16:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 402,
										"src": "566:16:6"
									},
									"id": 414,
									"nodeType": "InheritanceSpecifier",
									"src": "566:16:6"
								}
							],
							"canonicalName": "ERC1155Holder",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 410,
								"nodeType": "StructuredDocumentation",
								"src": "279:243:6",
								"text": " @dev Simple implementation of `IERC1155Receiver` that will allow a contract to hold ERC-1155 tokens.\n IMPORTANT: When inheriting this contract, you must include a way to use the received tokens, otherwise they will be\n stuck."
							},
							"fullyImplemented": true,
							"id": 483,
							"linearizedBaseContracts": [
								483,
								402,
								1307,
								1319
							],
							"name": "ERC1155Holder",
							"nameLocation": "541:13:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										1306,
										1318
									],
									"body": {
										"id": 437,
										"nodeType": "Block",
										"src": "758:113:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 435,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 430,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 425,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 417,
															"src": "775:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 427,
																		"name": "IERC1155Receiver",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 402,
																		"src": "795:16:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$402_$",
																			"typeString": "type(contract IERC1155Receiver)"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$402_$",
																			"typeString": "type(contract IERC1155Receiver)"
																		}
																	],
																	"id": 426,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "790:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 428,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "790:22:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_contract$_IERC1155Receiver_$402",
																	"typeString": "type(contract IERC1155Receiver)"
																}
															},
															"id": 429,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "813:11:6",
															"memberName": "interfaceId",
															"nodeType": "MemberAccess",
															"src": "790:34:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"src": "775:49:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 433,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 417,
																"src": "852:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 431,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "828:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_ERC1155Holder_$483_$",
																	"typeString": "type(contract super ERC1155Holder)"
																}
															},
															"id": 432,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "834:17:6",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1306,
															"src": "828:23:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 434,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "828:36:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "775:89:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 424,
												"id": 436,
												"nodeType": "Return",
												"src": "768:96:6"
											}
										]
									},
									"documentation": {
										"id": 415,
										"nodeType": "StructuredDocumentation",
										"src": "589:56:6",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 438,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "659:17:6",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 421,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 419,
												"name": "ERC165",
												"nameLocations": [
													"726:6:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1307,
												"src": "726:6:6"
											},
											{
												"id": 420,
												"name": "IERC165",
												"nameLocations": [
													"734:7:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1319,
												"src": "734:7:6"
											}
										],
										"src": "717:25:6"
									},
									"parameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "684:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 438,
												"src": "677:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 416,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "677:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "676:20:6"
									},
									"returnParameters": {
										"id": 424,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 423,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 438,
												"src": "752:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 422,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "752:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "751:6:6"
									},
									"scope": 483,
									"src": "650:221:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										383
									],
									"body": {
										"id": 458,
										"nodeType": "Block",
										"src": "1041:55:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"expression": {
															"id": 454,
															"name": "this",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967268,
															"src": "1058:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC1155Holder_$483",
																"typeString": "contract ERC1155Holder"
															}
														},
														"id": 455,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1063:17:6",
														"memberName": "onERC1155Received",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 459,
														"src": "1058:22:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
															"typeString": "function (address,address,uint256,uint256,bytes memory) external returns (bytes4)"
														}
													},
													"id": 456,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberLocation": "1081:8:6",
													"memberName": "selector",
													"nodeType": "MemberAccess",
													"src": "1058:31:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"functionReturnParameters": 453,
												"id": 457,
												"nodeType": "Return",
												"src": "1051:38:6"
											}
										]
									},
									"functionSelector": "f23a6e61",
									"id": 459,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "onERC1155Received",
									"nameLocation": "886:17:6",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 450,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1015:8:6"
									},
									"parameters": {
										"id": 449,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 440,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "913:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 439,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "913:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 442,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "930:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 441,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 444,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "947:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 443,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "947:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 446,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "964:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 445,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "964:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 448,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "981:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 447,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "981:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "903:96:6"
									},
									"returnParameters": {
										"id": 453,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 452,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "1033:6:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 451,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1033:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1032:8:6"
									},
									"scope": 483,
									"src": "877:219:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										401
									],
									"body": {
										"id": 481,
										"nodeType": "Block",
										"src": "1289:60:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"expression": {
															"id": 477,
															"name": "this",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967268,
															"src": "1306:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC1155Holder_$483",
																"typeString": "contract ERC1155Holder"
															}
														},
														"id": 478,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1311:22:6",
														"memberName": "onERC1155BatchReceived",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 482,
														"src": "1306:27:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
															"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory) external returns (bytes4)"
														}
													},
													"id": 479,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberLocation": "1334:8:6",
													"memberName": "selector",
													"nodeType": "MemberAccess",
													"src": "1306:36:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"functionReturnParameters": 476,
												"id": 480,
												"nodeType": "Return",
												"src": "1299:43:6"
											}
										]
									},
									"functionSelector": "bc197c81",
									"id": 482,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "onERC1155BatchReceived",
									"nameLocation": "1111:22:6",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 473,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1263:8:6"
									},
									"parameters": {
										"id": 472,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 461,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "1143:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 460,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1143:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 463,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "1160:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 462,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1160:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 466,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "1177:16:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 464,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1177:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 465,
													"nodeType": "ArrayTypeName",
													"src": "1177:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 469,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "1203:16:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 467,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1203:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 468,
													"nodeType": "ArrayTypeName",
													"src": "1203:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 471,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "1229:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 470,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1229:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1133:114:6"
									},
									"returnParameters": {
										"id": 476,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 475,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "1281:6:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 474,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1281:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1280:8:6"
									},
									"scope": 483,
									"src": "1102:247:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 484,
							"src": "523:828:6",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "121:1231:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							561
						]
					},
					"id": 562,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 485,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 486,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:7",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 561,
							"linearizedBaseContracts": [
								561
							],
							"name": "IERC20",
							"nameLocation": "214:6:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 487,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:7",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 495,
									"name": "Transfer",
									"nameLocation": "396:8:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 494,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 489,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 495,
												"src": "405:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 488,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 491,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 495,
												"src": "427:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 490,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 493,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 495,
												"src": "447:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 492,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:7"
									},
									"src": "390:72:7"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 496,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:7",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 504,
									"name": "Approval",
									"nameLocation": "627:8:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 503,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 498,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 504,
												"src": "636:21:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 497,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 500,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 504,
												"src": "659:23:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 499,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 502,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 504,
												"src": "684:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 501,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:7"
									},
									"src": "621:78:7"
								},
								{
									"documentation": {
										"id": 505,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:7",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 510,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 506,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:7"
									},
									"returnParameters": {
										"id": 509,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 508,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 510,
												"src": "821:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 507,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:7"
									},
									"scope": 561,
									"src": "775:55:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 511,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:7",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 518,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 514,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 513,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 518,
												"src": "931:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 512,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:7"
									},
									"returnParameters": {
										"id": 517,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 516,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 518,
												"src": "971:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 515,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:7"
									},
									"scope": 561,
									"src": "912:68:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 519,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:7",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 528,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 524,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 521,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 528,
												"src": "1222:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 520,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 523,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 528,
												"src": "1234:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 522,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:7"
									},
									"returnParameters": {
										"id": 527,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 526,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 528,
												"src": "1267:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 525,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:7"
									},
									"scope": 561,
									"src": "1204:69:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 529,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:7",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 538,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 534,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 531,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 538,
												"src": "1567:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 530,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 533,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 538,
												"src": "1582:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 532,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:7"
									},
									"returnParameters": {
										"id": 537,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 536,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 538,
												"src": "1622:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 535,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:7"
									},
									"scope": 561,
									"src": "1548:83:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 539,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:7",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 548,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 544,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 541,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 548,
												"src": "2326:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 540,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 543,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 548,
												"src": "2343:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 542,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:7"
									},
									"returnParameters": {
										"id": 547,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 546,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 548,
												"src": "2376:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 545,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:7"
									},
									"scope": 561,
									"src": "2309:73:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 549,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:7",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 560,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 556,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 551,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 560,
												"src": "2712:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 550,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 553,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 560,
												"src": "2726:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 552,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 555,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 560,
												"src": "2738:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 554,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:7"
									},
									"returnParameters": {
										"id": 559,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 558,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 560,
												"src": "2771:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 557,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:7"
									},
									"scope": 561,
									"src": "2690:87:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 562,
							"src": "204:2575:7",
							"usedErrors": [],
							"usedEvents": [
								495,
								504
							]
						}
					],
					"src": "106:2674:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
					"exportedSymbols": {
						"Address": [
							1231
						],
						"IERC1363": [
							229
						],
						"IERC20": [
							561
						],
						"SafeERC20": [
							972
						]
					},
					"id": 973,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 563,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:8"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 565,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 973,
							"sourceUnit": 562,
							"src": "141:37:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 564,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 561,
										"src": "149:6:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC1363.sol",
							"file": "../../../interfaces/IERC1363.sol",
							"id": 567,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 973,
							"sourceUnit": 230,
							"src": "179:58:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 566,
										"name": "IERC1363",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 229,
										"src": "187:8:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "../../../utils/Address.sol",
							"id": 569,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 973,
							"sourceUnit": 1232,
							"src": "238:51:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 568,
										"name": "Address",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1231,
										"src": "246:7:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 570,
								"nodeType": "StructuredDocumentation",
								"src": "291:458:8",
								"text": " @title SafeERC20\n @dev Wrappers around ERC-20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 972,
							"linearizedBaseContracts": [
								972
							],
							"name": "SafeERC20",
							"nameLocation": "758:9:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 571,
										"nodeType": "StructuredDocumentation",
										"src": "774:65:8",
										"text": " @dev An operation with an ERC-20 token failed."
									},
									"errorSelector": "5274afe7",
									"id": 575,
									"name": "SafeERC20FailedOperation",
									"nameLocation": "850:24:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 574,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 573,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "883:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 575,
												"src": "875:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 572,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "875:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "874:15:8"
									},
									"src": "844:46:8"
								},
								{
									"documentation": {
										"id": 576,
										"nodeType": "StructuredDocumentation",
										"src": "896:71:8",
										"text": " @dev Indicates a failed `decreaseAllowance` request."
									},
									"errorSelector": "e570110f",
									"id": 584,
									"name": "SafeERC20FailedDecreaseAllowance",
									"nameLocation": "978:32:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 583,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 578,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1019:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 584,
												"src": "1011:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 577,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1011:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 580,
												"mutability": "mutable",
												"name": "currentAllowance",
												"nameLocation": "1036:16:8",
												"nodeType": "VariableDeclaration",
												"scope": 584,
												"src": "1028:24:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 579,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1028:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 582,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "1062:17:8",
												"nodeType": "VariableDeclaration",
												"scope": 584,
												"src": "1054:25:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 581,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1054:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1010:70:8"
									},
									"src": "972:109:8"
								},
								{
									"body": {
										"id": 607,
										"nodeType": "Block",
										"src": "1343:88:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 596,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 588,
															"src": "1373:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$561",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 599,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 588,
																		"src": "1395:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$561",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 600,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1401:8:8",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 528,
																	"src": "1395:14:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 601,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 590,
																			"src": "1412:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 602,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 592,
																			"src": "1416:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 603,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1411:11:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																],
																"expression": {
																	"id": 597,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1380:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 598,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1384:10:8",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1380:14:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 604,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1380:43:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$561",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 595,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 930,
														"src": "1353:19:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$561_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 605,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1353:71:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 606,
												"nodeType": "ExpressionStatement",
												"src": "1353:71:8"
											}
										]
									},
									"documentation": {
										"id": 585,
										"nodeType": "StructuredDocumentation",
										"src": "1087:179:8",
										"text": " @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 608,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "1280:12:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 593,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 588,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1300:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 608,
												"src": "1293:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$561",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 587,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 586,
														"name": "IERC20",
														"nameLocations": [
															"1293:6:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 561,
														"src": "1293:6:8"
													},
													"referencedDeclaration": 561,
													"src": "1293:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$561",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 590,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1315:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 608,
												"src": "1307:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 589,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1307:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 592,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1327:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 608,
												"src": "1319:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 591,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1319:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1292:41:8"
									},
									"returnParameters": {
										"id": 594,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1343:0:8"
									},
									"scope": 972,
									"src": "1271:160:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 634,
										"nodeType": "Block",
										"src": "1760:98:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 622,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 612,
															"src": "1790:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$561",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 625,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 612,
																		"src": "1812:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$561",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 626,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1818:12:8",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 560,
																	"src": "1812:18:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 627,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 614,
																			"src": "1833:4:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 628,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 616,
																			"src": "1839:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 629,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 618,
																			"src": "1843:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 630,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1832:17:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																],
																"expression": {
																	"id": 623,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1797:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 624,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1801:10:8",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1797:14:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 631,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1797:53:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$561",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 621,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 930,
														"src": "1770:19:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$561_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 632,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1770:81:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 633,
												"nodeType": "ExpressionStatement",
												"src": "1770:81:8"
											}
										]
									},
									"documentation": {
										"id": 609,
										"nodeType": "StructuredDocumentation",
										"src": "1437:228:8",
										"text": " @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."
									},
									"id": 635,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1679:16:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 619,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 612,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1703:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 635,
												"src": "1696:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$561",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 611,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 610,
														"name": "IERC20",
														"nameLocations": [
															"1696:6:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 561,
														"src": "1696:6:8"
													},
													"referencedDeclaration": 561,
													"src": "1696:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$561",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 614,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1718:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 635,
												"src": "1710:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 613,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1710:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 616,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1732:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 635,
												"src": "1724:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 615,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1724:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 618,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1744:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 635,
												"src": "1736:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 617,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1736:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1695:55:8"
									},
									"returnParameters": {
										"id": 620,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1760:0:8"
									},
									"scope": 972,
									"src": "1670:188:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 665,
										"nodeType": "Block",
										"src": "2600:139:8",
										"statements": [
											{
												"assignments": [
													647
												],
												"declarations": [
													{
														"constant": false,
														"id": 647,
														"mutability": "mutable",
														"name": "oldAllowance",
														"nameLocation": "2618:12:8",
														"nodeType": "VariableDeclaration",
														"scope": 665,
														"src": "2610:20:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 646,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2610:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 656,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 652,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2657:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SafeERC20_$972",
																		"typeString": "library SafeERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SafeERC20_$972",
																		"typeString": "library SafeERC20"
																	}
																],
																"id": 651,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2649:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 650,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2649:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 653,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2649:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 654,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 641,
															"src": "2664:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 648,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 639,
															"src": "2633:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$561",
																"typeString": "contract IERC20"
															}
														},
														"id": 649,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2639:9:8",
														"memberName": "allowance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 538,
														"src": "2633:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view external returns (uint256)"
														}
													},
													"id": 655,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2633:39:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2610:62:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 658,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 639,
															"src": "2695:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$561",
																"typeString": "contract IERC20"
															}
														},
														{
															"id": 659,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 641,
															"src": "2702:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 662,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 660,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 647,
																"src": "2711:12:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 661,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 643,
																"src": "2726:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2711:20:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$561",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 657,
														"name": "forceApprove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 756,
														"src": "2682:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$561_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 663,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2682:50:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 664,
												"nodeType": "ExpressionStatement",
												"src": "2682:50:8"
											}
										]
									},
									"documentation": {
										"id": 636,
										"nodeType": "StructuredDocumentation",
										"src": "1864:645:8",
										"text": " @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."
									},
									"id": 666,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "2523:21:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 644,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 639,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2552:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 666,
												"src": "2545:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$561",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 638,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 637,
														"name": "IERC20",
														"nameLocations": [
															"2545:6:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 561,
														"src": "2545:6:8"
													},
													"referencedDeclaration": 561,
													"src": "2545:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$561",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 641,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2567:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 666,
												"src": "2559:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 640,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2559:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 643,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2584:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 666,
												"src": "2576:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 642,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2576:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2544:46:8"
									},
									"returnParameters": {
										"id": 645,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2600:0:8"
									},
									"scope": 972,
									"src": "2514:225:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 708,
										"nodeType": "Block",
										"src": "3505:370:8",
										"statements": [
											{
												"id": 707,
												"nodeType": "UncheckedBlock",
												"src": "3515:354:8",
												"statements": [
													{
														"assignments": [
															678
														],
														"declarations": [
															{
																"constant": false,
																"id": 678,
																"mutability": "mutable",
																"name": "currentAllowance",
																"nameLocation": "3547:16:8",
																"nodeType": "VariableDeclaration",
																"scope": 707,
																"src": "3539:24:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 677,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "3539:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 687,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 683,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "3590:4:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$972",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$972",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 682,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3582:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 681,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "3582:7:8",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 684,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3582:13:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 685,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 672,
																	"src": "3597:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 679,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 670,
																	"src": "3566:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$561",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 680,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3572:9:8",
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 538,
																"src": "3566:15:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 686,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3566:39:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "3539:66:8"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 690,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 688,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 678,
																"src": "3623:16:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 689,
																"name": "requestedDecrease",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 674,
																"src": "3642:17:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3623:36:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 698,
														"nodeType": "IfStatement",
														"src": "3619:160:8",
														"trueBody": {
															"id": 697,
															"nodeType": "Block",
															"src": "3661:118:8",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"id": 692,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 672,
																				"src": "3719:7:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 693,
																				"name": "currentAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 678,
																				"src": "3728:16:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 694,
																				"name": "requestedDecrease",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 674,
																				"src": "3746:17:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 691,
																			"name": "SafeERC20FailedDecreaseAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 584,
																			"src": "3686:32:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																				"typeString": "function (address,uint256,uint256) pure returns (error)"
																			}
																		},
																		"id": 695,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3686:78:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_error",
																			"typeString": "error"
																		}
																	},
																	"id": 696,
																	"nodeType": "RevertStatement",
																	"src": "3679:85:8"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 700,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 670,
																	"src": "3805:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$561",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"id": 701,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 672,
																	"src": "3812:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 704,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 702,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 678,
																		"src": "3821:16:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 703,
																		"name": "requestedDecrease",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 674,
																		"src": "3840:17:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3821:36:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$561",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 699,
																"name": "forceApprove",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 756,
																"src": "3792:12:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$561_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (contract IERC20,address,uint256)"
																}
															},
															"id": 705,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3792:66:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 706,
														"nodeType": "ExpressionStatement",
														"src": "3792:66:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 667,
										"nodeType": "StructuredDocumentation",
										"src": "2745:657:8",
										"text": " @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n value, non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."
									},
									"id": 709,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "3416:21:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 675,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 670,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3445:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 709,
												"src": "3438:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$561",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 669,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 668,
														"name": "IERC20",
														"nameLocations": [
															"3438:6:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 561,
														"src": "3438:6:8"
													},
													"referencedDeclaration": 561,
													"src": "3438:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$561",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 672,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3460:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 709,
												"src": "3452:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 671,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3452:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 674,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "3477:17:8",
												"nodeType": "VariableDeclaration",
												"scope": 709,
												"src": "3469:25:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 673,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3469:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3437:58:8"
									},
									"returnParameters": {
										"id": 676,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3505:0:8"
									},
									"scope": 972,
									"src": "3407:468:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 755,
										"nodeType": "Block",
										"src": "4529:303:8",
										"statements": [
											{
												"assignments": [
													721
												],
												"declarations": [
													{
														"constant": false,
														"id": 721,
														"mutability": "mutable",
														"name": "approvalCall",
														"nameLocation": "4552:12:8",
														"nodeType": "VariableDeclaration",
														"scope": 755,
														"src": "4539:25:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 720,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4539:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 730,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 724,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 713,
																"src": "4582:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$561",
																	"typeString": "contract IERC20"
																}
															},
															"id": 725,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4588:7:8",
															"memberName": "approve",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 548,
															"src": "4582:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															}
														},
														{
															"components": [
																{
																	"id": 726,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 715,
																	"src": "4598:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 727,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 717,
																	"src": "4607:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 728,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "4597:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															},
															{
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														],
														"expression": {
															"id": 722,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "4567:3:8",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 723,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "4571:10:8",
														"memberName": "encodeCall",
														"nodeType": "MemberAccess",
														"src": "4567:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
															"typeString": "function () pure returns (bytes memory)"
														}
													},
													"id": 729,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4567:47:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4539:75:8"
											},
											{
												"condition": {
													"id": 735,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4629:45:8",
													"subExpression": {
														"arguments": [
															{
																"id": 732,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 713,
																"src": "4654:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$561",
																	"typeString": "contract IERC20"
																}
															},
															{
																"id": 733,
																"name": "approvalCall",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 721,
																"src": "4661:12:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IERC20_$561",
																	"typeString": "contract IERC20"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 731,
															"name": "_callOptionalReturnBool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 971,
															"src": "4630:23:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$561_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																"typeString": "function (contract IERC20,bytes memory) returns (bool)"
															}
														},
														"id": 734,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4630:44:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 754,
												"nodeType": "IfStatement",
												"src": "4625:201:8",
												"trueBody": {
													"id": 753,
													"nodeType": "Block",
													"src": "4676:150:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 737,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 713,
																		"src": "4710:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$561",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 740,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 713,
																					"src": "4732:5:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$561",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 741,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "4738:7:8",
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 548,
																				"src": "4732:13:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 742,
																						"name": "spender",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 715,
																						"src": "4748:7:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					{
																						"hexValue": "30",
																						"id": 743,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "4757:1:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					}
																				],
																				"id": 744,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "4747:12:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				},
																				{
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			],
																			"expression": {
																				"id": 738,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "4717:3:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 739,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "4721:10:8",
																			"memberName": "encodeCall",
																			"nodeType": "MemberAccess",
																			"src": "4717:14:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function () pure returns (bytes memory)"
																			}
																		},
																		"id": 745,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4717:43:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$561",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 736,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 930,
																	"src": "4690:19:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$561_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 746,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4690:71:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 747,
															"nodeType": "ExpressionStatement",
															"src": "4690:71:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 749,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 713,
																		"src": "4795:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$561",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"id": 750,
																		"name": "approvalCall",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 721,
																		"src": "4802:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$561",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 748,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 930,
																	"src": "4775:19:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$561_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 751,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4775:40:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 752,
															"nodeType": "ExpressionStatement",
															"src": "4775:40:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 710,
										"nodeType": "StructuredDocumentation",
										"src": "3881:566:8",
										"text": " @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT.\n NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n set here."
									},
									"id": 756,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "forceApprove",
									"nameLocation": "4461:12:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 718,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 713,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4481:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 756,
												"src": "4474:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$561",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 712,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 711,
														"name": "IERC20",
														"nameLocations": [
															"4474:6:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 561,
														"src": "4474:6:8"
													},
													"referencedDeclaration": 561,
													"src": "4474:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$561",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 715,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4496:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 756,
												"src": "4488:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 714,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4488:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 717,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4513:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 756,
												"src": "4505:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 716,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4505:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4473:46:8"
									},
									"returnParameters": {
										"id": 719,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4529:0:8"
									},
									"scope": 972,
									"src": "4452:380:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 798,
										"nodeType": "Block",
										"src": "5279:219:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 769,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 762,
																"src": "5293:2:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 770,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5296:4:8",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "5293:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 771,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5301:6:8",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5293:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 772,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5311:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5293:19:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 787,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "5379:39:8",
														"subExpression": {
															"arguments": [
																{
																	"id": 783,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 762,
																	"src": "5402:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 784,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 764,
																	"src": "5406:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 785,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 766,
																	"src": "5413:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 781,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 760,
																	"src": "5380:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$229",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 782,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5386:15:8",
																"memberName": "transferAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 180,
																"src": "5380:21:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 786,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5380:38:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 796,
													"nodeType": "IfStatement",
													"src": "5375:117:8",
													"trueBody": {
														"id": 795,
														"nodeType": "Block",
														"src": "5420:72:8",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 791,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 760,
																					"src": "5474:5:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 790,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "5466:7:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 789,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "5466:7:8",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 792,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5466:14:8",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 788,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 575,
																		"src": "5441:24:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 793,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5441:40:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 794,
																"nodeType": "RevertStatement",
																"src": "5434:47:8"
															}
														]
													}
												},
												"id": 797,
												"nodeType": "IfStatement",
												"src": "5289:203:8",
												"trueBody": {
													"id": 780,
													"nodeType": "Block",
													"src": "5314:55:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 775,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 760,
																		"src": "5341:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 776,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 762,
																		"src": "5348:2:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 777,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 764,
																		"src": "5352:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 774,
																	"name": "safeTransfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 608,
																	"src": "5328:12:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$561_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 778,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5328:30:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 779,
															"nodeType": "ExpressionStatement",
															"src": "5328:30:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 757,
										"nodeType": "StructuredDocumentation",
										"src": "4838:333:8",
										"text": " @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."
									},
									"id": 799,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCallRelaxed",
									"nameLocation": "5185:22:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 767,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 760,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5217:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 799,
												"src": "5208:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$229",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 759,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 758,
														"name": "IERC1363",
														"nameLocations": [
															"5208:8:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 229,
														"src": "5208:8:8"
													},
													"referencedDeclaration": 229,
													"src": "5208:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$229",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 762,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5232:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 799,
												"src": "5224:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 761,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5224:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 764,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5244:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 799,
												"src": "5236:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 763,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5236:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 766,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5264:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 799,
												"src": "5251:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 765,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5251:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5207:62:8"
									},
									"returnParameters": {
										"id": 768,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5279:0:8"
									},
									"scope": 972,
									"src": "5176:322:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 845,
										"nodeType": "Block",
										"src": "6017:239:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 818,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 814,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 807,
																"src": "6031:2:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 815,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6034:4:8",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "6031:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 816,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6039:6:8",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "6031:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 817,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6049:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6031:19:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 834,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "6127:49:8",
														"subExpression": {
															"arguments": [
																{
																	"id": 829,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 805,
																	"src": "6154:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 830,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 807,
																	"src": "6160:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 831,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 809,
																	"src": "6164:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 832,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 811,
																	"src": "6171:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 827,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 803,
																	"src": "6128:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$229",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 828,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6134:19:8",
																"memberName": "transferFromAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 206,
																"src": "6128:25:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 833,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6128:48:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 843,
													"nodeType": "IfStatement",
													"src": "6123:127:8",
													"trueBody": {
														"id": 842,
														"nodeType": "Block",
														"src": "6178:72:8",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 838,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 803,
																					"src": "6232:5:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 837,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6224:7:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 836,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "6224:7:8",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 839,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6224:14:8",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 835,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 575,
																		"src": "6199:24:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 840,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6199:40:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 841,
																"nodeType": "RevertStatement",
																"src": "6192:47:8"
															}
														]
													}
												},
												"id": 844,
												"nodeType": "IfStatement",
												"src": "6027:223:8",
												"trueBody": {
													"id": 826,
													"nodeType": "Block",
													"src": "6052:65:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 820,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 803,
																		"src": "6083:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 821,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 805,
																		"src": "6090:4:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 822,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 807,
																		"src": "6096:2:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 823,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 809,
																		"src": "6100:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 819,
																	"name": "safeTransferFrom",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 635,
																	"src": "6066:16:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$561_$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,address,uint256)"
																	}
																},
																"id": 824,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6066:40:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 825,
															"nodeType": "ExpressionStatement",
															"src": "6066:40:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 800,
										"nodeType": "StructuredDocumentation",
										"src": "5504:341:8",
										"text": " @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."
									},
									"id": 846,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCallRelaxed",
									"nameLocation": "5859:26:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 812,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 803,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5904:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 846,
												"src": "5895:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$229",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 802,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 801,
														"name": "IERC1363",
														"nameLocations": [
															"5895:8:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 229,
														"src": "5895:8:8"
													},
													"referencedDeclaration": 229,
													"src": "5895:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$229",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 805,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5927:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 846,
												"src": "5919:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 804,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5919:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 807,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5949:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 846,
												"src": "5941:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 806,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5941:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 809,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5969:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 846,
												"src": "5961:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 808,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5961:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 811,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5997:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 846,
												"src": "5984:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 810,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5984:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5885:122:8"
									},
									"returnParameters": {
										"id": 813,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6017:0:8"
									},
									"scope": 972,
									"src": "5850:406:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 888,
										"nodeType": "Block",
										"src": "7023:218:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 863,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 859,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 852,
																"src": "7037:2:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 860,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7040:4:8",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "7037:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 861,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7045:6:8",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "7037:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 862,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7055:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7037:19:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 877,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "7123:38:8",
														"subExpression": {
															"arguments": [
																{
																	"id": 873,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 852,
																	"src": "7145:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 874,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 854,
																	"src": "7149:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 875,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 856,
																	"src": "7156:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 871,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 850,
																	"src": "7124:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$229",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 872,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7130:14:8",
																"memberName": "approveAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 228,
																"src": "7124:20:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 876,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7124:37:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 886,
													"nodeType": "IfStatement",
													"src": "7119:116:8",
													"trueBody": {
														"id": 885,
														"nodeType": "Block",
														"src": "7163:72:8",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 881,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 850,
																					"src": "7217:5:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 880,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "7209:7:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 879,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "7209:7:8",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 882,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7209:14:8",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 878,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 575,
																		"src": "7184:24:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 883,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7184:40:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 884,
																"nodeType": "RevertStatement",
																"src": "7177:47:8"
															}
														]
													}
												},
												"id": 887,
												"nodeType": "IfStatement",
												"src": "7033:202:8",
												"trueBody": {
													"id": 870,
													"nodeType": "Block",
													"src": "7058:55:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 865,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 850,
																		"src": "7085:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 866,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 852,
																		"src": "7092:2:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 867,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 854,
																		"src": "7096:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 864,
																	"name": "forceApprove",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 756,
																	"src": "7072:12:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$561_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 868,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7072:30:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 869,
															"nodeType": "ExpressionStatement",
															"src": "7072:30:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 847,
										"nodeType": "StructuredDocumentation",
										"src": "6262:654:8",
										"text": " @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n once without retrying, and relies on the returned value to be true.\n Reverts if the returned value is other than `true`."
									},
									"id": 889,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCallRelaxed",
									"nameLocation": "6930:21:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 857,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 850,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "6961:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 889,
												"src": "6952:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$229",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 849,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 848,
														"name": "IERC1363",
														"nameLocations": [
															"6952:8:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 229,
														"src": "6952:8:8"
													},
													"referencedDeclaration": 229,
													"src": "6952:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$229",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 852,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6976:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 889,
												"src": "6968:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 851,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6968:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 854,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6988:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 889,
												"src": "6980:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 853,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6980:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 856,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7008:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 889,
												"src": "6995:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 855,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6995:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6951:62:8"
									},
									"returnParameters": {
										"id": 858,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7023:0:8"
									},
									"scope": 972,
									"src": "6921:320:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 929,
										"nodeType": "Block",
										"src": "7808:650:8",
										"statements": [
											{
												"assignments": [
													899
												],
												"declarations": [
													{
														"constant": false,
														"id": 899,
														"mutability": "mutable",
														"name": "returnSize",
														"nameLocation": "7826:10:8",
														"nodeType": "VariableDeclaration",
														"scope": 929,
														"src": "7818:18:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 898,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7818:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 900,
												"nodeType": "VariableDeclarationStatement",
												"src": "7818:18:8"
											},
											{
												"assignments": [
													902
												],
												"declarations": [
													{
														"constant": false,
														"id": 902,
														"mutability": "mutable",
														"name": "returnValue",
														"nameLocation": "7854:11:8",
														"nodeType": "VariableDeclaration",
														"scope": 929,
														"src": "7846:19:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 901,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7846:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 903,
												"nodeType": "VariableDeclarationStatement",
												"src": "7846:19:8"
											},
											{
												"AST": {
													"nativeSrc": "7900:396:8",
													"nodeType": "YulBlock",
													"src": "7900:396:8",
													"statements": [
														{
															"nativeSrc": "7914:75:8",
															"nodeType": "YulVariableDeclaration",
															"src": "7914:75:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "7934:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "7934:3:8"
																		},
																		"nativeSrc": "7934:5:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7934:5:8"
																	},
																	{
																		"name": "token",
																		"nativeSrc": "7941:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "7941:5:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7948:1:8",
																		"nodeType": "YulLiteral",
																		"src": "7948:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "7955:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "7955:4:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7961:4:8",
																				"nodeType": "YulLiteral",
																				"src": "7961:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7951:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "7951:3:8"
																		},
																		"nativeSrc": "7951:15:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7951:15:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "7974:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "7974:4:8"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "7968:5:8",
																			"nodeType": "YulIdentifier",
																			"src": "7968:5:8"
																		},
																		"nativeSrc": "7968:11:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7968:11:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7981:1:8",
																		"nodeType": "YulLiteral",
																		"src": "7981:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7984:4:8",
																		"nodeType": "YulLiteral",
																		"src": "7984:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nativeSrc": "7929:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "7929:4:8"
																},
																"nativeSrc": "7929:60:8",
																"nodeType": "YulFunctionCall",
																"src": "7929:60:8"
															},
															"variables": [
																{
																	"name": "success",
																	"nativeSrc": "7918:7:8",
																	"nodeType": "YulTypedName",
																	"src": "7918:7:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8050:157:8",
																"nodeType": "YulBlock",
																"src": "8050:157:8",
																"statements": [
																	{
																		"nativeSrc": "8068:22:8",
																		"nodeType": "YulVariableDeclaration",
																		"src": "8068:22:8",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8085:4:8",
																					"nodeType": "YulLiteral",
																					"src": "8085:4:8",
																					"type": "",
																					"value": "0x40"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "8079:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "8079:5:8"
																			},
																			"nativeSrc": "8079:11:8",
																			"nodeType": "YulFunctionCall",
																			"src": "8079:11:8"
																		},
																		"variables": [
																			{
																				"name": "ptr",
																				"nativeSrc": "8072:3:8",
																				"nodeType": "YulTypedName",
																				"src": "8072:3:8",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nativeSrc": "8122:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "8122:3:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8127:1:8",
																					"nodeType": "YulLiteral",
																					"src": "8127:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nativeSrc": "8130:14:8",
																						"nodeType": "YulIdentifier",
																						"src": "8130:14:8"
																					},
																					"nativeSrc": "8130:16:8",
																					"nodeType": "YulFunctionCall",
																					"src": "8130:16:8"
																				}
																			],
																			"functionName": {
																				"name": "returndatacopy",
																				"nativeSrc": "8107:14:8",
																				"nodeType": "YulIdentifier",
																				"src": "8107:14:8"
																			},
																			"nativeSrc": "8107:40:8",
																			"nodeType": "YulFunctionCall",
																			"src": "8107:40:8"
																		},
																		"nativeSrc": "8107:40:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "8107:40:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nativeSrc": "8171:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "8171:3:8"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nativeSrc": "8176:14:8",
																						"nodeType": "YulIdentifier",
																						"src": "8176:14:8"
																					},
																					"nativeSrc": "8176:16:8",
																					"nodeType": "YulFunctionCall",
																					"src": "8176:16:8"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "8164:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "8164:6:8"
																			},
																			"nativeSrc": "8164:29:8",
																			"nodeType": "YulFunctionCall",
																			"src": "8164:29:8"
																		},
																		"nativeSrc": "8164:29:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "8164:29:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "success",
																		"nativeSrc": "8041:7:8",
																		"nodeType": "YulIdentifier",
																		"src": "8041:7:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8034:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "8034:6:8"
																},
																"nativeSrc": "8034:15:8",
																"nodeType": "YulFunctionCall",
																"src": "8034:15:8"
															},
															"nativeSrc": "8031:176:8",
															"nodeType": "YulIf",
															"src": "8031:176:8"
														},
														{
															"nativeSrc": "8220:30:8",
															"nodeType": "YulAssignment",
															"src": "8220:30:8",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nativeSrc": "8234:14:8",
																	"nodeType": "YulIdentifier",
																	"src": "8234:14:8"
																},
																"nativeSrc": "8234:16:8",
																"nodeType": "YulFunctionCall",
																"src": "8234:16:8"
															},
															"variableNames": [
																{
																	"name": "returnSize",
																	"nativeSrc": "8220:10:8",
																	"nodeType": "YulIdentifier",
																	"src": "8220:10:8"
																}
															]
														},
														{
															"nativeSrc": "8263:23:8",
															"nodeType": "YulAssignment",
															"src": "8263:23:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8284:1:8",
																		"nodeType": "YulLiteral",
																		"src": "8284:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "8278:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "8278:5:8"
																},
																"nativeSrc": "8278:8:8",
																"nodeType": "YulFunctionCall",
																"src": "8278:8:8"
															},
															"variableNames": [
																{
																	"name": "returnValue",
																	"nativeSrc": "8263:11:8",
																	"nodeType": "YulIdentifier",
																	"src": "8263:11:8"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 895,
														"isOffset": false,
														"isSlot": false,
														"src": "7955:4:8",
														"valueSize": 1
													},
													{
														"declaration": 895,
														"isOffset": false,
														"isSlot": false,
														"src": "7974:4:8",
														"valueSize": 1
													},
													{
														"declaration": 899,
														"isOffset": false,
														"isSlot": false,
														"src": "8220:10:8",
														"valueSize": 1
													},
													{
														"declaration": 902,
														"isOffset": false,
														"isSlot": false,
														"src": "8263:11:8",
														"valueSize": 1
													},
													{
														"declaration": 893,
														"isOffset": false,
														"isSlot": false,
														"src": "7941:5:8",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 904,
												"nodeType": "InlineAssembly",
												"src": "7875:421:8"
											},
											{
												"condition": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 907,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 905,
															"name": "returnSize",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 899,
															"src": "8310:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 906,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8324:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8310:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 918,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 916,
															"name": "returnValue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 902,
															"src": "8362:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "31",
															"id": 917,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8377:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "8362:16:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 919,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "8310:68:8",
													"trueExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 915,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 910,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 893,
																			"src": "8336:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$561",
																				"typeString": "contract IERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IERC20_$561",
																				"typeString": "contract IERC20"
																			}
																		],
																		"id": 909,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8328:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 908,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "8328:7:8",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 911,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8328:14:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 912,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "8343:4:8",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "8328:19:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 913,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8348:6:8",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "8328:26:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 914,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8358:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8328:31:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 928,
												"nodeType": "IfStatement",
												"src": "8306:146:8",
												"trueBody": {
													"id": 927,
													"nodeType": "Block",
													"src": "8380:72:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 923,
																				"name": "token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 893,
																				"src": "8434:5:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC20_$561",
																					"typeString": "contract IERC20"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_IERC20_$561",
																					"typeString": "contract IERC20"
																				}
																			],
																			"id": 922,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8426:7:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 921,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8426:7:8",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 924,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8426:14:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 920,
																	"name": "SafeERC20FailedOperation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 575,
																	"src": "8401:24:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 925,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8401:40:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 926,
															"nodeType": "RevertStatement",
															"src": "8394:47:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 890,
										"nodeType": "StructuredDocumentation",
										"src": "7247:486:8",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements."
									},
									"id": 930,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "7747:19:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 896,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 893,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "7774:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 930,
												"src": "7767:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$561",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 892,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 891,
														"name": "IERC20",
														"nameLocations": [
															"7767:6:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 561,
														"src": "7767:6:8"
													},
													"referencedDeclaration": 561,
													"src": "7767:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$561",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 895,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7794:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 930,
												"src": "7781:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 894,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7781:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7766:33:8"
									},
									"returnParameters": {
										"id": 897,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7808:0:8"
									},
									"scope": 972,
									"src": "7738:720:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 970,
										"nodeType": "Block",
										"src": "9049:391:8",
										"statements": [
											{
												"assignments": [
													942
												],
												"declarations": [
													{
														"constant": false,
														"id": 942,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "9064:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 970,
														"src": "9059:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 941,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "9059:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 943,
												"nodeType": "VariableDeclarationStatement",
												"src": "9059:12:8"
											},
											{
												"assignments": [
													945
												],
												"declarations": [
													{
														"constant": false,
														"id": 945,
														"mutability": "mutable",
														"name": "returnSize",
														"nameLocation": "9089:10:8",
														"nodeType": "VariableDeclaration",
														"scope": 970,
														"src": "9081:18:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 944,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9081:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 946,
												"nodeType": "VariableDeclarationStatement",
												"src": "9081:18:8"
											},
											{
												"assignments": [
													948
												],
												"declarations": [
													{
														"constant": false,
														"id": 948,
														"mutability": "mutable",
														"name": "returnValue",
														"nameLocation": "9117:11:8",
														"nodeType": "VariableDeclaration",
														"scope": 970,
														"src": "9109:19:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 947,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9109:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 949,
												"nodeType": "VariableDeclarationStatement",
												"src": "9109:19:8"
											},
											{
												"AST": {
													"nativeSrc": "9163:174:8",
													"nodeType": "YulBlock",
													"src": "9163:174:8",
													"statements": [
														{
															"nativeSrc": "9177:71:8",
															"nodeType": "YulAssignment",
															"src": "9177:71:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "9193:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "9193:3:8"
																		},
																		"nativeSrc": "9193:5:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9193:5:8"
																	},
																	{
																		"name": "token",
																		"nativeSrc": "9200:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "9200:5:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9207:1:8",
																		"nodeType": "YulLiteral",
																		"src": "9207:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "9214:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "9214:4:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9220:4:8",
																				"nodeType": "YulLiteral",
																				"src": "9220:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9210:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "9210:3:8"
																		},
																		"nativeSrc": "9210:15:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9210:15:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "9233:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "9233:4:8"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "9227:5:8",
																			"nodeType": "YulIdentifier",
																			"src": "9227:5:8"
																		},
																		"nativeSrc": "9227:11:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9227:11:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9240:1:8",
																		"nodeType": "YulLiteral",
																		"src": "9240:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9243:4:8",
																		"nodeType": "YulLiteral",
																		"src": "9243:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nativeSrc": "9188:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "9188:4:8"
																},
																"nativeSrc": "9188:60:8",
																"nodeType": "YulFunctionCall",
																"src": "9188:60:8"
															},
															"variableNames": [
																{
																	"name": "success",
																	"nativeSrc": "9177:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "9177:7:8"
																}
															]
														},
														{
															"nativeSrc": "9261:30:8",
															"nodeType": "YulAssignment",
															"src": "9261:30:8",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nativeSrc": "9275:14:8",
																	"nodeType": "YulIdentifier",
																	"src": "9275:14:8"
																},
																"nativeSrc": "9275:16:8",
																"nodeType": "YulFunctionCall",
																"src": "9275:16:8"
															},
															"variableNames": [
																{
																	"name": "returnSize",
																	"nativeSrc": "9261:10:8",
																	"nodeType": "YulIdentifier",
																	"src": "9261:10:8"
																}
															]
														},
														{
															"nativeSrc": "9304:23:8",
															"nodeType": "YulAssignment",
															"src": "9304:23:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9325:1:8",
																		"nodeType": "YulLiteral",
																		"src": "9325:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "9319:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "9319:5:8"
																},
																"nativeSrc": "9319:8:8",
																"nodeType": "YulFunctionCall",
																"src": "9319:8:8"
															},
															"variableNames": [
																{
																	"name": "returnValue",
																	"nativeSrc": "9304:11:8",
																	"nodeType": "YulIdentifier",
																	"src": "9304:11:8"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 936,
														"isOffset": false,
														"isSlot": false,
														"src": "9214:4:8",
														"valueSize": 1
													},
													{
														"declaration": 936,
														"isOffset": false,
														"isSlot": false,
														"src": "9233:4:8",
														"valueSize": 1
													},
													{
														"declaration": 945,
														"isOffset": false,
														"isSlot": false,
														"src": "9261:10:8",
														"valueSize": 1
													},
													{
														"declaration": 948,
														"isOffset": false,
														"isSlot": false,
														"src": "9304:11:8",
														"valueSize": 1
													},
													{
														"declaration": 942,
														"isOffset": false,
														"isSlot": false,
														"src": "9177:7:8",
														"valueSize": 1
													},
													{
														"declaration": 934,
														"isOffset": false,
														"isSlot": false,
														"src": "9200:5:8",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 950,
												"nodeType": "InlineAssembly",
												"src": "9138:199:8"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 968,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 951,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 942,
														"src": "9353:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"components": [
															{
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 954,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 952,
																		"name": "returnSize",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 945,
																		"src": "9365:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 953,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9379:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "9365:15:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 965,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 963,
																		"name": "returnValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 948,
																		"src": "9416:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 964,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9431:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "9416:16:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"id": 966,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "Conditional",
																"src": "9365:67:8",
																"trueExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 962,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"arguments": [
																					{
																						"id": 957,
																						"name": "token",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 934,
																						"src": "9391:5:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_IERC20_$561",
																							"typeString": "contract IERC20"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_contract$_IERC20_$561",
																							"typeString": "contract IERC20"
																						}
																					],
																					"id": 956,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "9383:7:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_address_$",
																						"typeString": "type(address)"
																					},
																					"typeName": {
																						"id": 955,
																						"name": "address",
																						"nodeType": "ElementaryTypeName",
																						"src": "9383:7:8",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 958,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "9383:14:8",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 959,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "9398:4:8",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "9383:19:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 960,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "9403:6:8",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "9383:26:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 961,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9412:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "9383:30:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 967,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9364:69:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "9353:80:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 940,
												"id": 969,
												"nodeType": "Return",
												"src": "9346:87:8"
											}
										]
									},
									"documentation": {
										"id": 931,
										"nodeType": "StructuredDocumentation",
										"src": "8464:491:8",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead."
									},
									"id": 971,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturnBool",
									"nameLocation": "8969:23:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 937,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 934,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "9000:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 971,
												"src": "8993:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$561",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 933,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 932,
														"name": "IERC20",
														"nameLocations": [
															"8993:6:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 561,
														"src": "8993:6:8"
													},
													"referencedDeclaration": 561,
													"src": "8993:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$561",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 936,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "9020:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 971,
												"src": "9007:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 935,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9007:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8992:33:8"
									},
									"returnParameters": {
										"id": 940,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 939,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 971,
												"src": "9043:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 938,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9043:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9042:6:8"
									},
									"scope": 972,
									"src": "8960:480:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 973,
							"src": "750:8692:8",
							"usedErrors": [
								575,
								584
							],
							"usedEvents": []
						}
					],
					"src": "115:9328:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							1231
						],
						"Errors": [
							1283
						]
					},
					"id": 1232,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 974,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:9"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Errors.sol",
							"file": "./Errors.sol",
							"id": 976,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1232,
							"sourceUnit": 1284,
							"src": "127:36:9",
							"symbolAliases": [
								{
									"foreign": {
										"id": 975,
										"name": "Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1283,
										"src": "135:6:9",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 977,
								"nodeType": "StructuredDocumentation",
								"src": "165:67:9",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 1231,
							"linearizedBaseContracts": [
								1231
							],
							"name": "Address",
							"nameLocation": "241:7:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 978,
										"nodeType": "StructuredDocumentation",
										"src": "255:75:9",
										"text": " @dev There's no code at `target` (it is not a contract)."
									},
									"errorSelector": "9996b315",
									"id": 982,
									"name": "AddressEmptyCode",
									"nameLocation": "341:16:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 981,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 980,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "366:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 982,
												"src": "358:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 979,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "358:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "357:16:9"
									},
									"src": "335:39:9"
								},
								{
									"body": {
										"id": 1028,
										"nodeType": "Block",
										"src": "1361:278:9",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 996,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 992,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1383:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$1231",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$1231",
																		"typeString": "library Address"
																	}
																],
																"id": 991,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1375:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 990,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1375:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 993,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1375:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 994,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1389:7:9",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "1375:21:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 995,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 987,
														"src": "1399:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1375:30:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1009,
												"nodeType": "IfStatement",
												"src": "1371:125:9",
												"trueBody": {
													"id": 1008,
													"nodeType": "Block",
													"src": "1407:89:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 1002,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967268,
																					"src": "1463:4:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_Address_$1231",
																						"typeString": "library Address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_Address_$1231",
																						"typeString": "library Address"
																					}
																				],
																				"id": 1001,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "1455:7:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 1000,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "1455:7:9",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1003,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1455:13:9",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 1004,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1469:7:9",
																		"memberName": "balance",
																		"nodeType": "MemberAccess",
																		"src": "1455:21:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1005,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 987,
																		"src": "1478:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 997,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1283,
																		"src": "1428:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$1283_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 999,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1435:19:9",
																	"memberName": "InsufficientBalance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1271,
																	"src": "1428:26:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256,uint256) pure returns (error)"
																	}
																},
																"id": 1006,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1428:57:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1007,
															"nodeType": "RevertStatement",
															"src": "1421:64:9"
														}
													]
												}
											},
											{
												"assignments": [
													1011,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1011,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1512:7:9",
														"nodeType": "VariableDeclaration",
														"scope": 1028,
														"src": "1507:12:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1010,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1507:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1018,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 1016,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1555:2:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 1012,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 985,
																"src": "1525:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 1013,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1535:4:9",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "1525:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1015,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1014,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 987,
																"src": "1547:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "1525:29:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1017,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1525:33:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1506:52:9"
											},
											{
												"condition": {
													"id": 1020,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "1572:8:9",
													"subExpression": {
														"id": 1019,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1011,
														"src": "1573:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1027,
												"nodeType": "IfStatement",
												"src": "1568:65:9",
												"trueBody": {
													"id": 1026,
													"nodeType": "Block",
													"src": "1582:51:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 1021,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1283,
																		"src": "1603:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$1283_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 1023,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1610:10:9",
																	"memberName": "FailedCall",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1274,
																	"src": "1603:17:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1024,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1603:19:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1025,
															"nodeType": "RevertStatement",
															"src": "1596:26:9"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 983,
										"nodeType": "StructuredDocumentation",
										"src": "380:905:9",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 1029,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "1299:9:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 988,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 985,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1325:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 1029,
												"src": "1309:25:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 984,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1309:15:9",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 987,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1344:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1029,
												"src": "1336:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 986,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1336:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1308:43:9"
									},
									"returnParameters": {
										"id": 989,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1361:0:9"
									},
									"scope": 1231,
									"src": "1290:349:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1045,
										"nodeType": "Block",
										"src": "2573:62:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1040,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1032,
															"src": "2612:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1041,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1034,
															"src": "2620:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 1042,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2626:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 1039,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1096,
														"src": "2590:21:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256) returns (bytes memory)"
														}
													},
													"id": 1043,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2590:38:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1038,
												"id": 1044,
												"nodeType": "Return",
												"src": "2583:45:9"
											}
										]
									},
									"documentation": {
										"id": 1030,
										"nodeType": "StructuredDocumentation",
										"src": "1645:834:9",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason or custom error, it is bubbled\n up by this function (like regular Solidity function calls). However, if\n the call reverted with no returned reason, this function reverts with a\n {Errors.FailedCall} error.\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert."
									},
									"id": 1046,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "2493:12:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1035,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1032,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "2514:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1046,
												"src": "2506:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1031,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2506:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1034,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2535:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1046,
												"src": "2522:17:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1033,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2522:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2505:35:9"
									},
									"returnParameters": {
										"id": 1038,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1037,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1046,
												"src": "2559:12:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1036,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2559:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2558:14:9"
									},
									"scope": 1231,
									"src": "2484:151:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1095,
										"nodeType": "Block",
										"src": "3072:294:9",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1064,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1060,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3094:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$1231",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$1231",
																		"typeString": "library Address"
																	}
																],
																"id": 1059,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3086:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1058,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3086:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 1061,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3086:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1062,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3100:7:9",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "3086:21:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1063,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1053,
														"src": "3110:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3086:29:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1077,
												"nodeType": "IfStatement",
												"src": "3082:123:9",
												"trueBody": {
													"id": 1076,
													"nodeType": "Block",
													"src": "3117:88:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 1070,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967268,
																					"src": "3173:4:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_Address_$1231",
																						"typeString": "library Address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_Address_$1231",
																						"typeString": "library Address"
																					}
																				],
																				"id": 1069,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "3165:7:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 1068,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "3165:7:9",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1071,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3165:13:9",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 1072,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3179:7:9",
																		"memberName": "balance",
																		"nodeType": "MemberAccess",
																		"src": "3165:21:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1073,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1053,
																		"src": "3188:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1065,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1283,
																		"src": "3138:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$1283_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 1067,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3145:19:9",
																	"memberName": "InsufficientBalance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1271,
																	"src": "3138:26:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256,uint256) pure returns (error)"
																	}
																},
																"id": 1074,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3138:56:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1075,
															"nodeType": "RevertStatement",
															"src": "3131:63:9"
														}
													]
												}
											},
											{
												"assignments": [
													1079,
													1081
												],
												"declarations": [
													{
														"constant": false,
														"id": 1079,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3220:7:9",
														"nodeType": "VariableDeclaration",
														"scope": 1095,
														"src": "3215:12:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1078,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3215:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1081,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3242:10:9",
														"nodeType": "VariableDeclaration",
														"scope": 1095,
														"src": "3229:23:9",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1080,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3229:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1088,
												"initialValue": {
													"arguments": [
														{
															"id": 1086,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1051,
															"src": "3282:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 1082,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1049,
																"src": "3256:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1083,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3263:4:9",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "3256:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1085,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1084,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1053,
																"src": "3275:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "3256:25:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1087,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3256:31:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3214:73:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1090,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1049,
															"src": "3331:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1091,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1079,
															"src": "3339:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1092,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1081,
															"src": "3348:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1089,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1188,
														"src": "3304:26:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 1093,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3304:55:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1057,
												"id": 1094,
												"nodeType": "Return",
												"src": "3297:62:9"
											}
										]
									},
									"documentation": {
										"id": 1047,
										"nodeType": "StructuredDocumentation",
										"src": "2641:313:9",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`."
									},
									"id": 1096,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "2968:21:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1054,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1049,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "2998:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1096,
												"src": "2990:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1048,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2990:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1051,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3019:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1096,
												"src": "3006:17:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1050,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3006:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1053,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3033:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1096,
												"src": "3025:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1052,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3025:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2989:50:9"
									},
									"returnParameters": {
										"id": 1057,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1056,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1096,
												"src": "3058:12:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1055,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3058:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3057:14:9"
									},
									"scope": 1231,
									"src": "2959:407:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1121,
										"nodeType": "Block",
										"src": "3605:154:9",
										"statements": [
											{
												"assignments": [
													1107,
													1109
												],
												"declarations": [
													{
														"constant": false,
														"id": 1107,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3621:7:9",
														"nodeType": "VariableDeclaration",
														"scope": 1121,
														"src": "3616:12:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1106,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3616:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1109,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3643:10:9",
														"nodeType": "VariableDeclaration",
														"scope": 1121,
														"src": "3630:23:9",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1108,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3630:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1114,
												"initialValue": {
													"arguments": [
														{
															"id": 1112,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1101,
															"src": "3675:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1110,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1099,
															"src": "3657:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1111,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3664:10:9",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "3657:17:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 1113,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3657:23:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3615:65:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1116,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1099,
															"src": "3724:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1117,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1107,
															"src": "3732:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1118,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1109,
															"src": "3741:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1115,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1188,
														"src": "3697:26:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 1119,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3697:55:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1105,
												"id": 1120,
												"nodeType": "Return",
												"src": "3690:62:9"
											}
										]
									},
									"documentation": {
										"id": 1097,
										"nodeType": "StructuredDocumentation",
										"src": "3372:128:9",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call."
									},
									"id": 1122,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "3514:18:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1099,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3541:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1122,
												"src": "3533:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1098,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3533:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1101,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3562:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1122,
												"src": "3549:17:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1100,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3549:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3532:35:9"
									},
									"returnParameters": {
										"id": 1105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1104,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1122,
												"src": "3591:12:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1103,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3591:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3590:14:9"
									},
									"scope": 1231,
									"src": "3505:254:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1147,
										"nodeType": "Block",
										"src": "3997:156:9",
										"statements": [
											{
												"assignments": [
													1133,
													1135
												],
												"declarations": [
													{
														"constant": false,
														"id": 1133,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "4013:7:9",
														"nodeType": "VariableDeclaration",
														"scope": 1147,
														"src": "4008:12:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1132,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4008:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1135,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4035:10:9",
														"nodeType": "VariableDeclaration",
														"scope": 1147,
														"src": "4022:23:9",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1134,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4022:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1140,
												"initialValue": {
													"arguments": [
														{
															"id": 1138,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1127,
															"src": "4069:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1136,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1125,
															"src": "4049:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1137,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4056:12:9",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "4049:19:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 1139,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4049:25:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4007:67:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1142,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1125,
															"src": "4118:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1143,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1133,
															"src": "4126:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1144,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1135,
															"src": "4135:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1141,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1188,
														"src": "4091:26:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 1145,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4091:55:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1131,
												"id": 1146,
												"nodeType": "Return",
												"src": "4084:62:9"
											}
										]
									},
									"documentation": {
										"id": 1123,
										"nodeType": "StructuredDocumentation",
										"src": "3765:130:9",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call."
									},
									"id": 1148,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "3909:20:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1128,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1125,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3938:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1148,
												"src": "3930:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1124,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3930:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1127,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3959:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1148,
												"src": "3946:17:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1126,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3946:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3929:35:9"
									},
									"returnParameters": {
										"id": 1131,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1130,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1148,
												"src": "3983:12:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1129,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3983:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3982:14:9"
									},
									"scope": 1231,
									"src": "3900:253:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1187,
										"nodeType": "Block",
										"src": "4579:424:9",
										"statements": [
											{
												"condition": {
													"id": 1161,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4593:8:9",
													"subExpression": {
														"id": 1160,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1153,
														"src": "4594:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1185,
													"nodeType": "Block",
													"src": "4653:344:9",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1176,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1170,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 1167,
																			"name": "returndata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1155,
																			"src": "4841:10:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 1168,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4852:6:9",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "4841:17:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1169,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4862:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "4841:22:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1175,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"id": 1171,
																				"name": "target",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1151,
																				"src": "4867:6:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 1172,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "4874:4:9",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "4867:11:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 1173,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4879:6:9",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "4867:18:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1174,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4889:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "4867:23:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "4841:49:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1182,
															"nodeType": "IfStatement",
															"src": "4837:119:9",
															"trueBody": {
																"id": 1181,
																"nodeType": "Block",
																"src": "4892:64:9",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1178,
																					"name": "target",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1151,
																					"src": "4934:6:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1177,
																				"name": "AddressEmptyCode",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 982,
																				"src": "4917:16:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																					"typeString": "function (address) pure returns (error)"
																				}
																			},
																			"id": 1179,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4917:24:9",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 1180,
																		"nodeType": "RevertStatement",
																		"src": "4910:31:9"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 1183,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1155,
																"src": "4976:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1159,
															"id": 1184,
															"nodeType": "Return",
															"src": "4969:17:9"
														}
													]
												},
												"id": 1186,
												"nodeType": "IfStatement",
												"src": "4589:408:9",
												"trueBody": {
													"id": 1166,
													"nodeType": "Block",
													"src": "4603:44:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1163,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1155,
																		"src": "4625:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 1162,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1230,
																	"src": "4617:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 1164,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4617:19:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1165,
															"nodeType": "ExpressionStatement",
															"src": "4617:19:9"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1149,
										"nodeType": "StructuredDocumentation",
										"src": "4159:257:9",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n was not a contract or bubbling up the revert reason (falling back to {Errors.FailedCall}) in case\n of an unsuccessful call."
									},
									"id": 1188,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "4430:26:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1156,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1151,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4474:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1188,
												"src": "4466:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1150,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4466:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1153,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "4495:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1188,
												"src": "4490:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1152,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4490:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1155,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "4525:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 1188,
												"src": "4512:23:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1154,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4512:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4456:85:9"
									},
									"returnParameters": {
										"id": 1159,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1158,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1188,
												"src": "4565:12:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1157,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4565:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4564:14:9"
									},
									"scope": 1231,
									"src": "4421:582:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1209,
										"nodeType": "Block",
										"src": "5307:122:9",
										"statements": [
											{
												"condition": {
													"id": 1199,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "5321:8:9",
													"subExpression": {
														"id": 1198,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1191,
														"src": "5322:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1207,
													"nodeType": "Block",
													"src": "5381:42:9",
													"statements": [
														{
															"expression": {
																"id": 1205,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1193,
																"src": "5402:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1197,
															"id": 1206,
															"nodeType": "Return",
															"src": "5395:17:9"
														}
													]
												},
												"id": 1208,
												"nodeType": "IfStatement",
												"src": "5317:106:9",
												"trueBody": {
													"id": 1204,
													"nodeType": "Block",
													"src": "5331:44:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1201,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1193,
																		"src": "5353:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 1200,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1230,
																	"src": "5345:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 1202,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5345:19:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1203,
															"nodeType": "ExpressionStatement",
															"src": "5345:19:9"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1189,
										"nodeType": "StructuredDocumentation",
										"src": "5009:191:9",
										"text": " @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n revert reason or with a default {Errors.FailedCall} error."
									},
									"id": 1210,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "5214:16:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1191,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "5236:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1210,
												"src": "5231:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1190,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5231:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1193,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5258:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 1210,
												"src": "5245:23:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1192,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5245:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5230:39:9"
									},
									"returnParameters": {
										"id": 1197,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1196,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1210,
												"src": "5293:12:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1195,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5293:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5292:14:9"
									},
									"scope": 1231,
									"src": "5205:224:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1229,
										"nodeType": "Block",
										"src": "5598:432:9",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1219,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1216,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1213,
															"src": "5674:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1217,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5685:6:9",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5674:17:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1218,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5694:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5674:21:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1227,
													"nodeType": "Block",
													"src": "5973:51:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 1222,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1283,
																		"src": "5994:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$1283_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 1224,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6001:10:9",
																	"memberName": "FailedCall",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1274,
																	"src": "5994:17:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1225,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5994:19:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1226,
															"nodeType": "RevertStatement",
															"src": "5987:26:9"
														}
													]
												},
												"id": 1228,
												"nodeType": "IfStatement",
												"src": "5670:354:9",
												"trueBody": {
													"id": 1221,
													"nodeType": "Block",
													"src": "5697:270:9",
													"statements": [
														{
															"AST": {
																"nativeSrc": "5824:133:9",
																"nodeType": "YulBlock",
																"src": "5824:133:9",
																"statements": [
																	{
																		"nativeSrc": "5842:40:9",
																		"nodeType": "YulVariableDeclaration",
																		"src": "5842:40:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nativeSrc": "5871:10:9",
																					"nodeType": "YulIdentifier",
																					"src": "5871:10:9"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "5865:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "5865:5:9"
																			},
																			"nativeSrc": "5865:17:9",
																			"nodeType": "YulFunctionCall",
																			"src": "5865:17:9"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nativeSrc": "5846:15:9",
																				"nodeType": "YulTypedName",
																				"src": "5846:15:9",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "5910:2:9",
																							"nodeType": "YulLiteral",
																							"src": "5910:2:9",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nativeSrc": "5914:10:9",
																							"nodeType": "YulIdentifier",
																							"src": "5914:10:9"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "5906:3:9",
																						"nodeType": "YulIdentifier",
																						"src": "5906:3:9"
																					},
																					"nativeSrc": "5906:19:9",
																					"nodeType": "YulFunctionCall",
																					"src": "5906:19:9"
																				},
																				{
																					"name": "returndata_size",
																					"nativeSrc": "5927:15:9",
																					"nodeType": "YulIdentifier",
																					"src": "5927:15:9"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5899:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "5899:6:9"
																			},
																			"nativeSrc": "5899:44:9",
																			"nodeType": "YulFunctionCall",
																			"src": "5899:44:9"
																		},
																		"nativeSrc": "5899:44:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "5899:44:9"
																	}
																]
															},
															"evmVersion": "cancun",
															"externalReferences": [
																{
																	"declaration": 1213,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "5871:10:9",
																	"valueSize": 1
																},
																{
																	"declaration": 1213,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "5914:10:9",
																	"valueSize": 1
																}
															],
															"flags": [
																"memory-safe"
															],
															"id": 1220,
															"nodeType": "InlineAssembly",
															"src": "5799:158:9"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1211,
										"nodeType": "StructuredDocumentation",
										"src": "5435:103:9",
										"text": " @dev Reverts with returndata if present. Otherwise reverts with {Errors.FailedCall}."
									},
									"id": 1230,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "5552:7:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1213,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5573:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 1230,
												"src": "5560:23:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1212,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5560:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5559:25:9"
									},
									"returnParameters": {
										"id": 1215,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5598:0:9"
									},
									"scope": 1231,
									"src": "5543:487:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1232,
							"src": "233:5799:9",
							"usedErrors": [
								982
							],
							"usedEvents": []
						}
					],
					"src": "101:5932:9"
				},
				"id": 9
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1261
						]
					},
					"id": 1262,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1233,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:10"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1234,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:10",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1261,
							"linearizedBaseContracts": [
								1261
							],
							"name": "Context",
							"nameLocation": "642:7:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1242,
										"nodeType": "Block",
										"src": "718:34:10",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1239,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:10",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1240,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:10",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:10",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1238,
												"id": 1241,
												"nodeType": "Return",
												"src": "728:17:10"
											}
										]
									},
									"id": 1243,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1235,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:10"
									},
									"returnParameters": {
										"id": 1238,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1237,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1243,
												"src": "709:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1236,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:10"
									},
									"scope": 1261,
									"src": "656:96:10",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1251,
										"nodeType": "Block",
										"src": "825:32:10",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1248,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:10",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1249,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:10",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1247,
												"id": 1250,
												"nodeType": "Return",
												"src": "835:15:10"
											}
										]
									},
									"id": 1252,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1244,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:10"
									},
									"returnParameters": {
										"id": 1247,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1246,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1252,
												"src": "809:14:10",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1245,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:10"
									},
									"scope": 1261,
									"src": "758:99:10",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1259,
										"nodeType": "Block",
										"src": "935:25:10",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 1257,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:10",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1256,
												"id": 1258,
												"nodeType": "Return",
												"src": "945:8:10"
											}
										]
									},
									"id": 1260,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1253,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:10"
									},
									"returnParameters": {
										"id": 1256,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1255,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1260,
												"src": "926:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1254,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:10"
									},
									"scope": 1261,
									"src": "863:97:10",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1262,
							"src": "624:338:10",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:10"
				},
				"id": 10
			},
			"@openzeppelin/contracts/utils/Errors.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Errors.sol",
					"exportedSymbols": {
						"Errors": [
							1283
						]
					},
					"id": 1284,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1263,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "100:24:11"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Errors",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1264,
								"nodeType": "StructuredDocumentation",
								"src": "126:284:11",
								"text": " @dev Collection of common custom errors used in multiple contracts\n IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library.\n It is recommended to avoid relying on the error API for critical functionality.\n _Available since v5.1._"
							},
							"fullyImplemented": true,
							"id": 1283,
							"linearizedBaseContracts": [
								1283
							],
							"name": "Errors",
							"nameLocation": "419:6:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1265,
										"nodeType": "StructuredDocumentation",
										"src": "432:94:11",
										"text": " @dev The ETH balance of the account is not enough to perform the operation."
									},
									"errorSelector": "cf479181",
									"id": 1271,
									"name": "InsufficientBalance",
									"nameLocation": "537:19:11",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1267,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "565:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1271,
												"src": "557:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1266,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "557:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1269,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "582:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1271,
												"src": "574:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1268,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "574:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "556:33:11"
									},
									"src": "531:59:11"
								},
								{
									"documentation": {
										"id": 1272,
										"nodeType": "StructuredDocumentation",
										"src": "596:89:11",
										"text": " @dev A call to an address target failed. The target may have reverted."
									},
									"errorSelector": "d6bda275",
									"id": 1274,
									"name": "FailedCall",
									"nameLocation": "696:10:11",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1273,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "706:2:11"
									},
									"src": "690:19:11"
								},
								{
									"documentation": {
										"id": 1275,
										"nodeType": "StructuredDocumentation",
										"src": "715:46:11",
										"text": " @dev The deployment failed."
									},
									"errorSelector": "b06ebf3d",
									"id": 1277,
									"name": "FailedDeployment",
									"nameLocation": "772:16:11",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1276,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "788:2:11"
									},
									"src": "766:25:11"
								},
								{
									"documentation": {
										"id": 1278,
										"nodeType": "StructuredDocumentation",
										"src": "797:58:11",
										"text": " @dev A necessary precompile is missing."
									},
									"errorSelector": "42b01bce",
									"id": 1282,
									"name": "MissingPrecompile",
									"nameLocation": "866:17:11",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1281,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1280,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1282,
												"src": "884:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1279,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "884:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "883:9:11"
									},
									"src": "860:33:11"
								}
							],
							"scope": 1284,
							"src": "411:484:11",
							"usedErrors": [
								1271,
								1274,
								1277,
								1282
							],
							"usedEvents": []
						}
					],
					"src": "100:796:11"
				},
				"id": 11
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							1307
						],
						"IERC165": [
							1319
						]
					},
					"id": 1308,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1285,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "114:24:12"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 1287,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1308,
							"sourceUnit": 1320,
							"src": "140:38:12",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1286,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1319,
										"src": "148:7:12",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1289,
										"name": "IERC165",
										"nameLocations": [
											"688:7:12"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1319,
										"src": "688:7:12"
									},
									"id": 1290,
									"nodeType": "InheritanceSpecifier",
									"src": "688:7:12"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1288,
								"nodeType": "StructuredDocumentation",
								"src": "180:479:12",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 1307,
							"linearizedBaseContracts": [
								1307,
								1319
							],
							"name": "ERC165",
							"nameLocation": "678:6:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										1318
									],
									"body": {
										"id": 1305,
										"nodeType": "Block",
										"src": "845:64:12",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 1303,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1298,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1293,
														"src": "862:11:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1300,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1319,
																	"src": "882:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1319_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1319_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 1299,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "877:4:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1301,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "877:13:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$1319",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 1302,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "891:11:12",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "877:25:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "862:40:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1297,
												"id": 1304,
												"nodeType": "Return",
												"src": "855:47:12"
											}
										]
									},
									"documentation": {
										"id": 1291,
										"nodeType": "StructuredDocumentation",
										"src": "702:56:12",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 1306,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "772:17:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1294,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1293,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "797:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 1306,
												"src": "790:18:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1292,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "790:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "789:20:12"
									},
									"returnParameters": {
										"id": 1297,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1296,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1306,
												"src": "839:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1295,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "839:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "838:6:12"
									},
									"scope": 1307,
									"src": "763:146:12",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1308,
							"src": "660:251:12",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "114:798:12"
				},
				"id": 12
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1319
						]
					},
					"id": 1320,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1309,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:13"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1310,
								"nodeType": "StructuredDocumentation",
								"src": "141:280:13",
								"text": " @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 1319,
							"linearizedBaseContracts": [
								1319
							],
							"name": "IERC165",
							"nameLocation": "432:7:13",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1311,
										"nodeType": "StructuredDocumentation",
										"src": "446:340:13",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1318,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "800:17:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1314,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1313,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "825:11:13",
												"nodeType": "VariableDeclaration",
												"scope": 1318,
												"src": "818:18:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1312,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "818:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "817:20:13"
									},
									"returnParameters": {
										"id": 1317,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1316,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1318,
												"src": "861:4:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1315,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "861:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "860:6:13"
									},
									"scope": 1319,
									"src": "791:76:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1320,
							"src": "422:447:13",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:755:13"
				},
				"id": 13
			},
			"SnowmenSales.sol": {
				"ast": {
					"absolutePath": "SnowmenSales.sol",
					"exportedSymbols": {
						"Address": [
							1231
						],
						"Context": [
							1261
						],
						"ERC1155Holder": [
							483
						],
						"ERC165": [
							1307
						],
						"IERC1155": [
							360
						],
						"IERC1155Receiver": [
							402
						],
						"IERC1363": [
							229
						],
						"IERC165": [
							1319
						],
						"IERC20": [
							561
						],
						"Ownable": [
							147
						],
						"SafeERC20": [
							972
						],
						"SnowmenSales": [
							1698
						]
					},
					"id": 1699,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1321,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:14"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 1322,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1699,
							"sourceUnit": 148,
							"src": "61:52:14",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
							"file": "@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
							"id": 1323,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1699,
							"sourceUnit": 361,
							"src": "115:60:14",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol",
							"file": "@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol",
							"id": 1324,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1699,
							"sourceUnit": 484,
							"src": "177:71:14",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"id": 1325,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1699,
							"sourceUnit": 973,
							"src": "250:65:14",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1326,
										"name": "Ownable",
										"nameLocations": [
											"344:7:14"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "344:7:14"
									},
									"id": 1327,
									"nodeType": "InheritanceSpecifier",
									"src": "344:7:14"
								},
								{
									"baseName": {
										"id": 1328,
										"name": "ERC1155Holder",
										"nameLocations": [
											"353:13:14"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 483,
										"src": "353:13:14"
									},
									"id": 1329,
									"nodeType": "InheritanceSpecifier",
									"src": "353:13:14"
								}
							],
							"canonicalName": "SnowmenSales",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1698,
							"linearizedBaseContracts": [
								1698,
								483,
								402,
								1307,
								1319,
								147,
								1261
							],
							"name": "SnowmenSales",
							"nameLocation": "328:12:14",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1333,
									"libraryName": {
										"id": 1330,
										"name": "SafeERC20",
										"nameLocations": [
											"380:9:14"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 972,
										"src": "380:9:14"
									},
									"nodeType": "UsingForDirective",
									"src": "374:27:14",
									"typeName": {
										"id": 1332,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1331,
											"name": "IERC20",
											"nameLocations": [
												"394:6:14"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 561,
											"src": "394:6:14"
										},
										"referencedDeclaration": 561,
										"src": "394:6:14",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$561",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "2c1449e1",
									"id": 1336,
									"mutability": "mutable",
									"name": "snowmenToken",
									"nameLocation": "527:12:14",
									"nodeType": "VariableDeclaration",
									"scope": 1698,
									"src": "513:26:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$561",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 1335,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1334,
											"name": "IERC20",
											"nameLocations": [
												"513:6:14"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 561,
											"src": "513:6:14"
										},
										"referencedDeclaration": 561,
										"src": "513:6:14",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$561",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "ea75aa8f",
									"id": 1339,
									"mutability": "mutable",
									"name": "snowmenGame",
									"nameLocation": "605:11:14",
									"nodeType": "VariableDeclaration",
									"scope": 1698,
									"src": "589:27:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC1155_$360",
										"typeString": "contract IERC1155"
									},
									"typeName": {
										"id": 1338,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1337,
											"name": "IERC1155",
											"nameLocations": [
												"589:8:14"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 360,
											"src": "589:8:14"
										},
										"referencedDeclaration": 360,
										"src": "589:8:14",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC1155_$360",
											"typeString": "contract IERC1155"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 1342,
									"mutability": "constant",
									"name": "TICKET_PRICE",
									"nameLocation": "724:12:14",
									"nodeType": "VariableDeclaration",
									"scope": 1698,
									"src": "699:50:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1340,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "699:7:14",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "302e3031",
										"id": 1341,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "739:10:14",
										"subdenomination": "ether",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_10000000000000000_by_1",
											"typeString": "int_const 10000000000000000"
										},
										"value": "0.01"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1345,
									"mutability": "constant",
									"name": "TICKET_QUANTITY",
									"nameLocation": "781:15:14",
									"nodeType": "VariableDeclaration",
									"scope": 1698,
									"src": "756:44:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1343,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "756:7:14",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 1344,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "799:1:14",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1348,
									"mutability": "constant",
									"name": "TICKET_ID",
									"nameLocation": "832:9:14",
									"nodeType": "VariableDeclaration",
									"scope": 1698,
									"src": "807:76:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1346,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "807:7:14",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "333430323832333636393230393338343633343633333734363037343331373638323131343536",
										"id": 1347,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "844:39:14",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_340282366920938463463374607431768211456_by_1",
											"typeString": "int_const 3402...(31 digits omitted)...1456"
										},
										"value": "340282366920938463463374607431768211456"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "d4ddce8a",
									"id": 1352,
									"mutability": "mutable",
									"name": "tokenPrice",
									"nameLocation": "927:10:14",
									"nodeType": "VariableDeclaration",
									"scope": 1698,
									"src": "892:45:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
										"typeString": "mapping(uint256 => uint256)"
									},
									"typeName": {
										"id": 1351,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1349,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "900:7:14",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "892:27:14",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
											"typeString": "mapping(uint256 => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1350,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "911:7:14",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "18e75bb8c091a6448c12a2023f055b2714c151b941a91df8b9938788769ffe13",
									"id": 1360,
									"name": "SetPrice",
									"nameLocation": "1077:8:14",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1354,
												"indexed": false,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1094:7:14",
												"nodeType": "VariableDeclaration",
												"scope": 1360,
												"src": "1086:15:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1353,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1086:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1356,
												"indexed": false,
												"mutability": "mutable",
												"name": "price",
												"nameLocation": "1111:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 1360,
												"src": "1103:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1355,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1103:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1358,
												"indexed": false,
												"mutability": "mutable",
												"name": "timestamp",
												"nameLocation": "1126:9:14",
												"nodeType": "VariableDeclaration",
												"scope": 1360,
												"src": "1118:17:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1357,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1118:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1085:51:14"
									},
									"src": "1071:66:14"
								},
								{
									"anonymous": false,
									"eventSelector": "b911d7e2ec7c85dd17dc5dbf9c086e0ade9a12a268015519a2a5f93ce5754fea",
									"id": 1372,
									"name": "BuyItem",
									"nameLocation": "1151:7:14",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1371,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1362,
												"indexed": true,
												"mutability": "mutable",
												"name": "buyer",
												"nameLocation": "1185:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 1372,
												"src": "1169:21:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1361,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1169:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1364,
												"indexed": false,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1282:7:14",
												"nodeType": "VariableDeclaration",
												"scope": 1372,
												"src": "1274:15:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1363,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1274:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1366,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1308:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 1372,
												"src": "1300:14:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1365,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1300:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1368,
												"indexed": false,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "1331:8:14",
												"nodeType": "VariableDeclaration",
												"scope": 1372,
												"src": "1325:14:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1367,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1325:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1370,
												"indexed": false,
												"mutability": "mutable",
												"name": "timestamp",
												"nameLocation": "1358:9:14",
												"nodeType": "VariableDeclaration",
												"scope": 1372,
												"src": "1350:17:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1369,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1350:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1158:216:14"
									},
									"src": "1145:230:14"
								},
								{
									"anonymous": false,
									"eventSelector": "2a3164428cba5dad15f5ffe47e10cbefdcbbe9e269fd482753982ee8b2648c3e",
									"id": 1378,
									"name": "BuyTicket",
									"nameLocation": "1389:9:14",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1377,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1374,
												"indexed": true,
												"mutability": "mutable",
												"name": "buyer",
												"nameLocation": "1415:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 1378,
												"src": "1399:21:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1373,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1399:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1376,
												"indexed": false,
												"mutability": "mutable",
												"name": "timestamp",
												"nameLocation": "1430:9:14",
												"nodeType": "VariableDeclaration",
												"scope": 1378,
												"src": "1422:17:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1375,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1422:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1398:42:14"
									},
									"src": "1383:58:14"
								},
								{
									"anonymous": false,
									"eventSelector": "884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a9424364",
									"id": 1384,
									"name": "Withdraw",
									"nameLocation": "1453:8:14",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1383,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1380,
												"indexed": false,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1470:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 1384,
												"src": "1462:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1379,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1462:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1382,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1485:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 1384,
												"src": "1477:14:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1381,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1477:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1461:31:14"
									},
									"src": "1447:46:14"
								},
								{
									"anonymous": false,
									"eventSelector": "1650d49bac940346e34bac1dde642598b57ba618d7a0c005a91257851cae2c24",
									"id": 1394,
									"name": "onERC1155ReceivedExecuted",
									"nameLocation": "1511:25:14",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1393,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1386,
												"indexed": false,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "1555:8:14",
												"nodeType": "VariableDeclaration",
												"scope": 1394,
												"src": "1547:16:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1385,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1547:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1388,
												"indexed": false,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1582:4:14",
												"nodeType": "VariableDeclaration",
												"scope": 1394,
												"src": "1574:12:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1387,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1574:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1390,
												"indexed": false,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1605:2:14",
												"nodeType": "VariableDeclaration",
												"scope": 1394,
												"src": "1597:10:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1389,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1597:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1392,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1626:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 1394,
												"src": "1618:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1391,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1618:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1536:102:14"
									},
									"src": "1505:134:14"
								},
								{
									"body": {
										"id": 1417,
										"nodeType": "Block",
										"src": "1726:340:14",
										"statements": [
											{
												"expression": {
													"id": 1409,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1405,
														"name": "snowmenGame",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1339,
														"src": "1974:11:14",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC1155_$360",
															"typeString": "contract IERC1155"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1407,
																"name": "snowmenErc1155",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1396,
																"src": "1997:14:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1406,
															"name": "IERC1155",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 360,
															"src": "1988:8:14",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC1155_$360_$",
																"typeString": "type(contract IERC1155)"
															}
														},
														"id": 1408,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1988:24:14",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC1155_$360",
															"typeString": "contract IERC1155"
														}
													},
													"src": "1974:38:14",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1155_$360",
														"typeString": "contract IERC1155"
													}
												},
												"id": 1410,
												"nodeType": "ExpressionStatement",
												"src": "1974:38:14"
											},
											{
												"expression": {
													"id": 1415,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1411,
														"name": "snowmenToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1336,
														"src": "2023:12:14",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$561",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1413,
																"name": "snowmenErc20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1398,
																"src": "2045:12:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1412,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 561,
															"src": "2038:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$561_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 1414,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2038:20:14",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$561",
															"typeString": "contract IERC20"
														}
													},
													"src": "2023:35:14",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$561",
														"typeString": "contract IERC20"
													}
												},
												"id": 1416,
												"nodeType": "ExpressionStatement",
												"src": "2023:35:14"
											}
										]
									},
									"id": 1418,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1401,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1243,
														"src": "1713:10:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 1402,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1713:12:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1403,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1400,
												"name": "Ownable",
												"nameLocations": [
													"1705:7:14"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "1705:7:14"
											},
											"nodeType": "ModifierInvocation",
											"src": "1705:21:14"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1399,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1396,
												"mutability": "mutable",
												"name": "snowmenErc1155",
												"nameLocation": "1667:14:14",
												"nodeType": "VariableDeclaration",
												"scope": 1418,
												"src": "1659:22:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1395,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1659:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1398,
												"mutability": "mutable",
												"name": "snowmenErc20",
												"nameLocation": "1691:12:14",
												"nodeType": "VariableDeclaration",
												"scope": 1418,
												"src": "1683:20:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1397,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1683:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1658:46:14"
									},
									"returnParameters": {
										"id": 1404,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1726:0:14"
									},
									"scope": 1698,
									"src": "1647:419:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										459
									],
									"body": {
										"id": 1463,
										"nodeType": "Block",
										"src": "2493:1509:14",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1441,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1435,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2952:3:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1436,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2956:6:14",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2952:10:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 1439,
																		"name": "snowmenGame",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1339,
																		"src": "2974:11:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1155_$360",
																			"typeString": "contract IERC1155"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1155_$360",
																			"typeString": "contract IERC1155"
																		}
																	],
																	"id": 1438,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2966:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1437,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2966:7:14",
																		"typeDescriptions": {}
																	}
																},
																"id": 1440,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2966:20:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2952:34:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "696e636f72726563742073656e646572",
															"id": 1442,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2988:18:14",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_58b0c597f29dac8001964c5c8f94457e37567080fbc7198aa316b42b6379f65b",
																"typeString": "literal_string \"incorrect sender\""
															},
															"value": "incorrect sender"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_58b0c597f29dac8001964c5c8f94457e37567080fbc7198aa316b42b6379f65b",
																"typeString": "literal_string \"incorrect sender\""
															}
														],
														"id": 1434,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2944:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1443,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2944:63:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1444,
												"nodeType": "ExpressionStatement",
												"src": "2944:63:14"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1448,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1446,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1426,
																"src": "3239:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 1447,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3248:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3239:10:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "7175616e74697479206973207a65726f",
															"id": 1449,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3251:18:14",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4c1122224259dd0b02fff95af769f256a8450d91cf0444f02e6c136dce106f44",
																"typeString": "literal_string \"quantity is zero\""
															},
															"value": "quantity is zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4c1122224259dd0b02fff95af769f256a8450d91cf0444f02e6c136dce106f44",
																"typeString": "literal_string \"quantity is zero\""
															}
														],
														"id": 1445,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3231:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1450,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3231:39:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1451,
												"nodeType": "ExpressionStatement",
												"src": "3231:39:14"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1453,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1420,
															"src": "3411:8:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1454,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1422,
															"src": "3421:4:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1455,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1424,
															"src": "3427:2:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1456,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1426,
															"src": "3431:5:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1452,
														"name": "onERC1155ReceivedExecuted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1394,
														"src": "3385:25:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1457,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3385:52:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1458,
												"nodeType": "EmitStatement",
												"src": "3380:57:14"
											},
											{
												"expression": {
													"expression": {
														"expression": {
															"id": 1459,
															"name": "this",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967268,
															"src": "3673:4:14",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_SnowmenSales_$1698",
																"typeString": "contract SnowmenSales"
															}
														},
														"id": 1460,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3678:17:14",
														"memberName": "onERC1155Received",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1464,
														"src": "3673:22:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
															"typeString": "function (address,address,uint256,uint256,bytes memory) external returns (bytes4)"
														}
													},
													"id": 1461,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberLocation": "3696:8:14",
													"memberName": "selector",
													"nodeType": "MemberAccess",
													"src": "3673:31:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"functionReturnParameters": 1433,
												"id": 1462,
												"nodeType": "Return",
												"src": "3666:38:14"
											}
										]
									},
									"functionSelector": "f23a6e61",
									"id": 1464,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "onERC1155Received",
									"nameLocation": "2083:17:14",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1430,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2467:8:14"
									},
									"parameters": {
										"id": 1429,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1420,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2119:8:14",
												"nodeType": "VariableDeclaration",
												"scope": 1464,
												"src": "2111:16:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1419,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2111:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1422,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2228:4:14",
												"nodeType": "VariableDeclaration",
												"scope": 1464,
												"src": "2220:12:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1421,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2220:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1424,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "2291:2:14",
												"nodeType": "VariableDeclaration",
												"scope": 1464,
												"src": "2283:10:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1423,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2283:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1426,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2347:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 1464,
												"src": "2339:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1425,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2339:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1428,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1464,
												"src": "2393:12:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1427,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2393:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2100:359:14"
									},
									"returnParameters": {
										"id": 1433,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1432,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1464,
												"src": "2485:6:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1431,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2485:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2484:8:14"
									},
									"scope": 1698,
									"src": "2074:1928:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1567,
										"nodeType": "Block",
										"src": "4119:919:14",
										"statements": [
											{
												"assignments": [
													1474
												],
												"declarations": [
													{
														"constant": false,
														"id": 1474,
														"mutability": "mutable",
														"name": "buyer",
														"nameLocation": "4138:5:14",
														"nodeType": "VariableDeclaration",
														"scope": 1567,
														"src": "4130:13:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1473,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4130:7:14",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1477,
												"initialValue": {
													"expression": {
														"id": 1475,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "4146:3:14",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1476,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4150:6:14",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "4146:10:14",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4130:26:14"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1483,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 1479,
																	"name": "tokenPrice",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1352,
																	"src": "4175:10:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																		"typeString": "mapping(uint256 => uint256)"
																	}
																},
																"id": 1481,
																"indexExpression": {
																	"id": 1480,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1466,
																	"src": "4186:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4175:19:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 1482,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4198:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4175:24:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "7072696365206973206e6f742073657420796574",
															"id": 1484,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4201:22:14",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e5a68e1890c06b08dae31f764e95e8f1a2c25fa5fd06a39f1ed4630ab3d8317c",
																"typeString": "literal_string \"price is not set yet\""
															},
															"value": "price is not set yet"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e5a68e1890c06b08dae31f764e95e8f1a2c25fa5fd06a39f1ed4630ab3d8317c",
																"typeString": "literal_string \"price is not set yet\""
															}
														],
														"id": 1478,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4167:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1485,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4167:57:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1486,
												"nodeType": "ExpressionStatement",
												"src": "4167:57:14"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1494,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1488,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1468,
																"src": "4243:6:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1493,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 1489,
																		"name": "tokenPrice",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1352,
																		"src": "4253:10:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																			"typeString": "mapping(uint256 => uint256)"
																		}
																	},
																	"id": 1491,
																	"indexExpression": {
																		"id": 1490,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1466,
																		"src": "4264:7:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "4253:19:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1492,
																	"name": "quantity",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1470,
																	"src": "4275:8:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "4253:30:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4243:40:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "616d6f756e74206e6f7420656e6f756768",
															"id": 1495,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4285:19:14",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8177479f5ad9c40bafd12e1ed3db40c887baca8cbfff268a90cc65968008dcac",
																"typeString": "literal_string \"amount not enough\""
															},
															"value": "amount not enough"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8177479f5ad9c40bafd12e1ed3db40c887baca8cbfff268a90cc65968008dcac",
																"typeString": "literal_string \"amount not enough\""
															}
														],
														"id": 1487,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4235:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1496,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4235:70:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1497,
												"nodeType": "ExpressionStatement",
												"src": "4235:70:14"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1508,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1503,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "4368:4:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_SnowmenSales_$1698",
																					"typeString": "contract SnowmenSales"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_SnowmenSales_$1698",
																					"typeString": "contract SnowmenSales"
																				}
																			],
																			"id": 1502,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4360:7:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1501,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "4360:7:14",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1504,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4360:13:14",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1505,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1466,
																		"src": "4375:7:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1499,
																		"name": "snowmenGame",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1339,
																		"src": "4338:11:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1155_$360",
																			"typeString": "contract IERC1155"
																		}
																	},
																	"id": 1500,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4350:9:14",
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 298,
																	"src": "4338:21:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (address,uint256) view external returns (uint256)"
																	}
																},
																"id": 1506,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4338:45:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1507,
																"name": "quantity",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1470,
																"src": "4387:8:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "4338:57:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "62616c616e6365206973206e6f7420656e6f756768",
															"id": 1509,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4410:23:14",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e111634b261d696158fb58291ba33104cff741f79f092956e352cd551909642b",
																"typeString": "literal_string \"balance is not enough\""
															},
															"value": "balance is not enough"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e111634b261d696158fb58291ba33104cff741f79f092956e352cd551909642b",
																"typeString": "literal_string \"balance is not enough\""
															}
														],
														"id": 1498,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4316:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1510,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4316:128:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1511,
												"nodeType": "ExpressionStatement",
												"src": "4316:128:14"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1518,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 1515,
																		"name": "buyer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1474,
																		"src": "4486:5:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 1513,
																		"name": "snowmenToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1336,
																		"src": "4463:12:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$561",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1514,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4476:9:14",
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 518,
																	"src": "4463:22:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 1516,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4463:29:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1517,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1468,
																"src": "4496:6:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4463:39:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "696e73756666696369656e7420746f6b656e",
															"id": 1519,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4504:20:14",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_49886143fed4f67f7143b146962ea8b8925c2fdc5341127d3966dea0fe25a8b9",
																"typeString": "literal_string \"insufficient token\""
															},
															"value": "insufficient token"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_49886143fed4f67f7143b146962ea8b8925c2fdc5341127d3966dea0fe25a8b9",
																"typeString": "literal_string \"insufficient token\""
															}
														],
														"id": 1512,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4455:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1520,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4455:70:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1521,
												"nodeType": "ExpressionStatement",
												"src": "4455:70:14"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1532,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 1525,
																		"name": "buyer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1474,
																		"src": "4581:5:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 1528,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "4596:4:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_SnowmenSales_$1698",
																					"typeString": "contract SnowmenSales"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_SnowmenSales_$1698",
																					"typeString": "contract SnowmenSales"
																				}
																			],
																			"id": 1527,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4588:7:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1526,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "4588:7:14",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1529,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4588:13:14",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 1523,
																		"name": "snowmenToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1336,
																		"src": "4558:12:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$561",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1524,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4571:9:14",
																	"memberName": "allowance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 538,
																	"src": "4558:22:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address,address) view external returns (uint256)"
																	}
																},
																"id": 1530,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4558:44:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1531,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1468,
																"src": "4606:6:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4558:54:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "696e73756666696369656e7420746f6b656e20617070726f76616c",
															"id": 1533,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4627:29:14",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_12559359288c4fce39d17fa0f1324f72a3da45512a522d92ebf3218fb243f801",
																"typeString": "literal_string \"insufficient token approval\""
															},
															"value": "insufficient token approval"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_12559359288c4fce39d17fa0f1324f72a3da45512a522d92ebf3218fb243f801",
																"typeString": "literal_string \"insufficient token approval\""
															}
														],
														"id": 1522,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4536:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1534,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4536:131:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1535,
												"nodeType": "ExpressionStatement",
												"src": "4536:131:14"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1539,
															"name": "buyer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1474,
															"src": "4708:5:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1540,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 67,
																"src": "4715:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1541,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4715:7:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1542,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1468,
															"src": "4724:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1536,
															"name": "snowmenToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1336,
															"src": "4678:12:14",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$561",
																"typeString": "contract IERC20"
															}
														},
														"id": 1538,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4691:16:14",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 635,
														"src": "4678:29:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$561_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$561_$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 1543,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4678:53:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1544,
												"nodeType": "ExpressionStatement",
												"src": "4678:53:14"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1550,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "4858:4:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SnowmenSales_$1698",
																		"typeString": "contract SnowmenSales"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SnowmenSales_$1698",
																		"typeString": "contract SnowmenSales"
																	}
																],
																"id": 1549,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4850:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1548,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4850:7:14",
																	"typeDescriptions": {}
																}
															},
															"id": 1551,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4850:13:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1552,
															"name": "buyer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1474,
															"src": "4878:5:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1553,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1466,
															"src": "4898:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1554,
															"name": "quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1470,
															"src": "4920:8:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"hexValue": "",
															"id": 1555,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4943:2:14",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"id": 1545,
															"name": "snowmenGame",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1339,
															"src": "4807:11:14",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC1155_$360",
																"typeString": "contract IERC1155"
															}
														},
														"id": 1547,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4819:16:14",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 343,
														"src": "4807:28:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,uint256,bytes memory) external"
														}
													},
													"id": 1556,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4807:149:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1557,
												"nodeType": "ExpressionStatement",
												"src": "4807:149:14"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1559,
															"name": "buyer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1474,
															"src": "4980:5:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1560,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1466,
															"src": "4987:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1561,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1468,
															"src": "4996:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1562,
															"name": "quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1470,
															"src": "5004:8:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"expression": {
																"id": 1563,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "5014:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1564,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5020:9:14",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "5014:15:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1558,
														"name": "BuyItem",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1372,
														"src": "4972:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint8_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256,uint8,uint256)"
														}
													},
													"id": 1565,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4972:58:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1566,
												"nodeType": "EmitStatement",
												"src": "4967:63:14"
											}
										]
									},
									"functionSelector": "d407cee7",
									"id": 1568,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "buyItem",
									"nameLocation": "4019:7:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1471,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1466,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4045:7:14",
												"nodeType": "VariableDeclaration",
												"scope": 1568,
												"src": "4037:15:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1465,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4037:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1468,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4071:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 1568,
												"src": "4063:14:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1467,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4063:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1470,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "4094:8:14",
												"nodeType": "VariableDeclaration",
												"scope": 1568,
												"src": "4088:14:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1469,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "4088:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4026:83:14"
									},
									"returnParameters": {
										"id": 1472,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4119:0:14"
									},
									"scope": 1698,
									"src": "4010:1028:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1608,
										"nodeType": "Block",
										"src": "5084:771:14",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1575,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1572,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "5103:3:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1573,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5107:5:14",
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "5103:9:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1574,
																"name": "TICKET_PRICE",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1342,
																"src": "5116:12:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5103:25:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "7072696365206e6f7420656e6f756768",
															"id": 1576,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5130:18:14",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_248afc2f7838f28c4e3e8b4422d9aefd390d276ca06a0ae623456964600f75f2",
																"typeString": "literal_string \"price not enough\""
															},
															"value": "price not enough"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_248afc2f7838f28c4e3e8b4422d9aefd390d276ca06a0ae623456964600f75f2",
																"typeString": "literal_string \"price not enough\""
															}
														],
														"id": 1571,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5095:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1577,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5095:54:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1578,
												"nodeType": "ExpressionStatement",
												"src": "5095:54:14"
											},
											{
												"assignments": [
													1580,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1580,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5485:7:14",
														"nodeType": "VariableDeclaration",
														"scope": 1608,
														"src": "5480:12:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1579,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5480:4:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1595,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "6d696e7428616464726573732c75696e743235362c75696e7432353629",
																	"id": 1588,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5603:31:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_156e29f6982eee45771b2862c71c865cb1ed8ec5a0f2c9d0c2cf96b8a8ba8ee3",
																		"typeString": "literal_string \"mint(address,uint256,uint256)\""
																	},
																	"value": "mint(address,uint256,uint256)"
																},
																{
																	"expression": {
																		"id": 1589,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "5653:3:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1590,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5657:6:14",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "5653:10:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1591,
																	"name": "TICKET_ID",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1348,
																	"src": "5682:9:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1592,
																	"name": "TICKET_QUANTITY",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1345,
																	"src": "5710:15:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_156e29f6982eee45771b2862c71c865cb1ed8ec5a0f2c9d0c2cf96b8a8ba8ee3",
																		"typeString": "literal_string \"mint(address,uint256,uint256)\""
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1586,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "5537:3:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1587,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "5541:19:14",
																"memberName": "encodeWithSignature",
																"nodeType": "MemberAccess",
																"src": "5537:23:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (string memory) pure returns (bytes memory)"
																}
															},
															"id": 1593,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5537:203:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1583,
																	"name": "snowmenGame",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1339,
																	"src": "5505:11:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1155_$360",
																		"typeString": "contract IERC1155"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC1155_$360",
																		"typeString": "contract IERC1155"
																	}
																],
																"id": 1582,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5497:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1581,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5497:7:14",
																	"typeDescriptions": {}
																}
															},
															"id": 1584,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5497:20:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1585,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5518:4:14",
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "5497:25:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1594,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5497:254:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5479:272:14"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1597,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1580,
															"src": "5770:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6d696e74206661696c6564",
															"id": 1598,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5779:13:14",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_594ff2dfc35e5b8979a04d047bc1811cd0832013e67a9ef5bc97a173e7a27efb",
																"typeString": "literal_string \"mint failed\""
															},
															"value": "mint failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_594ff2dfc35e5b8979a04d047bc1811cd0832013e67a9ef5bc97a173e7a27efb",
																"typeString": "literal_string \"mint failed\""
															}
														],
														"id": 1596,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5762:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1599,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5762:31:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1600,
												"nodeType": "ExpressionStatement",
												"src": "5762:31:14"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1602,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5819:3:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1603,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5823:6:14",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5819:10:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1604,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "5831:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1605,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5837:9:14",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "5831:15:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1601,
														"name": "BuyTicket",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1378,
														"src": "5809:9:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1606,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5809:38:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1607,
												"nodeType": "EmitStatement",
												"src": "5804:43:14"
											}
										]
									},
									"functionSelector": "edca914c",
									"id": 1609,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "buyTicket",
									"nameLocation": "5055:9:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1569,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5064:2:14"
									},
									"returnParameters": {
										"id": 1570,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5084:0:14"
									},
									"scope": 1698,
									"src": "5046:809:14",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1620,
										"nodeType": "Block",
										"src": "5915:47:14",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 1616,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "5941:4:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_SnowmenSales_$1698",
																	"typeString": "contract SnowmenSales"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_SnowmenSales_$1698",
																	"typeString": "contract SnowmenSales"
																}
															],
															"id": 1615,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5933:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1614,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5933:7:14",
																"typeDescriptions": {}
															}
														},
														"id": 1617,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5933:13:14",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1618,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "5947:7:14",
													"memberName": "balance",
													"nodeType": "MemberAccess",
													"src": "5933:21:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1613,
												"id": 1619,
												"nodeType": "Return",
												"src": "5926:28:14"
											}
										]
									},
									"functionSelector": "12065fe0",
									"id": 1621,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBalance",
									"nameLocation": "5872:10:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1610,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5882:2:14"
									},
									"returnParameters": {
										"id": 1613,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1612,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1621,
												"src": "5906:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1611,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5906:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5905:9:14"
									},
									"scope": 1698,
									"src": "5863:99:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1659,
										"nodeType": "Block",
										"src": "6011:263:14",
										"statements": [
											{
												"assignments": [
													1627
												],
												"declarations": [
													{
														"constant": false,
														"id": 1627,
														"mutability": "mutable",
														"name": "amount",
														"nameLocation": "6030:6:14",
														"nodeType": "VariableDeclaration",
														"scope": 1659,
														"src": "6022:14:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1626,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6022:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1630,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1628,
														"name": "getBalance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1621,
														"src": "6039:10:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 1629,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6039:12:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6022:29:14"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1634,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1632,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1627,
																"src": "6070:6:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 1633,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6080:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "6070:11:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "696e737566666369656e7420616d6f756e74",
															"id": 1635,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6083:20:14",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_aa29b780b68936bfd0a853c44e2650b3d0dacee32c7f0cdc2421e6a8638fa1b4",
																"typeString": "literal_string \"insuffcient amount\""
															},
															"value": "insuffcient amount"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_aa29b780b68936bfd0a853c44e2650b3d0dacee32c7f0cdc2421e6a8638fa1b4",
																"typeString": "literal_string \"insuffcient amount\""
															}
														],
														"id": 1631,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6062:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1636,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6062:42:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1637,
												"nodeType": "ExpressionStatement",
												"src": "6062:42:14"
											},
											{
												"assignments": [
													1639,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1639,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6121:7:14",
														"nodeType": "VariableDeclaration",
														"scope": 1659,
														"src": "6116:12:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1638,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6116:4:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1647,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 1645,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6164:2:14",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"expression": {
																	"id": 1640,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "6133:3:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1641,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6137:6:14",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "6133:10:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1642,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6144:4:14",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "6133:15:14",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1644,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1643,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1627,
																"src": "6156:6:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "6133:30:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1646,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6133:34:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6115:52:14"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1649,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1639,
															"src": "6186:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "756e61626c6520746f207769746864726177206d61746963",
															"id": 1650,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6195:26:14",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_743f341dbd5b34a8c4b55eb3374eeb8e53791ae693ac55d74c0130afb734375d",
																"typeString": "literal_string \"unable to withdraw matic\""
															},
															"value": "unable to withdraw matic"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_743f341dbd5b34a8c4b55eb3374eeb8e53791ae693ac55d74c0130afb734375d",
																"typeString": "literal_string \"unable to withdraw matic\""
															}
														],
														"id": 1648,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6178:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1651,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6178:44:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1652,
												"nodeType": "ExpressionStatement",
												"src": "6178:44:14"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1654,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "6247:3:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1655,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6251:6:14",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "6247:10:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1656,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1627,
															"src": "6259:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1653,
														"name": "Withdraw",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1384,
														"src": "6238:8:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1657,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6238:28:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1658,
												"nodeType": "EmitStatement",
												"src": "6233:33:14"
											}
										]
									},
									"functionSelector": "3ccfd60b",
									"id": 1660,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [],
											"id": 1624,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1623,
												"name": "onlyOwner",
												"nameLocations": [
													"5999:9:14"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "5999:9:14"
											},
											"nodeType": "ModifierInvocation",
											"src": "5999:11:14"
										}
									],
									"name": "withdraw",
									"nameLocation": "5979:8:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1622,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5987:2:14"
									},
									"returnParameters": {
										"id": 1625,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6011:0:14"
									},
									"scope": 1698,
									"src": "5970:304:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1696,
										"nodeType": "Block",
										"src": "6350:247:14",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1672,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1670,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1662,
																"src": "6369:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 1671,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6380:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "6369:12:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "746f6b656e4964206973207a65726f",
															"id": 1673,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6383:17:14",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_240c2a2420364d9260a9d9de5c0bdeaef40ae9271ae29d4c186edd83349afc50",
																"typeString": "literal_string \"tokenId is zero\""
															},
															"value": "tokenId is zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_240c2a2420364d9260a9d9de5c0bdeaef40ae9271ae29d4c186edd83349afc50",
																"typeString": "literal_string \"tokenId is zero\""
															}
														],
														"id": 1669,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6361:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1674,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6361:40:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1675,
												"nodeType": "ExpressionStatement",
												"src": "6361:40:14"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1679,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1677,
																"name": "price",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1664,
																"src": "6420:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 1678,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6429:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "6420:10:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "7072696365206973207a65726f",
															"id": 1680,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6432:15:14",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ee8b0754ac04b271c493c71118fe013f51611851aeb777bded224dc19d7cd48c",
																"typeString": "literal_string \"price is zero\""
															},
															"value": "price is zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ee8b0754ac04b271c493c71118fe013f51611851aeb777bded224dc19d7cd48c",
																"typeString": "literal_string \"price is zero\""
															}
														],
														"id": 1676,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6412:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1681,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6412:36:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1682,
												"nodeType": "ExpressionStatement",
												"src": "6412:36:14"
											},
											{
												"expression": {
													"id": 1687,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1683,
															"name": "tokenPrice",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1352,
															"src": "6459:10:14",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 1685,
														"indexExpression": {
															"id": 1684,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1662,
															"src": "6470:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6459:19:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1686,
														"name": "price",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1664,
														"src": "6481:5:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6459:27:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1688,
												"nodeType": "ExpressionStatement",
												"src": "6459:27:14"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1690,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1662,
															"src": "6511:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1691,
															"name": "price",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1664,
															"src": "6520:5:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1692,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "6527:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1693,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6533:9:14",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "6527:15:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1689,
														"name": "SetPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1360,
														"src": "6502:8:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256,uint256)"
														}
													},
													"id": 1694,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6502:41:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1695,
												"nodeType": "EmitStatement",
												"src": "6497:46:14"
											}
										]
									},
									"functionSelector": "f7d97577",
									"id": 1697,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1667,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1666,
												"name": "onlyOwner",
												"nameLocations": [
													"6341:9:14"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "6341:9:14"
											},
											"nodeType": "ModifierInvocation",
											"src": "6341:9:14"
										}
									],
									"name": "setPrice",
									"nameLocation": "6291:8:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1665,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1662,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "6308:7:14",
												"nodeType": "VariableDeclaration",
												"scope": 1697,
												"src": "6300:15:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1661,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6300:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1664,
												"mutability": "mutable",
												"name": "price",
												"nameLocation": "6325:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 1697,
												"src": "6317:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1663,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6317:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6299:32:14"
									},
									"returnParameters": {
										"id": 1668,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6350:0:14"
									},
									"scope": 1698,
									"src": "6282:315:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1699,
							"src": "319:6282:14",
							"usedErrors": [
								13,
								18,
								575
							],
							"usedEvents": [
								24,
								1360,
								1372,
								1378,
								1384,
								1394
							]
						}
					],
					"src": "33:6568:14"
				},
				"id": 14
			}
		}
	}
}